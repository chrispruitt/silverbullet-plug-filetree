{"name":"filetree","version":0.1,"imports":["https://get.silverbullet.md/global.plug.json"],"assets":{"assets/d3.js":"data:application/javascript;base64,Ly8gaHR0cHM6Ly9kM2pzLm9yZyB2Ny42LjEgQ29weXJpZ2h0IDIwMTAtMjAyMiBNaWtlIEJvc3RvY2sKIWZ1bmN0aW9uICh0LCBuKSB7ICJvYmplY3QiID09IHR5cGVvZiBleHBvcnRzICYmICJ1bmRlZmluZWQiICE9IHR5cGVvZiBtb2R1bGUgPyBuKGV4cG9ydHMpIDogImZ1bmN0aW9uIiA9PSB0eXBlb2YgZGVmaW5lICYmIGRlZmluZS5hbWQgPyBkZWZpbmUoWyJleHBvcnRzIl0sIG4pIDogbigodCA9ICJ1bmRlZmluZWQiICE9IHR5cGVvZiBnbG9iYWxUaGlzID8gZ2xvYmFsVGhpcyA6IHQgfHwgc2VsZikuZDMgPSB0LmQzIHx8IHt9KSB9KHRoaXMsIChmdW5jdGlvbiAodCkgeyAidXNlIHN0cmljdCI7IGZ1bmN0aW9uIG4odCwgbikgeyByZXR1cm4gbnVsbCA9PSB0IHx8IG51bGwgPT0gbiA/IE5hTiA6IHQgPCBuID8gLTEgOiB0ID4gbiA/IDEgOiB0ID49IG4gPyAwIDogTmFOIH0gZnVuY3Rpb24gZSh0LCBuKSB7IHJldHVybiBudWxsID09IHQgfHwgbnVsbCA9PSBuID8gTmFOIDogbiA8IHQgPyAtMSA6IG4gPiB0ID8gMSA6IG4gPj0gdCA/IDAgOiBOYU4gfSBmdW5jdGlvbiByKHQpIHsgbGV0IHIsIG8sIGE7IGZ1bmN0aW9uIHUodCwgbiwgZSA9IDAsIGkgPSB0Lmxlbmd0aCkgeyBpZiAoZSA8IGkpIHsgaWYgKDAgIT09IHIobiwgbikpIHJldHVybiBpOyBkbyB7IGNvbnN0IHIgPSBlICsgaSA+Pj4gMTsgbyh0W3JdLCBuKSA8IDAgPyBlID0gciArIDEgOiBpID0gciB9IHdoaWxlIChlIDwgaSkgfSByZXR1cm4gZSB9IHJldHVybiAyICE9PSB0Lmxlbmd0aCA/IChyID0gbiwgbyA9IChlLCByKSA9PiBuKHQoZSksIHIpLCBhID0gKG4sIGUpID0+IHQobikgLSBlKSA6IChyID0gdCA9PT0gbiB8fCB0ID09PSBlID8gdCA6IGksIG8gPSB0LCBhID0gdCksIHsgbGVmdDogdSwgY2VudGVyOiBmdW5jdGlvbiAodCwgbiwgZSA9IDAsIHIgPSB0Lmxlbmd0aCkgeyBjb25zdCBpID0gdSh0LCBuLCBlLCByIC0gMSk7IHJldHVybiBpID4gZSAmJiBhKHRbaSAtIDFdLCBuKSA+IC1hKHRbaV0sIG4pID8gaSAtIDEgOiBpIH0sIHJpZ2h0OiBmdW5jdGlvbiAodCwgbiwgZSA9IDAsIGkgPSB0Lmxlbmd0aCkgeyBpZiAoZSA8IGkpIHsgaWYgKDAgIT09IHIobiwgbikpIHJldHVybiBpOyBkbyB7IGNvbnN0IHIgPSBlICsgaSA+Pj4gMTsgbyh0W3JdLCBuKSA8PSAwID8gZSA9IHIgKyAxIDogaSA9IHIgfSB3aGlsZSAoZSA8IGkpIH0gcmV0dXJuIGUgfSB9IH0gZnVuY3Rpb24gaSgpIHsgcmV0dXJuIDAgfSBmdW5jdGlvbiBvKHQpIHsgcmV0dXJuIG51bGwgPT09IHQgPyBOYU4gOiArdCB9IGZ1bmN0aW9uKiBhKHQsIG4pIHsgaWYgKHZvaWQgMCA9PT0gbikgZm9yIChsZXQgbiBvZiB0KSBudWxsICE9IG4gJiYgKG4gPSArbikgPj0gbiAmJiAoeWllbGQgbik7IGVsc2UgeyBsZXQgZSA9IC0xOyBmb3IgKGxldCByIG9mIHQpIG51bGwgIT0gKHIgPSBuKHIsICsrZSwgdCkpICYmIChyID0gK3IpID49IHIgJiYgKHlpZWxkIHIpIH0gfSBjb25zdCB1ID0gcihuKSwgYyA9IHUucmlnaHQsIGYgPSB1LmxlZnQsIHMgPSByKG8pLmNlbnRlcjsgdmFyIGwgPSBjOyBjb25zdCBoID0gcCh2KSwgZCA9IHAoKGZ1bmN0aW9uICh0KSB7IGNvbnN0IG4gPSB2KHQpOyByZXR1cm4gKHQsIGUsIHIsIGksIG8pID0+IHsgbih0LCBlLCAociA8PD0gMikgKyAwLCAoaSA8PD0gMikgKyAwLCBvIDw8PSAyKSwgbih0LCBlLCByICsgMSwgaSArIDEsIG8pLCBuKHQsIGUsIHIgKyAyLCBpICsgMiwgbyksIG4odCwgZSwgciArIDMsIGkgKyAzLCBvKSB9IH0pKTsgZnVuY3Rpb24gcCh0KSB7IHJldHVybiBmdW5jdGlvbiAobiwgZSwgciA9IGUpIHsgaWYgKCEoKGUgPSArZSkgPj0gMCkpIHRocm93IG5ldyBSYW5nZUVycm9yKCJpbnZhbGlkIHJ4Iik7IGlmICghKChyID0gK3IpID49IDApKSB0aHJvdyBuZXcgUmFuZ2VFcnJvcigiaW52YWxpZCByeSIpOyBsZXQgeyBkYXRhOiBpLCB3aWR0aDogbywgaGVpZ2h0OiBhIH0gPSBuOyBpZiAoISgobyA9IE1hdGguZmxvb3IobykpID49IDApKSB0aHJvdyBuZXcgUmFuZ2VFcnJvcigiaW52YWxpZCB3aWR0aCIpOyBpZiAoISgoYSA9IE1hdGguZmxvb3Iodm9pZCAwICE9PSBhID8gYSA6IGkubGVuZ3RoIC8gbykpID49IDApKSB0aHJvdyBuZXcgUmFuZ2VFcnJvcigiaW52YWxpZCBoZWlnaHQiKTsgaWYgKCFvIHx8ICFhIHx8ICFlICYmICFyKSByZXR1cm4gbjsgY29uc3QgdSA9IGUgJiYgdChlKSwgYyA9IHIgJiYgdChyKSwgZiA9IGkuc2xpY2UoKTsgcmV0dXJuIHUgJiYgYyA/IChnKHUsIGYsIGksIG8sIGEpLCBnKHUsIGksIGYsIG8sIGEpLCBnKHUsIGYsIGksIG8sIGEpLCB5KGMsIGksIGYsIG8sIGEpLCB5KGMsIGYsIGksIG8sIGEpLCB5KGMsIGksIGYsIG8sIGEpKSA6IHUgPyAoZyh1LCBpLCBmLCBvLCBhKSwgZyh1LCBmLCBpLCBvLCBhKSwgZyh1LCBpLCBmLCBvLCBhKSkgOiBjICYmICh5KGMsIGksIGYsIG8sIGEpLCB5KGMsIGYsIGksIG8sIGEpLCB5KGMsIGksIGYsIG8sIGEpKSwgbiB9IH0gZnVuY3Rpb24gZyh0LCBuLCBlLCByLCBpKSB7IGZvciAobGV0IG8gPSAwLCBhID0gciAqIGk7IG8gPCBhOyl0KG4sIGUsIG8sIG8gKz0gciwgMSkgfSBmdW5jdGlvbiB5KHQsIG4sIGUsIHIsIGkpIHsgZm9yIChsZXQgbyA9IDAsIGEgPSByICogaTsgbyA8IHI7ICsrbyl0KG4sIGUsIG8sIG8gKyBhLCByKSB9IGZ1bmN0aW9uIHYodCkgeyBjb25zdCBuID0gTWF0aC5mbG9vcih0KTsgaWYgKG4gPT09IHQpIHJldHVybiBmdW5jdGlvbiAodCkgeyBjb25zdCBuID0gMiAqIHQgKyAxOyByZXR1cm4gKGUsIHIsIGksIG8sIGEpID0+IHsgaWYgKCEoKG8gLT0gYSkgPj0gaSkpIHJldHVybjsgbGV0IHUgPSB0ICogcltpXTsgY29uc3QgYyA9IGEgKiB0OyBmb3IgKGxldCB0ID0gaSwgbiA9IGkgKyBjOyB0IDwgbjsgdCArPSBhKXUgKz0gcltNYXRoLm1pbihvLCB0KV07IGZvciAobGV0IHQgPSBpLCBmID0gbzsgdCA8PSBmOyB0ICs9IGEpdSArPSByW01hdGgubWluKG8sIHQgKyBjKV0sIGVbdF0gPSB1IC8gbiwgdSAtPSByW01hdGgubWF4KGksIHQgLSBjKV0gfSB9KHQpOyBjb25zdCBlID0gdCAtIG4sIHIgPSAyICogdCArIDE7IHJldHVybiAodCwgaSwgbywgYSwgdSkgPT4geyBpZiAoISgoYSAtPSB1KSA+PSBvKSkgcmV0dXJuOyBsZXQgYyA9IG4gKiBpW29dOyBjb25zdCBmID0gdSAqIG4sIHMgPSBmICsgdTsgZm9yIChsZXQgdCA9IG8sIG4gPSBvICsgZjsgdCA8IG47IHQgKz0gdSljICs9IGlbTWF0aC5taW4oYSwgdCldOyBmb3IgKGxldCBuID0gbywgbCA9IGE7IG4gPD0gbDsgbiArPSB1KWMgKz0gaVtNYXRoLm1pbihhLCBuICsgZildLCB0W25dID0gKGMgKyBlICogKGlbTWF0aC5tYXgobywgbiAtIHMpXSArIGlbTWF0aC5taW4oYSwgbiArIHMpXSkpIC8gciwgYyAtPSBpW01hdGgubWF4KG8sIG4gLSBmKV0gfSB9IGZ1bmN0aW9uIF8odCwgbikgeyBsZXQgZSA9IDA7IGlmICh2b2lkIDAgPT09IG4pIGZvciAobGV0IG4gb2YgdCkgbnVsbCAhPSBuICYmIChuID0gK24pID49IG4gJiYgKytlOyBlbHNlIHsgbGV0IHIgPSAtMTsgZm9yIChsZXQgaSBvZiB0KSBudWxsICE9IChpID0gbihpLCArK3IsIHQpKSAmJiAoaSA9ICtpKSA+PSBpICYmICsrZSB9IHJldHVybiBlIH0gZnVuY3Rpb24gYih0KSB7IHJldHVybiAwIHwgdC5sZW5ndGggfSBmdW5jdGlvbiBtKHQpIHsgcmV0dXJuICEodCA+IDApIH0gZnVuY3Rpb24geCh0KSB7IHJldHVybiAib2JqZWN0IiAhPSB0eXBlb2YgdCB8fCAibGVuZ3RoIiBpbiB0ID8gdCA6IEFycmF5LmZyb20odCkgfSBmdW5jdGlvbiB3KHQsIG4pIHsgbGV0IGUsIHIgPSAwLCBpID0gMCwgbyA9IDA7IGlmICh2b2lkIDAgPT09IG4pIGZvciAobGV0IG4gb2YgdCkgbnVsbCAhPSBuICYmIChuID0gK24pID49IG4gJiYgKGUgPSBuIC0gaSwgaSArPSBlIC8gKytyLCBvICs9IGUgKiAobiAtIGkpKTsgZWxzZSB7IGxldCBhID0gLTE7IGZvciAobGV0IHUgb2YgdCkgbnVsbCAhPSAodSA9IG4odSwgKythLCB0KSkgJiYgKHUgPSArdSkgPj0gdSAmJiAoZSA9IHUgLSBpLCBpICs9IGUgLyArK3IsIG8gKz0gZSAqICh1IC0gaSkpIH0gaWYgKHIgPiAxKSByZXR1cm4gbyAvIChyIC0gMSkgfSBmdW5jdGlvbiBNKHQsIG4pIHsgY29uc3QgZSA9IHcodCwgbik7IHJldHVybiBlID8gTWF0aC5zcXJ0KGUpIDogZSB9IGZ1bmN0aW9uIEEodCwgbikgeyBsZXQgZSwgcjsgaWYgKHZvaWQgMCA9PT0gbikgZm9yIChjb25zdCBuIG9mIHQpIG51bGwgIT0gbiAmJiAodm9pZCAwID09PSBlID8gbiA+PSBuICYmIChlID0gciA9IG4pIDogKGUgPiBuICYmIChlID0gbiksIHIgPCBuICYmIChyID0gbikpKTsgZWxzZSB7IGxldCBpID0gLTE7IGZvciAobGV0IG8gb2YgdCkgbnVsbCAhPSAobyA9IG4obywgKytpLCB0KSkgJiYgKHZvaWQgMCA9PT0gZSA/IG8gPj0gbyAmJiAoZSA9IHIgPSBvKSA6IChlID4gbyAmJiAoZSA9IG8pLCByIDwgbyAmJiAociA9IG8pKSkgfSByZXR1cm4gW2UsIHJdIH0gY2xhc3MgVCB7IGNvbnN0cnVjdG9yKCkgeyB0aGlzLl9wYXJ0aWFscyA9IG5ldyBGbG9hdDY0QXJyYXkoMzIpLCB0aGlzLl9uID0gMCB9IGFkZCh0KSB7IGNvbnN0IG4gPSB0aGlzLl9wYXJ0aWFsczsgbGV0IGUgPSAwOyBmb3IgKGxldCByID0gMDsgciA8IHRoaXMuX24gJiYgciA8IDMyOyByKyspIHsgY29uc3QgaSA9IG5bcl0sIG8gPSB0ICsgaSwgYSA9IE1hdGguYWJzKHQpIDwgTWF0aC5hYnMoaSkgPyB0IC0gKG8gLSBpKSA6IGkgLSAobyAtIHQpOyBhICYmIChuW2UrK10gPSBhKSwgdCA9IG8gfSByZXR1cm4gbltlXSA9IHQsIHRoaXMuX24gPSBlICsgMSwgdGhpcyB9IHZhbHVlT2YoKSB7IGNvbnN0IHQgPSB0aGlzLl9wYXJ0aWFsczsgbGV0IG4sIGUsIHIsIGkgPSB0aGlzLl9uLCBvID0gMDsgaWYgKGkgPiAwKSB7IGZvciAobyA9IHRbLS1pXTsgaSA+IDAgJiYgKG4gPSBvLCBlID0gdFstLWldLCBvID0gbiArIGUsIHIgPSBlIC0gKG8gLSBuKSwgIXIpOyk7IGkgPiAwICYmIChyIDwgMCAmJiB0W2kgLSAxXSA8IDAgfHwgciA+IDAgJiYgdFtpIC0gMV0gPiAwKSAmJiAoZSA9IDIgKiByLCBuID0gbyArIGUsIGUgPT0gbiAtIG8gJiYgKG8gPSBuKSkgfSByZXR1cm4gbyB9IH0gY2xhc3MgSW50ZXJuTWFwIGV4dGVuZHMgTWFwIHsgY29uc3RydWN0b3IodCwgbiA9IE4pIHsgaWYgKHN1cGVyKCksIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRoaXMsIHsgX2ludGVybjogeyB2YWx1ZTogbmV3IE1hcCB9LCBfa2V5OiB7IHZhbHVlOiBuIH0gfSksIG51bGwgIT0gdCkgZm9yIChjb25zdCBbbiwgZV0gb2YgdCkgdGhpcy5zZXQobiwgZSkgfSBnZXQodCkgeyByZXR1cm4gc3VwZXIuZ2V0KFModGhpcywgdCkpIH0gaGFzKHQpIHsgcmV0dXJuIHN1cGVyLmhhcyhTKHRoaXMsIHQpKSB9IHNldCh0LCBuKSB7IHJldHVybiBzdXBlci5zZXQoRSh0aGlzLCB0KSwgbikgfSBkZWxldGUodCkgeyByZXR1cm4gc3VwZXIuZGVsZXRlKGsodGhpcywgdCkpIH0gfSBjbGFzcyBJbnRlcm5TZXQgZXh0ZW5kcyBTZXQgeyBjb25zdHJ1Y3Rvcih0LCBuID0gTikgeyBpZiAoc3VwZXIoKSwgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGhpcywgeyBfaW50ZXJuOiB7IHZhbHVlOiBuZXcgTWFwIH0sIF9rZXk6IHsgdmFsdWU6IG4gfSB9KSwgbnVsbCAhPSB0KSBmb3IgKGNvbnN0IG4gb2YgdCkgdGhpcy5hZGQobikgfSBoYXModCkgeyByZXR1cm4gc3VwZXIuaGFzKFModGhpcywgdCkpIH0gYWRkKHQpIHsgcmV0dXJuIHN1cGVyLmFkZChFKHRoaXMsIHQpKSB9IGRlbGV0ZSh0KSB7IHJldHVybiBzdXBlci5kZWxldGUoayh0aGlzLCB0KSkgfSB9IGZ1bmN0aW9uIFMoeyBfaW50ZXJuOiB0LCBfa2V5OiBuIH0sIGUpIHsgY29uc3QgciA9IG4oZSk7IHJldHVybiB0LmhhcyhyKSA/IHQuZ2V0KHIpIDogZSB9IGZ1bmN0aW9uIEUoeyBfaW50ZXJuOiB0LCBfa2V5OiBuIH0sIGUpIHsgY29uc3QgciA9IG4oZSk7IHJldHVybiB0LmhhcyhyKSA/IHQuZ2V0KHIpIDogKHQuc2V0KHIsIGUpLCBlKSB9IGZ1bmN0aW9uIGsoeyBfaW50ZXJuOiB0LCBfa2V5OiBuIH0sIGUpIHsgY29uc3QgciA9IG4oZSk7IHJldHVybiB0LmhhcyhyKSAmJiAoZSA9IHQuZ2V0KHIpLCB0LmRlbGV0ZShyKSksIGUgfSBmdW5jdGlvbiBOKHQpIHsgcmV0dXJuIG51bGwgIT09IHQgJiYgIm9iamVjdCIgPT0gdHlwZW9mIHQgPyB0LnZhbHVlT2YoKSA6IHQgfSBmdW5jdGlvbiBDKHQpIHsgcmV0dXJuIHQgfSBmdW5jdGlvbiBQKHQsIC4uLm4pIHsgcmV0dXJuIEkodCwgQywgQywgbikgfSBmdW5jdGlvbiB6KHQsIC4uLm4pIHsgcmV0dXJuIEkodCwgQXJyYXkuZnJvbSwgQywgbikgfSBmdW5jdGlvbiBEKHQsIG4pIHsgZm9yIChsZXQgZSA9IDEsIHIgPSBuLmxlbmd0aDsgZSA8IHI7ICsrZSl0ID0gdC5mbGF0TWFwKCh0ID0+IHQucG9wKCkubWFwKCgoW24sIGVdKSA9PiBbLi4udCwgbiwgZV0pKSkpOyByZXR1cm4gdCB9IGZ1bmN0aW9uIFIodCwgbiwgLi4uZSkgeyByZXR1cm4gSSh0LCBDLCBuLCBlKSB9IGZ1bmN0aW9uIEYodCwgbiwgLi4uZSkgeyByZXR1cm4gSSh0LCBBcnJheS5mcm9tLCBuLCBlKSB9IGZ1bmN0aW9uIHEodCkgeyBpZiAoMSAhPT0gdC5sZW5ndGgpIHRocm93IG5ldyBFcnJvcigiZHVwbGljYXRlIGtleSIpOyByZXR1cm4gdFswXSB9IGZ1bmN0aW9uIEkodCwgbiwgZSwgcikgeyByZXR1cm4gZnVuY3Rpb24gdChpLCBvKSB7IGlmIChvID49IHIubGVuZ3RoKSByZXR1cm4gZShpKTsgY29uc3QgYSA9IG5ldyBJbnRlcm5NYXAsIHUgPSByW28rK107IGxldCBjID0gLTE7IGZvciAoY29uc3QgdCBvZiBpKSB7IGNvbnN0IG4gPSB1KHQsICsrYywgaSksIGUgPSBhLmdldChuKTsgZSA/IGUucHVzaCh0KSA6IGEuc2V0KG4sIFt0XSkgfSBmb3IgKGNvbnN0IFtuLCBlXSBvZiBhKSBhLnNldChuLCB0KGUsIG8pKTsgcmV0dXJuIG4oYSkgfSh0LCAwKSB9IGZ1bmN0aW9uIE8odCwgbikgeyByZXR1cm4gQXJyYXkuZnJvbShuLCAobiA9PiB0W25dKSkgfSBmdW5jdGlvbiBVKHQsIC4uLm4pIHsgaWYgKCJmdW5jdGlvbiIgIT0gdHlwZW9mIHRbU3ltYm9sLml0ZXJhdG9yXSkgdGhyb3cgbmV3IFR5cGVFcnJvcigidmFsdWVzIGlzIG5vdCBpdGVyYWJsZSIpOyB0ID0gQXJyYXkuZnJvbSh0KTsgbGV0IFtlXSA9IG47IGlmIChlICYmIDIgIT09IGUubGVuZ3RoIHx8IG4ubGVuZ3RoID4gMSkgeyBjb25zdCByID0gVWludDMyQXJyYXkuZnJvbSh0LCAoKHQsIG4pID0+IG4pKTsgcmV0dXJuIG4ubGVuZ3RoID4gMSA/IChuID0gbi5tYXAoKG4gPT4gdC5tYXAobikpKSwgci5zb3J0KCgodCwgZSkgPT4geyBmb3IgKGNvbnN0IHIgb2YgbikgeyBjb25zdCBuID0gWShyW3RdLCByW2VdKTsgaWYgKG4pIHJldHVybiBuIH0gfSkpKSA6IChlID0gdC5tYXAoZSksIHIuc29ydCgoKHQsIG4pID0+IFkoZVt0XSwgZVtuXSkpKSksIE8odCwgcikgfSByZXR1cm4gdC5zb3J0KEIoZSkpIH0gZnVuY3Rpb24gQih0ID0gbikgeyBpZiAodCA9PT0gbikgcmV0dXJuIFk7IGlmICgiZnVuY3Rpb24iICE9IHR5cGVvZiB0KSB0aHJvdyBuZXcgVHlwZUVycm9yKCJjb21wYXJlIGlzIG5vdCBhIGZ1bmN0aW9uIik7IHJldHVybiAobiwgZSkgPT4geyBjb25zdCByID0gdChuLCBlKTsgcmV0dXJuIHIgfHwgMCA9PT0gciA/IHIgOiAoMCA9PT0gdChlLCBlKSkgLSAoMCA9PT0gdChuLCBuKSkgfSB9IGZ1bmN0aW9uIFkodCwgbikgeyByZXR1cm4gKG51bGwgPT0gdCB8fCAhKHQgPj0gdCkpIC0gKG51bGwgPT0gbiB8fCAhKG4gPj0gbikpIHx8ICh0IDwgbiA/IC0xIDogdCA+IG4gPyAxIDogMCkgfSB2YXIgTCA9IEFycmF5LnByb3RvdHlwZS5zbGljZTsgZnVuY3Rpb24gaih0KSB7IHJldHVybiAoKSA9PiB0IH0gdmFyICQgPSBNYXRoLnNxcnQoNTApLCBIID0gTWF0aC5zcXJ0KDEwKSwgWCA9IE1hdGguc3FydCgyKTsgZnVuY3Rpb24gRyh0LCBuLCBlKSB7IHZhciByLCBpLCBvLCBhLCB1ID0gLTE7IGlmIChlID0gK2UsICh0ID0gK3QpID09PSAobiA9ICtuKSAmJiBlID4gMCkgcmV0dXJuIFt0XTsgaWYgKChyID0gbiA8IHQpICYmIChpID0gdCwgdCA9IG4sIG4gPSBpKSwgMCA9PT0gKGEgPSBWKHQsIG4sIGUpKSB8fCAhaXNGaW5pdGUoYSkpIHJldHVybiBbXTsgaWYgKGEgPiAwKSB7IGxldCBlID0gTWF0aC5yb3VuZCh0IC8gYSksIHIgPSBNYXRoLnJvdW5kKG4gLyBhKTsgZm9yIChlICogYSA8IHQgJiYgKytlLCByICogYSA+IG4gJiYgLS1yLCBvID0gbmV3IEFycmF5KGkgPSByIC0gZSArIDEpOyArK3UgPCBpOylvW3VdID0gKGUgKyB1KSAqIGEgfSBlbHNlIHsgYSA9IC1hOyBsZXQgZSA9IE1hdGgucm91bmQodCAqIGEpLCByID0gTWF0aC5yb3VuZChuICogYSk7IGZvciAoZSAvIGEgPCB0ICYmICsrZSwgciAvIGEgPiBuICYmIC0tciwgbyA9IG5ldyBBcnJheShpID0gciAtIGUgKyAxKTsgKyt1IDwgaTspb1t1XSA9IChlICsgdSkgLyBhIH0gcmV0dXJuIHIgJiYgby5yZXZlcnNlKCksIG8gfSBmdW5jdGlvbiBWKHQsIG4sIGUpIHsgdmFyIHIgPSAobiAtIHQpIC8gTWF0aC5tYXgoMCwgZSksIGkgPSBNYXRoLmZsb29yKE1hdGgubG9nKHIpIC8gTWF0aC5MTjEwKSwgbyA9IHIgLyBNYXRoLnBvdygxMCwgaSk7IHJldHVybiBpID49IDAgPyAobyA+PSAkID8gMTAgOiBvID49IEggPyA1IDogbyA+PSBYID8gMiA6IDEpICogTWF0aC5wb3coMTAsIGkpIDogLU1hdGgucG93KDEwLCAtaSkgLyAobyA+PSAkID8gMTAgOiBvID49IEggPyA1IDogbyA+PSBYID8gMiA6IDEpIH0gZnVuY3Rpb24gVyh0LCBuLCBlKSB7IHZhciByID0gTWF0aC5hYnMobiAtIHQpIC8gTWF0aC5tYXgoMCwgZSksIGkgPSBNYXRoLnBvdygxMCwgTWF0aC5mbG9vcihNYXRoLmxvZyhyKSAvIE1hdGguTE4xMCkpLCBvID0gciAvIGk7IHJldHVybiBvID49ICQgPyBpICo9IDEwIDogbyA+PSBIID8gaSAqPSA1IDogbyA+PSBYICYmIChpICo9IDIpLCBuIDwgdCA/IC1pIDogaSB9IGZ1bmN0aW9uIFoodCwgbiwgZSkgeyBsZXQgcjsgZm9yICg7IDspIHsgY29uc3QgaSA9IFYodCwgbiwgZSk7IGlmIChpID09PSByIHx8IDAgPT09IGkgfHwgIWlzRmluaXRlKGkpKSByZXR1cm4gW3QsIG5dOyBpID4gMCA/ICh0ID0gTWF0aC5mbG9vcih0IC8gaSkgKiBpLCBuID0gTWF0aC5jZWlsKG4gLyBpKSAqIGkpIDogaSA8IDAgJiYgKHQgPSBNYXRoLmNlaWwodCAqIGkpIC8gaSwgbiA9IE1hdGguZmxvb3IobiAqIGkpIC8gaSksIHIgPSBpIH0gfSBmdW5jdGlvbiBLKHQpIHsgcmV0dXJuIE1hdGguY2VpbChNYXRoLmxvZyhfKHQpKSAvIE1hdGguTE4yKSArIDEgfSBmdW5jdGlvbiBRKCkgeyB2YXIgdCA9IEMsIG4gPSBBLCBlID0gSzsgZnVuY3Rpb24gcihyKSB7IEFycmF5LmlzQXJyYXkocikgfHwgKHIgPSBBcnJheS5mcm9tKHIpKTsgdmFyIGksIG8sIGEsIHUgPSByLmxlbmd0aCwgYyA9IG5ldyBBcnJheSh1KTsgZm9yIChpID0gMDsgaSA8IHU7ICsraSljW2ldID0gdChyW2ldLCBpLCByKTsgdmFyIGYgPSBuKGMpLCBzID0gZlswXSwgaCA9IGZbMV0sIGQgPSBlKGMsIHMsIGgpOyBpZiAoIUFycmF5LmlzQXJyYXkoZCkpIHsgY29uc3QgdCA9IGgsIGUgPSArZDsgaWYgKG4gPT09IEEgJiYgKFtzLCBoXSA9IFoocywgaCwgZSkpLCAoZCA9IEcocywgaCwgZSkpWzBdIDw9IHMgJiYgKGEgPSBWKHMsIGgsIGUpKSwgZFtkLmxlbmd0aCAtIDFdID49IGgpIGlmICh0ID49IGggJiYgbiA9PT0gQSkgeyBjb25zdCB0ID0gVihzLCBoLCBlKTsgaXNGaW5pdGUodCkgJiYgKHQgPiAwID8gaCA9IChNYXRoLmZsb29yKGggLyB0KSArIDEpICogdCA6IHQgPCAwICYmIChoID0gKE1hdGguY2VpbChoICogLXQpICsgMSkgLyAtdCkpIH0gZWxzZSBkLnBvcCgpIH0gZm9yICh2YXIgcCA9IGQubGVuZ3RoOyBkWzBdIDw9IHM7KWQuc2hpZnQoKSwgLS1wOyBmb3IgKDsgZFtwIC0gMV0gPiBoOylkLnBvcCgpLCAtLXA7IHZhciBnLCB5ID0gbmV3IEFycmF5KHAgKyAxKTsgZm9yIChpID0gMDsgaSA8PSBwOyArK2kpKGcgPSB5W2ldID0gW10pLngwID0gaSA+IDAgPyBkW2kgLSAxXSA6IHMsIGcueDEgPSBpIDwgcCA/IGRbaV0gOiBoOyBpZiAoaXNGaW5pdGUoYSkpIHsgaWYgKGEgPiAwKSBmb3IgKGkgPSAwOyBpIDwgdTsgKytpKW51bGwgIT0gKG8gPSBjW2ldKSAmJiBzIDw9IG8gJiYgbyA8PSBoICYmIHlbTWF0aC5taW4ocCwgTWF0aC5mbG9vcigobyAtIHMpIC8gYSkpXS5wdXNoKHJbaV0pOyBlbHNlIGlmIChhIDwgMCkgZm9yIChpID0gMDsgaSA8IHU7ICsraSlpZiAobnVsbCAhPSAobyA9IGNbaV0pICYmIHMgPD0gbyAmJiBvIDw9IGgpIHsgY29uc3QgdCA9IE1hdGguZmxvb3IoKHMgLSBvKSAqIGEpOyB5W01hdGgubWluKHAsIHQgKyAoZFt0XSA8PSBvKSldLnB1c2gocltpXSkgfSB9IGVsc2UgZm9yIChpID0gMDsgaSA8IHU7ICsraSludWxsICE9IChvID0gY1tpXSkgJiYgcyA8PSBvICYmIG8gPD0gaCAmJiB5W2woZCwgbywgMCwgcCldLnB1c2gocltpXSk7IHJldHVybiB5IH0gcmV0dXJuIHIudmFsdWUgPSBmdW5jdGlvbiAobikgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0ID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgbiA/IG4gOiBqKG4pLCByKSA6IHQgfSwgci5kb21haW4gPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChuID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBqKFt0WzBdLCB0WzFdXSksIHIpIDogbiB9LCByLnRocmVzaG9sZHMgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChlID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBBcnJheS5pc0FycmF5KHQpID8gaihMLmNhbGwodCkpIDogaih0KSwgcikgOiBlIH0sIHIgfSBmdW5jdGlvbiBKKHQsIG4pIHsgbGV0IGU7IGlmICh2b2lkIDAgPT09IG4pIGZvciAoY29uc3QgbiBvZiB0KSBudWxsICE9IG4gJiYgKGUgPCBuIHx8IHZvaWQgMCA9PT0gZSAmJiBuID49IG4pICYmIChlID0gbik7IGVsc2UgeyBsZXQgciA9IC0xOyBmb3IgKGxldCBpIG9mIHQpIG51bGwgIT0gKGkgPSBuKGksICsrciwgdCkpICYmIChlIDwgaSB8fCB2b2lkIDAgPT09IGUgJiYgaSA+PSBpKSAmJiAoZSA9IGkpIH0gcmV0dXJuIGUgfSBmdW5jdGlvbiB0dCh0LCBuKSB7IGxldCBlLCByID0gLTEsIGkgPSAtMTsgaWYgKHZvaWQgMCA9PT0gbikgZm9yIChjb25zdCBuIG9mIHQpICsraSwgbnVsbCAhPSBuICYmIChlIDwgbiB8fCB2b2lkIDAgPT09IGUgJiYgbiA+PSBuKSAmJiAoZSA9IG4sIHIgPSBpKTsgZWxzZSBmb3IgKGxldCBvIG9mIHQpIG51bGwgIT0gKG8gPSBuKG8sICsraSwgdCkpICYmIChlIDwgbyB8fCB2b2lkIDAgPT09IGUgJiYgbyA+PSBvKSAmJiAoZSA9IG8sIHIgPSBpKTsgcmV0dXJuIHIgfSBmdW5jdGlvbiBudCh0LCBuKSB7IGxldCBlOyBpZiAodm9pZCAwID09PSBuKSBmb3IgKGNvbnN0IG4gb2YgdCkgbnVsbCAhPSBuICYmIChlID4gbiB8fCB2b2lkIDAgPT09IGUgJiYgbiA+PSBuKSAmJiAoZSA9IG4pOyBlbHNlIHsgbGV0IHIgPSAtMTsgZm9yIChsZXQgaSBvZiB0KSBudWxsICE9IChpID0gbihpLCArK3IsIHQpKSAmJiAoZSA+IGkgfHwgdm9pZCAwID09PSBlICYmIGkgPj0gaSkgJiYgKGUgPSBpKSB9IHJldHVybiBlIH0gZnVuY3Rpb24gZXQodCwgbikgeyBsZXQgZSwgciA9IC0xLCBpID0gLTE7IGlmICh2b2lkIDAgPT09IG4pIGZvciAoY29uc3QgbiBvZiB0KSArK2ksIG51bGwgIT0gbiAmJiAoZSA+IG4gfHwgdm9pZCAwID09PSBlICYmIG4gPj0gbikgJiYgKGUgPSBuLCByID0gaSk7IGVsc2UgZm9yIChsZXQgbyBvZiB0KSBudWxsICE9IChvID0gbihvLCArK2ksIHQpKSAmJiAoZSA+IG8gfHwgdm9pZCAwID09PSBlICYmIG8gPj0gbykgJiYgKGUgPSBvLCByID0gaSk7IHJldHVybiByIH0gZnVuY3Rpb24gcnQodCwgbiwgZSA9IDAsIHIgPSB0Lmxlbmd0aCAtIDEsIGkpIHsgZm9yIChpID0gdm9pZCAwID09PSBpID8gWSA6IEIoaSk7IHIgPiBlOykgeyBpZiAociAtIGUgPiA2MDApIHsgY29uc3QgbyA9IHIgLSBlICsgMSwgYSA9IG4gLSBlICsgMSwgdSA9IE1hdGgubG9nKG8pLCBjID0gLjUgKiBNYXRoLmV4cCgyICogdSAvIDMpLCBmID0gLjUgKiBNYXRoLnNxcnQodSAqIGMgKiAobyAtIGMpIC8gbykgKiAoYSAtIG8gLyAyIDwgMCA/IC0xIDogMSk7IHJ0KHQsIG4sIE1hdGgubWF4KGUsIE1hdGguZmxvb3IobiAtIGEgKiBjIC8gbyArIGYpKSwgTWF0aC5taW4ociwgTWF0aC5mbG9vcihuICsgKG8gLSBhKSAqIGMgLyBvICsgZikpLCBpKSB9IGNvbnN0IG8gPSB0W25dOyBsZXQgYSA9IGUsIHUgPSByOyBmb3IgKGl0KHQsIGUsIG4pLCBpKHRbcl0sIG8pID4gMCAmJiBpdCh0LCBlLCByKTsgYSA8IHU7KSB7IGZvciAoaXQodCwgYSwgdSksICsrYSwgLS11OyBpKHRbYV0sIG8pIDwgMDspKythOyBmb3IgKDsgaSh0W3VdLCBvKSA+IDA7KS0tdSB9IDAgPT09IGkodFtlXSwgbykgPyBpdCh0LCBlLCB1KSA6ICgrK3UsIGl0KHQsIHUsIHIpKSwgdSA8PSBuICYmIChlID0gdSArIDEpLCBuIDw9IHUgJiYgKHIgPSB1IC0gMSkgfSByZXR1cm4gdCB9IGZ1bmN0aW9uIGl0KHQsIG4sIGUpIHsgY29uc3QgciA9IHRbbl07IHRbbl0gPSB0W2VdLCB0W2VdID0gciB9IGZ1bmN0aW9uIG90KHQsIGUgPSBuKSB7IGxldCByLCBpID0gITE7IGlmICgxID09PSBlLmxlbmd0aCkgeyBsZXQgbzsgZm9yIChjb25zdCBhIG9mIHQpIHsgY29uc3QgdCA9IGUoYSk7IChpID8gbih0LCBvKSA+IDAgOiAwID09PSBuKHQsIHQpKSAmJiAociA9IGEsIG8gPSB0LCBpID0gITApIH0gfSBlbHNlIGZvciAoY29uc3QgbiBvZiB0KSAoaSA/IGUobiwgcikgPiAwIDogMCA9PT0gZShuLCBuKSkgJiYgKHIgPSBuLCBpID0gITApOyByZXR1cm4gciB9IGZ1bmN0aW9uIGF0KHQsIG4sIGUpIHsgaWYgKHIgPSAodCA9IEZsb2F0NjRBcnJheS5mcm9tKGEodCwgZSkpKS5sZW5ndGgpIHsgaWYgKChuID0gK24pIDw9IDAgfHwgciA8IDIpIHJldHVybiBudCh0KTsgaWYgKG4gPj0gMSkgcmV0dXJuIEoodCk7IHZhciByLCBpID0gKHIgLSAxKSAqIG4sIG8gPSBNYXRoLmZsb29yKGkpLCB1ID0gSihydCh0LCBvKS5zdWJhcnJheSgwLCBvICsgMSkpOyByZXR1cm4gdSArIChudCh0LnN1YmFycmF5KG8gKyAxKSkgLSB1KSAqIChpIC0gbykgfSB9IGZ1bmN0aW9uIHV0KHQsIG4sIGUgPSBvKSB7IGlmIChyID0gdC5sZW5ndGgpIHsgaWYgKChuID0gK24pIDw9IDAgfHwgciA8IDIpIHJldHVybiArZSh0WzBdLCAwLCB0KTsgaWYgKG4gPj0gMSkgcmV0dXJuICtlKHRbciAtIDFdLCByIC0gMSwgdCk7IHZhciByLCBpID0gKHIgLSAxKSAqIG4sIGEgPSBNYXRoLmZsb29yKGkpLCB1ID0gK2UodFthXSwgYSwgdCk7IHJldHVybiB1ICsgKCtlKHRbYSArIDFdLCBhICsgMSwgdCkgLSB1KSAqIChpIC0gYSkgfSB9IGZ1bmN0aW9uIGN0KHQsIG4sIGUpIHsgaWYgKHIgPSAodCA9IEZsb2F0NjRBcnJheS5mcm9tKGEodCwgZSkpKS5sZW5ndGgpIHsgaWYgKChuID0gK24pIDw9IDAgfHwgciA8IDIpIHJldHVybiBldCh0KTsgaWYgKG4gPj0gMSkgcmV0dXJuIHR0KHQpOyB2YXIgciwgaSA9IE1hdGguZmxvb3IoKHIgLSAxKSAqIG4pLCBvID0gcnQoVWludDMyQXJyYXkuZnJvbSh0LCAoKHQsIG4pID0+IG4pKSwgaSwgMCwgciAtIDEsICgobiwgZSkgPT4gWSh0W25dLCB0W2VdKSkpOyByZXR1cm4gb3Qoby5zdWJhcnJheSgwLCBpICsgMSksIChuID0+IHRbbl0pKSB9IH0gZnVuY3Rpb24gZnQodCkgeyByZXR1cm4gQXJyYXkuZnJvbShmdW5jdGlvbiogKHQpIHsgZm9yIChjb25zdCBuIG9mIHQpIHlpZWxkKiBuIH0odCkpIH0gZnVuY3Rpb24gc3QodCwgbikgeyByZXR1cm4gW3QsIG5dIH0gZnVuY3Rpb24gbHQodCwgbiwgZSkgeyB0ID0gK3QsIG4gPSArbiwgZSA9IChpID0gYXJndW1lbnRzLmxlbmd0aCkgPCAyID8gKG4gPSB0LCB0ID0gMCwgMSkgOiBpIDwgMyA/IDEgOiArZTsgZm9yICh2YXIgciA9IC0xLCBpID0gMCB8IE1hdGgubWF4KDAsIE1hdGguY2VpbCgobiAtIHQpIC8gZSkpLCBvID0gbmV3IEFycmF5KGkpOyArK3IgPCBpOylvW3JdID0gdCArIHIgKiBlOyByZXR1cm4gbyB9IGZ1bmN0aW9uIGh0KHQsIGUgPSBuKSB7IGlmICgxID09PSBlLmxlbmd0aCkgcmV0dXJuIGV0KHQsIGUpOyBsZXQgciwgaSA9IC0xLCBvID0gLTE7IGZvciAoY29uc3QgbiBvZiB0KSArK28sIChpIDwgMCA/IDAgPT09IGUobiwgbikgOiBlKG4sIHIpIDwgMCkgJiYgKHIgPSBuLCBpID0gbyk7IHJldHVybiBpIH0gdmFyIGR0ID0gcHQoTWF0aC5yYW5kb20pOyBmdW5jdGlvbiBwdCh0KSB7IHJldHVybiBmdW5jdGlvbiAobiwgZSA9IDAsIHIgPSBuLmxlbmd0aCkgeyBsZXQgaSA9IHIgLSAoZSA9ICtlKTsgZm9yICg7IGk7KSB7IGNvbnN0IHIgPSB0KCkgKiBpLS0gfCAwLCBvID0gbltpICsgZV07IG5baSArIGVdID0gbltyICsgZV0sIG5bciArIGVdID0gbyB9IHJldHVybiBuIH0gfSBmdW5jdGlvbiBndCh0KSB7IGlmICghKGkgPSB0Lmxlbmd0aCkpIHJldHVybiBbXTsgZm9yICh2YXIgbiA9IC0xLCBlID0gbnQodCwgeXQpLCByID0gbmV3IEFycmF5KGUpOyArK24gPCBlOylmb3IgKHZhciBpLCBvID0gLTEsIGEgPSByW25dID0gbmV3IEFycmF5KGkpOyArK28gPCBpOylhW29dID0gdFtvXVtuXTsgcmV0dXJuIHIgfSBmdW5jdGlvbiB5dCh0KSB7IHJldHVybiB0Lmxlbmd0aCB9IGZ1bmN0aW9uIHZ0KHQpIHsgcmV0dXJuIHQgaW5zdGFuY2VvZiBJbnRlcm5TZXQgPyB0IDogbmV3IEludGVyblNldCh0KSB9IGZ1bmN0aW9uIF90KHQsIG4pIHsgY29uc3QgZSA9IHRbU3ltYm9sLml0ZXJhdG9yXSgpLCByID0gbmV3IFNldDsgZm9yIChjb25zdCB0IG9mIG4pIHsgY29uc3QgbiA9IGJ0KHQpOyBpZiAoci5oYXMobikpIGNvbnRpbnVlOyBsZXQgaSwgbzsgZm9yICg7ICh7IHZhbHVlOiBpLCBkb25lOiBvIH0gPSBlLm5leHQoKSk7KSB7IGlmIChvKSByZXR1cm4gITE7IGNvbnN0IHQgPSBidChpKTsgaWYgKHIuYWRkKHQpLCBPYmplY3QuaXMobiwgdCkpIGJyZWFrIH0gfSByZXR1cm4gITAgfSBmdW5jdGlvbiBidCh0KSB7IHJldHVybiBudWxsICE9PSB0ICYmICJvYmplY3QiID09IHR5cGVvZiB0ID8gdC52YWx1ZU9mKCkgOiB0IH0gZnVuY3Rpb24gbXQodCkgeyByZXR1cm4gdCB9IHZhciB4dCA9IDFlLTY7IGZ1bmN0aW9uIHd0KHQpIHsgcmV0dXJuICJ0cmFuc2xhdGUoIiArIHQgKyAiLDApIiB9IGZ1bmN0aW9uIE10KHQpIHsgcmV0dXJuICJ0cmFuc2xhdGUoMCwiICsgdCArICIpIiB9IGZ1bmN0aW9uIEF0KHQpIHsgcmV0dXJuIG4gPT4gK3QobikgfSBmdW5jdGlvbiBUdCh0LCBuKSB7IHJldHVybiBuID0gTWF0aC5tYXgoMCwgdC5iYW5kd2lkdGgoKSAtIDIgKiBuKSAvIDIsIHQucm91bmQoKSAmJiAobiA9IE1hdGgucm91bmQobikpLCBlID0+ICt0KGUpICsgbiB9IGZ1bmN0aW9uIFN0KCkgeyByZXR1cm4gIXRoaXMuX19heGlzIH0gZnVuY3Rpb24gRXQodCwgbikgeyB2YXIgZSA9IFtdLCByID0gbnVsbCwgaSA9IG51bGwsIG8gPSA2LCBhID0gNiwgdSA9IDMsIGMgPSAidW5kZWZpbmVkIiAhPSB0eXBlb2Ygd2luZG93ICYmIHdpbmRvdy5kZXZpY2VQaXhlbFJhdGlvID4gMSA/IDAgOiAuNSwgZiA9IDEgPT09IHQgfHwgNCA9PT0gdCA/IC0xIDogMSwgcyA9IDQgPT09IHQgfHwgMiA9PT0gdCA/ICJ4IiA6ICJ5IiwgbCA9IDEgPT09IHQgfHwgMyA9PT0gdCA/IHd0IDogTXQ7IGZ1bmN0aW9uIGgoaCkgeyB2YXIgZCA9IG51bGwgPT0gciA/IG4udGlja3MgPyBuLnRpY2tzLmFwcGx5KG4sIGUpIDogbi5kb21haW4oKSA6IHIsIHAgPSBudWxsID09IGkgPyBuLnRpY2tGb3JtYXQgPyBuLnRpY2tGb3JtYXQuYXBwbHkobiwgZSkgOiBtdCA6IGksIGcgPSBNYXRoLm1heChvLCAwKSArIHUsIHkgPSBuLnJhbmdlKCksIHYgPSAreVswXSArIGMsIF8gPSAreVt5Lmxlbmd0aCAtIDFdICsgYywgYiA9IChuLmJhbmR3aWR0aCA/IFR0IDogQXQpKG4uY29weSgpLCBjKSwgbSA9IGguc2VsZWN0aW9uID8gaC5zZWxlY3Rpb24oKSA6IGgsIHggPSBtLnNlbGVjdEFsbCgiLmRvbWFpbiIpLmRhdGEoW251bGxdKSwgdyA9IG0uc2VsZWN0QWxsKCIudGljayIpLmRhdGEoZCwgbikub3JkZXIoKSwgTSA9IHcuZXhpdCgpLCBBID0gdy5lbnRlcigpLmFwcGVuZCgiZyIpLmF0dHIoImNsYXNzIiwgInRpY2siKSwgVCA9IHcuc2VsZWN0KCJsaW5lIiksIFMgPSB3LnNlbGVjdCgidGV4dCIpOyB4ID0geC5tZXJnZSh4LmVudGVyKCkuaW5zZXJ0KCJwYXRoIiwgIi50aWNrIikuYXR0cigiY2xhc3MiLCAiZG9tYWluIikuYXR0cigic3Ryb2tlIiwgImN1cnJlbnRDb2xvciIpKSwgdyA9IHcubWVyZ2UoQSksIFQgPSBULm1lcmdlKEEuYXBwZW5kKCJsaW5lIikuYXR0cigic3Ryb2tlIiwgImN1cnJlbnRDb2xvciIpLmF0dHIocyArICIyIiwgZiAqIG8pKSwgUyA9IFMubWVyZ2UoQS5hcHBlbmQoInRleHQiKS5hdHRyKCJmaWxsIiwgImN1cnJlbnRDb2xvciIpLmF0dHIocywgZiAqIGcpLmF0dHIoImR5IiwgMSA9PT0gdCA/ICIwZW0iIDogMyA9PT0gdCA/ICIwLjcxZW0iIDogIjAuMzJlbSIpKSwgaCAhPT0gbSAmJiAoeCA9IHgudHJhbnNpdGlvbihoKSwgdyA9IHcudHJhbnNpdGlvbihoKSwgVCA9IFQudHJhbnNpdGlvbihoKSwgUyA9IFMudHJhbnNpdGlvbihoKSwgTSA9IE0udHJhbnNpdGlvbihoKS5hdHRyKCJvcGFjaXR5IiwgeHQpLmF0dHIoInRyYW5zZm9ybSIsIChmdW5jdGlvbiAodCkgeyByZXR1cm4gaXNGaW5pdGUodCA9IGIodCkpID8gbCh0ICsgYykgOiB0aGlzLmdldEF0dHJpYnV0ZSgidHJhbnNmb3JtIikgfSkpLCBBLmF0dHIoIm9wYWNpdHkiLCB4dCkuYXR0cigidHJhbnNmb3JtIiwgKGZ1bmN0aW9uICh0KSB7IHZhciBuID0gdGhpcy5wYXJlbnROb2RlLl9fYXhpczsgcmV0dXJuIGwoKG4gJiYgaXNGaW5pdGUobiA9IG4odCkpID8gbiA6IGIodCkpICsgYykgfSkpKSwgTS5yZW1vdmUoKSwgeC5hdHRyKCJkIiwgNCA9PT0gdCB8fCAyID09PSB0ID8gYSA/ICJNIiArIGYgKiBhICsgIiwiICsgdiArICJIIiArIGMgKyAiViIgKyBfICsgIkgiICsgZiAqIGEgOiAiTSIgKyBjICsgIiwiICsgdiArICJWIiArIF8gOiBhID8gIk0iICsgdiArICIsIiArIGYgKiBhICsgIlYiICsgYyArICJIIiArIF8gKyAiViIgKyBmICogYSA6ICJNIiArIHYgKyAiLCIgKyBjICsgIkgiICsgXyksIHcuYXR0cigib3BhY2l0eSIsIDEpLmF0dHIoInRyYW5zZm9ybSIsIChmdW5jdGlvbiAodCkgeyByZXR1cm4gbChiKHQpICsgYykgfSkpLCBULmF0dHIocyArICIyIiwgZiAqIG8pLCBTLmF0dHIocywgZiAqIGcpLnRleHQocCksIG0uZmlsdGVyKFN0KS5hdHRyKCJmaWxsIiwgIm5vbmUiKS5hdHRyKCJmb250LXNpemUiLCAxMCkuYXR0cigiZm9udC1mYW1pbHkiLCAic2Fucy1zZXJpZiIpLmF0dHIoInRleHQtYW5jaG9yIiwgMiA9PT0gdCA/ICJzdGFydCIgOiA0ID09PSB0ID8gImVuZCIgOiAibWlkZGxlIiksIG0uZWFjaCgoZnVuY3Rpb24gKCkgeyB0aGlzLl9fYXhpcyA9IGIgfSkpIH0gcmV0dXJuIGguc2NhbGUgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChuID0gdCwgaCkgOiBuIH0sIGgudGlja3MgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBlID0gQXJyYXkuZnJvbShhcmd1bWVudHMpLCBoIH0sIGgudGlja0FyZ3VtZW50cyA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGUgPSBudWxsID09IHQgPyBbXSA6IEFycmF5LmZyb20odCksIGgpIDogZS5zbGljZSgpIH0sIGgudGlja1ZhbHVlcyA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHIgPSBudWxsID09IHQgPyBudWxsIDogQXJyYXkuZnJvbSh0KSwgaCkgOiByICYmIHIuc2xpY2UoKSB9LCBoLnRpY2tGb3JtYXQgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChpID0gdCwgaCkgOiBpIH0sIGgudGlja1NpemUgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChvID0gYSA9ICt0LCBoKSA6IG8gfSwgaC50aWNrU2l6ZUlubmVyID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobyA9ICt0LCBoKSA6IG8gfSwgaC50aWNrU2l6ZU91dGVyID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYSA9ICt0LCBoKSA6IGEgfSwgaC50aWNrUGFkZGluZyA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHUgPSArdCwgaCkgOiB1IH0sIGgub2Zmc2V0ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYyA9ICt0LCBoKSA6IGMgfSwgaCB9IHZhciBrdCA9IHsgdmFsdWU6ICgpID0+IHsgfSB9OyBmdW5jdGlvbiBOdCgpIHsgZm9yICh2YXIgdCwgbiA9IDAsIGUgPSBhcmd1bWVudHMubGVuZ3RoLCByID0ge307IG4gPCBlOyArK24pIHsgaWYgKCEodCA9IGFyZ3VtZW50c1tuXSArICIiKSB8fCB0IGluIHIgfHwgL1tccy5dLy50ZXN0KHQpKSB0aHJvdyBuZXcgRXJyb3IoImlsbGVnYWwgdHlwZTogIiArIHQpOyByW3RdID0gW10gfSByZXR1cm4gbmV3IEN0KHIpIH0gZnVuY3Rpb24gQ3QodCkgeyB0aGlzLl8gPSB0IH0gZnVuY3Rpb24gUHQodCwgbikgeyByZXR1cm4gdC50cmltKCkuc3BsaXQoL158XHMrLykubWFwKChmdW5jdGlvbiAodCkgeyB2YXIgZSA9ICIiLCByID0gdC5pbmRleE9mKCIuIik7IGlmIChyID49IDAgJiYgKGUgPSB0LnNsaWNlKHIgKyAxKSwgdCA9IHQuc2xpY2UoMCwgcikpLCB0ICYmICFuLmhhc093blByb3BlcnR5KHQpKSB0aHJvdyBuZXcgRXJyb3IoInVua25vd24gdHlwZTogIiArIHQpOyByZXR1cm4geyB0eXBlOiB0LCBuYW1lOiBlIH0gfSkpIH0gZnVuY3Rpb24genQodCwgbikgeyBmb3IgKHZhciBlLCByID0gMCwgaSA9IHQubGVuZ3RoOyByIDwgaTsgKytyKWlmICgoZSA9IHRbcl0pLm5hbWUgPT09IG4pIHJldHVybiBlLnZhbHVlIH0gZnVuY3Rpb24gRHQodCwgbiwgZSkgeyBmb3IgKHZhciByID0gMCwgaSA9IHQubGVuZ3RoOyByIDwgaTsgKytyKWlmICh0W3JdLm5hbWUgPT09IG4pIHsgdFtyXSA9IGt0LCB0ID0gdC5zbGljZSgwLCByKS5jb25jYXQodC5zbGljZShyICsgMSkpOyBicmVhayB9IHJldHVybiBudWxsICE9IGUgJiYgdC5wdXNoKHsgbmFtZTogbiwgdmFsdWU6IGUgfSksIHQgfSBDdC5wcm90b3R5cGUgPSBOdC5wcm90b3R5cGUgPSB7IGNvbnN0cnVjdG9yOiBDdCwgb246IGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlLCByID0gdGhpcy5fLCBpID0gUHQodCArICIiLCByKSwgbyA9IC0xLCBhID0gaS5sZW5ndGg7IGlmICghKGFyZ3VtZW50cy5sZW5ndGggPCAyKSkgeyBpZiAobnVsbCAhPSBuICYmICJmdW5jdGlvbiIgIT0gdHlwZW9mIG4pIHRocm93IG5ldyBFcnJvcigiaW52YWxpZCBjYWxsYmFjazogIiArIG4pOyBmb3IgKDsgKytvIDwgYTspaWYgKGUgPSAodCA9IGlbb10pLnR5cGUpIHJbZV0gPSBEdChyW2VdLCB0Lm5hbWUsIG4pOyBlbHNlIGlmIChudWxsID09IG4pIGZvciAoZSBpbiByKSByW2VdID0gRHQocltlXSwgdC5uYW1lLCBudWxsKTsgcmV0dXJuIHRoaXMgfSBmb3IgKDsgKytvIDwgYTspaWYgKChlID0gKHQgPSBpW29dKS50eXBlKSAmJiAoZSA9IHp0KHJbZV0sIHQubmFtZSkpKSByZXR1cm4gZSB9LCBjb3B5OiBmdW5jdGlvbiAoKSB7IHZhciB0ID0ge30sIG4gPSB0aGlzLl87IGZvciAodmFyIGUgaW4gbikgdFtlXSA9IG5bZV0uc2xpY2UoKTsgcmV0dXJuIG5ldyBDdCh0KSB9LCBjYWxsOiBmdW5jdGlvbiAodCwgbikgeyBpZiAoKGUgPSBhcmd1bWVudHMubGVuZ3RoIC0gMikgPiAwKSBmb3IgKHZhciBlLCByLCBpID0gbmV3IEFycmF5KGUpLCBvID0gMDsgbyA8IGU7ICsrbylpW29dID0gYXJndW1lbnRzW28gKyAyXTsgaWYgKCF0aGlzLl8uaGFzT3duUHJvcGVydHkodCkpIHRocm93IG5ldyBFcnJvcigidW5rbm93biB0eXBlOiAiICsgdCk7IGZvciAobyA9IDAsIGUgPSAociA9IHRoaXMuX1t0XSkubGVuZ3RoOyBvIDwgZTsgKytvKXJbb10udmFsdWUuYXBwbHkobiwgaSkgfSwgYXBwbHk6IGZ1bmN0aW9uICh0LCBuLCBlKSB7IGlmICghdGhpcy5fLmhhc093blByb3BlcnR5KHQpKSB0aHJvdyBuZXcgRXJyb3IoInVua25vd24gdHlwZTogIiArIHQpOyBmb3IgKHZhciByID0gdGhpcy5fW3RdLCBpID0gMCwgbyA9IHIubGVuZ3RoOyBpIDwgbzsgKytpKXJbaV0udmFsdWUuYXBwbHkobiwgZSkgfSB9OyB2YXIgUnQgPSAiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCIsIEZ0ID0geyBzdmc6ICJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIsIHhodG1sOiBSdCwgeGxpbms6ICJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiwgeG1sOiAiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlIiwgeG1sbnM6ICJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3htbG5zLyIgfTsgZnVuY3Rpb24gcXQodCkgeyB2YXIgbiA9IHQgKz0gIiIsIGUgPSBuLmluZGV4T2YoIjoiKTsgcmV0dXJuIGUgPj0gMCAmJiAieG1sbnMiICE9PSAobiA9IHQuc2xpY2UoMCwgZSkpICYmICh0ID0gdC5zbGljZShlICsgMSkpLCBGdC5oYXNPd25Qcm9wZXJ0eShuKSA/IHsgc3BhY2U6IEZ0W25dLCBsb2NhbDogdCB9IDogdCB9IGZ1bmN0aW9uIEl0KHQpIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIG4gPSB0aGlzLm93bmVyRG9jdW1lbnQsIGUgPSB0aGlzLm5hbWVzcGFjZVVSSTsgcmV0dXJuIGUgPT09IFJ0ICYmIG4uZG9jdW1lbnRFbGVtZW50Lm5hbWVzcGFjZVVSSSA9PT0gUnQgPyBuLmNyZWF0ZUVsZW1lbnQodCkgOiBuLmNyZWF0ZUVsZW1lbnROUyhlLCB0KSB9IH0gZnVuY3Rpb24gT3QodCkgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpcy5vd25lckRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyh0LnNwYWNlLCB0LmxvY2FsKSB9IH0gZnVuY3Rpb24gVXQodCkgeyB2YXIgbiA9IHF0KHQpOyByZXR1cm4gKG4ubG9jYWwgPyBPdCA6IEl0KShuKSB9IGZ1bmN0aW9uIEJ0KCkgeyB9IGZ1bmN0aW9uIFl0KHQpIHsgcmV0dXJuIG51bGwgPT0gdCA/IEJ0IDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpcy5xdWVyeVNlbGVjdG9yKHQpIH0gfSBmdW5jdGlvbiBMdCh0KSB7IHJldHVybiBudWxsID09IHQgPyBbXSA6IEFycmF5LmlzQXJyYXkodCkgPyB0IDogQXJyYXkuZnJvbSh0KSB9IGZ1bmN0aW9uIGp0KCkgeyByZXR1cm4gW10gfSBmdW5jdGlvbiAkdCh0KSB7IHJldHVybiBudWxsID09IHQgPyBqdCA6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMucXVlcnlTZWxlY3RvckFsbCh0KSB9IH0gZnVuY3Rpb24gSHQodCkgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpcy5tYXRjaGVzKHQpIH0gfSBmdW5jdGlvbiBYdCh0KSB7IHJldHVybiBmdW5jdGlvbiAobikgeyByZXR1cm4gbi5tYXRjaGVzKHQpIH0gfSB2YXIgR3QgPSBBcnJheS5wcm90b3R5cGUuZmluZDsgZnVuY3Rpb24gVnQoKSB7IHJldHVybiB0aGlzLmZpcnN0RWxlbWVudENoaWxkIH0gdmFyIFd0ID0gQXJyYXkucHJvdG90eXBlLmZpbHRlcjsgZnVuY3Rpb24gWnQoKSB7IHJldHVybiBBcnJheS5mcm9tKHRoaXMuY2hpbGRyZW4pIH0gZnVuY3Rpb24gS3QodCkgeyByZXR1cm4gbmV3IEFycmF5KHQubGVuZ3RoKSB9IGZ1bmN0aW9uIFF0KHQsIG4pIHsgdGhpcy5vd25lckRvY3VtZW50ID0gdC5vd25lckRvY3VtZW50LCB0aGlzLm5hbWVzcGFjZVVSSSA9IHQubmFtZXNwYWNlVVJJLCB0aGlzLl9uZXh0ID0gbnVsbCwgdGhpcy5fcGFyZW50ID0gdCwgdGhpcy5fX2RhdGFfXyA9IG4gfSBmdW5jdGlvbiBKdCh0KSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiB0IH0gfSBmdW5jdGlvbiB0bih0LCBuLCBlLCByLCBpLCBvKSB7IGZvciAodmFyIGEsIHUgPSAwLCBjID0gbi5sZW5ndGgsIGYgPSBvLmxlbmd0aDsgdSA8IGY7ICsrdSkoYSA9IG5bdV0pID8gKGEuX19kYXRhX18gPSBvW3VdLCByW3VdID0gYSkgOiBlW3VdID0gbmV3IFF0KHQsIG9bdV0pOyBmb3IgKDsgdSA8IGM7ICsrdSkoYSA9IG5bdV0pICYmIChpW3VdID0gYSkgfSBmdW5jdGlvbiBubih0LCBuLCBlLCByLCBpLCBvLCBhKSB7IHZhciB1LCBjLCBmLCBzID0gbmV3IE1hcCwgbCA9IG4ubGVuZ3RoLCBoID0gby5sZW5ndGgsIGQgPSBuZXcgQXJyYXkobCk7IGZvciAodSA9IDA7IHUgPCBsOyArK3UpKGMgPSBuW3VdKSAmJiAoZFt1XSA9IGYgPSBhLmNhbGwoYywgYy5fX2RhdGFfXywgdSwgbikgKyAiIiwgcy5oYXMoZikgPyBpW3VdID0gYyA6IHMuc2V0KGYsIGMpKTsgZm9yICh1ID0gMDsgdSA8IGg7ICsrdSlmID0gYS5jYWxsKHQsIG9bdV0sIHUsIG8pICsgIiIsIChjID0gcy5nZXQoZikpID8gKHJbdV0gPSBjLCBjLl9fZGF0YV9fID0gb1t1XSwgcy5kZWxldGUoZikpIDogZVt1XSA9IG5ldyBRdCh0LCBvW3VdKTsgZm9yICh1ID0gMDsgdSA8IGw7ICsrdSkoYyA9IG5bdV0pICYmIHMuZ2V0KGRbdV0pID09PSBjICYmIChpW3VdID0gYykgfSBmdW5jdGlvbiBlbih0KSB7IHJldHVybiB0Ll9fZGF0YV9fIH0gZnVuY3Rpb24gcm4odCkgeyByZXR1cm4gIm9iamVjdCIgPT0gdHlwZW9mIHQgJiYgImxlbmd0aCIgaW4gdCA/IHQgOiBBcnJheS5mcm9tKHQpIH0gZnVuY3Rpb24gb24odCwgbikgeyByZXR1cm4gdCA8IG4gPyAtMSA6IHQgPiBuID8gMSA6IHQgPj0gbiA/IDAgOiBOYU4gfSBmdW5jdGlvbiBhbih0KSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHRoaXMucmVtb3ZlQXR0cmlidXRlKHQpIH0gfSBmdW5jdGlvbiB1bih0KSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHRoaXMucmVtb3ZlQXR0cmlidXRlTlModC5zcGFjZSwgdC5sb2NhbCkgfSB9IGZ1bmN0aW9uIGNuKHQsIG4pIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdGhpcy5zZXRBdHRyaWJ1dGUodCwgbikgfSB9IGZ1bmN0aW9uIGZuKHQsIG4pIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdGhpcy5zZXRBdHRyaWJ1dGVOUyh0LnNwYWNlLCB0LmxvY2FsLCBuKSB9IH0gZnVuY3Rpb24gc24odCwgbikgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyB2YXIgZSA9IG4uYXBwbHkodGhpcywgYXJndW1lbnRzKTsgbnVsbCA9PSBlID8gdGhpcy5yZW1vdmVBdHRyaWJ1dGUodCkgOiB0aGlzLnNldEF0dHJpYnV0ZSh0LCBlKSB9IH0gZnVuY3Rpb24gbG4odCwgbikgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyB2YXIgZSA9IG4uYXBwbHkodGhpcywgYXJndW1lbnRzKTsgbnVsbCA9PSBlID8gdGhpcy5yZW1vdmVBdHRyaWJ1dGVOUyh0LnNwYWNlLCB0LmxvY2FsKSA6IHRoaXMuc2V0QXR0cmlidXRlTlModC5zcGFjZSwgdC5sb2NhbCwgZSkgfSB9IGZ1bmN0aW9uIGhuKHQpIHsgcmV0dXJuIHQub3duZXJEb2N1bWVudCAmJiB0Lm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcgfHwgdC5kb2N1bWVudCAmJiB0IHx8IHQuZGVmYXVsdFZpZXcgfSBmdW5jdGlvbiBkbih0KSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkodCkgfSB9IGZ1bmN0aW9uIHBuKHQsIG4sIGUpIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdGhpcy5zdHlsZS5zZXRQcm9wZXJ0eSh0LCBuLCBlKSB9IH0gZnVuY3Rpb24gZ24odCwgbiwgZSkgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyB2YXIgciA9IG4uYXBwbHkodGhpcywgYXJndW1lbnRzKTsgbnVsbCA9PSByID8gdGhpcy5zdHlsZS5yZW1vdmVQcm9wZXJ0eSh0KSA6IHRoaXMuc3R5bGUuc2V0UHJvcGVydHkodCwgciwgZSkgfSB9IGZ1bmN0aW9uIHluKHQsIG4pIHsgcmV0dXJuIHQuc3R5bGUuZ2V0UHJvcGVydHlWYWx1ZShuKSB8fCBobih0KS5nZXRDb21wdXRlZFN0eWxlKHQsIG51bGwpLmdldFByb3BlcnR5VmFsdWUobikgfSBmdW5jdGlvbiB2bih0KSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IGRlbGV0ZSB0aGlzW3RdIH0gfSBmdW5jdGlvbiBfbih0LCBuKSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHRoaXNbdF0gPSBuIH0gfSBmdW5jdGlvbiBibih0LCBuKSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHZhciBlID0gbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyBudWxsID09IGUgPyBkZWxldGUgdGhpc1t0XSA6IHRoaXNbdF0gPSBlIH0gfSBmdW5jdGlvbiBtbih0KSB7IHJldHVybiB0LnRyaW0oKS5zcGxpdCgvXnxccysvKSB9IGZ1bmN0aW9uIHhuKHQpIHsgcmV0dXJuIHQuY2xhc3NMaXN0IHx8IG5ldyB3bih0KSB9IGZ1bmN0aW9uIHduKHQpIHsgdGhpcy5fbm9kZSA9IHQsIHRoaXMuX25hbWVzID0gbW4odC5nZXRBdHRyaWJ1dGUoImNsYXNzIikgfHwgIiIpIH0gZnVuY3Rpb24gTW4odCwgbikgeyBmb3IgKHZhciBlID0geG4odCksIHIgPSAtMSwgaSA9IG4ubGVuZ3RoOyArK3IgPCBpOyllLmFkZChuW3JdKSB9IGZ1bmN0aW9uIEFuKHQsIG4pIHsgZm9yICh2YXIgZSA9IHhuKHQpLCByID0gLTEsIGkgPSBuLmxlbmd0aDsgKytyIDwgaTspZS5yZW1vdmUobltyXSkgfSBmdW5jdGlvbiBUbih0KSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IE1uKHRoaXMsIHQpIH0gfSBmdW5jdGlvbiBTbih0KSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IEFuKHRoaXMsIHQpIH0gfSBmdW5jdGlvbiBFbih0LCBuKSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IChuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgPyBNbiA6IEFuKSh0aGlzLCB0KSB9IH0gZnVuY3Rpb24ga24oKSB7IHRoaXMudGV4dENvbnRlbnQgPSAiIiB9IGZ1bmN0aW9uIE5uKHQpIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdGhpcy50ZXh0Q29udGVudCA9IHQgfSB9IGZ1bmN0aW9uIENuKHQpIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIG4gPSB0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IHRoaXMudGV4dENvbnRlbnQgPSBudWxsID09IG4gPyAiIiA6IG4gfSB9IGZ1bmN0aW9uIFBuKCkgeyB0aGlzLmlubmVySFRNTCA9ICIiIH0gZnVuY3Rpb24gem4odCkgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyB0aGlzLmlubmVySFRNTCA9IHQgfSB9IGZ1bmN0aW9uIERuKHQpIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIG4gPSB0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IHRoaXMuaW5uZXJIVE1MID0gbnVsbCA9PSBuID8gIiIgOiBuIH0gfSBmdW5jdGlvbiBSbigpIHsgdGhpcy5uZXh0U2libGluZyAmJiB0aGlzLnBhcmVudE5vZGUuYXBwZW5kQ2hpbGQodGhpcykgfSBmdW5jdGlvbiBGbigpIHsgdGhpcy5wcmV2aW91c1NpYmxpbmcgJiYgdGhpcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0aGlzLCB0aGlzLnBhcmVudE5vZGUuZmlyc3RDaGlsZCkgfSBmdW5jdGlvbiBxbigpIHsgcmV0dXJuIG51bGwgfSBmdW5jdGlvbiBJbigpIHsgdmFyIHQgPSB0aGlzLnBhcmVudE5vZGU7IHQgJiYgdC5yZW1vdmVDaGlsZCh0aGlzKSB9IGZ1bmN0aW9uIE9uKCkgeyB2YXIgdCA9IHRoaXMuY2xvbmVOb2RlKCExKSwgbiA9IHRoaXMucGFyZW50Tm9kZTsgcmV0dXJuIG4gPyBuLmluc2VydEJlZm9yZSh0LCB0aGlzLm5leHRTaWJsaW5nKSA6IHQgfSBmdW5jdGlvbiBVbigpIHsgdmFyIHQgPSB0aGlzLmNsb25lTm9kZSghMCksIG4gPSB0aGlzLnBhcmVudE5vZGU7IHJldHVybiBuID8gbi5pbnNlcnRCZWZvcmUodCwgdGhpcy5uZXh0U2libGluZykgOiB0IH0gZnVuY3Rpb24gQm4odCkgeyByZXR1cm4gdC50cmltKCkuc3BsaXQoL158XHMrLykubWFwKChmdW5jdGlvbiAodCkgeyB2YXIgbiA9ICIiLCBlID0gdC5pbmRleE9mKCIuIik7IHJldHVybiBlID49IDAgJiYgKG4gPSB0LnNsaWNlKGUgKyAxKSwgdCA9IHQuc2xpY2UoMCwgZSkpLCB7IHR5cGU6IHQsIG5hbWU6IG4gfSB9KSkgfSBmdW5jdGlvbiBZbih0KSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHZhciBuID0gdGhpcy5fX29uOyBpZiAobikgeyBmb3IgKHZhciBlLCByID0gMCwgaSA9IC0xLCBvID0gbi5sZW5ndGg7IHIgPCBvOyArK3IpZSA9IG5bcl0sIHQudHlwZSAmJiBlLnR5cGUgIT09IHQudHlwZSB8fCBlLm5hbWUgIT09IHQubmFtZSA/IG5bKytpXSA9IGUgOiB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoZS50eXBlLCBlLmxpc3RlbmVyLCBlLm9wdGlvbnMpOyArK2kgPyBuLmxlbmd0aCA9IGkgOiBkZWxldGUgdGhpcy5fX29uIH0gfSB9IGZ1bmN0aW9uIExuKHQsIG4sIGUpIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIHIsIGkgPSB0aGlzLl9fb24sIG8gPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gZnVuY3Rpb24gKG4pIHsgdC5jYWxsKHRoaXMsIG4sIHRoaXMuX19kYXRhX18pIH0gfShuKTsgaWYgKGkpIGZvciAodmFyIGEgPSAwLCB1ID0gaS5sZW5ndGg7IGEgPCB1OyArK2EpaWYgKChyID0gaVthXSkudHlwZSA9PT0gdC50eXBlICYmIHIubmFtZSA9PT0gdC5uYW1lKSByZXR1cm4gdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKHIudHlwZSwgci5saXN0ZW5lciwgci5vcHRpb25zKSwgdGhpcy5hZGRFdmVudExpc3RlbmVyKHIudHlwZSwgci5saXN0ZW5lciA9IG8sIHIub3B0aW9ucyA9IGUpLCB2b2lkIChyLnZhbHVlID0gbik7IHRoaXMuYWRkRXZlbnRMaXN0ZW5lcih0LnR5cGUsIG8sIGUpLCByID0geyB0eXBlOiB0LnR5cGUsIG5hbWU6IHQubmFtZSwgdmFsdWU6IG4sIGxpc3RlbmVyOiBvLCBvcHRpb25zOiBlIH0sIGkgPyBpLnB1c2gocikgOiB0aGlzLl9fb24gPSBbcl0gfSB9IGZ1bmN0aW9uIGpuKHQsIG4sIGUpIHsgdmFyIHIgPSBobih0KSwgaSA9IHIuQ3VzdG9tRXZlbnQ7ICJmdW5jdGlvbiIgPT0gdHlwZW9mIGkgPyBpID0gbmV3IGkobiwgZSkgOiAoaSA9IHIuZG9jdW1lbnQuY3JlYXRlRXZlbnQoIkV2ZW50IiksIGUgPyAoaS5pbml0RXZlbnQobiwgZS5idWJibGVzLCBlLmNhbmNlbGFibGUpLCBpLmRldGFpbCA9IGUuZGV0YWlsKSA6IGkuaW5pdEV2ZW50KG4sICExLCAhMSkpLCB0LmRpc3BhdGNoRXZlbnQoaSkgfSBmdW5jdGlvbiAkbih0LCBuKSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiBqbih0aGlzLCB0LCBuKSB9IH0gZnVuY3Rpb24gSG4odCwgbikgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyByZXR1cm4gam4odGhpcywgdCwgbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSB9IH0gUXQucHJvdG90eXBlID0geyBjb25zdHJ1Y3RvcjogUXQsIGFwcGVuZENoaWxkOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gdGhpcy5fcGFyZW50Lmluc2VydEJlZm9yZSh0LCB0aGlzLl9uZXh0KSB9LCBpbnNlcnRCZWZvcmU6IGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiB0aGlzLl9wYXJlbnQuaW5zZXJ0QmVmb3JlKHQsIG4pIH0sIHF1ZXJ5U2VsZWN0b3I6IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0aGlzLl9wYXJlbnQucXVlcnlTZWxlY3Rvcih0KSB9LCBxdWVyeVNlbGVjdG9yQWxsOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gdGhpcy5fcGFyZW50LnF1ZXJ5U2VsZWN0b3JBbGwodCkgfSB9LCB3bi5wcm90b3R5cGUgPSB7IGFkZDogZnVuY3Rpb24gKHQpIHsgdGhpcy5fbmFtZXMuaW5kZXhPZih0KSA8IDAgJiYgKHRoaXMuX25hbWVzLnB1c2godCksIHRoaXMuX25vZGUuc2V0QXR0cmlidXRlKCJjbGFzcyIsIHRoaXMuX25hbWVzLmpvaW4oIiAiKSkpIH0sIHJlbW92ZTogZnVuY3Rpb24gKHQpIHsgdmFyIG4gPSB0aGlzLl9uYW1lcy5pbmRleE9mKHQpOyBuID49IDAgJiYgKHRoaXMuX25hbWVzLnNwbGljZShuLCAxKSwgdGhpcy5fbm9kZS5zZXRBdHRyaWJ1dGUoImNsYXNzIiwgdGhpcy5fbmFtZXMuam9pbigiICIpKSkgfSwgY29udGFpbnM6IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0aGlzLl9uYW1lcy5pbmRleE9mKHQpID49IDAgfSB9OyB2YXIgWG4gPSBbbnVsbF07IGZ1bmN0aW9uIEduKHQsIG4pIHsgdGhpcy5fZ3JvdXBzID0gdCwgdGhpcy5fcGFyZW50cyA9IG4gfSBmdW5jdGlvbiBWbigpIHsgcmV0dXJuIG5ldyBHbihbW2RvY3VtZW50LmRvY3VtZW50RWxlbWVudF1dLCBYbikgfSBmdW5jdGlvbiBXbih0KSB7IHJldHVybiAic3RyaW5nIiA9PSB0eXBlb2YgdCA/IG5ldyBHbihbW2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodCldXSwgW2RvY3VtZW50LmRvY3VtZW50RWxlbWVudF0pIDogbmV3IEduKFtbdF1dLCBYbikgfSBHbi5wcm90b3R5cGUgPSBWbi5wcm90b3R5cGUgPSB7IGNvbnN0cnVjdG9yOiBHbiwgc2VsZWN0OiBmdW5jdGlvbiAodCkgeyAiZnVuY3Rpb24iICE9IHR5cGVvZiB0ICYmICh0ID0gWXQodCkpOyBmb3IgKHZhciBuID0gdGhpcy5fZ3JvdXBzLCBlID0gbi5sZW5ndGgsIHIgPSBuZXcgQXJyYXkoZSksIGkgPSAwOyBpIDwgZTsgKytpKWZvciAodmFyIG8sIGEsIHUgPSBuW2ldLCBjID0gdS5sZW5ndGgsIGYgPSByW2ldID0gbmV3IEFycmF5KGMpLCBzID0gMDsgcyA8IGM7ICsrcykobyA9IHVbc10pICYmIChhID0gdC5jYWxsKG8sIG8uX19kYXRhX18sIHMsIHUpKSAmJiAoIl9fZGF0YV9fIiBpbiBvICYmIChhLl9fZGF0YV9fID0gby5fX2RhdGFfXyksIGZbc10gPSBhKTsgcmV0dXJuIG5ldyBHbihyLCB0aGlzLl9wYXJlbnRzKSB9LCBzZWxlY3RBbGw6IGZ1bmN0aW9uICh0KSB7IHQgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgcmV0dXJuIEx0KHQuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgfSB9KHQpIDogJHQodCk7IGZvciAodmFyIG4gPSB0aGlzLl9ncm91cHMsIGUgPSBuLmxlbmd0aCwgciA9IFtdLCBpID0gW10sIG8gPSAwOyBvIDwgZTsgKytvKWZvciAodmFyIGEsIHUgPSBuW29dLCBjID0gdS5sZW5ndGgsIGYgPSAwOyBmIDwgYzsgKytmKShhID0gdVtmXSkgJiYgKHIucHVzaCh0LmNhbGwoYSwgYS5fX2RhdGFfXywgZiwgdSkpLCBpLnB1c2goYSkpOyByZXR1cm4gbmV3IEduKHIsIGkpIH0sIHNlbGVjdENoaWxkOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gdGhpcy5zZWxlY3QobnVsbCA9PSB0ID8gVnQgOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyByZXR1cm4gR3QuY2FsbCh0aGlzLmNoaWxkcmVuLCB0KSB9IH0oImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBYdCh0KSkpIH0sIHNlbGVjdENoaWxkcmVuOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gdGhpcy5zZWxlY3RBbGwobnVsbCA9PSB0ID8gWnQgOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyByZXR1cm4gV3QuY2FsbCh0aGlzLmNoaWxkcmVuLCB0KSB9IH0oImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBYdCh0KSkpIH0sIGZpbHRlcjogZnVuY3Rpb24gKHQpIHsgImZ1bmN0aW9uIiAhPSB0eXBlb2YgdCAmJiAodCA9IEh0KHQpKTsgZm9yICh2YXIgbiA9IHRoaXMuX2dyb3VwcywgZSA9IG4ubGVuZ3RoLCByID0gbmV3IEFycmF5KGUpLCBpID0gMDsgaSA8IGU7ICsraSlmb3IgKHZhciBvLCBhID0gbltpXSwgdSA9IGEubGVuZ3RoLCBjID0gcltpXSA9IFtdLCBmID0gMDsgZiA8IHU7ICsrZikobyA9IGFbZl0pICYmIHQuY2FsbChvLCBvLl9fZGF0YV9fLCBmLCBhKSAmJiBjLnB1c2gobyk7IHJldHVybiBuZXcgR24ociwgdGhpcy5fcGFyZW50cykgfSwgZGF0YTogZnVuY3Rpb24gKHQsIG4pIHsgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gQXJyYXkuZnJvbSh0aGlzLCBlbik7IHZhciBlID0gbiA/IG5uIDogdG4sIHIgPSB0aGlzLl9wYXJlbnRzLCBpID0gdGhpcy5fZ3JvdXBzOyAiZnVuY3Rpb24iICE9IHR5cGVvZiB0ICYmICh0ID0gSnQodCkpOyBmb3IgKHZhciBvID0gaS5sZW5ndGgsIGEgPSBuZXcgQXJyYXkobyksIHUgPSBuZXcgQXJyYXkobyksIGMgPSBuZXcgQXJyYXkobyksIGYgPSAwOyBmIDwgbzsgKytmKSB7IHZhciBzID0gcltmXSwgbCA9IGlbZl0sIGggPSBsLmxlbmd0aCwgZCA9IHJuKHQuY2FsbChzLCBzICYmIHMuX19kYXRhX18sIGYsIHIpKSwgcCA9IGQubGVuZ3RoLCBnID0gdVtmXSA9IG5ldyBBcnJheShwKSwgeSA9IGFbZl0gPSBuZXcgQXJyYXkocCksIHYgPSBjW2ZdID0gbmV3IEFycmF5KGgpOyBlKHMsIGwsIGcsIHksIHYsIGQsIG4pOyBmb3IgKHZhciBfLCBiLCBtID0gMCwgeCA9IDA7IG0gPCBwOyArK20paWYgKF8gPSBnW21dKSB7IGZvciAobSA+PSB4ICYmICh4ID0gbSArIDEpOyAhKGIgPSB5W3hdKSAmJiArK3ggPCBwOyk7IF8uX25leHQgPSBiIHx8IG51bGwgfSB9IHJldHVybiAoYSA9IG5ldyBHbihhLCByKSkuX2VudGVyID0gdSwgYS5fZXhpdCA9IGMsIGEgfSwgZW50ZXI6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG5ldyBHbih0aGlzLl9lbnRlciB8fCB0aGlzLl9ncm91cHMubWFwKEt0KSwgdGhpcy5fcGFyZW50cykgfSwgZXhpdDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbmV3IEduKHRoaXMuX2V4aXQgfHwgdGhpcy5fZ3JvdXBzLm1hcChLdCksIHRoaXMuX3BhcmVudHMpIH0sIGpvaW46IGZ1bmN0aW9uICh0LCBuLCBlKSB7IHZhciByID0gdGhpcy5lbnRlcigpLCBpID0gdGhpcywgbyA9IHRoaXMuZXhpdCgpOyByZXR1cm4gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IChyID0gdChyKSkgJiYgKHIgPSByLnNlbGVjdGlvbigpKSA6IHIgPSByLmFwcGVuZCh0ICsgIiIpLCBudWxsICE9IG4gJiYgKGkgPSBuKGkpKSAmJiAoaSA9IGkuc2VsZWN0aW9uKCkpLCBudWxsID09IGUgPyBvLnJlbW92ZSgpIDogZShvKSwgciAmJiBpID8gci5tZXJnZShpKS5vcmRlcigpIDogaSB9LCBtZXJnZTogZnVuY3Rpb24gKHQpIHsgZm9yICh2YXIgbiA9IHQuc2VsZWN0aW9uID8gdC5zZWxlY3Rpb24oKSA6IHQsIGUgPSB0aGlzLl9ncm91cHMsIHIgPSBuLl9ncm91cHMsIGkgPSBlLmxlbmd0aCwgbyA9IHIubGVuZ3RoLCBhID0gTWF0aC5taW4oaSwgbyksIHUgPSBuZXcgQXJyYXkoaSksIGMgPSAwOyBjIDwgYTsgKytjKWZvciAodmFyIGYsIHMgPSBlW2NdLCBsID0gcltjXSwgaCA9IHMubGVuZ3RoLCBkID0gdVtjXSA9IG5ldyBBcnJheShoKSwgcCA9IDA7IHAgPCBoOyArK3ApKGYgPSBzW3BdIHx8IGxbcF0pICYmIChkW3BdID0gZik7IGZvciAoOyBjIDwgaTsgKytjKXVbY10gPSBlW2NdOyByZXR1cm4gbmV3IEduKHUsIHRoaXMuX3BhcmVudHMpIH0sIHNlbGVjdGlvbjogZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpcyB9LCBvcmRlcjogZnVuY3Rpb24gKCkgeyBmb3IgKHZhciB0ID0gdGhpcy5fZ3JvdXBzLCBuID0gLTEsIGUgPSB0Lmxlbmd0aDsgKytuIDwgZTspZm9yICh2YXIgciwgaSA9IHRbbl0sIG8gPSBpLmxlbmd0aCAtIDEsIGEgPSBpW29dOyAtLW8gPj0gMDspKHIgPSBpW29dKSAmJiAoYSAmJiA0IF4gci5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihhKSAmJiBhLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHIsIGEpLCBhID0gcik7IHJldHVybiB0aGlzIH0sIHNvcnQ6IGZ1bmN0aW9uICh0KSB7IGZ1bmN0aW9uIG4obiwgZSkgeyByZXR1cm4gbiAmJiBlID8gdChuLl9fZGF0YV9fLCBlLl9fZGF0YV9fKSA6ICFuIC0gIWUgfSB0IHx8ICh0ID0gb24pOyBmb3IgKHZhciBlID0gdGhpcy5fZ3JvdXBzLCByID0gZS5sZW5ndGgsIGkgPSBuZXcgQXJyYXkociksIG8gPSAwOyBvIDwgcjsgKytvKSB7IGZvciAodmFyIGEsIHUgPSBlW29dLCBjID0gdS5sZW5ndGgsIGYgPSBpW29dID0gbmV3IEFycmF5KGMpLCBzID0gMDsgcyA8IGM7ICsrcykoYSA9IHVbc10pICYmIChmW3NdID0gYSk7IGYuc29ydChuKSB9IHJldHVybiBuZXcgR24oaSwgdGhpcy5fcGFyZW50cykub3JkZXIoKSB9LCBjYWxsOiBmdW5jdGlvbiAoKSB7IHZhciB0ID0gYXJndW1lbnRzWzBdOyByZXR1cm4gYXJndW1lbnRzWzBdID0gdGhpcywgdC5hcHBseShudWxsLCBhcmd1bWVudHMpLCB0aGlzIH0sIG5vZGVzOiBmdW5jdGlvbiAoKSB7IHJldHVybiBBcnJheS5mcm9tKHRoaXMpIH0sIG5vZGU6IGZ1bmN0aW9uICgpIHsgZm9yICh2YXIgdCA9IHRoaXMuX2dyb3VwcywgbiA9IDAsIGUgPSB0Lmxlbmd0aDsgbiA8IGU7ICsrbilmb3IgKHZhciByID0gdFtuXSwgaSA9IDAsIG8gPSByLmxlbmd0aDsgaSA8IG87ICsraSkgeyB2YXIgYSA9IHJbaV07IGlmIChhKSByZXR1cm4gYSB9IHJldHVybiBudWxsIH0sIHNpemU6IGZ1bmN0aW9uICgpIHsgbGV0IHQgPSAwOyBmb3IgKGNvbnN0IG4gb2YgdGhpcykgKyt0OyByZXR1cm4gdCB9LCBlbXB0eTogZnVuY3Rpb24gKCkgeyByZXR1cm4gIXRoaXMubm9kZSgpIH0sIGVhY2g6IGZ1bmN0aW9uICh0KSB7IGZvciAodmFyIG4gPSB0aGlzLl9ncm91cHMsIGUgPSAwLCByID0gbi5sZW5ndGg7IGUgPCByOyArK2UpZm9yICh2YXIgaSwgbyA9IG5bZV0sIGEgPSAwLCB1ID0gby5sZW5ndGg7IGEgPCB1OyArK2EpKGkgPSBvW2FdKSAmJiB0LmNhbGwoaSwgaS5fX2RhdGFfXywgYSwgbyk7IHJldHVybiB0aGlzIH0sIGF0dHI6IGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlID0gcXQodCk7IGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikgeyB2YXIgciA9IHRoaXMubm9kZSgpOyByZXR1cm4gZS5sb2NhbCA/IHIuZ2V0QXR0cmlidXRlTlMoZS5zcGFjZSwgZS5sb2NhbCkgOiByLmdldEF0dHJpYnV0ZShlKSB9IHJldHVybiB0aGlzLmVhY2goKG51bGwgPT0gbiA/IGUubG9jYWwgPyB1biA6IGFuIDogImZ1bmN0aW9uIiA9PSB0eXBlb2YgbiA/IGUubG9jYWwgPyBsbiA6IHNuIDogZS5sb2NhbCA/IGZuIDogY24pKGUsIG4pKSB9LCBzdHlsZTogZnVuY3Rpb24gKHQsIG4sIGUpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gdGhpcy5lYWNoKChudWxsID09IG4gPyBkbiA6ICJmdW5jdGlvbiIgPT0gdHlwZW9mIG4gPyBnbiA6IHBuKSh0LCBuLCBudWxsID09IGUgPyAiIiA6IGUpKSA6IHluKHRoaXMubm9kZSgpLCB0KSB9LCBwcm9wZXJ0eTogZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gdGhpcy5lYWNoKChudWxsID09IG4gPyB2biA6ICJmdW5jdGlvbiIgPT0gdHlwZW9mIG4gPyBibiA6IF9uKSh0LCBuKSkgOiB0aGlzLm5vZGUoKVt0XSB9LCBjbGFzc2VkOiBmdW5jdGlvbiAodCwgbikgeyB2YXIgZSA9IG1uKHQgKyAiIik7IGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikgeyBmb3IgKHZhciByID0geG4odGhpcy5ub2RlKCkpLCBpID0gLTEsIG8gPSBlLmxlbmd0aDsgKytpIDwgbzspaWYgKCFyLmNvbnRhaW5zKGVbaV0pKSByZXR1cm4gITE7IHJldHVybiAhMCB9IHJldHVybiB0aGlzLmVhY2goKCJmdW5jdGlvbiIgPT0gdHlwZW9mIG4gPyBFbiA6IG4gPyBUbiA6IFNuKShlLCBuKSkgfSwgdGV4dDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyB0aGlzLmVhY2gobnVsbCA9PSB0ID8ga24gOiAoImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IENuIDogTm4pKHQpKSA6IHRoaXMubm9kZSgpLnRleHRDb250ZW50IH0sIGh0bWw6IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gdGhpcy5lYWNoKG51bGwgPT0gdCA/IFBuIDogKCJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyBEbiA6IHpuKSh0KSkgOiB0aGlzLm5vZGUoKS5pbm5lckhUTUwgfSwgcmFpc2U6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMuZWFjaChSbikgfSwgbG93ZXI6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMuZWFjaChGbikgfSwgYXBwZW5kOiBmdW5jdGlvbiAodCkgeyB2YXIgbiA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogVXQodCk7IHJldHVybiB0aGlzLnNlbGVjdCgoZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpcy5hcHBlbmRDaGlsZChuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIH0pKSB9LCBpbnNlcnQ6IGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBVdCh0KSwgciA9IG51bGwgPT0gbiA/IHFuIDogImZ1bmN0aW9uIiA9PSB0eXBlb2YgbiA/IG4gOiBZdChuKTsgcmV0dXJuIHRoaXMuc2VsZWN0KChmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzLmluc2VydEJlZm9yZShlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksIHIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCBudWxsKSB9KSkgfSwgcmVtb3ZlOiBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzLmVhY2goSW4pIH0sIGNsb25lOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gdGhpcy5zZWxlY3QodCA/IFVuIDogT24pIH0sIGRhdHVtOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IHRoaXMucHJvcGVydHkoIl9fZGF0YV9fIiwgdCkgOiB0aGlzLm5vZGUoKS5fX2RhdGFfXyB9LCBvbjogZnVuY3Rpb24gKHQsIG4sIGUpIHsgdmFyIHIsIGksIG8gPSBCbih0ICsgIiIpLCBhID0gby5sZW5ndGg7IGlmICghKGFyZ3VtZW50cy5sZW5ndGggPCAyKSkgeyBmb3IgKHUgPSBuID8gTG4gOiBZbiwgciA9IDA7IHIgPCBhOyArK3IpdGhpcy5lYWNoKHUob1tyXSwgbiwgZSkpOyByZXR1cm4gdGhpcyB9IHZhciB1ID0gdGhpcy5ub2RlKCkuX19vbjsgaWYgKHUpIGZvciAodmFyIGMsIGYgPSAwLCBzID0gdS5sZW5ndGg7IGYgPCBzOyArK2YpZm9yIChyID0gMCwgYyA9IHVbZl07IHIgPCBhOyArK3IpaWYgKChpID0gb1tyXSkudHlwZSA9PT0gYy50eXBlICYmIGkubmFtZSA9PT0gYy5uYW1lKSByZXR1cm4gYy52YWx1ZSB9LCBkaXNwYXRjaDogZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIHRoaXMuZWFjaCgoImZ1bmN0aW9uIiA9PSB0eXBlb2YgbiA/IEhuIDogJG4pKHQsIG4pKSB9LCBbU3ltYm9sLml0ZXJhdG9yXTogZnVuY3Rpb24qICgpIHsgZm9yICh2YXIgdCA9IHRoaXMuX2dyb3VwcywgbiA9IDAsIGUgPSB0Lmxlbmd0aDsgbiA8IGU7ICsrbilmb3IgKHZhciByLCBpID0gdFtuXSwgbyA9IDAsIGEgPSBpLmxlbmd0aDsgbyA8IGE7ICsrbykociA9IGlbb10pICYmICh5aWVsZCByKSB9IH07IHZhciBabiA9IDA7IGZ1bmN0aW9uIEtuKCkgeyByZXR1cm4gbmV3IFFuIH0gZnVuY3Rpb24gUW4oKSB7IHRoaXMuXyA9ICJAIiArICgrK1puKS50b1N0cmluZygzNikgfSBmdW5jdGlvbiBKbih0KSB7IGxldCBuOyBmb3IgKDsgbiA9IHQuc291cmNlRXZlbnQ7KXQgPSBuOyByZXR1cm4gdCB9IGZ1bmN0aW9uIHRlKHQsIG4pIHsgaWYgKHQgPSBKbih0KSwgdm9pZCAwID09PSBuICYmIChuID0gdC5jdXJyZW50VGFyZ2V0KSwgbikgeyB2YXIgZSA9IG4ub3duZXJTVkdFbGVtZW50IHx8IG47IGlmIChlLmNyZWF0ZVNWR1BvaW50KSB7IHZhciByID0gZS5jcmVhdGVTVkdQb2ludCgpOyByZXR1cm4gci54ID0gdC5jbGllbnRYLCByLnkgPSB0LmNsaWVudFksIFsociA9IHIubWF0cml4VHJhbnNmb3JtKG4uZ2V0U2NyZWVuQ1RNKCkuaW52ZXJzZSgpKSkueCwgci55XSB9IGlmIChuLmdldEJvdW5kaW5nQ2xpZW50UmVjdCkgeyB2YXIgaSA9IG4uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7IHJldHVybiBbdC5jbGllbnRYIC0gaS5sZWZ0IC0gbi5jbGllbnRMZWZ0LCB0LmNsaWVudFkgLSBpLnRvcCAtIG4uY2xpZW50VG9wXSB9IH0gcmV0dXJuIFt0LnBhZ2VYLCB0LnBhZ2VZXSB9IFFuLnByb3RvdHlwZSA9IEtuLnByb3RvdHlwZSA9IHsgY29uc3RydWN0b3I6IFFuLCBnZXQ6IGZ1bmN0aW9uICh0KSB7IGZvciAodmFyIG4gPSB0aGlzLl87ICEobiBpbiB0KTspaWYgKCEodCA9IHQucGFyZW50Tm9kZSkpIHJldHVybjsgcmV0dXJuIHRbbl0gfSwgc2V0OiBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gdFt0aGlzLl9dID0gbiB9LCByZW1vdmU6IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0aGlzLl8gaW4gdCAmJiBkZWxldGUgdFt0aGlzLl9dIH0sIHRvU3RyaW5nOiBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzLl8gfSB9OyBjb25zdCBuZSA9IHsgcGFzc2l2ZTogITEgfSwgZWUgPSB7IGNhcHR1cmU6ICEwLCBwYXNzaXZlOiAhMSB9OyBmdW5jdGlvbiByZSh0KSB7IHQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCkgfSBmdW5jdGlvbiBpZSh0KSB7IHQucHJldmVudERlZmF1bHQoKSwgdC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKSB9IGZ1bmN0aW9uIG9lKHQpIHsgdmFyIG4gPSB0LmRvY3VtZW50LmRvY3VtZW50RWxlbWVudCwgZSA9IFduKHQpLm9uKCJkcmFnc3RhcnQuZHJhZyIsIGllLCBlZSk7ICJvbnNlbGVjdHN0YXJ0IiBpbiBuID8gZS5vbigic2VsZWN0c3RhcnQuZHJhZyIsIGllLCBlZSkgOiAobi5fX25vc2VsZWN0ID0gbi5zdHlsZS5Nb3pVc2VyU2VsZWN0LCBuLnN0eWxlLk1velVzZXJTZWxlY3QgPSAibm9uZSIpIH0gZnVuY3Rpb24gYWUodCwgbikgeyB2YXIgZSA9IHQuZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LCByID0gV24odCkub24oImRyYWdzdGFydC5kcmFnIiwgbnVsbCk7IG4gJiYgKHIub24oImNsaWNrLmRyYWciLCBpZSwgZWUpLCBzZXRUaW1lb3V0KChmdW5jdGlvbiAoKSB7IHIub24oImNsaWNrLmRyYWciLCBudWxsKSB9KSwgMCkpLCAib25zZWxlY3RzdGFydCIgaW4gZSA/IHIub24oInNlbGVjdHN0YXJ0LmRyYWciLCBudWxsKSA6IChlLnN0eWxlLk1velVzZXJTZWxlY3QgPSBlLl9fbm9zZWxlY3QsIGRlbGV0ZSBlLl9fbm9zZWxlY3QpIH0gdmFyIHVlID0gdCA9PiAoKSA9PiB0OyBmdW5jdGlvbiBjZSh0LCB7IHNvdXJjZUV2ZW50OiBuLCBzdWJqZWN0OiBlLCB0YXJnZXQ6IHIsIGlkZW50aWZpZXI6IGksIGFjdGl2ZTogbywgeDogYSwgeTogdSwgZHg6IGMsIGR5OiBmLCBkaXNwYXRjaDogcyB9KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRoaXMsIHsgdHlwZTogeyB2YWx1ZTogdCwgZW51bWVyYWJsZTogITAsIGNvbmZpZ3VyYWJsZTogITAgfSwgc291cmNlRXZlbnQ6IHsgdmFsdWU6IG4sIGVudW1lcmFibGU6ICEwLCBjb25maWd1cmFibGU6ICEwIH0sIHN1YmplY3Q6IHsgdmFsdWU6IGUsIGVudW1lcmFibGU6ICEwLCBjb25maWd1cmFibGU6ICEwIH0sIHRhcmdldDogeyB2YWx1ZTogciwgZW51bWVyYWJsZTogITAsIGNvbmZpZ3VyYWJsZTogITAgfSwgaWRlbnRpZmllcjogeyB2YWx1ZTogaSwgZW51bWVyYWJsZTogITAsIGNvbmZpZ3VyYWJsZTogITAgfSwgYWN0aXZlOiB7IHZhbHVlOiBvLCBlbnVtZXJhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCB9LCB4OiB7IHZhbHVlOiBhLCBlbnVtZXJhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCB9LCB5OiB7IHZhbHVlOiB1LCBlbnVtZXJhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCB9LCBkeDogeyB2YWx1ZTogYywgZW51bWVyYWJsZTogITAsIGNvbmZpZ3VyYWJsZTogITAgfSwgZHk6IHsgdmFsdWU6IGYsIGVudW1lcmFibGU6ICEwLCBjb25maWd1cmFibGU6ICEwIH0sIF86IHsgdmFsdWU6IHMgfSB9KSB9IGZ1bmN0aW9uIGZlKHQpIHsgcmV0dXJuICF0LmN0cmxLZXkgJiYgIXQuYnV0dG9uIH0gZnVuY3Rpb24gc2UoKSB7IHJldHVybiB0aGlzLnBhcmVudE5vZGUgfSBmdW5jdGlvbiBsZSh0LCBuKSB7IHJldHVybiBudWxsID09IG4gPyB7IHg6IHQueCwgeTogdC55IH0gOiBuIH0gZnVuY3Rpb24gaGUoKSB7IHJldHVybiBuYXZpZ2F0b3IubWF4VG91Y2hQb2ludHMgfHwgIm9udG91Y2hzdGFydCIgaW4gdGhpcyB9IGZ1bmN0aW9uIGRlKHQsIG4sIGUpIHsgdC5wcm90b3R5cGUgPSBuLnByb3RvdHlwZSA9IGUsIGUuY29uc3RydWN0b3IgPSB0IH0gZnVuY3Rpb24gcGUodCwgbikgeyB2YXIgZSA9IE9iamVjdC5jcmVhdGUodC5wcm90b3R5cGUpOyBmb3IgKHZhciByIGluIG4pIGVbcl0gPSBuW3JdOyByZXR1cm4gZSB9IGZ1bmN0aW9uIGdlKCkgeyB9IGNlLnByb3RvdHlwZS5vbiA9IGZ1bmN0aW9uICgpIHsgdmFyIHQgPSB0aGlzLl8ub24uYXBwbHkodGhpcy5fLCBhcmd1bWVudHMpOyByZXR1cm4gdCA9PT0gdGhpcy5fID8gdGhpcyA6IHQgfTsgdmFyIHllID0gLjcsIHZlID0gMSAvIHllLCBfZSA9ICJcXHMqKFsrLV0/XFxkKylcXHMqIiwgYmUgPSAiXFxzKihbKy1dPyg/OlxcZCpcXC4pP1xcZCsoPzpbZUVdWystXT9cXGQrKT8pXFxzKiIsIG1lID0gIlxccyooWystXT8oPzpcXGQqXFwuKT9cXGQrKD86W2VFXVsrLV0/XFxkKyk/KSVcXHMqIiwgeGUgPSAvXiMoWzAtOWEtZl17Myw4fSkkLywgd2UgPSBuZXcgUmVnRXhwKGBecmdiXFwoJHtfZX0sJHtfZX0sJHtfZX1cXCkkYCksIE1lID0gbmV3IFJlZ0V4cChgXnJnYlxcKCR7bWV9LCR7bWV9LCR7bWV9XFwpJGApLCBBZSA9IG5ldyBSZWdFeHAoYF5yZ2JhXFwoJHtfZX0sJHtfZX0sJHtfZX0sJHtiZX1cXCkkYCksIFRlID0gbmV3IFJlZ0V4cChgXnJnYmFcXCgke21lfSwke21lfSwke21lfSwke2JlfVxcKSRgKSwgU2UgPSBuZXcgUmVnRXhwKGBeaHNsXFwoJHtiZX0sJHttZX0sJHttZX1cXCkkYCksIEVlID0gbmV3IFJlZ0V4cChgXmhzbGFcXCgke2JlfSwke21lfSwke21lfSwke2JlfVxcKSRgKSwga2UgPSB7IGFsaWNlYmx1ZTogMTU3OTIzODMsIGFudGlxdWV3aGl0ZTogMTY0NDQzNzUsIGFxdWE6IDY1NTM1LCBhcXVhbWFyaW5lOiA4Mzg4NTY0LCBhenVyZTogMTU3OTQxNzUsIGJlaWdlOiAxNjExOTI2MCwgYmlzcXVlOiAxNjc3MDI0NCwgYmxhY2s6IDAsIGJsYW5jaGVkYWxtb25kOiAxNjc3MjA0NSwgYmx1ZTogMjU1LCBibHVldmlvbGV0OiA5MDU1MjAyLCBicm93bjogMTA4MjQyMzQsIGJ1cmx5d29vZDogMTQ1OTYyMzEsIGNhZGV0Ymx1ZTogNjI2NjUyOCwgY2hhcnRyZXVzZTogODM4ODM1MiwgY2hvY29sYXRlOiAxMzc4OTQ3MCwgY29yYWw6IDE2NzQ0MjcyLCBjb3JuZmxvd2VyYmx1ZTogNjU5MTk4MSwgY29ybnNpbGs6IDE2Nzc1Mzg4LCBjcmltc29uOiAxNDQyMzEwMCwgY3lhbjogNjU1MzUsIGRhcmtibHVlOiAxMzksIGRhcmtjeWFuOiAzNTcyMywgZGFya2dvbGRlbnJvZDogMTIwOTI5MzksIGRhcmtncmF5OiAxMTExOTAxNywgZGFya2dyZWVuOiAyNTYwMCwgZGFya2dyZXk6IDExMTE5MDE3LCBkYXJra2hha2k6IDEyNDMzMjU5LCBkYXJrbWFnZW50YTogOTEwOTY0MywgZGFya29saXZlZ3JlZW46IDU1OTc5OTksIGRhcmtvcmFuZ2U6IDE2NzQ3NTIwLCBkYXJrb3JjaGlkOiAxMDA0MDAxMiwgZGFya3JlZDogOTEwOTUwNCwgZGFya3NhbG1vbjogMTUzMDg0MTAsIGRhcmtzZWFncmVlbjogOTQxOTkxOSwgZGFya3NsYXRlYmx1ZTogNDczNDM0NywgZGFya3NsYXRlZ3JheTogMzEwMDQ5NSwgZGFya3NsYXRlZ3JleTogMzEwMDQ5NSwgZGFya3R1cnF1b2lzZTogNTI5NDUsIGRhcmt2aW9sZXQ6IDk2OTk1MzksIGRlZXBwaW5rOiAxNjcxNjk0NywgZGVlcHNreWJsdWU6IDQ5MTUxLCBkaW1ncmF5OiA2OTA4MjY1LCBkaW1ncmV5OiA2OTA4MjY1LCBkb2RnZXJibHVlOiAyMDAzMTk5LCBmaXJlYnJpY2s6IDExNjc0MTQ2LCBmbG9yYWx3aGl0ZTogMTY3NzU5MjAsIGZvcmVzdGdyZWVuOiAyMjYzODQyLCBmdWNoc2lhOiAxNjcxMTkzNSwgZ2FpbnNib3JvOiAxNDQ3NDQ2MCwgZ2hvc3R3aGl0ZTogMTYzMTY2NzEsIGdvbGQ6IDE2NzY2NzIwLCBnb2xkZW5yb2Q6IDE0MzI5MTIwLCBncmF5OiA4NDIxNTA0LCBncmVlbjogMzI3NjgsIGdyZWVueWVsbG93OiAxMTQwMzA1NSwgZ3JleTogODQyMTUwNCwgaG9uZXlkZXc6IDE1Nzk0MTYwLCBob3RwaW5rOiAxNjczODc0MCwgaW5kaWFucmVkOiAxMzQ1ODUyNCwgaW5kaWdvOiA0OTE1MzMwLCBpdm9yeTogMTY3NzcyMDAsIGtoYWtpOiAxNTc4NzY2MCwgbGF2ZW5kZXI6IDE1MTMyNDEwLCBsYXZlbmRlcmJsdXNoOiAxNjc3MzM2NSwgbGF3bmdyZWVuOiA4MTkwOTc2LCBsZW1vbmNoaWZmb246IDE2Nzc1ODg1LCBsaWdodGJsdWU6IDExMzkzMjU0LCBsaWdodGNvcmFsOiAxNTc2MTUzNiwgbGlnaHRjeWFuOiAxNDc0NTU5OSwgbGlnaHRnb2xkZW5yb2R5ZWxsb3c6IDE2NDQ4MjEwLCBsaWdodGdyYXk6IDEzODgyMzIzLCBsaWdodGdyZWVuOiA5NDk4MjU2LCBsaWdodGdyZXk6IDEzODgyMzIzLCBsaWdodHBpbms6IDE2NzU4NDY1LCBsaWdodHNhbG1vbjogMTY3NTI3NjIsIGxpZ2h0c2VhZ3JlZW46IDIxNDI4OTAsIGxpZ2h0c2t5Ymx1ZTogODkwMDM0NiwgbGlnaHRzbGF0ZWdyYXk6IDc4MzM3NTMsIGxpZ2h0c2xhdGVncmV5OiA3ODMzNzUzLCBsaWdodHN0ZWVsYmx1ZTogMTE1ODQ3MzQsIGxpZ2h0eWVsbG93OiAxNjc3NzE4NCwgbGltZTogNjUyODAsIGxpbWVncmVlbjogMzMyOTMzMCwgbGluZW46IDE2NDQ1NjcwLCBtYWdlbnRhOiAxNjcxMTkzNSwgbWFyb29uOiA4Mzg4NjA4LCBtZWRpdW1hcXVhbWFyaW5lOiA2NzM3MzIyLCBtZWRpdW1ibHVlOiAyMDUsIG1lZGl1bW9yY2hpZDogMTIyMTE2NjcsIG1lZGl1bXB1cnBsZTogOTY2MjY4MywgbWVkaXVtc2VhZ3JlZW46IDM5NzgwOTcsIG1lZGl1bXNsYXRlYmx1ZTogODA4Nzc5MCwgbWVkaXVtc3ByaW5nZ3JlZW46IDY0MTU0LCBtZWRpdW10dXJxdW9pc2U6IDQ3NzIzMDAsIG1lZGl1bXZpb2xldHJlZDogMTMwNDcxNzMsIG1pZG5pZ2h0Ymx1ZTogMTY0NDkxMiwgbWludGNyZWFtOiAxNjEyMTg1MCwgbWlzdHlyb3NlOiAxNjc3MDI3MywgbW9jY2FzaW46IDE2NzcwMjI5LCBuYXZham93aGl0ZTogMTY3Njg2ODUsIG5hdnk6IDEyOCwgb2xkbGFjZTogMTY2NDM1NTgsIG9saXZlOiA4NDIxMzc2LCBvbGl2ZWRyYWI6IDcwNDg3MzksIG9yYW5nZTogMTY3NTM5MjAsIG9yYW5nZXJlZDogMTY3MjkzNDQsIG9yY2hpZDogMTQzMTU3MzQsIHBhbGVnb2xkZW5yb2Q6IDE1NjU3MTMwLCBwYWxlZ3JlZW46IDEwMDI1ODgwLCBwYWxldHVycXVvaXNlOiAxMTUyOTk2NiwgcGFsZXZpb2xldHJlZDogMTQzODEyMDMsIHBhcGF5YXdoaXA6IDE2NzczMDc3LCBwZWFjaHB1ZmY6IDE2NzY3NjczLCBwZXJ1OiAxMzQ2ODk5MSwgcGluazogMTY3NjEwMzUsIHBsdW06IDE0NTI0NjM3LCBwb3dkZXJibHVlOiAxMTU5MTkxMCwgcHVycGxlOiA4Mzg4NzM2LCByZWJlY2NhcHVycGxlOiA2Njk3ODgxLCByZWQ6IDE2NzExNjgwLCByb3N5YnJvd246IDEyMzU3NTE5LCByb3lhbGJsdWU6IDQyODY5NDUsIHNhZGRsZWJyb3duOiA5MTI3MTg3LCBzYWxtb246IDE2NDE2ODgyLCBzYW5keWJyb3duOiAxNjAzMjg2NCwgc2VhZ3JlZW46IDMwNTAzMjcsIHNlYXNoZWxsOiAxNjc3NDYzOCwgc2llbm5hOiAxMDUwNjc5Nywgc2lsdmVyOiAxMjYzMjI1Niwgc2t5Ymx1ZTogODkwMDMzMSwgc2xhdGVibHVlOiA2OTcwMDYxLCBzbGF0ZWdyYXk6IDczNzI5NDQsIHNsYXRlZ3JleTogNzM3Mjk0NCwgc25vdzogMTY3NzU5MzAsIHNwcmluZ2dyZWVuOiA2NTQwNywgc3RlZWxibHVlOiA0NjIwOTgwLCB0YW46IDEzODA4NzgwLCB0ZWFsOiAzMjg5NiwgdGhpc3RsZTogMTQyMDQ4ODgsIHRvbWF0bzogMTY3MzcwOTUsIHR1cnF1b2lzZTogNDI1MTg1NiwgdmlvbGV0OiAxNTYzMTA4Niwgd2hlYXQ6IDE2MTEzMzMxLCB3aGl0ZTogMTY3NzcyMTUsIHdoaXRlc21va2U6IDE2MTE5Mjg1LCB5ZWxsb3c6IDE2Nzc2OTYwLCB5ZWxsb3dncmVlbjogMTAxNDUwNzQgfTsgZnVuY3Rpb24gTmUoKSB7IHJldHVybiB0aGlzLnJnYigpLmZvcm1hdEhleCgpIH0gZnVuY3Rpb24gQ2UoKSB7IHJldHVybiB0aGlzLnJnYigpLmZvcm1hdFJnYigpIH0gZnVuY3Rpb24gUGUodCkgeyB2YXIgbiwgZTsgcmV0dXJuIHQgPSAodCArICIiKS50cmltKCkudG9Mb3dlckNhc2UoKSwgKG4gPSB4ZS5leGVjKHQpKSA/IChlID0gblsxXS5sZW5ndGgsIG4gPSBwYXJzZUludChuWzFdLCAxNiksIDYgPT09IGUgPyB6ZShuKSA6IDMgPT09IGUgPyBuZXcgcWUobiA+PiA4ICYgMTUgfCBuID4+IDQgJiAyNDAsIG4gPj4gNCAmIDE1IHwgMjQwICYgbiwgKDE1ICYgbikgPDwgNCB8IDE1ICYgbiwgMSkgOiA4ID09PSBlID8gRGUobiA+PiAyNCAmIDI1NSwgbiA+PiAxNiAmIDI1NSwgbiA+PiA4ICYgMjU1LCAoMjU1ICYgbikgLyAyNTUpIDogNCA9PT0gZSA/IERlKG4gPj4gMTIgJiAxNSB8IG4gPj4gOCAmIDI0MCwgbiA+PiA4ICYgMTUgfCBuID4+IDQgJiAyNDAsIG4gPj4gNCAmIDE1IHwgMjQwICYgbiwgKCgxNSAmIG4pIDw8IDQgfCAxNSAmIG4pIC8gMjU1KSA6IG51bGwpIDogKG4gPSB3ZS5leGVjKHQpKSA/IG5ldyBxZShuWzFdLCBuWzJdLCBuWzNdLCAxKSA6IChuID0gTWUuZXhlYyh0KSkgPyBuZXcgcWUoMjU1ICogblsxXSAvIDEwMCwgMjU1ICogblsyXSAvIDEwMCwgMjU1ICogblszXSAvIDEwMCwgMSkgOiAobiA9IEFlLmV4ZWModCkpID8gRGUoblsxXSwgblsyXSwgblszXSwgbls0XSkgOiAobiA9IFRlLmV4ZWModCkpID8gRGUoMjU1ICogblsxXSAvIDEwMCwgMjU1ICogblsyXSAvIDEwMCwgMjU1ICogblszXSAvIDEwMCwgbls0XSkgOiAobiA9IFNlLmV4ZWModCkpID8gTGUoblsxXSwgblsyXSAvIDEwMCwgblszXSAvIDEwMCwgMSkgOiAobiA9IEVlLmV4ZWModCkpID8gTGUoblsxXSwgblsyXSAvIDEwMCwgblszXSAvIDEwMCwgbls0XSkgOiBrZS5oYXNPd25Qcm9wZXJ0eSh0KSA/IHplKGtlW3RdKSA6ICJ0cmFuc3BhcmVudCIgPT09IHQgPyBuZXcgcWUoTmFOLCBOYU4sIE5hTiwgMCkgOiBudWxsIH0gZnVuY3Rpb24gemUodCkgeyByZXR1cm4gbmV3IHFlKHQgPj4gMTYgJiAyNTUsIHQgPj4gOCAmIDI1NSwgMjU1ICYgdCwgMSkgfSBmdW5jdGlvbiBEZSh0LCBuLCBlLCByKSB7IHJldHVybiByIDw9IDAgJiYgKHQgPSBuID0gZSA9IE5hTiksIG5ldyBxZSh0LCBuLCBlLCByKSB9IGZ1bmN0aW9uIFJlKHQpIHsgcmV0dXJuIHQgaW5zdGFuY2VvZiBnZSB8fCAodCA9IFBlKHQpKSwgdCA/IG5ldyBxZSgodCA9IHQucmdiKCkpLnIsIHQuZywgdC5iLCB0Lm9wYWNpdHkpIDogbmV3IHFlIH0gZnVuY3Rpb24gRmUodCwgbiwgZSwgcikgeyByZXR1cm4gMSA9PT0gYXJndW1lbnRzLmxlbmd0aCA/IFJlKHQpIDogbmV3IHFlKHQsIG4sIGUsIG51bGwgPT0gciA/IDEgOiByKSB9IGZ1bmN0aW9uIHFlKHQsIG4sIGUsIHIpIHsgdGhpcy5yID0gK3QsIHRoaXMuZyA9ICtuLCB0aGlzLmIgPSArZSwgdGhpcy5vcGFjaXR5ID0gK3IgfSBmdW5jdGlvbiBJZSgpIHsgcmV0dXJuIGAjJHtZZSh0aGlzLnIpfSR7WWUodGhpcy5nKX0ke1llKHRoaXMuYil9YCB9IGZ1bmN0aW9uIE9lKCkgeyBjb25zdCB0ID0gVWUodGhpcy5vcGFjaXR5KTsgcmV0dXJuIGAkezEgPT09IHQgPyAicmdiKCIgOiAicmdiYSgifSR7QmUodGhpcy5yKX0sICR7QmUodGhpcy5nKX0sICR7QmUodGhpcy5iKX0kezEgPT09IHQgPyAiKSIgOiBgLCAke3R9KWB9YCB9IGZ1bmN0aW9uIFVlKHQpIHsgcmV0dXJuIGlzTmFOKHQpID8gMSA6IE1hdGgubWF4KDAsIE1hdGgubWluKDEsIHQpKSB9IGZ1bmN0aW9uIEJlKHQpIHsgcmV0dXJuIE1hdGgubWF4KDAsIE1hdGgubWluKDI1NSwgTWF0aC5yb3VuZCh0KSB8fCAwKSkgfSBmdW5jdGlvbiBZZSh0KSB7IHJldHVybiAoKHQgPSBCZSh0KSkgPCAxNiA/ICIwIiA6ICIiKSArIHQudG9TdHJpbmcoMTYpIH0gZnVuY3Rpb24gTGUodCwgbiwgZSwgcikgeyByZXR1cm4gciA8PSAwID8gdCA9IG4gPSBlID0gTmFOIDogZSA8PSAwIHx8IGUgPj0gMSA/IHQgPSBuID0gTmFOIDogbiA8PSAwICYmICh0ID0gTmFOKSwgbmV3IEhlKHQsIG4sIGUsIHIpIH0gZnVuY3Rpb24gamUodCkgeyBpZiAodCBpbnN0YW5jZW9mIEhlKSByZXR1cm4gbmV3IEhlKHQuaCwgdC5zLCB0LmwsIHQub3BhY2l0eSk7IGlmICh0IGluc3RhbmNlb2YgZ2UgfHwgKHQgPSBQZSh0KSksICF0KSByZXR1cm4gbmV3IEhlOyBpZiAodCBpbnN0YW5jZW9mIEhlKSByZXR1cm4gdDsgdmFyIG4gPSAodCA9IHQucmdiKCkpLnIgLyAyNTUsIGUgPSB0LmcgLyAyNTUsIHIgPSB0LmIgLyAyNTUsIGkgPSBNYXRoLm1pbihuLCBlLCByKSwgbyA9IE1hdGgubWF4KG4sIGUsIHIpLCBhID0gTmFOLCB1ID0gbyAtIGksIGMgPSAobyArIGkpIC8gMjsgcmV0dXJuIHUgPyAoYSA9IG4gPT09IG8gPyAoZSAtIHIpIC8gdSArIDYgKiAoZSA8IHIpIDogZSA9PT0gbyA/IChyIC0gbikgLyB1ICsgMiA6IChuIC0gZSkgLyB1ICsgNCwgdSAvPSBjIDwgLjUgPyBvICsgaSA6IDIgLSBvIC0gaSwgYSAqPSA2MCkgOiB1ID0gYyA+IDAgJiYgYyA8IDEgPyAwIDogYSwgbmV3IEhlKGEsIHUsIGMsIHQub3BhY2l0eSkgfSBmdW5jdGlvbiAkZSh0LCBuLCBlLCByKSB7IHJldHVybiAxID09PSBhcmd1bWVudHMubGVuZ3RoID8gamUodCkgOiBuZXcgSGUodCwgbiwgZSwgbnVsbCA9PSByID8gMSA6IHIpIH0gZnVuY3Rpb24gSGUodCwgbiwgZSwgcikgeyB0aGlzLmggPSArdCwgdGhpcy5zID0gK24sIHRoaXMubCA9ICtlLCB0aGlzLm9wYWNpdHkgPSArciB9IGZ1bmN0aW9uIFhlKHQpIHsgcmV0dXJuICh0ID0gKHQgfHwgMCkgJSAzNjApIDwgMCA/IHQgKyAzNjAgOiB0IH0gZnVuY3Rpb24gR2UodCkgeyByZXR1cm4gTWF0aC5tYXgoMCwgTWF0aC5taW4oMSwgdCB8fCAwKSkgfSBmdW5jdGlvbiBWZSh0LCBuLCBlKSB7IHJldHVybiAyNTUgKiAodCA8IDYwID8gbiArIChlIC0gbikgKiB0IC8gNjAgOiB0IDwgMTgwID8gZSA6IHQgPCAyNDAgPyBuICsgKGUgLSBuKSAqICgyNDAgLSB0KSAvIDYwIDogbikgfSBkZShnZSwgUGUsIHsgY29weSh0KSB7IHJldHVybiBPYmplY3QuYXNzaWduKG5ldyB0aGlzLmNvbnN0cnVjdG9yLCB0aGlzLCB0KSB9LCBkaXNwbGF5YWJsZSgpIHsgcmV0dXJuIHRoaXMucmdiKCkuZGlzcGxheWFibGUoKSB9LCBoZXg6IE5lLCBmb3JtYXRIZXg6IE5lLCBmb3JtYXRIZXg4OiBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzLnJnYigpLmZvcm1hdEhleDgoKSB9LCBmb3JtYXRIc2w6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGplKHRoaXMpLmZvcm1hdEhzbCgpIH0sIGZvcm1hdFJnYjogQ2UsIHRvU3RyaW5nOiBDZSB9KSwgZGUocWUsIEZlLCBwZShnZSwgeyBicmlnaHRlcih0KSB7IHJldHVybiB0ID0gbnVsbCA9PSB0ID8gdmUgOiBNYXRoLnBvdyh2ZSwgdCksIG5ldyBxZSh0aGlzLnIgKiB0LCB0aGlzLmcgKiB0LCB0aGlzLmIgKiB0LCB0aGlzLm9wYWNpdHkpIH0sIGRhcmtlcih0KSB7IHJldHVybiB0ID0gbnVsbCA9PSB0ID8geWUgOiBNYXRoLnBvdyh5ZSwgdCksIG5ldyBxZSh0aGlzLnIgKiB0LCB0aGlzLmcgKiB0LCB0aGlzLmIgKiB0LCB0aGlzLm9wYWNpdHkpIH0sIHJnYigpIHsgcmV0dXJuIHRoaXMgfSwgY2xhbXAoKSB7IHJldHVybiBuZXcgcWUoQmUodGhpcy5yKSwgQmUodGhpcy5nKSwgQmUodGhpcy5iKSwgVWUodGhpcy5vcGFjaXR5KSkgfSwgZGlzcGxheWFibGUoKSB7IHJldHVybiAtLjUgPD0gdGhpcy5yICYmIHRoaXMuciA8IDI1NS41ICYmIC0uNSA8PSB0aGlzLmcgJiYgdGhpcy5nIDwgMjU1LjUgJiYgLS41IDw9IHRoaXMuYiAmJiB0aGlzLmIgPCAyNTUuNSAmJiAwIDw9IHRoaXMub3BhY2l0eSAmJiB0aGlzLm9wYWNpdHkgPD0gMSB9LCBoZXg6IEllLCBmb3JtYXRIZXg6IEllLCBmb3JtYXRIZXg4OiBmdW5jdGlvbiAoKSB7IHJldHVybiBgIyR7WWUodGhpcy5yKX0ke1llKHRoaXMuZyl9JHtZZSh0aGlzLmIpfSR7WWUoMjU1ICogKGlzTmFOKHRoaXMub3BhY2l0eSkgPyAxIDogdGhpcy5vcGFjaXR5KSl9YCB9LCBmb3JtYXRSZ2I6IE9lLCB0b1N0cmluZzogT2UgfSkpLCBkZShIZSwgJGUsIHBlKGdlLCB7IGJyaWdodGVyKHQpIHsgcmV0dXJuIHQgPSBudWxsID09IHQgPyB2ZSA6IE1hdGgucG93KHZlLCB0KSwgbmV3IEhlKHRoaXMuaCwgdGhpcy5zLCB0aGlzLmwgKiB0LCB0aGlzLm9wYWNpdHkpIH0sIGRhcmtlcih0KSB7IHJldHVybiB0ID0gbnVsbCA9PSB0ID8geWUgOiBNYXRoLnBvdyh5ZSwgdCksIG5ldyBIZSh0aGlzLmgsIHRoaXMucywgdGhpcy5sICogdCwgdGhpcy5vcGFjaXR5KSB9LCByZ2IoKSB7IHZhciB0ID0gdGhpcy5oICUgMzYwICsgMzYwICogKHRoaXMuaCA8IDApLCBuID0gaXNOYU4odCkgfHwgaXNOYU4odGhpcy5zKSA/IDAgOiB0aGlzLnMsIGUgPSB0aGlzLmwsIHIgPSBlICsgKGUgPCAuNSA/IGUgOiAxIC0gZSkgKiBuLCBpID0gMiAqIGUgLSByOyByZXR1cm4gbmV3IHFlKFZlKHQgPj0gMjQwID8gdCAtIDI0MCA6IHQgKyAxMjAsIGksIHIpLCBWZSh0LCBpLCByKSwgVmUodCA8IDEyMCA/IHQgKyAyNDAgOiB0IC0gMTIwLCBpLCByKSwgdGhpcy5vcGFjaXR5KSB9LCBjbGFtcCgpIHsgcmV0dXJuIG5ldyBIZShYZSh0aGlzLmgpLCBHZSh0aGlzLnMpLCBHZSh0aGlzLmwpLCBVZSh0aGlzLm9wYWNpdHkpKSB9LCBkaXNwbGF5YWJsZSgpIHsgcmV0dXJuICgwIDw9IHRoaXMucyAmJiB0aGlzLnMgPD0gMSB8fCBpc05hTih0aGlzLnMpKSAmJiAwIDw9IHRoaXMubCAmJiB0aGlzLmwgPD0gMSAmJiAwIDw9IHRoaXMub3BhY2l0eSAmJiB0aGlzLm9wYWNpdHkgPD0gMSB9LCBmb3JtYXRIc2woKSB7IGNvbnN0IHQgPSBVZSh0aGlzLm9wYWNpdHkpOyByZXR1cm4gYCR7MSA9PT0gdCA/ICJoc2woIiA6ICJoc2xhKCJ9JHtYZSh0aGlzLmgpfSwgJHsxMDAgKiBHZSh0aGlzLnMpfSUsICR7MTAwICogR2UodGhpcy5sKX0lJHsxID09PSB0ID8gIikiIDogYCwgJHt0fSlgfWAgfSB9KSk7IGNvbnN0IFdlID0gTWF0aC5QSSAvIDE4MCwgWmUgPSAxODAgLyBNYXRoLlBJLCBLZSA9IC45NjQyMiwgUWUgPSAuODI1MjEsIEplID0gNCAvIDI5LCB0ciA9IDYgLyAyOSwgbnIgPSAzICogdHIgKiB0cjsgZnVuY3Rpb24gZXIodCkgeyBpZiAodCBpbnN0YW5jZW9mIGlyKSByZXR1cm4gbmV3IGlyKHQubCwgdC5hLCB0LmIsIHQub3BhY2l0eSk7IGlmICh0IGluc3RhbmNlb2YgbHIpIHJldHVybiBocih0KTsgdCBpbnN0YW5jZW9mIHFlIHx8ICh0ID0gUmUodCkpOyB2YXIgbiwgZSwgciA9IGNyKHQuciksIGkgPSBjcih0LmcpLCBvID0gY3IodC5iKSwgYSA9IG9yKCguMjIyNTA0NSAqIHIgKyAuNzE2ODc4NiAqIGkgKyAuMDYwNjE2OSAqIG8pIC8gMSk7IHJldHVybiByID09PSBpICYmIGkgPT09IG8gPyBuID0gZSA9IGEgOiAobiA9IG9yKCguNDM2MDc0NyAqIHIgKyAuMzg1MDY0OSAqIGkgKyAuMTQzMDgwNCAqIG8pIC8gS2UpLCBlID0gb3IoKC4wMTM5MzIyICogciArIC4wOTcxMDQ1ICogaSArIC43MTQxNzMzICogbykgLyBRZSkpLCBuZXcgaXIoMTE2ICogYSAtIDE2LCA1MDAgKiAobiAtIGEpLCAyMDAgKiAoYSAtIGUpLCB0Lm9wYWNpdHkpIH0gZnVuY3Rpb24gcnIodCwgbiwgZSwgcikgeyByZXR1cm4gMSA9PT0gYXJndW1lbnRzLmxlbmd0aCA/IGVyKHQpIDogbmV3IGlyKHQsIG4sIGUsIG51bGwgPT0gciA/IDEgOiByKSB9IGZ1bmN0aW9uIGlyKHQsIG4sIGUsIHIpIHsgdGhpcy5sID0gK3QsIHRoaXMuYSA9ICtuLCB0aGlzLmIgPSArZSwgdGhpcy5vcGFjaXR5ID0gK3IgfSBmdW5jdGlvbiBvcih0KSB7IHJldHVybiB0ID4gLjAwODg1NjQ1MTY3OTAzNTYzMSA/IE1hdGgucG93KHQsIDEgLyAzKSA6IHQgLyBuciArIEplIH0gZnVuY3Rpb24gYXIodCkgeyByZXR1cm4gdCA+IHRyID8gdCAqIHQgKiB0IDogbnIgKiAodCAtIEplKSB9IGZ1bmN0aW9uIHVyKHQpIHsgcmV0dXJuIDI1NSAqICh0IDw9IC4wMDMxMzA4ID8gMTIuOTIgKiB0IDogMS4wNTUgKiBNYXRoLnBvdyh0LCAxIC8gMi40KSAtIC4wNTUpIH0gZnVuY3Rpb24gY3IodCkgeyByZXR1cm4gKHQgLz0gMjU1KSA8PSAuMDQwNDUgPyB0IC8gMTIuOTIgOiBNYXRoLnBvdygodCArIC4wNTUpIC8gMS4wNTUsIDIuNCkgfSBmdW5jdGlvbiBmcih0KSB7IGlmICh0IGluc3RhbmNlb2YgbHIpIHJldHVybiBuZXcgbHIodC5oLCB0LmMsIHQubCwgdC5vcGFjaXR5KTsgaWYgKHQgaW5zdGFuY2VvZiBpciB8fCAodCA9IGVyKHQpKSwgMCA9PT0gdC5hICYmIDAgPT09IHQuYikgcmV0dXJuIG5ldyBscihOYU4sIDAgPCB0LmwgJiYgdC5sIDwgMTAwID8gMCA6IE5hTiwgdC5sLCB0Lm9wYWNpdHkpOyB2YXIgbiA9IE1hdGguYXRhbjIodC5iLCB0LmEpICogWmU7IHJldHVybiBuZXcgbHIobiA8IDAgPyBuICsgMzYwIDogbiwgTWF0aC5zcXJ0KHQuYSAqIHQuYSArIHQuYiAqIHQuYiksIHQubCwgdC5vcGFjaXR5KSB9IGZ1bmN0aW9uIHNyKHQsIG4sIGUsIHIpIHsgcmV0dXJuIDEgPT09IGFyZ3VtZW50cy5sZW5ndGggPyBmcih0KSA6IG5ldyBscih0LCBuLCBlLCBudWxsID09IHIgPyAxIDogcikgfSBmdW5jdGlvbiBscih0LCBuLCBlLCByKSB7IHRoaXMuaCA9ICt0LCB0aGlzLmMgPSArbiwgdGhpcy5sID0gK2UsIHRoaXMub3BhY2l0eSA9ICtyIH0gZnVuY3Rpb24gaHIodCkgeyBpZiAoaXNOYU4odC5oKSkgcmV0dXJuIG5ldyBpcih0LmwsIDAsIDAsIHQub3BhY2l0eSk7IHZhciBuID0gdC5oICogV2U7IHJldHVybiBuZXcgaXIodC5sLCBNYXRoLmNvcyhuKSAqIHQuYywgTWF0aC5zaW4obikgKiB0LmMsIHQub3BhY2l0eSkgfSBkZShpciwgcnIsIHBlKGdlLCB7IGJyaWdodGVyKHQpIHsgcmV0dXJuIG5ldyBpcih0aGlzLmwgKyAxOCAqIChudWxsID09IHQgPyAxIDogdCksIHRoaXMuYSwgdGhpcy5iLCB0aGlzLm9wYWNpdHkpIH0sIGRhcmtlcih0KSB7IHJldHVybiBuZXcgaXIodGhpcy5sIC0gMTggKiAobnVsbCA9PSB0ID8gMSA6IHQpLCB0aGlzLmEsIHRoaXMuYiwgdGhpcy5vcGFjaXR5KSB9LCByZ2IoKSB7IHZhciB0ID0gKHRoaXMubCArIDE2KSAvIDExNiwgbiA9IGlzTmFOKHRoaXMuYSkgPyB0IDogdCArIHRoaXMuYSAvIDUwMCwgZSA9IGlzTmFOKHRoaXMuYikgPyB0IDogdCAtIHRoaXMuYiAvIDIwMDsgcmV0dXJuIG5ldyBxZSh1cigzLjEzMzg1NjEgKiAobiA9IEtlICogYXIobikpIC0gMS42MTY4NjY3ICogKHQgPSAxICogYXIodCkpIC0gLjQ5MDYxNDYgKiAoZSA9IFFlICogYXIoZSkpKSwgdXIoLS45Nzg3Njg0ICogbiArIDEuOTE2MTQxNSAqIHQgKyAuMDMzNDU0ICogZSksIHVyKC4wNzE5NDUzICogbiAtIC4yMjg5OTE0ICogdCArIDEuNDA1MjQyNyAqIGUpLCB0aGlzLm9wYWNpdHkpIH0gfSkpLCBkZShsciwgc3IsIHBlKGdlLCB7IGJyaWdodGVyKHQpIHsgcmV0dXJuIG5ldyBscih0aGlzLmgsIHRoaXMuYywgdGhpcy5sICsgMTggKiAobnVsbCA9PSB0ID8gMSA6IHQpLCB0aGlzLm9wYWNpdHkpIH0sIGRhcmtlcih0KSB7IHJldHVybiBuZXcgbHIodGhpcy5oLCB0aGlzLmMsIHRoaXMubCAtIDE4ICogKG51bGwgPT0gdCA/IDEgOiB0KSwgdGhpcy5vcGFjaXR5KSB9LCByZ2IoKSB7IHJldHVybiBocih0aGlzKS5yZ2IoKSB9IH0pKTsgdmFyIGRyID0gLS4xNDg2MSwgcHIgPSAxLjc4Mjc3LCBnciA9IC0uMjkyMjcsIHlyID0gLS45MDY0OSwgdnIgPSAxLjk3Mjk0LCBfciA9IHZyICogeXIsIGJyID0gdnIgKiBwciwgbXIgPSBwciAqIGdyIC0geXIgKiBkcjsgZnVuY3Rpb24geHIodCkgeyBpZiAodCBpbnN0YW5jZW9mIE1yKSByZXR1cm4gbmV3IE1yKHQuaCwgdC5zLCB0LmwsIHQub3BhY2l0eSk7IHQgaW5zdGFuY2VvZiBxZSB8fCAodCA9IFJlKHQpKTsgdmFyIG4gPSB0LnIgLyAyNTUsIGUgPSB0LmcgLyAyNTUsIHIgPSB0LmIgLyAyNTUsIGkgPSAobXIgKiByICsgX3IgKiBuIC0gYnIgKiBlKSAvIChtciArIF9yIC0gYnIpLCBvID0gciAtIGksIGEgPSAodnIgKiAoZSAtIGkpIC0gZ3IgKiBvKSAvIHlyLCB1ID0gTWF0aC5zcXJ0KGEgKiBhICsgbyAqIG8pIC8gKHZyICogaSAqICgxIC0gaSkpLCBjID0gdSA/IE1hdGguYXRhbjIoYSwgbykgKiBaZSAtIDEyMCA6IE5hTjsgcmV0dXJuIG5ldyBNcihjIDwgMCA/IGMgKyAzNjAgOiBjLCB1LCBpLCB0Lm9wYWNpdHkpIH0gZnVuY3Rpb24gd3IodCwgbiwgZSwgcikgeyByZXR1cm4gMSA9PT0gYXJndW1lbnRzLmxlbmd0aCA/IHhyKHQpIDogbmV3IE1yKHQsIG4sIGUsIG51bGwgPT0gciA/IDEgOiByKSB9IGZ1bmN0aW9uIE1yKHQsIG4sIGUsIHIpIHsgdGhpcy5oID0gK3QsIHRoaXMucyA9ICtuLCB0aGlzLmwgPSArZSwgdGhpcy5vcGFjaXR5ID0gK3IgfSBmdW5jdGlvbiBBcih0LCBuLCBlLCByLCBpKSB7IHZhciBvID0gdCAqIHQsIGEgPSBvICogdDsgcmV0dXJuICgoMSAtIDMgKiB0ICsgMyAqIG8gLSBhKSAqIG4gKyAoNCAtIDYgKiBvICsgMyAqIGEpICogZSArICgxICsgMyAqIHQgKyAzICogbyAtIDMgKiBhKSAqIHIgKyBhICogaSkgLyA2IH0gZnVuY3Rpb24gVHIodCkgeyB2YXIgbiA9IHQubGVuZ3RoIC0gMTsgcmV0dXJuIGZ1bmN0aW9uIChlKSB7IHZhciByID0gZSA8PSAwID8gZSA9IDAgOiBlID49IDEgPyAoZSA9IDEsIG4gLSAxKSA6IE1hdGguZmxvb3IoZSAqIG4pLCBpID0gdFtyXSwgbyA9IHRbciArIDFdLCBhID0gciA+IDAgPyB0W3IgLSAxXSA6IDIgKiBpIC0gbywgdSA9IHIgPCBuIC0gMSA/IHRbciArIDJdIDogMiAqIG8gLSBpOyByZXR1cm4gQXIoKGUgLSByIC8gbikgKiBuLCBhLCBpLCBvLCB1KSB9IH0gZnVuY3Rpb24gU3IodCkgeyB2YXIgbiA9IHQubGVuZ3RoOyByZXR1cm4gZnVuY3Rpb24gKGUpIHsgdmFyIHIgPSBNYXRoLmZsb29yKCgoZSAlPSAxKSA8IDAgPyArK2UgOiBlKSAqIG4pLCBpID0gdFsociArIG4gLSAxKSAlIG5dLCBvID0gdFtyICUgbl0sIGEgPSB0WyhyICsgMSkgJSBuXSwgdSA9IHRbKHIgKyAyKSAlIG5dOyByZXR1cm4gQXIoKGUgLSByIC8gbikgKiBuLCBpLCBvLCBhLCB1KSB9IH0gZGUoTXIsIHdyLCBwZShnZSwgeyBicmlnaHRlcih0KSB7IHJldHVybiB0ID0gbnVsbCA9PSB0ID8gdmUgOiBNYXRoLnBvdyh2ZSwgdCksIG5ldyBNcih0aGlzLmgsIHRoaXMucywgdGhpcy5sICogdCwgdGhpcy5vcGFjaXR5KSB9LCBkYXJrZXIodCkgeyByZXR1cm4gdCA9IG51bGwgPT0gdCA/IHllIDogTWF0aC5wb3coeWUsIHQpLCBuZXcgTXIodGhpcy5oLCB0aGlzLnMsIHRoaXMubCAqIHQsIHRoaXMub3BhY2l0eSkgfSwgcmdiKCkgeyB2YXIgdCA9IGlzTmFOKHRoaXMuaCkgPyAwIDogKHRoaXMuaCArIDEyMCkgKiBXZSwgbiA9ICt0aGlzLmwsIGUgPSBpc05hTih0aGlzLnMpID8gMCA6IHRoaXMucyAqIG4gKiAoMSAtIG4pLCByID0gTWF0aC5jb3ModCksIGkgPSBNYXRoLnNpbih0KTsgcmV0dXJuIG5ldyBxZSgyNTUgKiAobiArIGUgKiAoZHIgKiByICsgcHIgKiBpKSksIDI1NSAqIChuICsgZSAqIChnciAqIHIgKyB5ciAqIGkpKSwgMjU1ICogKG4gKyBlICogKHZyICogcikpLCB0aGlzLm9wYWNpdHkpIH0gfSkpOyB2YXIgRXIgPSB0ID0+ICgpID0+IHQ7IGZ1bmN0aW9uIGtyKHQsIG4pIHsgcmV0dXJuIGZ1bmN0aW9uIChlKSB7IHJldHVybiB0ICsgZSAqIG4gfSB9IGZ1bmN0aW9uIE5yKHQsIG4pIHsgdmFyIGUgPSBuIC0gdDsgcmV0dXJuIGUgPyBrcih0LCBlID4gMTgwIHx8IGUgPCAtMTgwID8gZSAtIDM2MCAqIE1hdGgucm91bmQoZSAvIDM2MCkgOiBlKSA6IEVyKGlzTmFOKHQpID8gbiA6IHQpIH0gZnVuY3Rpb24gQ3IodCkgeyByZXR1cm4gMSA9PSAodCA9ICt0KSA/IFByIDogZnVuY3Rpb24gKG4sIGUpIHsgcmV0dXJuIGUgLSBuID8gZnVuY3Rpb24gKHQsIG4sIGUpIHsgcmV0dXJuIHQgPSBNYXRoLnBvdyh0LCBlKSwgbiA9IE1hdGgucG93KG4sIGUpIC0gdCwgZSA9IDEgLyBlLCBmdW5jdGlvbiAocikgeyByZXR1cm4gTWF0aC5wb3codCArIHIgKiBuLCBlKSB9IH0obiwgZSwgdCkgOiBFcihpc05hTihuKSA/IGUgOiBuKSB9IH0gZnVuY3Rpb24gUHIodCwgbikgeyB2YXIgZSA9IG4gLSB0OyByZXR1cm4gZSA/IGtyKHQsIGUpIDogRXIoaXNOYU4odCkgPyBuIDogdCkgfSB2YXIgenIgPSBmdW5jdGlvbiB0KG4pIHsgdmFyIGUgPSBDcihuKTsgZnVuY3Rpb24gcih0LCBuKSB7IHZhciByID0gZSgodCA9IEZlKHQpKS5yLCAobiA9IEZlKG4pKS5yKSwgaSA9IGUodC5nLCBuLmcpLCBvID0gZSh0LmIsIG4uYiksIGEgPSBQcih0Lm9wYWNpdHksIG4ub3BhY2l0eSk7IHJldHVybiBmdW5jdGlvbiAobikgeyByZXR1cm4gdC5yID0gcihuKSwgdC5nID0gaShuKSwgdC5iID0gbyhuKSwgdC5vcGFjaXR5ID0gYShuKSwgdCArICIiIH0gfSByZXR1cm4gci5nYW1tYSA9IHQsIHIgfSgxKTsgZnVuY3Rpb24gRHIodCkgeyByZXR1cm4gZnVuY3Rpb24gKG4pIHsgdmFyIGUsIHIsIGkgPSBuLmxlbmd0aCwgbyA9IG5ldyBBcnJheShpKSwgYSA9IG5ldyBBcnJheShpKSwgdSA9IG5ldyBBcnJheShpKTsgZm9yIChlID0gMDsgZSA8IGk7ICsrZSlyID0gRmUobltlXSksIG9bZV0gPSByLnIgfHwgMCwgYVtlXSA9IHIuZyB8fCAwLCB1W2VdID0gci5iIHx8IDA7IHJldHVybiBvID0gdChvKSwgYSA9IHQoYSksIHUgPSB0KHUpLCByLm9wYWNpdHkgPSAxLCBmdW5jdGlvbiAodCkgeyByZXR1cm4gci5yID0gbyh0KSwgci5nID0gYSh0KSwgci5iID0gdSh0KSwgciArICIiIH0gfSB9IHZhciBSciA9IERyKFRyKSwgRnIgPSBEcihTcik7IGZ1bmN0aW9uIHFyKHQsIG4pIHsgbiB8fCAobiA9IFtdKTsgdmFyIGUsIHIgPSB0ID8gTWF0aC5taW4obi5sZW5ndGgsIHQubGVuZ3RoKSA6IDAsIGkgPSBuLnNsaWNlKCk7IHJldHVybiBmdW5jdGlvbiAobykgeyBmb3IgKGUgPSAwOyBlIDwgcjsgKytlKWlbZV0gPSB0W2VdICogKDEgLSBvKSArIG5bZV0gKiBvOyByZXR1cm4gaSB9IH0gZnVuY3Rpb24gSXIodCkgeyByZXR1cm4gQXJyYXlCdWZmZXIuaXNWaWV3KHQpICYmICEodCBpbnN0YW5jZW9mIERhdGFWaWV3KSB9IGZ1bmN0aW9uIE9yKHQsIG4pIHsgdmFyIGUsIHIgPSBuID8gbi5sZW5ndGggOiAwLCBpID0gdCA/IE1hdGgubWluKHIsIHQubGVuZ3RoKSA6IDAsIG8gPSBuZXcgQXJyYXkoaSksIGEgPSBuZXcgQXJyYXkocik7IGZvciAoZSA9IDA7IGUgPCBpOyArK2Upb1tlXSA9IEhyKHRbZV0sIG5bZV0pOyBmb3IgKDsgZSA8IHI7ICsrZSlhW2VdID0gbltlXTsgcmV0dXJuIGZ1bmN0aW9uICh0KSB7IGZvciAoZSA9IDA7IGUgPCBpOyArK2UpYVtlXSA9IG9bZV0odCk7IHJldHVybiBhIH0gfSBmdW5jdGlvbiBVcih0LCBuKSB7IHZhciBlID0gbmV3IERhdGU7IHJldHVybiB0ID0gK3QsIG4gPSArbiwgZnVuY3Rpb24gKHIpIHsgcmV0dXJuIGUuc2V0VGltZSh0ICogKDEgLSByKSArIG4gKiByKSwgZSB9IH0gZnVuY3Rpb24gQnIodCwgbikgeyByZXR1cm4gdCA9ICt0LCBuID0gK24sIGZ1bmN0aW9uIChlKSB7IHJldHVybiB0ICogKDEgLSBlKSArIG4gKiBlIH0gfSBmdW5jdGlvbiBZcih0LCBuKSB7IHZhciBlLCByID0ge30sIGkgPSB7fTsgZm9yIChlIGluIG51bGwgIT09IHQgJiYgIm9iamVjdCIgPT0gdHlwZW9mIHQgfHwgKHQgPSB7fSksIG51bGwgIT09IG4gJiYgIm9iamVjdCIgPT0gdHlwZW9mIG4gfHwgKG4gPSB7fSksIG4pIGUgaW4gdCA/IHJbZV0gPSBIcih0W2VdLCBuW2VdKSA6IGlbZV0gPSBuW2VdOyByZXR1cm4gZnVuY3Rpb24gKHQpIHsgZm9yIChlIGluIHIpIGlbZV0gPSByW2VdKHQpOyByZXR1cm4gaSB9IH0gdmFyIExyID0gL1stK10/KD86XGQrXC4/XGQqfFwuP1xkKykoPzpbZUVdWy0rXT9cZCspPy9nLCBqciA9IG5ldyBSZWdFeHAoTHIuc291cmNlLCAiZyIpOyBmdW5jdGlvbiAkcih0LCBuKSB7IHZhciBlLCByLCBpLCBvID0gTHIubGFzdEluZGV4ID0ganIubGFzdEluZGV4ID0gMCwgYSA9IC0xLCB1ID0gW10sIGMgPSBbXTsgZm9yICh0ICs9ICIiLCBuICs9ICIiOyAoZSA9IExyLmV4ZWModCkpICYmIChyID0ganIuZXhlYyhuKSk7KShpID0gci5pbmRleCkgPiBvICYmIChpID0gbi5zbGljZShvLCBpKSwgdVthXSA/IHVbYV0gKz0gaSA6IHVbKythXSA9IGkpLCAoZSA9IGVbMF0pID09PSAociA9IHJbMF0pID8gdVthXSA/IHVbYV0gKz0gciA6IHVbKythXSA9IHIgOiAodVsrK2FdID0gbnVsbCwgYy5wdXNoKHsgaTogYSwgeDogQnIoZSwgcikgfSkpLCBvID0ganIubGFzdEluZGV4OyByZXR1cm4gbyA8IG4ubGVuZ3RoICYmIChpID0gbi5zbGljZShvKSwgdVthXSA/IHVbYV0gKz0gaSA6IHVbKythXSA9IGkpLCB1Lmxlbmd0aCA8IDIgPyBjWzBdID8gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGZ1bmN0aW9uIChuKSB7IHJldHVybiB0KG4pICsgIiIgfSB9KGNbMF0ueCkgOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyByZXR1cm4gdCB9IH0obikgOiAobiA9IGMubGVuZ3RoLCBmdW5jdGlvbiAodCkgeyBmb3IgKHZhciBlLCByID0gMDsgciA8IG47ICsrcil1WyhlID0gY1tyXSkuaV0gPSBlLngodCk7IHJldHVybiB1LmpvaW4oIiIpIH0pIH0gZnVuY3Rpb24gSHIodCwgbikgeyB2YXIgZSwgciA9IHR5cGVvZiBuOyByZXR1cm4gbnVsbCA9PSBuIHx8ICJib29sZWFuIiA9PT0gciA/IEVyKG4pIDogKCJudW1iZXIiID09PSByID8gQnIgOiAic3RyaW5nIiA9PT0gciA/IChlID0gUGUobikpID8gKG4gPSBlLCB6cikgOiAkciA6IG4gaW5zdGFuY2VvZiBQZSA/IHpyIDogbiBpbnN0YW5jZW9mIERhdGUgPyBVciA6IElyKG4pID8gcXIgOiBBcnJheS5pc0FycmF5KG4pID8gT3IgOiAiZnVuY3Rpb24iICE9IHR5cGVvZiBuLnZhbHVlT2YgJiYgImZ1bmN0aW9uIiAhPSB0eXBlb2Ygbi50b1N0cmluZyB8fCBpc05hTihuKSA/IFlyIDogQnIpKHQsIG4pIH0gZnVuY3Rpb24gWHIodCwgbikgeyByZXR1cm4gdCA9ICt0LCBuID0gK24sIGZ1bmN0aW9uIChlKSB7IHJldHVybiBNYXRoLnJvdW5kKHQgKiAoMSAtIGUpICsgbiAqIGUpIH0gfSB2YXIgR3IsIFZyID0gMTgwIC8gTWF0aC5QSSwgV3IgPSB7IHRyYW5zbGF0ZVg6IDAsIHRyYW5zbGF0ZVk6IDAsIHJvdGF0ZTogMCwgc2tld1g6IDAsIHNjYWxlWDogMSwgc2NhbGVZOiAxIH07IGZ1bmN0aW9uIFpyKHQsIG4sIGUsIHIsIGksIG8pIHsgdmFyIGEsIHUsIGM7IHJldHVybiAoYSA9IE1hdGguc3FydCh0ICogdCArIG4gKiBuKSkgJiYgKHQgLz0gYSwgbiAvPSBhKSwgKGMgPSB0ICogZSArIG4gKiByKSAmJiAoZSAtPSB0ICogYywgciAtPSBuICogYyksICh1ID0gTWF0aC5zcXJ0KGUgKiBlICsgciAqIHIpKSAmJiAoZSAvPSB1LCByIC89IHUsIGMgLz0gdSksIHQgKiByIDwgbiAqIGUgJiYgKHQgPSAtdCwgbiA9IC1uLCBjID0gLWMsIGEgPSAtYSksIHsgdHJhbnNsYXRlWDogaSwgdHJhbnNsYXRlWTogbywgcm90YXRlOiBNYXRoLmF0YW4yKG4sIHQpICogVnIsIHNrZXdYOiBNYXRoLmF0YW4oYykgKiBWciwgc2NhbGVYOiBhLCBzY2FsZVk6IHUgfSB9IGZ1bmN0aW9uIEtyKHQsIG4sIGUsIHIpIHsgZnVuY3Rpb24gaSh0KSB7IHJldHVybiB0Lmxlbmd0aCA/IHQucG9wKCkgKyAiICIgOiAiIiB9IHJldHVybiBmdW5jdGlvbiAobywgYSkgeyB2YXIgdSA9IFtdLCBjID0gW107IHJldHVybiBvID0gdChvKSwgYSA9IHQoYSksIGZ1bmN0aW9uICh0LCByLCBpLCBvLCBhLCB1KSB7IGlmICh0ICE9PSBpIHx8IHIgIT09IG8pIHsgdmFyIGMgPSBhLnB1c2goInRyYW5zbGF0ZSgiLCBudWxsLCBuLCBudWxsLCBlKTsgdS5wdXNoKHsgaTogYyAtIDQsIHg6IEJyKHQsIGkpIH0sIHsgaTogYyAtIDIsIHg6IEJyKHIsIG8pIH0pIH0gZWxzZSAoaSB8fCBvKSAmJiBhLnB1c2goInRyYW5zbGF0ZSgiICsgaSArIG4gKyBvICsgZSkgfShvLnRyYW5zbGF0ZVgsIG8udHJhbnNsYXRlWSwgYS50cmFuc2xhdGVYLCBhLnRyYW5zbGF0ZVksIHUsIGMpLCBmdW5jdGlvbiAodCwgbiwgZSwgbykgeyB0ICE9PSBuID8gKHQgLSBuID4gMTgwID8gbiArPSAzNjAgOiBuIC0gdCA+IDE4MCAmJiAodCArPSAzNjApLCBvLnB1c2goeyBpOiBlLnB1c2goaShlKSArICJyb3RhdGUoIiwgbnVsbCwgcikgLSAyLCB4OiBCcih0LCBuKSB9KSkgOiBuICYmIGUucHVzaChpKGUpICsgInJvdGF0ZSgiICsgbiArIHIpIH0oby5yb3RhdGUsIGEucm90YXRlLCB1LCBjKSwgZnVuY3Rpb24gKHQsIG4sIGUsIG8pIHsgdCAhPT0gbiA/IG8ucHVzaCh7IGk6IGUucHVzaChpKGUpICsgInNrZXdYKCIsIG51bGwsIHIpIC0gMiwgeDogQnIodCwgbikgfSkgOiBuICYmIGUucHVzaChpKGUpICsgInNrZXdYKCIgKyBuICsgcikgfShvLnNrZXdYLCBhLnNrZXdYLCB1LCBjKSwgZnVuY3Rpb24gKHQsIG4sIGUsIHIsIG8sIGEpIHsgaWYgKHQgIT09IGUgfHwgbiAhPT0gcikgeyB2YXIgdSA9IG8ucHVzaChpKG8pICsgInNjYWxlKCIsIG51bGwsICIsIiwgbnVsbCwgIikiKTsgYS5wdXNoKHsgaTogdSAtIDQsIHg6IEJyKHQsIGUpIH0sIHsgaTogdSAtIDIsIHg6IEJyKG4sIHIpIH0pIH0gZWxzZSAxID09PSBlICYmIDEgPT09IHIgfHwgby5wdXNoKGkobykgKyAic2NhbGUoIiArIGUgKyAiLCIgKyByICsgIikiKSB9KG8uc2NhbGVYLCBvLnNjYWxlWSwgYS5zY2FsZVgsIGEuc2NhbGVZLCB1LCBjKSwgbyA9IGEgPSBudWxsLCBmdW5jdGlvbiAodCkgeyBmb3IgKHZhciBuLCBlID0gLTEsIHIgPSBjLmxlbmd0aDsgKytlIDwgcjspdVsobiA9IGNbZV0pLmldID0gbi54KHQpOyByZXR1cm4gdS5qb2luKCIiKSB9IH0gfSB2YXIgUXIgPSBLcigoZnVuY3Rpb24gKHQpIHsgY29uc3QgbiA9IG5ldyAoImZ1bmN0aW9uIiA9PSB0eXBlb2YgRE9NTWF0cml4ID8gRE9NTWF0cml4IDogV2ViS2l0Q1NTTWF0cml4KSh0ICsgIiIpOyByZXR1cm4gbi5pc0lkZW50aXR5ID8gV3IgOiBacihuLmEsIG4uYiwgbi5jLCBuLmQsIG4uZSwgbi5mKSB9KSwgInB4LCAiLCAicHgpIiwgImRlZykiKSwgSnIgPSBLcigoZnVuY3Rpb24gKHQpIHsgcmV0dXJuIG51bGwgPT0gdCA/IFdyIDogKEdyIHx8IChHciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUygiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciLCAiZyIpKSwgR3Iuc2V0QXR0cmlidXRlKCJ0cmFuc2Zvcm0iLCB0KSwgKHQgPSBHci50cmFuc2Zvcm0uYmFzZVZhbC5jb25zb2xpZGF0ZSgpKSA/IFpyKCh0ID0gdC5tYXRyaXgpLmEsIHQuYiwgdC5jLCB0LmQsIHQuZSwgdC5mKSA6IFdyKSB9KSwgIiwgIiwgIikiLCAiKSIpOyBmdW5jdGlvbiB0aSh0KSB7IHJldHVybiAoKHQgPSBNYXRoLmV4cCh0KSkgKyAxIC8gdCkgLyAyIH0gdmFyIG5pID0gZnVuY3Rpb24gdChuLCBlLCByKSB7IGZ1bmN0aW9uIGkodCwgaSkgeyB2YXIgbywgYSwgdSA9IHRbMF0sIGMgPSB0WzFdLCBmID0gdFsyXSwgcyA9IGlbMF0sIGwgPSBpWzFdLCBoID0gaVsyXSwgZCA9IHMgLSB1LCBwID0gbCAtIGMsIGcgPSBkICogZCArIHAgKiBwOyBpZiAoZyA8IDFlLTEyKSBhID0gTWF0aC5sb2coaCAvIGYpIC8gbiwgbyA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBbdSArIHQgKiBkLCBjICsgdCAqIHAsIGYgKiBNYXRoLmV4cChuICogdCAqIGEpXSB9OyBlbHNlIHsgdmFyIHkgPSBNYXRoLnNxcnQoZyksIHYgPSAoaCAqIGggLSBmICogZiArIHIgKiBnKSAvICgyICogZiAqIGUgKiB5KSwgXyA9IChoICogaCAtIGYgKiBmIC0gciAqIGcpIC8gKDIgKiBoICogZSAqIHkpLCBiID0gTWF0aC5sb2coTWF0aC5zcXJ0KHYgKiB2ICsgMSkgLSB2KSwgbSA9IE1hdGgubG9nKE1hdGguc3FydChfICogXyArIDEpIC0gXyk7IGEgPSAobSAtIGIpIC8gbiwgbyA9IGZ1bmN0aW9uICh0KSB7IHZhciByID0gdCAqIGEsIGkgPSB0aShiKSwgbyA9IGYgLyAoZSAqIHkpICogKGkgKiBmdW5jdGlvbiAodCkgeyByZXR1cm4gKCh0ID0gTWF0aC5leHAoMiAqIHQpKSAtIDEpIC8gKHQgKyAxKSB9KG4gKiByICsgYikgLSBmdW5jdGlvbiAodCkgeyByZXR1cm4gKCh0ID0gTWF0aC5leHAodCkpIC0gMSAvIHQpIC8gMiB9KGIpKTsgcmV0dXJuIFt1ICsgbyAqIGQsIGMgKyBvICogcCwgZiAqIGkgLyB0aShuICogciArIGIpXSB9IH0gcmV0dXJuIG8uZHVyYXRpb24gPSAxZTMgKiBhICogbiAvIE1hdGguU1FSVDIsIG8gfSByZXR1cm4gaS5yaG8gPSBmdW5jdGlvbiAobikgeyB2YXIgZSA9IE1hdGgubWF4KC4wMDEsICtuKSwgciA9IGUgKiBlOyByZXR1cm4gdChlLCByLCByICogcikgfSwgaSB9KE1hdGguU1FSVDIsIDIsIDQpOyBmdW5jdGlvbiBlaSh0KSB7IHJldHVybiBmdW5jdGlvbiAobiwgZSkgeyB2YXIgciA9IHQoKG4gPSAkZShuKSkuaCwgKGUgPSAkZShlKSkuaCksIGkgPSBQcihuLnMsIGUucyksIG8gPSBQcihuLmwsIGUubCksIGEgPSBQcihuLm9wYWNpdHksIGUub3BhY2l0eSk7IHJldHVybiBmdW5jdGlvbiAodCkgeyByZXR1cm4gbi5oID0gcih0KSwgbi5zID0gaSh0KSwgbi5sID0gbyh0KSwgbi5vcGFjaXR5ID0gYSh0KSwgbiArICIiIH0gfSB9IHZhciByaSA9IGVpKE5yKSwgaWkgPSBlaShQcik7IGZ1bmN0aW9uIG9pKHQpIHsgcmV0dXJuIGZ1bmN0aW9uIChuLCBlKSB7IHZhciByID0gdCgobiA9IHNyKG4pKS5oLCAoZSA9IHNyKGUpKS5oKSwgaSA9IFByKG4uYywgZS5jKSwgbyA9IFByKG4ubCwgZS5sKSwgYSA9IFByKG4ub3BhY2l0eSwgZS5vcGFjaXR5KTsgcmV0dXJuIGZ1bmN0aW9uICh0KSB7IHJldHVybiBuLmggPSByKHQpLCBuLmMgPSBpKHQpLCBuLmwgPSBvKHQpLCBuLm9wYWNpdHkgPSBhKHQpLCBuICsgIiIgfSB9IH0gdmFyIGFpID0gb2koTnIpLCB1aSA9IG9pKFByKTsgZnVuY3Rpb24gY2kodCkgeyByZXR1cm4gZnVuY3Rpb24gbihlKSB7IGZ1bmN0aW9uIHIobiwgcikgeyB2YXIgaSA9IHQoKG4gPSB3cihuKSkuaCwgKHIgPSB3cihyKSkuaCksIG8gPSBQcihuLnMsIHIucyksIGEgPSBQcihuLmwsIHIubCksIHUgPSBQcihuLm9wYWNpdHksIHIub3BhY2l0eSk7IHJldHVybiBmdW5jdGlvbiAodCkgeyByZXR1cm4gbi5oID0gaSh0KSwgbi5zID0gbyh0KSwgbi5sID0gYShNYXRoLnBvdyh0LCBlKSksIG4ub3BhY2l0eSA9IHUodCksIG4gKyAiIiB9IH0gcmV0dXJuIGUgPSArZSwgci5nYW1tYSA9IG4sIHIgfSgxKSB9IHZhciBmaSA9IGNpKE5yKSwgc2kgPSBjaShQcik7IGZ1bmN0aW9uIGxpKHQsIG4pIHsgdm9pZCAwID09PSBuICYmIChuID0gdCwgdCA9IEhyKTsgZm9yICh2YXIgZSA9IDAsIHIgPSBuLmxlbmd0aCAtIDEsIGkgPSBuWzBdLCBvID0gbmV3IEFycmF5KHIgPCAwID8gMCA6IHIpOyBlIDwgcjspb1tlXSA9IHQoaSwgaSA9IG5bKytlXSk7IHJldHVybiBmdW5jdGlvbiAodCkgeyB2YXIgbiA9IE1hdGgubWF4KDAsIE1hdGgubWluKHIgLSAxLCBNYXRoLmZsb29yKHQgKj0gcikpKTsgcmV0dXJuIG9bbl0odCAtIG4pIH0gfSB2YXIgaGksIGRpLCBwaSA9IDAsIGdpID0gMCwgeWkgPSAwLCB2aSA9IDAsIF9pID0gMCwgYmkgPSAwLCBtaSA9ICJvYmplY3QiID09IHR5cGVvZiBwZXJmb3JtYW5jZSAmJiBwZXJmb3JtYW5jZS5ub3cgPyBwZXJmb3JtYW5jZSA6IERhdGUsIHhpID0gIm9iamVjdCIgPT0gdHlwZW9mIHdpbmRvdyAmJiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lID8gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZS5iaW5kKHdpbmRvdykgOiBmdW5jdGlvbiAodCkgeyBzZXRUaW1lb3V0KHQsIDE3KSB9OyBmdW5jdGlvbiB3aSgpIHsgcmV0dXJuIF9pIHx8ICh4aShNaSksIF9pID0gbWkubm93KCkgKyBiaSkgfSBmdW5jdGlvbiBNaSgpIHsgX2kgPSAwIH0gZnVuY3Rpb24gQWkoKSB7IHRoaXMuX2NhbGwgPSB0aGlzLl90aW1lID0gdGhpcy5fbmV4dCA9IG51bGwgfSBmdW5jdGlvbiBUaSh0LCBuLCBlKSB7IHZhciByID0gbmV3IEFpOyByZXR1cm4gci5yZXN0YXJ0KHQsIG4sIGUpLCByIH0gZnVuY3Rpb24gU2koKSB7IHdpKCksICsrcGk7IGZvciAodmFyIHQsIG4gPSBoaTsgbjspKHQgPSBfaSAtIG4uX3RpbWUpID49IDAgJiYgbi5fY2FsbC5jYWxsKHZvaWQgMCwgdCksIG4gPSBuLl9uZXh0OyAtLXBpIH0gZnVuY3Rpb24gRWkoKSB7IF9pID0gKHZpID0gbWkubm93KCkpICsgYmksIHBpID0gZ2kgPSAwOyB0cnkgeyBTaSgpIH0gZmluYWxseSB7IHBpID0gMCwgZnVuY3Rpb24gKCkgeyB2YXIgdCwgbiwgZSA9IGhpLCByID0gMSAvIDA7IGZvciAoOyBlOyllLl9jYWxsID8gKHIgPiBlLl90aW1lICYmIChyID0gZS5fdGltZSksIHQgPSBlLCBlID0gZS5fbmV4dCkgOiAobiA9IGUuX25leHQsIGUuX25leHQgPSBudWxsLCBlID0gdCA/IHQuX25leHQgPSBuIDogaGkgPSBuKTsgZGkgPSB0LCBOaShyKSB9KCksIF9pID0gMCB9IH0gZnVuY3Rpb24ga2koKSB7IHZhciB0ID0gbWkubm93KCksIG4gPSB0IC0gdmk7IG4gPiAxZTMgJiYgKGJpIC09IG4sIHZpID0gdCkgfSBmdW5jdGlvbiBOaSh0KSB7IHBpIHx8IChnaSAmJiAoZ2kgPSBjbGVhclRpbWVvdXQoZ2kpKSwgdCAtIF9pID4gMjQgPyAodCA8IDEgLyAwICYmIChnaSA9IHNldFRpbWVvdXQoRWksIHQgLSBtaS5ub3coKSAtIGJpKSksIHlpICYmICh5aSA9IGNsZWFySW50ZXJ2YWwoeWkpKSkgOiAoeWkgfHwgKHZpID0gbWkubm93KCksIHlpID0gc2V0SW50ZXJ2YWwoa2ksIDFlMykpLCBwaSA9IDEsIHhpKEVpKSkpIH0gZnVuY3Rpb24gQ2kodCwgbiwgZSkgeyB2YXIgciA9IG5ldyBBaTsgcmV0dXJuIG4gPSBudWxsID09IG4gPyAwIDogK24sIHIucmVzdGFydCgoZSA9PiB7IHIuc3RvcCgpLCB0KGUgKyBuKSB9KSwgbiwgZSksIHIgfSBBaS5wcm90b3R5cGUgPSBUaS5wcm90b3R5cGUgPSB7IGNvbnN0cnVjdG9yOiBBaSwgcmVzdGFydDogZnVuY3Rpb24gKHQsIG4sIGUpIHsgaWYgKCJmdW5jdGlvbiIgIT0gdHlwZW9mIHQpIHRocm93IG5ldyBUeXBlRXJyb3IoImNhbGxiYWNrIGlzIG5vdCBhIGZ1bmN0aW9uIik7IGUgPSAobnVsbCA9PSBlID8gd2koKSA6ICtlKSArIChudWxsID09IG4gPyAwIDogK24pLCB0aGlzLl9uZXh0IHx8IGRpID09PSB0aGlzIHx8IChkaSA/IGRpLl9uZXh0ID0gdGhpcyA6IGhpID0gdGhpcywgZGkgPSB0aGlzKSwgdGhpcy5fY2FsbCA9IHQsIHRoaXMuX3RpbWUgPSBlLCBOaSgpIH0sIHN0b3A6IGZ1bmN0aW9uICgpIHsgdGhpcy5fY2FsbCAmJiAodGhpcy5fY2FsbCA9IG51bGwsIHRoaXMuX3RpbWUgPSAxIC8gMCwgTmkoKSkgfSB9OyB2YXIgUGkgPSBOdCgic3RhcnQiLCAiZW5kIiwgImNhbmNlbCIsICJpbnRlcnJ1cHQiKSwgemkgPSBbXTsgZnVuY3Rpb24gRGkodCwgbiwgZSwgciwgaSwgbykgeyB2YXIgYSA9IHQuX190cmFuc2l0aW9uOyBpZiAoYSkgeyBpZiAoZSBpbiBhKSByZXR1cm4gfSBlbHNlIHQuX190cmFuc2l0aW9uID0ge307ICFmdW5jdGlvbiAodCwgbiwgZSkgeyB2YXIgciwgaSA9IHQuX190cmFuc2l0aW9uOyBmdW5jdGlvbiBvKHQpIHsgZS5zdGF0ZSA9IDEsIGUudGltZXIucmVzdGFydChhLCBlLmRlbGF5LCBlLnRpbWUpLCBlLmRlbGF5IDw9IHQgJiYgYSh0IC0gZS5kZWxheSkgfSBmdW5jdGlvbiBhKG8pIHsgdmFyIGYsIHMsIGwsIGg7IGlmICgxICE9PSBlLnN0YXRlKSByZXR1cm4gYygpOyBmb3IgKGYgaW4gaSkgaWYgKChoID0gaVtmXSkubmFtZSA9PT0gZS5uYW1lKSB7IGlmICgzID09PSBoLnN0YXRlKSByZXR1cm4gQ2koYSk7IDQgPT09IGguc3RhdGUgPyAoaC5zdGF0ZSA9IDYsIGgudGltZXIuc3RvcCgpLCBoLm9uLmNhbGwoImludGVycnVwdCIsIHQsIHQuX19kYXRhX18sIGguaW5kZXgsIGguZ3JvdXApLCBkZWxldGUgaVtmXSkgOiArZiA8IG4gJiYgKGguc3RhdGUgPSA2LCBoLnRpbWVyLnN0b3AoKSwgaC5vbi5jYWxsKCJjYW5jZWwiLCB0LCB0Ll9fZGF0YV9fLCBoLmluZGV4LCBoLmdyb3VwKSwgZGVsZXRlIGlbZl0pIH0gaWYgKENpKChmdW5jdGlvbiAoKSB7IDMgPT09IGUuc3RhdGUgJiYgKGUuc3RhdGUgPSA0LCBlLnRpbWVyLnJlc3RhcnQodSwgZS5kZWxheSwgZS50aW1lKSwgdShvKSkgfSkpLCBlLnN0YXRlID0gMiwgZS5vbi5jYWxsKCJzdGFydCIsIHQsIHQuX19kYXRhX18sIGUuaW5kZXgsIGUuZ3JvdXApLCAyID09PSBlLnN0YXRlKSB7IGZvciAoZS5zdGF0ZSA9IDMsIHIgPSBuZXcgQXJyYXkobCA9IGUudHdlZW4ubGVuZ3RoKSwgZiA9IDAsIHMgPSAtMTsgZiA8IGw7ICsrZikoaCA9IGUudHdlZW5bZl0udmFsdWUuY2FsbCh0LCB0Ll9fZGF0YV9fLCBlLmluZGV4LCBlLmdyb3VwKSkgJiYgKHJbKytzXSA9IGgpOyByLmxlbmd0aCA9IHMgKyAxIH0gfSBmdW5jdGlvbiB1KG4pIHsgZm9yICh2YXIgaSA9IG4gPCBlLmR1cmF0aW9uID8gZS5lYXNlLmNhbGwobnVsbCwgbiAvIGUuZHVyYXRpb24pIDogKGUudGltZXIucmVzdGFydChjKSwgZS5zdGF0ZSA9IDUsIDEpLCBvID0gLTEsIGEgPSByLmxlbmd0aDsgKytvIDwgYTspcltvXS5jYWxsKHQsIGkpOyA1ID09PSBlLnN0YXRlICYmIChlLm9uLmNhbGwoImVuZCIsIHQsIHQuX19kYXRhX18sIGUuaW5kZXgsIGUuZ3JvdXApLCBjKCkpIH0gZnVuY3Rpb24gYygpIHsgZm9yICh2YXIgciBpbiBlLnN0YXRlID0gNiwgZS50aW1lci5zdG9wKCksIGRlbGV0ZSBpW25dLCBpKSByZXR1cm47IGRlbGV0ZSB0Ll9fdHJhbnNpdGlvbiB9IGlbbl0gPSBlLCBlLnRpbWVyID0gVGkobywgMCwgZS50aW1lKSB9KHQsIGUsIHsgbmFtZTogbiwgaW5kZXg6IHIsIGdyb3VwOiBpLCBvbjogUGksIHR3ZWVuOiB6aSwgdGltZTogby50aW1lLCBkZWxheTogby5kZWxheSwgZHVyYXRpb246IG8uZHVyYXRpb24sIGVhc2U6IG8uZWFzZSwgdGltZXI6IG51bGwsIHN0YXRlOiAwIH0pIH0gZnVuY3Rpb24gUmkodCwgbikgeyB2YXIgZSA9IHFpKHQsIG4pOyBpZiAoZS5zdGF0ZSA+IDApIHRocm93IG5ldyBFcnJvcigidG9vIGxhdGU7IGFscmVhZHkgc2NoZWR1bGVkIik7IHJldHVybiBlIH0gZnVuY3Rpb24gRmkodCwgbikgeyB2YXIgZSA9IHFpKHQsIG4pOyBpZiAoZS5zdGF0ZSA+IDMpIHRocm93IG5ldyBFcnJvcigidG9vIGxhdGU7IGFscmVhZHkgcnVubmluZyIpOyByZXR1cm4gZSB9IGZ1bmN0aW9uIHFpKHQsIG4pIHsgdmFyIGUgPSB0Ll9fdHJhbnNpdGlvbjsgaWYgKCFlIHx8ICEoZSA9IGVbbl0pKSB0aHJvdyBuZXcgRXJyb3IoInRyYW5zaXRpb24gbm90IGZvdW5kIik7IHJldHVybiBlIH0gZnVuY3Rpb24gSWkodCwgbikgeyB2YXIgZSwgciwgaSwgbyA9IHQuX190cmFuc2l0aW9uLCBhID0gITA7IGlmIChvKSB7IGZvciAoaSBpbiBuID0gbnVsbCA9PSBuID8gbnVsbCA6IG4gKyAiIiwgbykgKGUgPSBvW2ldKS5uYW1lID09PSBuID8gKHIgPSBlLnN0YXRlID4gMiAmJiBlLnN0YXRlIDwgNSwgZS5zdGF0ZSA9IDYsIGUudGltZXIuc3RvcCgpLCBlLm9uLmNhbGwociA/ICJpbnRlcnJ1cHQiIDogImNhbmNlbCIsIHQsIHQuX19kYXRhX18sIGUuaW5kZXgsIGUuZ3JvdXApLCBkZWxldGUgb1tpXSkgOiBhID0gITE7IGEgJiYgZGVsZXRlIHQuX190cmFuc2l0aW9uIH0gfSBmdW5jdGlvbiBPaSh0LCBuKSB7IHZhciBlLCByOyByZXR1cm4gZnVuY3Rpb24gKCkgeyB2YXIgaSA9IEZpKHRoaXMsIHQpLCBvID0gaS50d2VlbjsgaWYgKG8gIT09IGUpIGZvciAodmFyIGEgPSAwLCB1ID0gKHIgPSBlID0gbykubGVuZ3RoOyBhIDwgdTsgKythKWlmIChyW2FdLm5hbWUgPT09IG4pIHsgKHIgPSByLnNsaWNlKCkpLnNwbGljZShhLCAxKTsgYnJlYWsgfSBpLnR3ZWVuID0gciB9IH0gZnVuY3Rpb24gVWkodCwgbiwgZSkgeyB2YXIgciwgaTsgaWYgKCJmdW5jdGlvbiIgIT0gdHlwZW9mIGUpIHRocm93IG5ldyBFcnJvcjsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIG8gPSBGaSh0aGlzLCB0KSwgYSA9IG8udHdlZW47IGlmIChhICE9PSByKSB7IGkgPSAociA9IGEpLnNsaWNlKCk7IGZvciAodmFyIHUgPSB7IG5hbWU6IG4sIHZhbHVlOiBlIH0sIGMgPSAwLCBmID0gaS5sZW5ndGg7IGMgPCBmOyArK2MpaWYgKGlbY10ubmFtZSA9PT0gbikgeyBpW2NdID0gdTsgYnJlYWsgfSBjID09PSBmICYmIGkucHVzaCh1KSB9IG8udHdlZW4gPSBpIH0gfSBmdW5jdGlvbiBCaSh0LCBuLCBlKSB7IHZhciByID0gdC5faWQ7IHJldHVybiB0LmVhY2goKGZ1bmN0aW9uICgpIHsgdmFyIHQgPSBGaSh0aGlzLCByKTsgKHQudmFsdWUgfHwgKHQudmFsdWUgPSB7fSkpW25dID0gZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpIH0pKSwgZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHFpKHQsIHIpLnZhbHVlW25dIH0gfSBmdW5jdGlvbiBZaSh0LCBuKSB7IHZhciBlOyByZXR1cm4gKCJudW1iZXIiID09IHR5cGVvZiBuID8gQnIgOiBuIGluc3RhbmNlb2YgUGUgPyB6ciA6IChlID0gUGUobikpID8gKG4gPSBlLCB6cikgOiAkcikodCwgbikgfSBmdW5jdGlvbiBMaSh0KSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHRoaXMucmVtb3ZlQXR0cmlidXRlKHQpIH0gfSBmdW5jdGlvbiBqaSh0KSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHRoaXMucmVtb3ZlQXR0cmlidXRlTlModC5zcGFjZSwgdC5sb2NhbCkgfSB9IGZ1bmN0aW9uICRpKHQsIG4sIGUpIHsgdmFyIHIsIGksIG8gPSBlICsgIiI7IHJldHVybiBmdW5jdGlvbiAoKSB7IHZhciBhID0gdGhpcy5nZXRBdHRyaWJ1dGUodCk7IHJldHVybiBhID09PSBvID8gbnVsbCA6IGEgPT09IHIgPyBpIDogaSA9IG4ociA9IGEsIGUpIH0gfSBmdW5jdGlvbiBIaSh0LCBuLCBlKSB7IHZhciByLCBpLCBvID0gZSArICIiOyByZXR1cm4gZnVuY3Rpb24gKCkgeyB2YXIgYSA9IHRoaXMuZ2V0QXR0cmlidXRlTlModC5zcGFjZSwgdC5sb2NhbCk7IHJldHVybiBhID09PSBvID8gbnVsbCA6IGEgPT09IHIgPyBpIDogaSA9IG4ociA9IGEsIGUpIH0gfSBmdW5jdGlvbiBYaSh0LCBuLCBlKSB7IHZhciByLCBpLCBvOyByZXR1cm4gZnVuY3Rpb24gKCkgeyB2YXIgYSwgdSwgYyA9IGUodGhpcyk7IGlmIChudWxsICE9IGMpIHJldHVybiAoYSA9IHRoaXMuZ2V0QXR0cmlidXRlKHQpKSA9PT0gKHUgPSBjICsgIiIpID8gbnVsbCA6IGEgPT09IHIgJiYgdSA9PT0gaSA/IG8gOiAoaSA9IHUsIG8gPSBuKHIgPSBhLCBjKSk7IHRoaXMucmVtb3ZlQXR0cmlidXRlKHQpIH0gfSBmdW5jdGlvbiBHaSh0LCBuLCBlKSB7IHZhciByLCBpLCBvOyByZXR1cm4gZnVuY3Rpb24gKCkgeyB2YXIgYSwgdSwgYyA9IGUodGhpcyk7IGlmIChudWxsICE9IGMpIHJldHVybiAoYSA9IHRoaXMuZ2V0QXR0cmlidXRlTlModC5zcGFjZSwgdC5sb2NhbCkpID09PSAodSA9IGMgKyAiIikgPyBudWxsIDogYSA9PT0gciAmJiB1ID09PSBpID8gbyA6IChpID0gdSwgbyA9IG4ociA9IGEsIGMpKTsgdGhpcy5yZW1vdmVBdHRyaWJ1dGVOUyh0LnNwYWNlLCB0LmxvY2FsKSB9IH0gZnVuY3Rpb24gVmkodCwgbikgeyByZXR1cm4gZnVuY3Rpb24gKGUpIHsgdGhpcy5zZXRBdHRyaWJ1dGUodCwgbi5jYWxsKHRoaXMsIGUpKSB9IH0gZnVuY3Rpb24gV2kodCwgbikgeyByZXR1cm4gZnVuY3Rpb24gKGUpIHsgdGhpcy5zZXRBdHRyaWJ1dGVOUyh0LnNwYWNlLCB0LmxvY2FsLCBuLmNhbGwodGhpcywgZSkpIH0gfSBmdW5jdGlvbiBaaSh0LCBuKSB7IHZhciBlLCByOyBmdW5jdGlvbiBpKCkgeyB2YXIgaSA9IG4uYXBwbHkodGhpcywgYXJndW1lbnRzKTsgcmV0dXJuIGkgIT09IHIgJiYgKGUgPSAociA9IGkpICYmIFdpKHQsIGkpKSwgZSB9IHJldHVybiBpLl92YWx1ZSA9IG4sIGkgfSBmdW5jdGlvbiBLaSh0LCBuKSB7IHZhciBlLCByOyBmdW5jdGlvbiBpKCkgeyB2YXIgaSA9IG4uYXBwbHkodGhpcywgYXJndW1lbnRzKTsgcmV0dXJuIGkgIT09IHIgJiYgKGUgPSAociA9IGkpICYmIFZpKHQsIGkpKSwgZSB9IHJldHVybiBpLl92YWx1ZSA9IG4sIGkgfSBmdW5jdGlvbiBRaSh0LCBuKSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IFJpKHRoaXMsIHQpLmRlbGF5ID0gK24uYXBwbHkodGhpcywgYXJndW1lbnRzKSB9IH0gZnVuY3Rpb24gSmkodCwgbikgeyByZXR1cm4gbiA9ICtuLCBmdW5jdGlvbiAoKSB7IFJpKHRoaXMsIHQpLmRlbGF5ID0gbiB9IH0gZnVuY3Rpb24gdG8odCwgbikgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyBGaSh0aGlzLCB0KS5kdXJhdGlvbiA9ICtuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfSB9IGZ1bmN0aW9uIG5vKHQsIG4pIHsgcmV0dXJuIG4gPSArbiwgZnVuY3Rpb24gKCkgeyBGaSh0aGlzLCB0KS5kdXJhdGlvbiA9IG4gfSB9IGZ1bmN0aW9uIGVvKHQsIG4pIHsgaWYgKCJmdW5jdGlvbiIgIT0gdHlwZW9mIG4pIHRocm93IG5ldyBFcnJvcjsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgRmkodGhpcywgdCkuZWFzZSA9IG4gfSB9IGZ1bmN0aW9uIHJvKHQsIG4sIGUpIHsgdmFyIHIsIGksIG8gPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gKHQgKyAiIikudHJpbSgpLnNwbGl0KC9efFxzKy8pLmV2ZXJ5KChmdW5jdGlvbiAodCkgeyB2YXIgbiA9IHQuaW5kZXhPZigiLiIpOyByZXR1cm4gbiA+PSAwICYmICh0ID0gdC5zbGljZSgwLCBuKSksICF0IHx8ICJzdGFydCIgPT09IHQgfSkpIH0obikgPyBSaSA6IEZpOyByZXR1cm4gZnVuY3Rpb24gKCkgeyB2YXIgYSA9IG8odGhpcywgdCksIHUgPSBhLm9uOyB1ICE9PSByICYmIChpID0gKHIgPSB1KS5jb3B5KCkpLm9uKG4sIGUpLCBhLm9uID0gaSB9IH0gdmFyIGlvID0gVm4ucHJvdG90eXBlLmNvbnN0cnVjdG9yOyBmdW5jdGlvbiBvbyh0KSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkodCkgfSB9IGZ1bmN0aW9uIGFvKHQsIG4sIGUpIHsgcmV0dXJuIGZ1bmN0aW9uIChyKSB7IHRoaXMuc3R5bGUuc2V0UHJvcGVydHkodCwgbi5jYWxsKHRoaXMsIHIpLCBlKSB9IH0gZnVuY3Rpb24gdW8odCwgbiwgZSkgeyB2YXIgciwgaTsgZnVuY3Rpb24gbygpIHsgdmFyIG8gPSBuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IHJldHVybiBvICE9PSBpICYmIChyID0gKGkgPSBvKSAmJiBhbyh0LCBvLCBlKSksIHIgfSByZXR1cm4gby5fdmFsdWUgPSBuLCBvIH0gZnVuY3Rpb24gY28odCkgeyByZXR1cm4gZnVuY3Rpb24gKG4pIHsgdGhpcy50ZXh0Q29udGVudCA9IHQuY2FsbCh0aGlzLCBuKSB9IH0gZnVuY3Rpb24gZm8odCkgeyB2YXIgbiwgZTsgZnVuY3Rpb24gcigpIHsgdmFyIHIgPSB0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IHJldHVybiByICE9PSBlICYmIChuID0gKGUgPSByKSAmJiBjbyhyKSksIG4gfSByZXR1cm4gci5fdmFsdWUgPSB0LCByIH0gdmFyIHNvID0gMDsgZnVuY3Rpb24gbG8odCwgbiwgZSwgcikgeyB0aGlzLl9ncm91cHMgPSB0LCB0aGlzLl9wYXJlbnRzID0gbiwgdGhpcy5fbmFtZSA9IGUsIHRoaXMuX2lkID0gciB9IGZ1bmN0aW9uIGhvKHQpIHsgcmV0dXJuIFZuKCkudHJhbnNpdGlvbih0KSB9IGZ1bmN0aW9uIHBvKCkgeyByZXR1cm4gKytzbyB9IHZhciBnbyA9IFZuLnByb3RvdHlwZTsgbG8ucHJvdG90eXBlID0gaG8ucHJvdG90eXBlID0geyBjb25zdHJ1Y3RvcjogbG8sIHNlbGVjdDogZnVuY3Rpb24gKHQpIHsgdmFyIG4gPSB0aGlzLl9uYW1lLCBlID0gdGhpcy5faWQ7ICJmdW5jdGlvbiIgIT0gdHlwZW9mIHQgJiYgKHQgPSBZdCh0KSk7IGZvciAodmFyIHIgPSB0aGlzLl9ncm91cHMsIGkgPSByLmxlbmd0aCwgbyA9IG5ldyBBcnJheShpKSwgYSA9IDA7IGEgPCBpOyArK2EpZm9yICh2YXIgdSwgYywgZiA9IHJbYV0sIHMgPSBmLmxlbmd0aCwgbCA9IG9bYV0gPSBuZXcgQXJyYXkocyksIGggPSAwOyBoIDwgczsgKytoKSh1ID0gZltoXSkgJiYgKGMgPSB0LmNhbGwodSwgdS5fX2RhdGFfXywgaCwgZikpICYmICgiX19kYXRhX18iIGluIHUgJiYgKGMuX19kYXRhX18gPSB1Ll9fZGF0YV9fKSwgbFtoXSA9IGMsIERpKGxbaF0sIG4sIGUsIGgsIGwsIHFpKHUsIGUpKSk7IHJldHVybiBuZXcgbG8obywgdGhpcy5fcGFyZW50cywgbiwgZSkgfSwgc2VsZWN0QWxsOiBmdW5jdGlvbiAodCkgeyB2YXIgbiA9IHRoaXMuX25hbWUsIGUgPSB0aGlzLl9pZDsgImZ1bmN0aW9uIiAhPSB0eXBlb2YgdCAmJiAodCA9ICR0KHQpKTsgZm9yICh2YXIgciA9IHRoaXMuX2dyb3VwcywgaSA9IHIubGVuZ3RoLCBvID0gW10sIGEgPSBbXSwgdSA9IDA7IHUgPCBpOyArK3UpZm9yICh2YXIgYywgZiA9IHJbdV0sIHMgPSBmLmxlbmd0aCwgbCA9IDA7IGwgPCBzOyArK2wpaWYgKGMgPSBmW2xdKSB7IGZvciAodmFyIGgsIGQgPSB0LmNhbGwoYywgYy5fX2RhdGFfXywgbCwgZiksIHAgPSBxaShjLCBlKSwgZyA9IDAsIHkgPSBkLmxlbmd0aDsgZyA8IHk7ICsrZykoaCA9IGRbZ10pICYmIERpKGgsIG4sIGUsIGcsIGQsIHApOyBvLnB1c2goZCksIGEucHVzaChjKSB9IHJldHVybiBuZXcgbG8obywgYSwgbiwgZSkgfSwgc2VsZWN0Q2hpbGQ6IGdvLnNlbGVjdENoaWxkLCBzZWxlY3RDaGlsZHJlbjogZ28uc2VsZWN0Q2hpbGRyZW4sIGZpbHRlcjogZnVuY3Rpb24gKHQpIHsgImZ1bmN0aW9uIiAhPSB0eXBlb2YgdCAmJiAodCA9IEh0KHQpKTsgZm9yICh2YXIgbiA9IHRoaXMuX2dyb3VwcywgZSA9IG4ubGVuZ3RoLCByID0gbmV3IEFycmF5KGUpLCBpID0gMDsgaSA8IGU7ICsraSlmb3IgKHZhciBvLCBhID0gbltpXSwgdSA9IGEubGVuZ3RoLCBjID0gcltpXSA9IFtdLCBmID0gMDsgZiA8IHU7ICsrZikobyA9IGFbZl0pICYmIHQuY2FsbChvLCBvLl9fZGF0YV9fLCBmLCBhKSAmJiBjLnB1c2gobyk7IHJldHVybiBuZXcgbG8ociwgdGhpcy5fcGFyZW50cywgdGhpcy5fbmFtZSwgdGhpcy5faWQpIH0sIG1lcmdlOiBmdW5jdGlvbiAodCkgeyBpZiAodC5faWQgIT09IHRoaXMuX2lkKSB0aHJvdyBuZXcgRXJyb3I7IGZvciAodmFyIG4gPSB0aGlzLl9ncm91cHMsIGUgPSB0Ll9ncm91cHMsIHIgPSBuLmxlbmd0aCwgaSA9IGUubGVuZ3RoLCBvID0gTWF0aC5taW4ociwgaSksIGEgPSBuZXcgQXJyYXkociksIHUgPSAwOyB1IDwgbzsgKyt1KWZvciAodmFyIGMsIGYgPSBuW3VdLCBzID0gZVt1XSwgbCA9IGYubGVuZ3RoLCBoID0gYVt1XSA9IG5ldyBBcnJheShsKSwgZCA9IDA7IGQgPCBsOyArK2QpKGMgPSBmW2RdIHx8IHNbZF0pICYmIChoW2RdID0gYyk7IGZvciAoOyB1IDwgcjsgKyt1KWFbdV0gPSBuW3VdOyByZXR1cm4gbmV3IGxvKGEsIHRoaXMuX3BhcmVudHMsIHRoaXMuX25hbWUsIHRoaXMuX2lkKSB9LCBzZWxlY3Rpb246IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG5ldyBpbyh0aGlzLl9ncm91cHMsIHRoaXMuX3BhcmVudHMpIH0sIHRyYW5zaXRpb246IGZ1bmN0aW9uICgpIHsgZm9yICh2YXIgdCA9IHRoaXMuX25hbWUsIG4gPSB0aGlzLl9pZCwgZSA9IHBvKCksIHIgPSB0aGlzLl9ncm91cHMsIGkgPSByLmxlbmd0aCwgbyA9IDA7IG8gPCBpOyArK28pZm9yICh2YXIgYSwgdSA9IHJbb10sIGMgPSB1Lmxlbmd0aCwgZiA9IDA7IGYgPCBjOyArK2YpaWYgKGEgPSB1W2ZdKSB7IHZhciBzID0gcWkoYSwgbik7IERpKGEsIHQsIGUsIGYsIHUsIHsgdGltZTogcy50aW1lICsgcy5kZWxheSArIHMuZHVyYXRpb24sIGRlbGF5OiAwLCBkdXJhdGlvbjogcy5kdXJhdGlvbiwgZWFzZTogcy5lYXNlIH0pIH0gcmV0dXJuIG5ldyBsbyhyLCB0aGlzLl9wYXJlbnRzLCB0LCBlKSB9LCBjYWxsOiBnby5jYWxsLCBub2RlczogZ28ubm9kZXMsIG5vZGU6IGdvLm5vZGUsIHNpemU6IGdvLnNpemUsIGVtcHR5OiBnby5lbXB0eSwgZWFjaDogZ28uZWFjaCwgb246IGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlID0gdGhpcy5faWQ7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoIDwgMiA/IHFpKHRoaXMubm9kZSgpLCBlKS5vbi5vbih0KSA6IHRoaXMuZWFjaChybyhlLCB0LCBuKSkgfSwgYXR0cjogZnVuY3Rpb24gKHQsIG4pIHsgdmFyIGUgPSBxdCh0KSwgciA9ICJ0cmFuc2Zvcm0iID09PSBlID8gSnIgOiBZaTsgcmV0dXJuIHRoaXMuYXR0clR3ZWVuKHQsICJmdW5jdGlvbiIgPT0gdHlwZW9mIG4gPyAoZS5sb2NhbCA/IEdpIDogWGkpKGUsIHIsIEJpKHRoaXMsICJhdHRyLiIgKyB0LCBuKSkgOiBudWxsID09IG4gPyAoZS5sb2NhbCA/IGppIDogTGkpKGUpIDogKGUubG9jYWwgPyBIaSA6ICRpKShlLCByLCBuKSkgfSwgYXR0clR3ZWVuOiBmdW5jdGlvbiAodCwgbikgeyB2YXIgZSA9ICJhdHRyLiIgKyB0OyBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHJldHVybiAoZSA9IHRoaXMudHdlZW4oZSkpICYmIGUuX3ZhbHVlOyBpZiAobnVsbCA9PSBuKSByZXR1cm4gdGhpcy50d2VlbihlLCBudWxsKTsgaWYgKCJmdW5jdGlvbiIgIT0gdHlwZW9mIG4pIHRocm93IG5ldyBFcnJvcjsgdmFyIHIgPSBxdCh0KTsgcmV0dXJuIHRoaXMudHdlZW4oZSwgKHIubG9jYWwgPyBaaSA6IEtpKShyLCBuKSkgfSwgc3R5bGU6IGZ1bmN0aW9uICh0LCBuLCBlKSB7IHZhciByID0gInRyYW5zZm9ybSIgPT0gKHQgKz0gIiIpID8gUXIgOiBZaTsgcmV0dXJuIG51bGwgPT0gbiA/IHRoaXMuc3R5bGVUd2Vlbih0LCBmdW5jdGlvbiAodCwgbikgeyB2YXIgZSwgciwgaTsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIG8gPSB5bih0aGlzLCB0KSwgYSA9ICh0aGlzLnN0eWxlLnJlbW92ZVByb3BlcnR5KHQpLCB5bih0aGlzLCB0KSk7IHJldHVybiBvID09PSBhID8gbnVsbCA6IG8gPT09IGUgJiYgYSA9PT0gciA/IGkgOiBpID0gbihlID0gbywgciA9IGEpIH0gfSh0LCByKSkub24oImVuZC5zdHlsZS4iICsgdCwgb28odCkpIDogImZ1bmN0aW9uIiA9PSB0eXBlb2YgbiA/IHRoaXMuc3R5bGVUd2Vlbih0LCBmdW5jdGlvbiAodCwgbiwgZSkgeyB2YXIgciwgaSwgbzsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIGEgPSB5bih0aGlzLCB0KSwgdSA9IGUodGhpcyksIGMgPSB1ICsgIiI7IHJldHVybiBudWxsID09IHUgJiYgKHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkodCksIGMgPSB1ID0geW4odGhpcywgdCkpLCBhID09PSBjID8gbnVsbCA6IGEgPT09IHIgJiYgYyA9PT0gaSA/IG8gOiAoaSA9IGMsIG8gPSBuKHIgPSBhLCB1KSkgfSB9KHQsIHIsIEJpKHRoaXMsICJzdHlsZS4iICsgdCwgbikpKS5lYWNoKGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlLCByLCBpLCBvLCBhID0gInN0eWxlLiIgKyBuLCB1ID0gImVuZC4iICsgYTsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIGMgPSBGaSh0aGlzLCB0KSwgZiA9IGMub24sIHMgPSBudWxsID09IGMudmFsdWVbYV0gPyBvIHx8IChvID0gb28obikpIDogdm9pZCAwOyBmID09PSBlICYmIGkgPT09IHMgfHwgKHIgPSAoZSA9IGYpLmNvcHkoKSkub24odSwgaSA9IHMpLCBjLm9uID0gciB9IH0odGhpcy5faWQsIHQpKSA6IHRoaXMuc3R5bGVUd2Vlbih0LCBmdW5jdGlvbiAodCwgbiwgZSkgeyB2YXIgciwgaSwgbyA9IGUgKyAiIjsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIGEgPSB5bih0aGlzLCB0KTsgcmV0dXJuIGEgPT09IG8gPyBudWxsIDogYSA9PT0gciA/IGkgOiBpID0gbihyID0gYSwgZSkgfSB9KHQsIHIsIG4pLCBlKS5vbigiZW5kLnN0eWxlLiIgKyB0LCBudWxsKSB9LCBzdHlsZVR3ZWVuOiBmdW5jdGlvbiAodCwgbiwgZSkgeyB2YXIgciA9ICJzdHlsZS4iICsgKHQgKz0gIiIpOyBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHJldHVybiAociA9IHRoaXMudHdlZW4ocikpICYmIHIuX3ZhbHVlOyBpZiAobnVsbCA9PSBuKSByZXR1cm4gdGhpcy50d2VlbihyLCBudWxsKTsgaWYgKCJmdW5jdGlvbiIgIT0gdHlwZW9mIG4pIHRocm93IG5ldyBFcnJvcjsgcmV0dXJuIHRoaXMudHdlZW4ociwgdW8odCwgbiwgbnVsbCA9PSBlID8gIiIgOiBlKSkgfSwgdGV4dDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHRoaXMudHdlZW4oInRleHQiLCAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIG4gPSB0KHRoaXMpOyB0aGlzLnRleHRDb250ZW50ID0gbnVsbCA9PSBuID8gIiIgOiBuIH0gfShCaSh0aGlzLCAidGV4dCIsIHQpKSA6IGZ1bmN0aW9uICh0KSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHRoaXMudGV4dENvbnRlbnQgPSB0IH0gfShudWxsID09IHQgPyAiIiA6IHQgKyAiIikpIH0sIHRleHRUd2VlbjogZnVuY3Rpb24gKHQpIHsgdmFyIG4gPSAidGV4dCI7IGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMSkgcmV0dXJuIChuID0gdGhpcy50d2VlbihuKSkgJiYgbi5fdmFsdWU7IGlmIChudWxsID09IHQpIHJldHVybiB0aGlzLnR3ZWVuKG4sIG51bGwpOyBpZiAoImZ1bmN0aW9uIiAhPSB0eXBlb2YgdCkgdGhyb3cgbmV3IEVycm9yOyByZXR1cm4gdGhpcy50d2VlbihuLCBmbyh0KSkgfSwgcmVtb3ZlOiBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzLm9uKCJlbmQucmVtb3ZlIiwgZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIG4gPSB0aGlzLnBhcmVudE5vZGU7IGZvciAodmFyIGUgaW4gdGhpcy5fX3RyYW5zaXRpb24pIGlmICgrZSAhPT0gdCkgcmV0dXJuOyBuICYmIG4ucmVtb3ZlQ2hpbGQodGhpcykgfSB9KHRoaXMuX2lkKSkgfSwgdHdlZW46IGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlID0gdGhpcy5faWQ7IGlmICh0ICs9ICIiLCBhcmd1bWVudHMubGVuZ3RoIDwgMikgeyBmb3IgKHZhciByLCBpID0gcWkodGhpcy5ub2RlKCksIGUpLnR3ZWVuLCBvID0gMCwgYSA9IGkubGVuZ3RoOyBvIDwgYTsgKytvKWlmICgociA9IGlbb10pLm5hbWUgPT09IHQpIHJldHVybiByLnZhbHVlOyByZXR1cm4gbnVsbCB9IHJldHVybiB0aGlzLmVhY2goKG51bGwgPT0gbiA/IE9pIDogVWkpKGUsIHQsIG4pKSB9LCBkZWxheTogZnVuY3Rpb24gKHQpIHsgdmFyIG4gPSB0aGlzLl9pZDsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyB0aGlzLmVhY2goKCJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyBRaSA6IEppKShuLCB0KSkgOiBxaSh0aGlzLm5vZGUoKSwgbikuZGVsYXkgfSwgZHVyYXRpb246IGZ1bmN0aW9uICh0KSB7IHZhciBuID0gdGhpcy5faWQ7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gdGhpcy5lYWNoKCgiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdG8gOiBubykobiwgdCkpIDogcWkodGhpcy5ub2RlKCksIG4pLmR1cmF0aW9uIH0sIGVhc2U6IGZ1bmN0aW9uICh0KSB7IHZhciBuID0gdGhpcy5faWQ7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gdGhpcy5lYWNoKGVvKG4sIHQpKSA6IHFpKHRoaXMubm9kZSgpLCBuKS5lYXNlIH0sIGVhc2VWYXJ5aW5nOiBmdW5jdGlvbiAodCkgeyBpZiAoImZ1bmN0aW9uIiAhPSB0eXBlb2YgdCkgdGhyb3cgbmV3IEVycm9yOyByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHZhciBlID0gbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyBpZiAoImZ1bmN0aW9uIiAhPSB0eXBlb2YgZSkgdGhyb3cgbmV3IEVycm9yOyBGaSh0aGlzLCB0KS5lYXNlID0gZSB9IH0odGhpcy5faWQsIHQpKSB9LCBlbmQ6IGZ1bmN0aW9uICgpIHsgdmFyIHQsIG4sIGUgPSB0aGlzLCByID0gZS5faWQsIGkgPSBlLnNpemUoKTsgcmV0dXJuIG5ldyBQcm9taXNlKChmdW5jdGlvbiAobywgYSkgeyB2YXIgdSA9IHsgdmFsdWU6IGEgfSwgYyA9IHsgdmFsdWU6IGZ1bmN0aW9uICgpIHsgMCA9PSAtLWkgJiYgbygpIH0gfTsgZS5lYWNoKChmdW5jdGlvbiAoKSB7IHZhciBlID0gRmkodGhpcywgciksIGkgPSBlLm9uOyBpICE9PSB0ICYmICgobiA9ICh0ID0gaSkuY29weSgpKS5fLmNhbmNlbC5wdXNoKHUpLCBuLl8uaW50ZXJydXB0LnB1c2godSksIG4uXy5lbmQucHVzaChjKSksIGUub24gPSBuIH0pKSwgMCA9PT0gaSAmJiBvKCkgfSkpIH0sIFtTeW1ib2wuaXRlcmF0b3JdOiBnb1tTeW1ib2wuaXRlcmF0b3JdIH07IGZ1bmN0aW9uIHlvKHQpIHsgcmV0dXJuICgodCAqPSAyKSA8PSAxID8gdCAqIHQgOiAtLXQgKiAoMiAtIHQpICsgMSkgLyAyIH0gZnVuY3Rpb24gdm8odCkgeyByZXR1cm4gKCh0ICo9IDIpIDw9IDEgPyB0ICogdCAqIHQgOiAodCAtPSAyKSAqIHQgKiB0ICsgMikgLyAyIH0gdmFyIF9vID0gZnVuY3Rpb24gdChuKSB7IGZ1bmN0aW9uIGUodCkgeyByZXR1cm4gTWF0aC5wb3codCwgbikgfSByZXR1cm4gbiA9ICtuLCBlLmV4cG9uZW50ID0gdCwgZSB9KDMpLCBibyA9IGZ1bmN0aW9uIHQobikgeyBmdW5jdGlvbiBlKHQpIHsgcmV0dXJuIDEgLSBNYXRoLnBvdygxIC0gdCwgbikgfSByZXR1cm4gbiA9ICtuLCBlLmV4cG9uZW50ID0gdCwgZSB9KDMpLCBtbyA9IGZ1bmN0aW9uIHQobikgeyBmdW5jdGlvbiBlKHQpIHsgcmV0dXJuICgodCAqPSAyKSA8PSAxID8gTWF0aC5wb3codCwgbikgOiAyIC0gTWF0aC5wb3coMiAtIHQsIG4pKSAvIDIgfSByZXR1cm4gbiA9ICtuLCBlLmV4cG9uZW50ID0gdCwgZSB9KDMpLCB4byA9IE1hdGguUEksIHdvID0geG8gLyAyOyBmdW5jdGlvbiBNbyh0KSB7IHJldHVybiAoMSAtIE1hdGguY29zKHhvICogdCkpIC8gMiB9IGZ1bmN0aW9uIEFvKHQpIHsgcmV0dXJuIDEuMDAwOTc3NTE3MTA2NTQ5NCAqIChNYXRoLnBvdygyLCAtMTAgKiB0KSAtIC4wMDA5NzY1NjI1KSB9IGZ1bmN0aW9uIFRvKHQpIHsgcmV0dXJuICgodCAqPSAyKSA8PSAxID8gQW8oMSAtIHQpIDogMiAtIEFvKHQgLSAxKSkgLyAyIH0gZnVuY3Rpb24gU28odCkgeyByZXR1cm4gKCh0ICo9IDIpIDw9IDEgPyAxIC0gTWF0aC5zcXJ0KDEgLSB0ICogdCkgOiBNYXRoLnNxcnQoMSAtICh0IC09IDIpICogdCkgKyAxKSAvIDIgfSB2YXIgRW8gPSA0IC8gMTEsIGtvID0gNy41NjI1OyBmdW5jdGlvbiBObyh0KSB7IHJldHVybiAodCA9ICt0KSA8IEVvID8ga28gKiB0ICogdCA6IHQgPCAuNzI3MjcyNzI3MjcyNzI3MyA/IGtvICogKHQgLT0gLjU0NTQ1NDU0NTQ1NDU0NTQpICogdCArIC43NSA6IHQgPCAuOTA5MDkwOTA5MDkwOTA5MSA/IGtvICogKHQgLT0gLjgxODE4MTgxODE4MTgxODIpICogdCArIC45Mzc1IDoga28gKiAodCAtPSAuOTU0NTQ1NDU0NTQ1NDU0NikgKiB0ICsgLjk4NDM3NSB9IHZhciBDbyA9IDEuNzAxNTgsIFBvID0gZnVuY3Rpb24gdChuKSB7IGZ1bmN0aW9uIGUodCkgeyByZXR1cm4gKHQgPSArdCkgKiB0ICogKG4gKiAodCAtIDEpICsgdCkgfSByZXR1cm4gbiA9ICtuLCBlLm92ZXJzaG9vdCA9IHQsIGUgfShDbyksIHpvID0gZnVuY3Rpb24gdChuKSB7IGZ1bmN0aW9uIGUodCkgeyByZXR1cm4gLS10ICogdCAqICgodCArIDEpICogbiArIHQpICsgMSB9IHJldHVybiBuID0gK24sIGUub3ZlcnNob290ID0gdCwgZSB9KENvKSwgRG8gPSBmdW5jdGlvbiB0KG4pIHsgZnVuY3Rpb24gZSh0KSB7IHJldHVybiAoKHQgKj0gMikgPCAxID8gdCAqIHQgKiAoKG4gKyAxKSAqIHQgLSBuKSA6ICh0IC09IDIpICogdCAqICgobiArIDEpICogdCArIG4pICsgMikgLyAyIH0gcmV0dXJuIG4gPSArbiwgZS5vdmVyc2hvb3QgPSB0LCBlIH0oQ28pLCBSbyA9IDIgKiBNYXRoLlBJLCBGbyA9IGZ1bmN0aW9uIHQobiwgZSkgeyB2YXIgciA9IE1hdGguYXNpbigxIC8gKG4gPSBNYXRoLm1heCgxLCBuKSkpICogKGUgLz0gUm8pOyBmdW5jdGlvbiBpKHQpIHsgcmV0dXJuIG4gKiBBbygtIC0tdCkgKiBNYXRoLnNpbigociAtIHQpIC8gZSkgfSByZXR1cm4gaS5hbXBsaXR1ZGUgPSBmdW5jdGlvbiAobikgeyByZXR1cm4gdChuLCBlICogUm8pIH0sIGkucGVyaW9kID0gZnVuY3Rpb24gKGUpIHsgcmV0dXJuIHQobiwgZSkgfSwgaSB9KDEsIC4zKSwgcW8gPSBmdW5jdGlvbiB0KG4sIGUpIHsgdmFyIHIgPSBNYXRoLmFzaW4oMSAvIChuID0gTWF0aC5tYXgoMSwgbikpKSAqIChlIC89IFJvKTsgZnVuY3Rpb24gaSh0KSB7IHJldHVybiAxIC0gbiAqIEFvKHQgPSArdCkgKiBNYXRoLnNpbigodCArIHIpIC8gZSkgfSByZXR1cm4gaS5hbXBsaXR1ZGUgPSBmdW5jdGlvbiAobikgeyByZXR1cm4gdChuLCBlICogUm8pIH0sIGkucGVyaW9kID0gZnVuY3Rpb24gKGUpIHsgcmV0dXJuIHQobiwgZSkgfSwgaSB9KDEsIC4zKSwgSW8gPSBmdW5jdGlvbiB0KG4sIGUpIHsgdmFyIHIgPSBNYXRoLmFzaW4oMSAvIChuID0gTWF0aC5tYXgoMSwgbikpKSAqIChlIC89IFJvKTsgZnVuY3Rpb24gaSh0KSB7IHJldHVybiAoKHQgPSAyICogdCAtIDEpIDwgMCA/IG4gKiBBbygtdCkgKiBNYXRoLnNpbigociAtIHQpIC8gZSkgOiAyIC0gbiAqIEFvKHQpICogTWF0aC5zaW4oKHIgKyB0KSAvIGUpKSAvIDIgfSByZXR1cm4gaS5hbXBsaXR1ZGUgPSBmdW5jdGlvbiAobikgeyByZXR1cm4gdChuLCBlICogUm8pIH0sIGkucGVyaW9kID0gZnVuY3Rpb24gKGUpIHsgcmV0dXJuIHQobiwgZSkgfSwgaSB9KDEsIC4zKSwgT28gPSB7IHRpbWU6IG51bGwsIGRlbGF5OiAwLCBkdXJhdGlvbjogMjUwLCBlYXNlOiB2byB9OyBmdW5jdGlvbiBVbyh0LCBuKSB7IGZvciAodmFyIGU7ICEoZSA9IHQuX190cmFuc2l0aW9uKSB8fCAhKGUgPSBlW25dKTspaWYgKCEodCA9IHQucGFyZW50Tm9kZSkpIHRocm93IG5ldyBFcnJvcihgdHJhbnNpdGlvbiAke259IG5vdCBmb3VuZGApOyByZXR1cm4gZSB9IFZuLnByb3RvdHlwZS5pbnRlcnJ1cHQgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gdGhpcy5lYWNoKChmdW5jdGlvbiAoKSB7IElpKHRoaXMsIHQpIH0pKSB9LCBWbi5wcm90b3R5cGUudHJhbnNpdGlvbiA9IGZ1bmN0aW9uICh0KSB7IHZhciBuLCBlOyB0IGluc3RhbmNlb2YgbG8gPyAobiA9IHQuX2lkLCB0ID0gdC5fbmFtZSkgOiAobiA9IHBvKCksIChlID0gT28pLnRpbWUgPSB3aSgpLCB0ID0gbnVsbCA9PSB0ID8gbnVsbCA6IHQgKyAiIik7IGZvciAodmFyIHIgPSB0aGlzLl9ncm91cHMsIGkgPSByLmxlbmd0aCwgbyA9IDA7IG8gPCBpOyArK28pZm9yICh2YXIgYSwgdSA9IHJbb10sIGMgPSB1Lmxlbmd0aCwgZiA9IDA7IGYgPCBjOyArK2YpKGEgPSB1W2ZdKSAmJiBEaShhLCB0LCBuLCBmLCB1LCBlIHx8IFVvKGEsIG4pKTsgcmV0dXJuIG5ldyBsbyhyLCB0aGlzLl9wYXJlbnRzLCB0LCBuKSB9OyB2YXIgQm8gPSBbbnVsbF07IHZhciBZbyA9IHQgPT4gKCkgPT4gdDsgZnVuY3Rpb24gTG8odCwgeyBzb3VyY2VFdmVudDogbiwgdGFyZ2V0OiBlLCBzZWxlY3Rpb246IHIsIG1vZGU6IGksIGRpc3BhdGNoOiBvIH0pIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGhpcywgeyB0eXBlOiB7IHZhbHVlOiB0LCBlbnVtZXJhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCB9LCBzb3VyY2VFdmVudDogeyB2YWx1ZTogbiwgZW51bWVyYWJsZTogITAsIGNvbmZpZ3VyYWJsZTogITAgfSwgdGFyZ2V0OiB7IHZhbHVlOiBlLCBlbnVtZXJhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCB9LCBzZWxlY3Rpb246IHsgdmFsdWU6IHIsIGVudW1lcmFibGU6ICEwLCBjb25maWd1cmFibGU6ICEwIH0sIG1vZGU6IHsgdmFsdWU6IGksIGVudW1lcmFibGU6ICEwLCBjb25maWd1cmFibGU6ICEwIH0sIF86IHsgdmFsdWU6IG8gfSB9KSB9IGZ1bmN0aW9uIGpvKHQpIHsgdC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKSB9IGZ1bmN0aW9uICRvKHQpIHsgdC5wcmV2ZW50RGVmYXVsdCgpLCB0LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpIH0gdmFyIEhvID0geyBuYW1lOiAiZHJhZyIgfSwgWG8gPSB7IG5hbWU6ICJzcGFjZSIgfSwgR28gPSB7IG5hbWU6ICJoYW5kbGUiIH0sIFZvID0geyBuYW1lOiAiY2VudGVyIiB9OyBjb25zdCB7IGFiczogV28sIG1heDogWm8sIG1pbjogS28gfSA9IE1hdGg7IGZ1bmN0aW9uIFFvKHQpIHsgcmV0dXJuIFsrdFswXSwgK3RbMV1dIH0gZnVuY3Rpb24gSm8odCkgeyByZXR1cm4gW1FvKHRbMF0pLCBRbyh0WzFdKV0gfSB2YXIgdGEgPSB7IG5hbWU6ICJ4IiwgaGFuZGxlczogWyJ3IiwgImUiXS5tYXAoY2EpLCBpbnB1dDogZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIG51bGwgPT0gdCA/IG51bGwgOiBbWyt0WzBdLCBuWzBdWzFdXSwgWyt0WzFdLCBuWzFdWzFdXV0gfSwgb3V0cHV0OiBmdW5jdGlvbiAodCkgeyByZXR1cm4gdCAmJiBbdFswXVswXSwgdFsxXVswXV0gfSB9LCBuYSA9IHsgbmFtZTogInkiLCBoYW5kbGVzOiBbIm4iLCAicyJdLm1hcChjYSksIGlucHV0OiBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gbnVsbCA9PSB0ID8gbnVsbCA6IFtbblswXVswXSwgK3RbMF1dLCBbblsxXVswXSwgK3RbMV1dXSB9LCBvdXRwdXQ6IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0ICYmIFt0WzBdWzFdLCB0WzFdWzFdXSB9IH0sIGVhID0geyBuYW1lOiAieHkiLCBoYW5kbGVzOiBbIm4iLCAidyIsICJlIiwgInMiLCAibnciLCAibmUiLCAic3ciLCAic2UiXS5tYXAoY2EpLCBpbnB1dDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIG51bGwgPT0gdCA/IG51bGwgOiBKbyh0KSB9LCBvdXRwdXQ6IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0IH0gfSwgcmEgPSB7IG92ZXJsYXk6ICJjcm9zc2hhaXIiLCBzZWxlY3Rpb246ICJtb3ZlIiwgbjogIm5zLXJlc2l6ZSIsIGU6ICJldy1yZXNpemUiLCBzOiAibnMtcmVzaXplIiwgdzogImV3LXJlc2l6ZSIsIG53OiAibndzZS1yZXNpemUiLCBuZTogIm5lc3ctcmVzaXplIiwgc2U6ICJud3NlLXJlc2l6ZSIsIHN3OiAibmVzdy1yZXNpemUiIH0sIGlhID0geyBlOiAidyIsIHc6ICJlIiwgbnc6ICJuZSIsIG5lOiAibnciLCBzZTogInN3Iiwgc3c6ICJzZSIgfSwgb2EgPSB7IG46ICJzIiwgczogIm4iLCBudzogInN3IiwgbmU6ICJzZSIsIHNlOiAibmUiLCBzdzogIm53IiB9LCBhYSA9IHsgb3ZlcmxheTogMSwgc2VsZWN0aW9uOiAxLCBuOiBudWxsLCBlOiAxLCBzOiBudWxsLCB3OiAtMSwgbnc6IC0xLCBuZTogMSwgc2U6IDEsIHN3OiAtMSB9LCB1YSA9IHsgb3ZlcmxheTogMSwgc2VsZWN0aW9uOiAxLCBuOiAtMSwgZTogbnVsbCwgczogMSwgdzogbnVsbCwgbnc6IC0xLCBuZTogLTEsIHNlOiAxLCBzdzogMSB9OyBmdW5jdGlvbiBjYSh0KSB7IHJldHVybiB7IHR5cGU6IHQgfSB9IGZ1bmN0aW9uIGZhKHQpIHsgcmV0dXJuICF0LmN0cmxLZXkgJiYgIXQuYnV0dG9uIH0gZnVuY3Rpb24gc2EoKSB7IHZhciB0ID0gdGhpcy5vd25lclNWR0VsZW1lbnQgfHwgdGhpczsgcmV0dXJuIHQuaGFzQXR0cmlidXRlKCJ2aWV3Qm94IikgPyBbWyh0ID0gdC52aWV3Qm94LmJhc2VWYWwpLngsIHQueV0sIFt0LnggKyB0LndpZHRoLCB0LnkgKyB0LmhlaWdodF1dIDogW1swLCAwXSwgW3Qud2lkdGguYmFzZVZhbC52YWx1ZSwgdC5oZWlnaHQuYmFzZVZhbC52YWx1ZV1dIH0gZnVuY3Rpb24gbGEoKSB7IHJldHVybiBuYXZpZ2F0b3IubWF4VG91Y2hQb2ludHMgfHwgIm9udG91Y2hzdGFydCIgaW4gdGhpcyB9IGZ1bmN0aW9uIGhhKHQpIHsgZm9yICg7ICF0Ll9fYnJ1c2g7KWlmICghKHQgPSB0LnBhcmVudE5vZGUpKSByZXR1cm47IHJldHVybiB0Ll9fYnJ1c2ggfSBmdW5jdGlvbiBkYSh0KSB7IHJldHVybiB0WzBdWzBdID09PSB0WzFdWzBdIHx8IHRbMF1bMV0gPT09IHRbMV1bMV0gfSBmdW5jdGlvbiBwYSh0KSB7IHZhciBuLCBlID0gc2EsIHIgPSBmYSwgaSA9IGxhLCBvID0gITAsIGEgPSBOdCgic3RhcnQiLCAiYnJ1c2giLCAiZW5kIiksIHUgPSA2OyBmdW5jdGlvbiBjKG4pIHsgdmFyIGUgPSBuLnByb3BlcnR5KCJfX2JydXNoIiwgZykuc2VsZWN0QWxsKCIub3ZlcmxheSIpLmRhdGEoW2NhKCJvdmVybGF5IildKTsgZS5lbnRlcigpLmFwcGVuZCgicmVjdCIpLmF0dHIoImNsYXNzIiwgIm92ZXJsYXkiKS5hdHRyKCJwb2ludGVyLWV2ZW50cyIsICJhbGwiKS5hdHRyKCJjdXJzb3IiLCByYS5vdmVybGF5KS5tZXJnZShlKS5lYWNoKChmdW5jdGlvbiAoKSB7IHZhciB0ID0gaGEodGhpcykuZXh0ZW50OyBXbih0aGlzKS5hdHRyKCJ4IiwgdFswXVswXSkuYXR0cigieSIsIHRbMF1bMV0pLmF0dHIoIndpZHRoIiwgdFsxXVswXSAtIHRbMF1bMF0pLmF0dHIoImhlaWdodCIsIHRbMV1bMV0gLSB0WzBdWzFdKSB9KSksIG4uc2VsZWN0QWxsKCIuc2VsZWN0aW9uIikuZGF0YShbY2EoInNlbGVjdGlvbiIpXSkuZW50ZXIoKS5hcHBlbmQoInJlY3QiKS5hdHRyKCJjbGFzcyIsICJzZWxlY3Rpb24iKS5hdHRyKCJjdXJzb3IiLCByYS5zZWxlY3Rpb24pLmF0dHIoImZpbGwiLCAiIzc3NyIpLmF0dHIoImZpbGwtb3BhY2l0eSIsIC4zKS5hdHRyKCJzdHJva2UiLCAiI2ZmZiIpLmF0dHIoInNoYXBlLXJlbmRlcmluZyIsICJjcmlzcEVkZ2VzIik7IHZhciByID0gbi5zZWxlY3RBbGwoIi5oYW5kbGUiKS5kYXRhKHQuaGFuZGxlcywgKGZ1bmN0aW9uICh0KSB7IHJldHVybiB0LnR5cGUgfSkpOyByLmV4aXQoKS5yZW1vdmUoKSwgci5lbnRlcigpLmFwcGVuZCgicmVjdCIpLmF0dHIoImNsYXNzIiwgKGZ1bmN0aW9uICh0KSB7IHJldHVybiAiaGFuZGxlIGhhbmRsZS0tIiArIHQudHlwZSB9KSkuYXR0cigiY3Vyc29yIiwgKGZ1bmN0aW9uICh0KSB7IHJldHVybiByYVt0LnR5cGVdIH0pKSwgbi5lYWNoKGYpLmF0dHIoImZpbGwiLCAibm9uZSIpLmF0dHIoInBvaW50ZXItZXZlbnRzIiwgImFsbCIpLm9uKCJtb3VzZWRvd24uYnJ1c2giLCBoKS5maWx0ZXIoaSkub24oInRvdWNoc3RhcnQuYnJ1c2giLCBoKS5vbigidG91Y2htb3ZlLmJydXNoIiwgZCkub24oInRvdWNoZW5kLmJydXNoIHRvdWNoY2FuY2VsLmJydXNoIiwgcCkuc3R5bGUoInRvdWNoLWFjdGlvbiIsICJub25lIikuc3R5bGUoIi13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvciIsICJyZ2JhKDAsMCwwLDApIikgfSBmdW5jdGlvbiBmKCkgeyB2YXIgdCA9IFduKHRoaXMpLCBuID0gaGEodGhpcykuc2VsZWN0aW9uOyBuID8gKHQuc2VsZWN0QWxsKCIuc2VsZWN0aW9uIikuc3R5bGUoImRpc3BsYXkiLCBudWxsKS5hdHRyKCJ4IiwgblswXVswXSkuYXR0cigieSIsIG5bMF1bMV0pLmF0dHIoIndpZHRoIiwgblsxXVswXSAtIG5bMF1bMF0pLmF0dHIoImhlaWdodCIsIG5bMV1bMV0gLSBuWzBdWzFdKSwgdC5zZWxlY3RBbGwoIi5oYW5kbGUiKS5zdHlsZSgiZGlzcGxheSIsIG51bGwpLmF0dHIoIngiLCAoZnVuY3Rpb24gKHQpIHsgcmV0dXJuICJlIiA9PT0gdC50eXBlW3QudHlwZS5sZW5ndGggLSAxXSA/IG5bMV1bMF0gLSB1IC8gMiA6IG5bMF1bMF0gLSB1IC8gMiB9KSkuYXR0cigieSIsIChmdW5jdGlvbiAodCkgeyByZXR1cm4gInMiID09PSB0LnR5cGVbMF0gPyBuWzFdWzFdIC0gdSAvIDIgOiBuWzBdWzFdIC0gdSAvIDIgfSkpLmF0dHIoIndpZHRoIiwgKGZ1bmN0aW9uICh0KSB7IHJldHVybiAibiIgPT09IHQudHlwZSB8fCAicyIgPT09IHQudHlwZSA/IG5bMV1bMF0gLSBuWzBdWzBdICsgdSA6IHUgfSkpLmF0dHIoImhlaWdodCIsIChmdW5jdGlvbiAodCkgeyByZXR1cm4gImUiID09PSB0LnR5cGUgfHwgInciID09PSB0LnR5cGUgPyBuWzFdWzFdIC0gblswXVsxXSArIHUgOiB1IH0pKSkgOiB0LnNlbGVjdEFsbCgiLnNlbGVjdGlvbiwuaGFuZGxlIikuc3R5bGUoImRpc3BsYXkiLCAibm9uZSIpLmF0dHIoIngiLCBudWxsKS5hdHRyKCJ5IiwgbnVsbCkuYXR0cigid2lkdGgiLCBudWxsKS5hdHRyKCJoZWlnaHQiLCBudWxsKSB9IGZ1bmN0aW9uIHModCwgbiwgZSkgeyB2YXIgciA9IHQuX19icnVzaC5lbWl0dGVyOyByZXR1cm4gIXIgfHwgZSAmJiByLmNsZWFuID8gbmV3IGwodCwgbiwgZSkgOiByIH0gZnVuY3Rpb24gbCh0LCBuLCBlKSB7IHRoaXMudGhhdCA9IHQsIHRoaXMuYXJncyA9IG4sIHRoaXMuc3RhdGUgPSB0Ll9fYnJ1c2gsIHRoaXMuYWN0aXZlID0gMCwgdGhpcy5jbGVhbiA9IGUgfSBmdW5jdGlvbiBoKGUpIHsgaWYgKCghbiB8fCBlLnRvdWNoZXMpICYmIHIuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgeyB2YXIgaSwgYSwgdSwgYywgbCwgaCwgZCwgcCwgZywgeSwgdiwgXyA9IHRoaXMsIGIgPSBlLnRhcmdldC5fX2RhdGFfXy50eXBlLCBtID0gInNlbGVjdGlvbiIgPT09IChvICYmIGUubWV0YUtleSA/IGIgPSAib3ZlcmxheSIgOiBiKSA/IEhvIDogbyAmJiBlLmFsdEtleSA/IFZvIDogR28sIHggPSB0ID09PSBuYSA/IG51bGwgOiBhYVtiXSwgdyA9IHQgPT09IHRhID8gbnVsbCA6IHVhW2JdLCBNID0gaGEoXyksIEEgPSBNLmV4dGVudCwgVCA9IE0uc2VsZWN0aW9uLCBTID0gQVswXVswXSwgRSA9IEFbMF1bMV0sIGsgPSBBWzFdWzBdLCBOID0gQVsxXVsxXSwgQyA9IDAsIFAgPSAwLCB6ID0geCAmJiB3ICYmIG8gJiYgZS5zaGlmdEtleSwgRCA9IEFycmF5LmZyb20oZS50b3VjaGVzIHx8IFtlXSwgKHQgPT4geyBjb25zdCBuID0gdC5pZGVudGlmaWVyOyByZXR1cm4gKHQgPSB0ZSh0LCBfKSkucG9pbnQwID0gdC5zbGljZSgpLCB0LmlkZW50aWZpZXIgPSBuLCB0IH0pKTsgSWkoXyk7IHZhciBSID0gcyhfLCBhcmd1bWVudHMsICEwKS5iZWZvcmVzdGFydCgpOyBpZiAoIm92ZXJsYXkiID09PSBiKSB7IFQgJiYgKGcgPSAhMCk7IGNvbnN0IG4gPSBbRFswXSwgRFsxXSB8fCBEWzBdXTsgTS5zZWxlY3Rpb24gPSBUID0gW1tpID0gdCA9PT0gbmEgPyBTIDogS28oblswXVswXSwgblsxXVswXSksIHUgPSB0ID09PSB0YSA/IEUgOiBLbyhuWzBdWzFdLCBuWzFdWzFdKV0sIFtsID0gdCA9PT0gbmEgPyBrIDogWm8oblswXVswXSwgblsxXVswXSksIGQgPSB0ID09PSB0YSA/IE4gOiBabyhuWzBdWzFdLCBuWzFdWzFdKV1dLCBELmxlbmd0aCA+IDEgJiYgVShlKSB9IGVsc2UgaSA9IFRbMF1bMF0sIHUgPSBUWzBdWzFdLCBsID0gVFsxXVswXSwgZCA9IFRbMV1bMV07IGEgPSBpLCBjID0gdSwgaCA9IGwsIHAgPSBkOyB2YXIgRiA9IFduKF8pLmF0dHIoInBvaW50ZXItZXZlbnRzIiwgIm5vbmUiKSwgcSA9IEYuc2VsZWN0QWxsKCIub3ZlcmxheSIpLmF0dHIoImN1cnNvciIsIHJhW2JdKTsgaWYgKGUudG91Y2hlcykgUi5tb3ZlZCA9IE8sIFIuZW5kZWQgPSBCOyBlbHNlIHsgdmFyIEkgPSBXbihlLnZpZXcpLm9uKCJtb3VzZW1vdmUuYnJ1c2giLCBPLCAhMCkub24oIm1vdXNldXAuYnJ1c2giLCBCLCAhMCk7IG8gJiYgSS5vbigia2V5ZG93bi5icnVzaCIsIFksICEwKS5vbigia2V5dXAuYnJ1c2giLCBMLCAhMCksIG9lKGUudmlldykgfSBmLmNhbGwoXyksIFIuc3RhcnQoZSwgbS5uYW1lKSB9IGZ1bmN0aW9uIE8odCkgeyBmb3IgKGNvbnN0IG4gb2YgdC5jaGFuZ2VkVG91Y2hlcyB8fCBbdF0pIGZvciAoY29uc3QgdCBvZiBEKSB0LmlkZW50aWZpZXIgPT09IG4uaWRlbnRpZmllciAmJiAodC5jdXIgPSB0ZShuLCBfKSk7IGlmICh6ICYmICF5ICYmICF2ICYmIDEgPT09IEQubGVuZ3RoKSB7IGNvbnN0IHQgPSBEWzBdOyBXbyh0LmN1clswXSAtIHRbMF0pID4gV28odC5jdXJbMV0gLSB0WzFdKSA/IHYgPSAhMCA6IHkgPSAhMCB9IGZvciAoY29uc3QgdCBvZiBEKSB0LmN1ciAmJiAodFswXSA9IHQuY3VyWzBdLCB0WzFdID0gdC5jdXJbMV0pOyBnID0gITAsICRvKHQpLCBVKHQpIH0gZnVuY3Rpb24gVSh0KSB7IGNvbnN0IG4gPSBEWzBdLCBlID0gbi5wb2ludDA7IHZhciByOyBzd2l0Y2ggKEMgPSBuWzBdIC0gZVswXSwgUCA9IG5bMV0gLSBlWzFdLCBtKSB7IGNhc2UgWG86IGNhc2UgSG86IHggJiYgKEMgPSBabyhTIC0gaSwgS28oayAtIGwsIEMpKSwgYSA9IGkgKyBDLCBoID0gbCArIEMpLCB3ICYmIChQID0gWm8oRSAtIHUsIEtvKE4gLSBkLCBQKSksIGMgPSB1ICsgUCwgcCA9IGQgKyBQKTsgYnJlYWs7IGNhc2UgR286IERbMV0gPyAoeCAmJiAoYSA9IFpvKFMsIEtvKGssIERbMF1bMF0pKSwgaCA9IFpvKFMsIEtvKGssIERbMV1bMF0pKSwgeCA9IDEpLCB3ICYmIChjID0gWm8oRSwgS28oTiwgRFswXVsxXSkpLCBwID0gWm8oRSwgS28oTiwgRFsxXVsxXSkpLCB3ID0gMSkpIDogKHggPCAwID8gKEMgPSBabyhTIC0gaSwgS28oayAtIGksIEMpKSwgYSA9IGkgKyBDLCBoID0gbCkgOiB4ID4gMCAmJiAoQyA9IFpvKFMgLSBsLCBLbyhrIC0gbCwgQykpLCBhID0gaSwgaCA9IGwgKyBDKSwgdyA8IDAgPyAoUCA9IFpvKEUgLSB1LCBLbyhOIC0gdSwgUCkpLCBjID0gdSArIFAsIHAgPSBkKSA6IHcgPiAwICYmIChQID0gWm8oRSAtIGQsIEtvKE4gLSBkLCBQKSksIGMgPSB1LCBwID0gZCArIFApKTsgYnJlYWs7IGNhc2UgVm86IHggJiYgKGEgPSBabyhTLCBLbyhrLCBpIC0gQyAqIHgpKSwgaCA9IFpvKFMsIEtvKGssIGwgKyBDICogeCkpKSwgdyAmJiAoYyA9IFpvKEUsIEtvKE4sIHUgLSBQICogdykpLCBwID0gWm8oRSwgS28oTiwgZCArIFAgKiB3KSkpIH1oIDwgYSAmJiAoeCAqPSAtMSwgciA9IGksIGkgPSBsLCBsID0gciwgciA9IGEsIGEgPSBoLCBoID0gciwgYiBpbiBpYSAmJiBxLmF0dHIoImN1cnNvciIsIHJhW2IgPSBpYVtiXV0pKSwgcCA8IGMgJiYgKHcgKj0gLTEsIHIgPSB1LCB1ID0gZCwgZCA9IHIsIHIgPSBjLCBjID0gcCwgcCA9IHIsIGIgaW4gb2EgJiYgcS5hdHRyKCJjdXJzb3IiLCByYVtiID0gb2FbYl1dKSksIE0uc2VsZWN0aW9uICYmIChUID0gTS5zZWxlY3Rpb24pLCB5ICYmIChhID0gVFswXVswXSwgaCA9IFRbMV1bMF0pLCB2ICYmIChjID0gVFswXVsxXSwgcCA9IFRbMV1bMV0pLCBUWzBdWzBdID09PSBhICYmIFRbMF1bMV0gPT09IGMgJiYgVFsxXVswXSA9PT0gaCAmJiBUWzFdWzFdID09PSBwIHx8IChNLnNlbGVjdGlvbiA9IFtbYSwgY10sIFtoLCBwXV0sIGYuY2FsbChfKSwgUi5icnVzaCh0LCBtLm5hbWUpKSB9IGZ1bmN0aW9uIEIodCkgeyBpZiAoam8odCksIHQudG91Y2hlcykgeyBpZiAodC50b3VjaGVzLmxlbmd0aCkgcmV0dXJuOyBuICYmIGNsZWFyVGltZW91dChuKSwgbiA9IHNldFRpbWVvdXQoKGZ1bmN0aW9uICgpIHsgbiA9IG51bGwgfSksIDUwMCkgfSBlbHNlIGFlKHQudmlldywgZyksIEkub24oImtleWRvd24uYnJ1c2gga2V5dXAuYnJ1c2ggbW91c2Vtb3ZlLmJydXNoIG1vdXNldXAuYnJ1c2giLCBudWxsKTsgRi5hdHRyKCJwb2ludGVyLWV2ZW50cyIsICJhbGwiKSwgcS5hdHRyKCJjdXJzb3IiLCByYS5vdmVybGF5KSwgTS5zZWxlY3Rpb24gJiYgKFQgPSBNLnNlbGVjdGlvbiksIGRhKFQpICYmIChNLnNlbGVjdGlvbiA9IG51bGwsIGYuY2FsbChfKSksIFIuZW5kKHQsIG0ubmFtZSkgfSBmdW5jdGlvbiBZKHQpIHsgc3dpdGNoICh0LmtleUNvZGUpIHsgY2FzZSAxNjogeiA9IHggJiYgdzsgYnJlYWs7IGNhc2UgMTg6IG0gPT09IEdvICYmICh4ICYmIChsID0gaCAtIEMgKiB4LCBpID0gYSArIEMgKiB4KSwgdyAmJiAoZCA9IHAgLSBQICogdywgdSA9IGMgKyBQICogdyksIG0gPSBWbywgVSh0KSk7IGJyZWFrOyBjYXNlIDMyOiBtICE9PSBHbyAmJiBtICE9PSBWbyB8fCAoeCA8IDAgPyBsID0gaCAtIEMgOiB4ID4gMCAmJiAoaSA9IGEgLSBDKSwgdyA8IDAgPyBkID0gcCAtIFAgOiB3ID4gMCAmJiAodSA9IGMgLSBQKSwgbSA9IFhvLCBxLmF0dHIoImN1cnNvciIsIHJhLnNlbGVjdGlvbiksIFUodCkpOyBicmVhazsgZGVmYXVsdDogcmV0dXJuIH0kbyh0KSB9IGZ1bmN0aW9uIEwodCkgeyBzd2l0Y2ggKHQua2V5Q29kZSkgeyBjYXNlIDE2OiB6ICYmICh5ID0gdiA9IHogPSAhMSwgVSh0KSk7IGJyZWFrOyBjYXNlIDE4OiBtID09PSBWbyAmJiAoeCA8IDAgPyBsID0gaCA6IHggPiAwICYmIChpID0gYSksIHcgPCAwID8gZCA9IHAgOiB3ID4gMCAmJiAodSA9IGMpLCBtID0gR28sIFUodCkpOyBicmVhazsgY2FzZSAzMjogbSA9PT0gWG8gJiYgKHQuYWx0S2V5ID8gKHggJiYgKGwgPSBoIC0gQyAqIHgsIGkgPSBhICsgQyAqIHgpLCB3ICYmIChkID0gcCAtIFAgKiB3LCB1ID0gYyArIFAgKiB3KSwgbSA9IFZvKSA6ICh4IDwgMCA/IGwgPSBoIDogeCA+IDAgJiYgKGkgPSBhKSwgdyA8IDAgPyBkID0gcCA6IHcgPiAwICYmICh1ID0gYyksIG0gPSBHbyksIHEuYXR0cigiY3Vyc29yIiwgcmFbYl0pLCBVKHQpKTsgYnJlYWs7IGRlZmF1bHQ6IHJldHVybiB9JG8odCkgfSB9IGZ1bmN0aW9uIGQodCkgeyBzKHRoaXMsIGFyZ3VtZW50cykubW92ZWQodCkgfSBmdW5jdGlvbiBwKHQpIHsgcyh0aGlzLCBhcmd1bWVudHMpLmVuZGVkKHQpIH0gZnVuY3Rpb24gZygpIHsgdmFyIG4gPSB0aGlzLl9fYnJ1c2ggfHwgeyBzZWxlY3Rpb246IG51bGwgfTsgcmV0dXJuIG4uZXh0ZW50ID0gSm8oZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSwgbi5kaW0gPSB0LCBuIH0gcmV0dXJuIGMubW92ZSA9IGZ1bmN0aW9uIChuLCBlLCByKSB7IG4udHdlZW4gPyBuLm9uKCJzdGFydC5icnVzaCIsIChmdW5jdGlvbiAodCkgeyBzKHRoaXMsIGFyZ3VtZW50cykuYmVmb3Jlc3RhcnQoKS5zdGFydCh0KSB9KSkub24oImludGVycnVwdC5icnVzaCBlbmQuYnJ1c2giLCAoZnVuY3Rpb24gKHQpIHsgcyh0aGlzLCBhcmd1bWVudHMpLmVuZCh0KSB9KSkudHdlZW4oImJydXNoIiwgKGZ1bmN0aW9uICgpIHsgdmFyIG4gPSB0aGlzLCByID0gbi5fX2JydXNoLCBpID0gcyhuLCBhcmd1bWVudHMpLCBvID0gci5zZWxlY3Rpb24sIGEgPSB0LmlucHV0KCJmdW5jdGlvbiIgPT0gdHlwZW9mIGUgPyBlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgOiBlLCByLmV4dGVudCksIHUgPSBIcihvLCBhKTsgZnVuY3Rpb24gYyh0KSB7IHIuc2VsZWN0aW9uID0gMSA9PT0gdCAmJiBudWxsID09PSBhID8gbnVsbCA6IHUodCksIGYuY2FsbChuKSwgaS5icnVzaCgpIH0gcmV0dXJuIG51bGwgIT09IG8gJiYgbnVsbCAhPT0gYSA/IGMgOiBjKDEpIH0pKSA6IG4uZWFjaCgoZnVuY3Rpb24gKCkgeyB2YXIgbiA9IHRoaXMsIGkgPSBhcmd1bWVudHMsIG8gPSBuLl9fYnJ1c2gsIGEgPSB0LmlucHV0KCJmdW5jdGlvbiIgPT0gdHlwZW9mIGUgPyBlLmFwcGx5KG4sIGkpIDogZSwgby5leHRlbnQpLCB1ID0gcyhuLCBpKS5iZWZvcmVzdGFydCgpOyBJaShuKSwgby5zZWxlY3Rpb24gPSBudWxsID09PSBhID8gbnVsbCA6IGEsIGYuY2FsbChuKSwgdS5zdGFydChyKS5icnVzaChyKS5lbmQocikgfSkpIH0sIGMuY2xlYXIgPSBmdW5jdGlvbiAodCwgbikgeyBjLm1vdmUodCwgbnVsbCwgbikgfSwgbC5wcm90b3R5cGUgPSB7IGJlZm9yZXN0YXJ0OiBmdW5jdGlvbiAoKSB7IHJldHVybiAxID09ICsrdGhpcy5hY3RpdmUgJiYgKHRoaXMuc3RhdGUuZW1pdHRlciA9IHRoaXMsIHRoaXMuc3RhcnRpbmcgPSAhMCksIHRoaXMgfSwgc3RhcnQ6IGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiB0aGlzLnN0YXJ0aW5nID8gKHRoaXMuc3RhcnRpbmcgPSAhMSwgdGhpcy5lbWl0KCJzdGFydCIsIHQsIG4pKSA6IHRoaXMuZW1pdCgiYnJ1c2giLCB0KSwgdGhpcyB9LCBicnVzaDogZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIHRoaXMuZW1pdCgiYnJ1c2giLCB0LCBuKSwgdGhpcyB9LCBlbmQ6IGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiAwID09IC0tdGhpcy5hY3RpdmUgJiYgKGRlbGV0ZSB0aGlzLnN0YXRlLmVtaXR0ZXIsIHRoaXMuZW1pdCgiZW5kIiwgdCwgbikpLCB0aGlzIH0sIGVtaXQ6IGZ1bmN0aW9uIChuLCBlLCByKSB7IHZhciBpID0gV24odGhpcy50aGF0KS5kYXR1bSgpOyBhLmNhbGwobiwgdGhpcy50aGF0LCBuZXcgTG8obiwgeyBzb3VyY2VFdmVudDogZSwgdGFyZ2V0OiBjLCBzZWxlY3Rpb246IHQub3V0cHV0KHRoaXMuc3RhdGUuc2VsZWN0aW9uKSwgbW9kZTogciwgZGlzcGF0Y2g6IGEgfSksIGkpIH0gfSwgYy5leHRlbnQgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChlID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBZbyhKbyh0KSksIGMpIDogZSB9LCBjLmZpbHRlciA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHIgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IFlvKCEhdCksIGMpIDogciB9LCBjLnRvdWNoYWJsZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGkgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IFlvKCEhdCksIGMpIDogaSB9LCBjLmhhbmRsZVNpemUgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh1ID0gK3QsIGMpIDogdSB9LCBjLmtleU1vZGlmaWVycyA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG8gPSAhIXQsIGMpIDogbyB9LCBjLm9uID0gZnVuY3Rpb24gKCkgeyB2YXIgdCA9IGEub24uYXBwbHkoYSwgYXJndW1lbnRzKTsgcmV0dXJuIHQgPT09IGEgPyBjIDogdCB9LCBjIH0gdmFyIGdhID0gTWF0aC5hYnMsIHlhID0gTWF0aC5jb3MsIHZhID0gTWF0aC5zaW4sIF9hID0gTWF0aC5QSSwgYmEgPSBfYSAvIDIsIG1hID0gMiAqIF9hLCB4YSA9IE1hdGgubWF4LCB3YSA9IDFlLTEyOyBmdW5jdGlvbiBNYSh0LCBuKSB7IHJldHVybiBBcnJheS5mcm9tKHsgbGVuZ3RoOiBuIC0gdCB9LCAoKG4sIGUpID0+IHQgKyBlKSkgfSBmdW5jdGlvbiBBYSh0KSB7IHJldHVybiBmdW5jdGlvbiAobiwgZSkgeyByZXR1cm4gdChuLnNvdXJjZS52YWx1ZSArIG4udGFyZ2V0LnZhbHVlLCBlLnNvdXJjZS52YWx1ZSArIGUudGFyZ2V0LnZhbHVlKSB9IH0gZnVuY3Rpb24gVGEodCwgbikgeyB2YXIgZSA9IDAsIHIgPSBudWxsLCBpID0gbnVsbCwgbyA9IG51bGw7IGZ1bmN0aW9uIGEoYSkgeyB2YXIgdSwgYyA9IGEubGVuZ3RoLCBmID0gbmV3IEFycmF5KGMpLCBzID0gTWEoMCwgYyksIGwgPSBuZXcgQXJyYXkoYyAqIGMpLCBoID0gbmV3IEFycmF5KGMpLCBkID0gMDsgYSA9IEZsb2F0NjRBcnJheS5mcm9tKHsgbGVuZ3RoOiBjICogYyB9LCBuID8gKHQsIG4pID0+IGFbbiAlIGNdW24gLyBjIHwgMF0gOiAodCwgbikgPT4gYVtuIC8gYyB8IDBdW24gJSBjXSk7IGZvciAobGV0IG4gPSAwOyBuIDwgYzsgKytuKSB7IGxldCBlID0gMDsgZm9yIChsZXQgciA9IDA7IHIgPCBjOyArK3IpZSArPSBhW24gKiBjICsgcl0gKyB0ICogYVtyICogYyArIG5dOyBkICs9IGZbbl0gPSBlIH0gdSA9IChkID0geGEoMCwgbWEgLSBlICogYykgLyBkKSA/IGUgOiBtYSAvIGM7IHsgbGV0IG4gPSAwOyByICYmIHMuc29ydCgoKHQsIG4pID0+IHIoZlt0XSwgZltuXSkpKTsgZm9yIChjb25zdCBlIG9mIHMpIHsgY29uc3QgciA9IG47IGlmICh0KSB7IGNvbnN0IHQgPSBNYSgxICsgfmMsIGMpLmZpbHRlcigodCA9PiB0IDwgMCA/IGFbfnQgKiBjICsgZV0gOiBhW2UgKiBjICsgdF0pKTsgaSAmJiB0LnNvcnQoKCh0LCBuKSA9PiBpKHQgPCAwID8gLWFbfnQgKiBjICsgZV0gOiBhW2UgKiBjICsgdF0sIG4gPCAwID8gLWFbfm4gKiBjICsgZV0gOiBhW2UgKiBjICsgbl0pKSk7IGZvciAoY29uc3QgciBvZiB0KSBpZiAociA8IDApIHsgKGxbfnIgKiBjICsgZV0gfHwgKGxbfnIgKiBjICsgZV0gPSB7IHNvdXJjZTogbnVsbCwgdGFyZ2V0OiBudWxsIH0pKS50YXJnZXQgPSB7IGluZGV4OiBlLCBzdGFydEFuZ2xlOiBuLCBlbmRBbmdsZTogbiArPSBhW35yICogYyArIGVdICogZCwgdmFsdWU6IGFbfnIgKiBjICsgZV0gfSB9IGVsc2UgeyAobFtlICogYyArIHJdIHx8IChsW2UgKiBjICsgcl0gPSB7IHNvdXJjZTogbnVsbCwgdGFyZ2V0OiBudWxsIH0pKS5zb3VyY2UgPSB7IGluZGV4OiBlLCBzdGFydEFuZ2xlOiBuLCBlbmRBbmdsZTogbiArPSBhW2UgKiBjICsgcl0gKiBkLCB2YWx1ZTogYVtlICogYyArIHJdIH0gfSBoW2VdID0geyBpbmRleDogZSwgc3RhcnRBbmdsZTogciwgZW5kQW5nbGU6IG4sIHZhbHVlOiBmW2VdIH0gfSBlbHNlIHsgY29uc3QgdCA9IE1hKDAsIGMpLmZpbHRlcigodCA9PiBhW2UgKiBjICsgdF0gfHwgYVt0ICogYyArIGVdKSk7IGkgJiYgdC5zb3J0KCgodCwgbikgPT4gaShhW2UgKiBjICsgdF0sIGFbZSAqIGMgKyBuXSkpKTsgZm9yIChjb25zdCByIG9mIHQpIHsgbGV0IHQ7IGlmIChlIDwgciA/ICh0ID0gbFtlICogYyArIHJdIHx8IChsW2UgKiBjICsgcl0gPSB7IHNvdXJjZTogbnVsbCwgdGFyZ2V0OiBudWxsIH0pLCB0LnNvdXJjZSA9IHsgaW5kZXg6IGUsIHN0YXJ0QW5nbGU6IG4sIGVuZEFuZ2xlOiBuICs9IGFbZSAqIGMgKyByXSAqIGQsIHZhbHVlOiBhW2UgKiBjICsgcl0gfSkgOiAodCA9IGxbciAqIGMgKyBlXSB8fCAobFtyICogYyArIGVdID0geyBzb3VyY2U6IG51bGwsIHRhcmdldDogbnVsbCB9KSwgdC50YXJnZXQgPSB7IGluZGV4OiBlLCBzdGFydEFuZ2xlOiBuLCBlbmRBbmdsZTogbiArPSBhW2UgKiBjICsgcl0gKiBkLCB2YWx1ZTogYVtlICogYyArIHJdIH0sIGUgPT09IHIgJiYgKHQuc291cmNlID0gdC50YXJnZXQpKSwgdC5zb3VyY2UgJiYgdC50YXJnZXQgJiYgdC5zb3VyY2UudmFsdWUgPCB0LnRhcmdldC52YWx1ZSkgeyBjb25zdCBuID0gdC5zb3VyY2U7IHQuc291cmNlID0gdC50YXJnZXQsIHQudGFyZ2V0ID0gbiB9IH0gaFtlXSA9IHsgaW5kZXg6IGUsIHN0YXJ0QW5nbGU6IHIsIGVuZEFuZ2xlOiBuLCB2YWx1ZTogZltlXSB9IH0gbiArPSB1IH0gfSByZXR1cm4gKGwgPSBPYmplY3QudmFsdWVzKGwpKS5ncm91cHMgPSBoLCBvID8gbC5zb3J0KG8pIDogbCB9IHJldHVybiBhLnBhZEFuZ2xlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZSA9IHhhKDAsIHQpLCBhKSA6IGUgfSwgYS5zb3J0R3JvdXBzID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAociA9IHQsIGEpIDogciB9LCBhLnNvcnRTdWJncm91cHMgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChpID0gdCwgYSkgOiBpIH0sIGEuc29ydENob3JkcyA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG51bGwgPT0gdCA/IG8gPSBudWxsIDogKG8gPSBBYSh0KSkuXyA9IHQsIGEpIDogbyAmJiBvLl8gfSwgYSB9IGNvbnN0IFNhID0gTWF0aC5QSSwgRWEgPSAyICogU2EsIGthID0gMWUtNiwgTmEgPSBFYSAtIGthOyBmdW5jdGlvbiBDYSgpIHsgdGhpcy5feDAgPSB0aGlzLl95MCA9IHRoaXMuX3gxID0gdGhpcy5feTEgPSBudWxsLCB0aGlzLl8gPSAiIiB9IGZ1bmN0aW9uIFBhKCkgeyByZXR1cm4gbmV3IENhIH0gQ2EucHJvdG90eXBlID0gUGEucHJvdG90eXBlID0geyBjb25zdHJ1Y3RvcjogQ2EsIG1vdmVUbzogZnVuY3Rpb24gKHQsIG4pIHsgdGhpcy5fICs9ICJNIiArICh0aGlzLl94MCA9IHRoaXMuX3gxID0gK3QpICsgIiwiICsgKHRoaXMuX3kwID0gdGhpcy5feTEgPSArbikgfSwgY2xvc2VQYXRoOiBmdW5jdGlvbiAoKSB7IG51bGwgIT09IHRoaXMuX3gxICYmICh0aGlzLl94MSA9IHRoaXMuX3gwLCB0aGlzLl95MSA9IHRoaXMuX3kwLCB0aGlzLl8gKz0gIloiKSB9LCBsaW5lVG86IGZ1bmN0aW9uICh0LCBuKSB7IHRoaXMuXyArPSAiTCIgKyAodGhpcy5feDEgPSArdCkgKyAiLCIgKyAodGhpcy5feTEgPSArbikgfSwgcXVhZHJhdGljQ3VydmVUbzogZnVuY3Rpb24gKHQsIG4sIGUsIHIpIHsgdGhpcy5fICs9ICJRIiArICt0ICsgIiwiICsgK24gKyAiLCIgKyAodGhpcy5feDEgPSArZSkgKyAiLCIgKyAodGhpcy5feTEgPSArcikgfSwgYmV6aWVyQ3VydmVUbzogZnVuY3Rpb24gKHQsIG4sIGUsIHIsIGksIG8pIHsgdGhpcy5fICs9ICJDIiArICt0ICsgIiwiICsgK24gKyAiLCIgKyArZSArICIsIiArICtyICsgIiwiICsgKHRoaXMuX3gxID0gK2kpICsgIiwiICsgKHRoaXMuX3kxID0gK28pIH0sIGFyY1RvOiBmdW5jdGlvbiAodCwgbiwgZSwgciwgaSkgeyB0ID0gK3QsIG4gPSArbiwgZSA9ICtlLCByID0gK3IsIGkgPSAraTsgdmFyIG8gPSB0aGlzLl94MSwgYSA9IHRoaXMuX3kxLCB1ID0gZSAtIHQsIGMgPSByIC0gbiwgZiA9IG8gLSB0LCBzID0gYSAtIG4sIGwgPSBmICogZiArIHMgKiBzOyBpZiAoaSA8IDApIHRocm93IG5ldyBFcnJvcigibmVnYXRpdmUgcmFkaXVzOiAiICsgaSk7IGlmIChudWxsID09PSB0aGlzLl94MSkgdGhpcy5fICs9ICJNIiArICh0aGlzLl94MSA9IHQpICsgIiwiICsgKHRoaXMuX3kxID0gbik7IGVsc2UgaWYgKGwgPiBrYSkgaWYgKE1hdGguYWJzKHMgKiB1IC0gYyAqIGYpID4ga2EgJiYgaSkgeyB2YXIgaCA9IGUgLSBvLCBkID0gciAtIGEsIHAgPSB1ICogdSArIGMgKiBjLCBnID0gaCAqIGggKyBkICogZCwgeSA9IE1hdGguc3FydChwKSwgdiA9IE1hdGguc3FydChsKSwgXyA9IGkgKiBNYXRoLnRhbigoU2EgLSBNYXRoLmFjb3MoKHAgKyBsIC0gZykgLyAoMiAqIHkgKiB2KSkpIC8gMiksIGIgPSBfIC8gdiwgbSA9IF8gLyB5OyBNYXRoLmFicyhiIC0gMSkgPiBrYSAmJiAodGhpcy5fICs9ICJMIiArICh0ICsgYiAqIGYpICsgIiwiICsgKG4gKyBiICogcykpLCB0aGlzLl8gKz0gIkEiICsgaSArICIsIiArIGkgKyAiLDAsMCwiICsgKyhzICogaCA+IGYgKiBkKSArICIsIiArICh0aGlzLl94MSA9IHQgKyBtICogdSkgKyAiLCIgKyAodGhpcy5feTEgPSBuICsgbSAqIGMpIH0gZWxzZSB0aGlzLl8gKz0gIkwiICsgKHRoaXMuX3gxID0gdCkgKyAiLCIgKyAodGhpcy5feTEgPSBuKTsgZWxzZTsgfSwgYXJjOiBmdW5jdGlvbiAodCwgbiwgZSwgciwgaSwgbykgeyB0ID0gK3QsIG4gPSArbiwgbyA9ICEhbzsgdmFyIGEgPSAoZSA9ICtlKSAqIE1hdGguY29zKHIpLCB1ID0gZSAqIE1hdGguc2luKHIpLCBjID0gdCArIGEsIGYgPSBuICsgdSwgcyA9IDEgXiBvLCBsID0gbyA/IHIgLSBpIDogaSAtIHI7IGlmIChlIDwgMCkgdGhyb3cgbmV3IEVycm9yKCJuZWdhdGl2ZSByYWRpdXM6ICIgKyBlKTsgbnVsbCA9PT0gdGhpcy5feDEgPyB0aGlzLl8gKz0gIk0iICsgYyArICIsIiArIGYgOiAoTWF0aC5hYnModGhpcy5feDEgLSBjKSA+IGthIHx8IE1hdGguYWJzKHRoaXMuX3kxIC0gZikgPiBrYSkgJiYgKHRoaXMuXyArPSAiTCIgKyBjICsgIiwiICsgZiksIGUgJiYgKGwgPCAwICYmIChsID0gbCAlIEVhICsgRWEpLCBsID4gTmEgPyB0aGlzLl8gKz0gIkEiICsgZSArICIsIiArIGUgKyAiLDAsMSwiICsgcyArICIsIiArICh0IC0gYSkgKyAiLCIgKyAobiAtIHUpICsgIkEiICsgZSArICIsIiArIGUgKyAiLDAsMSwiICsgcyArICIsIiArICh0aGlzLl94MSA9IGMpICsgIiwiICsgKHRoaXMuX3kxID0gZikgOiBsID4ga2EgJiYgKHRoaXMuXyArPSAiQSIgKyBlICsgIiwiICsgZSArICIsMCwiICsgKyhsID49IFNhKSArICIsIiArIHMgKyAiLCIgKyAodGhpcy5feDEgPSB0ICsgZSAqIE1hdGguY29zKGkpKSArICIsIiArICh0aGlzLl95MSA9IG4gKyBlICogTWF0aC5zaW4oaSkpKSkgfSwgcmVjdDogZnVuY3Rpb24gKHQsIG4sIGUsIHIpIHsgdGhpcy5fICs9ICJNIiArICh0aGlzLl94MCA9IHRoaXMuX3gxID0gK3QpICsgIiwiICsgKHRoaXMuX3kwID0gdGhpcy5feTEgPSArbikgKyAiaCIgKyArZSArICJ2IiArICtyICsgImgiICsgLWUgKyAiWiIgfSwgdG9TdHJpbmc6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMuXyB9IH07IHZhciB6YSA9IEFycmF5LnByb3RvdHlwZS5zbGljZTsgZnVuY3Rpb24gRGEodCkgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyByZXR1cm4gdCB9IH0gZnVuY3Rpb24gUmEodCkgeyByZXR1cm4gdC5zb3VyY2UgfSBmdW5jdGlvbiBGYSh0KSB7IHJldHVybiB0LnRhcmdldCB9IGZ1bmN0aW9uIHFhKHQpIHsgcmV0dXJuIHQucmFkaXVzIH0gZnVuY3Rpb24gSWEodCkgeyByZXR1cm4gdC5zdGFydEFuZ2xlIH0gZnVuY3Rpb24gT2EodCkgeyByZXR1cm4gdC5lbmRBbmdsZSB9IGZ1bmN0aW9uIFVhKCkgeyByZXR1cm4gMCB9IGZ1bmN0aW9uIEJhKCkgeyByZXR1cm4gMTAgfSBmdW5jdGlvbiBZYSh0KSB7IHZhciBuID0gUmEsIGUgPSBGYSwgciA9IHFhLCBpID0gcWEsIG8gPSBJYSwgYSA9IE9hLCB1ID0gVWEsIGMgPSBudWxsOyBmdW5jdGlvbiBmKCkgeyB2YXIgZiwgcyA9IG4uYXBwbHkodGhpcywgYXJndW1lbnRzKSwgbCA9IGUuYXBwbHkodGhpcywgYXJndW1lbnRzKSwgaCA9IHUuYXBwbHkodGhpcywgYXJndW1lbnRzKSAvIDIsIGQgPSB6YS5jYWxsKGFyZ3VtZW50cyksIHAgPSArci5hcHBseSh0aGlzLCAoZFswXSA9IHMsIGQpKSwgZyA9IG8uYXBwbHkodGhpcywgZCkgLSBiYSwgeSA9IGEuYXBwbHkodGhpcywgZCkgLSBiYSwgdiA9ICtpLmFwcGx5KHRoaXMsIChkWzBdID0gbCwgZCkpLCBfID0gby5hcHBseSh0aGlzLCBkKSAtIGJhLCBiID0gYS5hcHBseSh0aGlzLCBkKSAtIGJhOyBpZiAoYyB8fCAoYyA9IGYgPSBQYSgpKSwgaCA+IHdhICYmIChnYSh5IC0gZykgPiAyICogaCArIHdhID8geSA+IGcgPyAoZyArPSBoLCB5IC09IGgpIDogKGcgLT0gaCwgeSArPSBoKSA6IGcgPSB5ID0gKGcgKyB5KSAvIDIsIGdhKGIgLSBfKSA+IDIgKiBoICsgd2EgPyBiID4gXyA/IChfICs9IGgsIGIgLT0gaCkgOiAoXyAtPSBoLCBiICs9IGgpIDogXyA9IGIgPSAoXyArIGIpIC8gMiksIGMubW92ZVRvKHAgKiB5YShnKSwgcCAqIHZhKGcpKSwgYy5hcmMoMCwgMCwgcCwgZywgeSksIGcgIT09IF8gfHwgeSAhPT0gYikgaWYgKHQpIHsgdmFyIG0gPSArdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpLCB4ID0gdiAtIG0sIHcgPSAoXyArIGIpIC8gMjsgYy5xdWFkcmF0aWNDdXJ2ZVRvKDAsIDAsIHggKiB5YShfKSwgeCAqIHZhKF8pKSwgYy5saW5lVG8odiAqIHlhKHcpLCB2ICogdmEodykpLCBjLmxpbmVUbyh4ICogeWEoYiksIHggKiB2YShiKSkgfSBlbHNlIGMucXVhZHJhdGljQ3VydmVUbygwLCAwLCB2ICogeWEoXyksIHYgKiB2YShfKSksIGMuYXJjKDAsIDAsIHYsIF8sIGIpOyBpZiAoYy5xdWFkcmF0aWNDdXJ2ZVRvKDAsIDAsIHAgKiB5YShnKSwgcCAqIHZhKGcpKSwgYy5jbG9zZVBhdGgoKSwgZikgcmV0dXJuIGMgPSBudWxsLCBmICsgIiIgfHwgbnVsbCB9IHJldHVybiB0ICYmIChmLmhlYWRSYWRpdXMgPSBmdW5jdGlvbiAobikgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0ID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgbiA/IG4gOiBEYSgrbiksIGYpIDogdCB9KSwgZi5yYWRpdXMgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyID0gaSA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogRGEoK3QpLCBmKSA6IHIgfSwgZi5zb3VyY2VSYWRpdXMgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBEYSgrdCksIGYpIDogciB9LCBmLnRhcmdldFJhZGl1cyA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGkgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IERhKCt0KSwgZikgOiBpIH0sIGYuc3RhcnRBbmdsZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG8gPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IERhKCt0KSwgZikgOiBvIH0sIGYuZW5kQW5nbGUgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChhID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBEYSgrdCksIGYpIDogYSB9LCBmLnBhZEFuZ2xlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodSA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogRGEoK3QpLCBmKSA6IHUgfSwgZi5zb3VyY2UgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChuID0gdCwgZikgOiBuIH0sIGYudGFyZ2V0ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZSA9IHQsIGYpIDogZSB9LCBmLmNvbnRleHQgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChjID0gbnVsbCA9PSB0ID8gbnVsbCA6IHQsIGYpIDogYyB9LCBmIH0gdmFyIExhID0gQXJyYXkucHJvdG90eXBlLnNsaWNlOyBmdW5jdGlvbiBqYSh0LCBuKSB7IHJldHVybiB0IC0gbiB9IHZhciAkYSA9IHQgPT4gKCkgPT4gdDsgZnVuY3Rpb24gSGEodCwgbikgeyBmb3IgKHZhciBlLCByID0gLTEsIGkgPSBuLmxlbmd0aDsgKytyIDwgaTspaWYgKGUgPSBYYSh0LCBuW3JdKSkgcmV0dXJuIGU7IHJldHVybiAwIH0gZnVuY3Rpb24gWGEodCwgbikgeyBmb3IgKHZhciBlID0gblswXSwgciA9IG5bMV0sIGkgPSAtMSwgbyA9IDAsIGEgPSB0Lmxlbmd0aCwgdSA9IGEgLSAxOyBvIDwgYTsgdSA9IG8rKykgeyB2YXIgYyA9IHRbb10sIGYgPSBjWzBdLCBzID0gY1sxXSwgbCA9IHRbdV0sIGggPSBsWzBdLCBkID0gbFsxXTsgaWYgKEdhKGMsIGwsIG4pKSByZXR1cm4gMDsgcyA+IHIgIT0gZCA+IHIgJiYgZSA8IChoIC0gZikgKiAociAtIHMpIC8gKGQgLSBzKSArIGYgJiYgKGkgPSAtaSkgfSByZXR1cm4gaSB9IGZ1bmN0aW9uIEdhKHQsIG4sIGUpIHsgdmFyIHIsIGksIG8sIGE7IHJldHVybiBmdW5jdGlvbiAodCwgbiwgZSkgeyByZXR1cm4gKG5bMF0gLSB0WzBdKSAqIChlWzFdIC0gdFsxXSkgPT0gKGVbMF0gLSB0WzBdKSAqIChuWzFdIC0gdFsxXSkgfSh0LCBuLCBlKSAmJiAoaSA9IHRbciA9ICsodFswXSA9PT0gblswXSldLCBvID0gZVtyXSwgYSA9IG5bcl0sIGkgPD0gbyAmJiBvIDw9IGEgfHwgYSA8PSBvICYmIG8gPD0gaSkgfSBmdW5jdGlvbiBWYSgpIHsgfSB2YXIgV2EgPSBbW10sIFtbWzEsIDEuNV0sIFsuNSwgMV1dXSwgW1tbMS41LCAxXSwgWzEsIDEuNV1dXSwgW1tbMS41LCAxXSwgWy41LCAxXV1dLCBbW1sxLCAuNV0sIFsxLjUsIDFdXV0sIFtbWzEsIDEuNV0sIFsuNSwgMV1dLCBbWzEsIC41XSwgWzEuNSwgMV1dXSwgW1tbMSwgLjVdLCBbMSwgMS41XV1dLCBbW1sxLCAuNV0sIFsuNSwgMV1dXSwgW1tbLjUsIDFdLCBbMSwgLjVdXV0sIFtbWzEsIDEuNV0sIFsxLCAuNV1dXSwgW1tbLjUsIDFdLCBbMSwgLjVdXSwgW1sxLjUsIDFdLCBbMSwgMS41XV1dLCBbW1sxLjUsIDFdLCBbMSwgLjVdXV0sIFtbWy41LCAxXSwgWzEuNSwgMV1dXSwgW1tbMSwgMS41XSwgWzEuNSwgMV1dXSwgW1tbLjUsIDFdLCBbMSwgMS41XV1dLCBbXV07IGZ1bmN0aW9uIFphKCkgeyB2YXIgdCA9IDEsIG4gPSAxLCBlID0gSywgciA9IHU7IGZ1bmN0aW9uIGkodCkgeyB2YXIgbiA9IGUodCk7IGlmIChBcnJheS5pc0FycmF5KG4pKSBuID0gbi5zbGljZSgpLnNvcnQoamEpOyBlbHNlIHsgY29uc3QgZSA9IEEodCksIHIgPSBXKGVbMF0sIGVbMV0sIG4pOyBuID0gRyhNYXRoLmZsb29yKGVbMF0gLyByKSAqIHIsIE1hdGguZmxvb3IoZVsxXSAvIHIgLSAxKSAqIHIsIG4pIH0gcmV0dXJuIG4ubWFwKChuID0+IG8odCwgbikpKSB9IGZ1bmN0aW9uIG8oZSwgaSkgeyB2YXIgbyA9IFtdLCB1ID0gW107IHJldHVybiBmdW5jdGlvbiAoZSwgciwgaSkgeyB2YXIgbywgdSwgYywgZiwgcywgbCwgaCA9IG5ldyBBcnJheSwgZCA9IG5ldyBBcnJheTsgbyA9IHUgPSAtMSwgZiA9IGVbMF0gPj0gciwgV2FbZiA8PCAxXS5mb3JFYWNoKHApOyBmb3IgKDsgKytvIDwgdCAtIDE7KWMgPSBmLCBmID0gZVtvICsgMV0gPj0gciwgV2FbYyB8IGYgPDwgMV0uZm9yRWFjaChwKTsgV2FbZiA8PCAwXS5mb3JFYWNoKHApOyBmb3IgKDsgKyt1IDwgbiAtIDE7KSB7IGZvciAobyA9IC0xLCBmID0gZVt1ICogdCArIHRdID49IHIsIHMgPSBlW3UgKiB0XSA+PSByLCBXYVtmIDw8IDEgfCBzIDw8IDJdLmZvckVhY2gocCk7ICsrbyA8IHQgLSAxOyljID0gZiwgZiA9IGVbdSAqIHQgKyB0ICsgbyArIDFdID49IHIsIGwgPSBzLCBzID0gZVt1ICogdCArIG8gKyAxXSA+PSByLCBXYVtjIHwgZiA8PCAxIHwgcyA8PCAyIHwgbCA8PCAzXS5mb3JFYWNoKHApOyBXYVtmIHwgcyA8PCAzXS5mb3JFYWNoKHApIH0gbyA9IC0xLCBzID0gZVt1ICogdF0gPj0gciwgV2FbcyA8PCAyXS5mb3JFYWNoKHApOyBmb3IgKDsgKytvIDwgdCAtIDE7KWwgPSBzLCBzID0gZVt1ICogdCArIG8gKyAxXSA+PSByLCBXYVtzIDw8IDIgfCBsIDw8IDNdLmZvckVhY2gocCk7IGZ1bmN0aW9uIHAodCkgeyB2YXIgbiwgZSwgciA9IFt0WzBdWzBdICsgbywgdFswXVsxXSArIHVdLCBjID0gW3RbMV1bMF0gKyBvLCB0WzFdWzFdICsgdV0sIGYgPSBhKHIpLCBzID0gYShjKTsgKG4gPSBkW2ZdKSA/IChlID0gaFtzXSkgPyAoZGVsZXRlIGRbbi5lbmRdLCBkZWxldGUgaFtlLnN0YXJ0XSwgbiA9PT0gZSA/IChuLnJpbmcucHVzaChjKSwgaShuLnJpbmcpKSA6IGhbbi5zdGFydF0gPSBkW2UuZW5kXSA9IHsgc3RhcnQ6IG4uc3RhcnQsIGVuZDogZS5lbmQsIHJpbmc6IG4ucmluZy5jb25jYXQoZS5yaW5nKSB9KSA6IChkZWxldGUgZFtuLmVuZF0sIG4ucmluZy5wdXNoKGMpLCBkW24uZW5kID0gc10gPSBuKSA6IChuID0gaFtzXSkgPyAoZSA9IGRbZl0pID8gKGRlbGV0ZSBoW24uc3RhcnRdLCBkZWxldGUgZFtlLmVuZF0sIG4gPT09IGUgPyAobi5yaW5nLnB1c2goYyksIGkobi5yaW5nKSkgOiBoW2Uuc3RhcnRdID0gZFtuLmVuZF0gPSB7IHN0YXJ0OiBlLnN0YXJ0LCBlbmQ6IG4uZW5kLCByaW5nOiBlLnJpbmcuY29uY2F0KG4ucmluZykgfSkgOiAoZGVsZXRlIGhbbi5zdGFydF0sIG4ucmluZy51bnNoaWZ0KHIpLCBoW24uc3RhcnQgPSBmXSA9IG4pIDogaFtmXSA9IGRbc10gPSB7IHN0YXJ0OiBmLCBlbmQ6IHMsIHJpbmc6IFtyLCBjXSB9IH0gV2FbcyA8PCAzXS5mb3JFYWNoKHApIH0oZSwgaSwgKGZ1bmN0aW9uICh0KSB7IHIodCwgZSwgaSksIGZ1bmN0aW9uICh0KSB7IGZvciAodmFyIG4gPSAwLCBlID0gdC5sZW5ndGgsIHIgPSB0W2UgLSAxXVsxXSAqIHRbMF1bMF0gLSB0W2UgLSAxXVswXSAqIHRbMF1bMV07ICsrbiA8IGU7KXIgKz0gdFtuIC0gMV1bMV0gKiB0W25dWzBdIC0gdFtuIC0gMV1bMF0gKiB0W25dWzFdOyByZXR1cm4gciB9KHQpID4gMCA/IG8ucHVzaChbdF0pIDogdS5wdXNoKHQpIH0pKSwgdS5mb3JFYWNoKChmdW5jdGlvbiAodCkgeyBmb3IgKHZhciBuLCBlID0gMCwgciA9IG8ubGVuZ3RoOyBlIDwgcjsgKytlKWlmICgtMSAhPT0gSGEoKG4gPSBvW2VdKVswXSwgdCkpIHJldHVybiB2b2lkIG4ucHVzaCh0KSB9KSksIHsgdHlwZTogIk11bHRpUG9seWdvbiIsIHZhbHVlOiBpLCBjb29yZGluYXRlczogbyB9IH0gZnVuY3Rpb24gYShuKSB7IHJldHVybiAyICogblswXSArIG5bMV0gKiAodCArIDEpICogNCB9IGZ1bmN0aW9uIHUoZSwgciwgaSkgeyBlLmZvckVhY2goKGZ1bmN0aW9uIChlKSB7IHZhciBvLCBhID0gZVswXSwgdSA9IGVbMV0sIGMgPSAwIHwgYSwgZiA9IDAgfCB1LCBzID0gcltmICogdCArIGNdOyBhID4gMCAmJiBhIDwgdCAmJiBjID09PSBhICYmIChvID0gcltmICogdCArIGMgLSAxXSwgZVswXSA9IGEgKyAoaSAtIG8pIC8gKHMgLSBvKSAtIC41KSwgdSA+IDAgJiYgdSA8IG4gJiYgZiA9PT0gdSAmJiAobyA9IHJbKGYgLSAxKSAqIHQgKyBjXSwgZVsxXSA9IHUgKyAoaSAtIG8pIC8gKHMgLSBvKSAtIC41KSB9KSkgfSByZXR1cm4gaS5jb250b3VyID0gbywgaS5zaXplID0gZnVuY3Rpb24gKGUpIHsgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gW3QsIG5dOyB2YXIgciA9IE1hdGguZmxvb3IoZVswXSksIG8gPSBNYXRoLmZsb29yKGVbMV0pOyBpZiAoIShyID49IDAgJiYgbyA+PSAwKSkgdGhyb3cgbmV3IEVycm9yKCJpbnZhbGlkIHNpemUiKTsgcmV0dXJuIHQgPSByLCBuID0gbywgaSB9LCBpLnRocmVzaG9sZHMgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChlID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBBcnJheS5pc0FycmF5KHQpID8gJGEoTGEuY2FsbCh0KSkgOiAkYSh0KSwgaSkgOiBlIH0sIGkuc21vb3RoID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAociA9IHQgPyB1IDogVmEsIGkpIDogciA9PT0gdSB9LCBpIH0gZnVuY3Rpb24gS2EodCkgeyByZXR1cm4gdFswXSB9IGZ1bmN0aW9uIFFhKHQpIHsgcmV0dXJuIHRbMV0gfSBmdW5jdGlvbiBKYSgpIHsgcmV0dXJuIDEgfSBjb25zdCB0dSA9IDEzNDIxNzcyOTsgZnVuY3Rpb24gbnUodCwgbiwgZSwgciwgaSkgeyBsZXQgbywgYSwgdSwgYywgZiA9IG5bMF0sIHMgPSByWzBdLCBsID0gMCwgaCA9IDA7IHMgPiBmID09IHMgPiAtZiA/IChvID0gZiwgZiA9IG5bKytsXSkgOiAobyA9IHMsIHMgPSByWysraF0pOyBsZXQgZCA9IDA7IGlmIChsIDwgdCAmJiBoIDwgZSkgZm9yIChzID4gZiA9PSBzID4gLWYgPyAoYSA9IGYgKyBvLCB1ID0gbyAtIChhIC0gZiksIGYgPSBuWysrbF0pIDogKGEgPSBzICsgbywgdSA9IG8gLSAoYSAtIHMpLCBzID0gclsrK2hdKSwgbyA9IGEsIDAgIT09IHUgJiYgKGlbZCsrXSA9IHUpOyBsIDwgdCAmJiBoIDwgZTspcyA+IGYgPT0gcyA+IC1mID8gKGEgPSBvICsgZiwgYyA9IGEgLSBvLCB1ID0gbyAtIChhIC0gYykgKyAoZiAtIGMpLCBmID0gblsrK2xdKSA6IChhID0gbyArIHMsIGMgPSBhIC0gbywgdSA9IG8gLSAoYSAtIGMpICsgKHMgLSBjKSwgcyA9IHJbKytoXSksIG8gPSBhLCAwICE9PSB1ICYmIChpW2QrK10gPSB1KTsgZm9yICg7IGwgPCB0OylhID0gbyArIGYsIGMgPSBhIC0gbywgdSA9IG8gLSAoYSAtIGMpICsgKGYgLSBjKSwgZiA9IG5bKytsXSwgbyA9IGEsIDAgIT09IHUgJiYgKGlbZCsrXSA9IHUpOyBmb3IgKDsgaCA8IGU7KWEgPSBvICsgcywgYyA9IGEgLSBvLCB1ID0gbyAtIChhIC0gYykgKyAocyAtIGMpLCBzID0gclsrK2hdLCBvID0gYSwgMCAhPT0gdSAmJiAoaVtkKytdID0gdSk7IHJldHVybiAwID09PSBvICYmIDAgIT09IGQgfHwgKGlbZCsrXSA9IG8pLCBkIH0gZnVuY3Rpb24gZXUodCkgeyByZXR1cm4gbmV3IEZsb2F0NjRBcnJheSh0KSB9IGNvbnN0IHJ1ID0gZXUoNCksIGl1ID0gZXUoOCksIG91ID0gZXUoMTIpLCBhdSA9IGV1KDE2KSwgdXUgPSBldSg0KTsgZnVuY3Rpb24gY3UodCwgbiwgZSwgciwgaSwgbykgeyBjb25zdCBhID0gKG4gLSBvKSAqIChlIC0gaSksIHUgPSAodCAtIGkpICogKHIgLSBvKSwgYyA9IGEgLSB1OyBpZiAoMCA9PT0gYSB8fCAwID09PSB1IHx8IGEgPiAwICE9IHUgPiAwKSByZXR1cm4gYzsgY29uc3QgZiA9IE1hdGguYWJzKGEgKyB1KTsgcmV0dXJuIE1hdGguYWJzKGMpID49IDMzMzA2NjkwNzM4NzU0NzE2ZS0zMiAqIGYgPyBjIDogLWZ1bmN0aW9uICh0LCBuLCBlLCByLCBpLCBvLCBhKSB7IGxldCB1LCBjLCBmLCBzLCBsLCBoLCBkLCBwLCBnLCB5LCB2LCBfLCBiLCBtLCB4LCB3LCBNLCBBOyBjb25zdCBUID0gdCAtIGksIFMgPSBlIC0gaSwgRSA9IG4gLSBvLCBrID0gciAtIG87IG0gPSBUICogaywgaCA9IHR1ICogVCwgZCA9IGggLSAoaCAtIFQpLCBwID0gVCAtIGQsIGggPSB0dSAqIGssIGcgPSBoIC0gKGggLSBrKSwgeSA9IGsgLSBnLCB4ID0gcCAqIHkgLSAobSAtIGQgKiBnIC0gcCAqIGcgLSBkICogeSksIHcgPSBFICogUywgaCA9IHR1ICogRSwgZCA9IGggLSAoaCAtIEUpLCBwID0gRSAtIGQsIGggPSB0dSAqIFMsIGcgPSBoIC0gKGggLSBTKSwgeSA9IFMgLSBnLCBNID0gcCAqIHkgLSAodyAtIGQgKiBnIC0gcCAqIGcgLSBkICogeSksIHYgPSB4IC0gTSwgbCA9IHggLSB2LCBydVswXSA9IHggLSAodiArIGwpICsgKGwgLSBNKSwgXyA9IG0gKyB2LCBsID0gXyAtIG0sIGIgPSBtIC0gKF8gLSBsKSArICh2IC0gbCksIHYgPSBiIC0gdywgbCA9IGIgLSB2LCBydVsxXSA9IGIgLSAodiArIGwpICsgKGwgLSB3KSwgQSA9IF8gKyB2LCBsID0gQSAtIF8sIHJ1WzJdID0gXyAtIChBIC0gbCkgKyAodiAtIGwpLCBydVszXSA9IEE7IGxldCBOID0gZnVuY3Rpb24gKHQsIG4pIHsgbGV0IGUgPSBuWzBdOyBmb3IgKGxldCByID0gMTsgciA8IHQ7IHIrKyllICs9IG5bcl07IHJldHVybiBlIH0oNCwgcnUpLCBDID0gMjIyMDQ0NjA0OTI1MDMxNDZlLTMyICogYTsgaWYgKE4gPj0gQyB8fCAtTiA+PSBDKSByZXR1cm4gTjsgaWYgKGwgPSB0IC0gVCwgdSA9IHQgLSAoVCArIGwpICsgKGwgLSBpKSwgbCA9IGUgLSBTLCBmID0gZSAtIChTICsgbCkgKyAobCAtIGkpLCBsID0gbiAtIEUsIGMgPSBuIC0gKEUgKyBsKSArIChsIC0gbyksIGwgPSByIC0gaywgcyA9IHIgLSAoayArIGwpICsgKGwgLSBvKSwgMCA9PT0gdSAmJiAwID09PSBjICYmIDAgPT09IGYgJiYgMCA9PT0gcykgcmV0dXJuIE47IGlmIChDID0gMTEwOTMzNTY0Nzk2NzA0ODdlLTQ3ICogYSArIDMzMzA2NjkwNzM4NzU0NzA2ZS0zMiAqIE1hdGguYWJzKE4pLCBOICs9IFQgKiBzICsgayAqIHUgLSAoRSAqIGYgKyBTICogYyksIE4gPj0gQyB8fCAtTiA+PSBDKSByZXR1cm4gTjsgbSA9IHUgKiBrLCBoID0gdHUgKiB1LCBkID0gaCAtIChoIC0gdSksIHAgPSB1IC0gZCwgaCA9IHR1ICogaywgZyA9IGggLSAoaCAtIGspLCB5ID0gayAtIGcsIHggPSBwICogeSAtIChtIC0gZCAqIGcgLSBwICogZyAtIGQgKiB5KSwgdyA9IGMgKiBTLCBoID0gdHUgKiBjLCBkID0gaCAtIChoIC0gYyksIHAgPSBjIC0gZCwgaCA9IHR1ICogUywgZyA9IGggLSAoaCAtIFMpLCB5ID0gUyAtIGcsIE0gPSBwICogeSAtICh3IC0gZCAqIGcgLSBwICogZyAtIGQgKiB5KSwgdiA9IHggLSBNLCBsID0geCAtIHYsIHV1WzBdID0geCAtICh2ICsgbCkgKyAobCAtIE0pLCBfID0gbSArIHYsIGwgPSBfIC0gbSwgYiA9IG0gLSAoXyAtIGwpICsgKHYgLSBsKSwgdiA9IGIgLSB3LCBsID0gYiAtIHYsIHV1WzFdID0gYiAtICh2ICsgbCkgKyAobCAtIHcpLCBBID0gXyArIHYsIGwgPSBBIC0gXywgdXVbMl0gPSBfIC0gKEEgLSBsKSArICh2IC0gbCksIHV1WzNdID0gQTsgY29uc3QgUCA9IG51KDQsIHJ1LCA0LCB1dSwgaXUpOyBtID0gVCAqIHMsIGggPSB0dSAqIFQsIGQgPSBoIC0gKGggLSBUKSwgcCA9IFQgLSBkLCBoID0gdHUgKiBzLCBnID0gaCAtIChoIC0gcyksIHkgPSBzIC0gZywgeCA9IHAgKiB5IC0gKG0gLSBkICogZyAtIHAgKiBnIC0gZCAqIHkpLCB3ID0gRSAqIGYsIGggPSB0dSAqIEUsIGQgPSBoIC0gKGggLSBFKSwgcCA9IEUgLSBkLCBoID0gdHUgKiBmLCBnID0gaCAtIChoIC0gZiksIHkgPSBmIC0gZywgTSA9IHAgKiB5IC0gKHcgLSBkICogZyAtIHAgKiBnIC0gZCAqIHkpLCB2ID0geCAtIE0sIGwgPSB4IC0gdiwgdXVbMF0gPSB4IC0gKHYgKyBsKSArIChsIC0gTSksIF8gPSBtICsgdiwgbCA9IF8gLSBtLCBiID0gbSAtIChfIC0gbCkgKyAodiAtIGwpLCB2ID0gYiAtIHcsIGwgPSBiIC0gdiwgdXVbMV0gPSBiIC0gKHYgKyBsKSArIChsIC0gdyksIEEgPSBfICsgdiwgbCA9IEEgLSBfLCB1dVsyXSA9IF8gLSAoQSAtIGwpICsgKHYgLSBsKSwgdXVbM10gPSBBOyBjb25zdCB6ID0gbnUoUCwgaXUsIDQsIHV1LCBvdSk7IG0gPSB1ICogcywgaCA9IHR1ICogdSwgZCA9IGggLSAoaCAtIHUpLCBwID0gdSAtIGQsIGggPSB0dSAqIHMsIGcgPSBoIC0gKGggLSBzKSwgeSA9IHMgLSBnLCB4ID0gcCAqIHkgLSAobSAtIGQgKiBnIC0gcCAqIGcgLSBkICogeSksIHcgPSBjICogZiwgaCA9IHR1ICogYywgZCA9IGggLSAoaCAtIGMpLCBwID0gYyAtIGQsIGggPSB0dSAqIGYsIGcgPSBoIC0gKGggLSBmKSwgeSA9IGYgLSBnLCBNID0gcCAqIHkgLSAodyAtIGQgKiBnIC0gcCAqIGcgLSBkICogeSksIHYgPSB4IC0gTSwgbCA9IHggLSB2LCB1dVswXSA9IHggLSAodiArIGwpICsgKGwgLSBNKSwgXyA9IG0gKyB2LCBsID0gXyAtIG0sIGIgPSBtIC0gKF8gLSBsKSArICh2IC0gbCksIHYgPSBiIC0gdywgbCA9IGIgLSB2LCB1dVsxXSA9IGIgLSAodiArIGwpICsgKGwgLSB3KSwgQSA9IF8gKyB2LCBsID0gQSAtIF8sIHV1WzJdID0gXyAtIChBIC0gbCkgKyAodiAtIGwpLCB1dVszXSA9IEE7IGNvbnN0IEQgPSBudSh6LCBvdSwgNCwgdXUsIGF1KTsgcmV0dXJuIGF1W0QgLSAxXSB9KHQsIG4sIGUsIHIsIGksIG8sIGYpIH0gY29uc3QgZnUgPSBNYXRoLnBvdygyLCAtNTIpLCBzdSA9IG5ldyBVaW50MzJBcnJheSg1MTIpOyBjbGFzcyBsdSB7IHN0YXRpYyBmcm9tKHQsIG4gPSB2dSwgZSA9IF91KSB7IGNvbnN0IHIgPSB0Lmxlbmd0aCwgaSA9IG5ldyBGbG9hdDY0QXJyYXkoMiAqIHIpOyBmb3IgKGxldCBvID0gMDsgbyA8IHI7IG8rKykgeyBjb25zdCByID0gdFtvXTsgaVsyICogb10gPSBuKHIpLCBpWzIgKiBvICsgMV0gPSBlKHIpIH0gcmV0dXJuIG5ldyBsdShpKSB9IGNvbnN0cnVjdG9yKHQpIHsgY29uc3QgbiA9IHQubGVuZ3RoID4+IDE7IGlmIChuID4gMCAmJiAibnVtYmVyIiAhPSB0eXBlb2YgdFswXSkgdGhyb3cgbmV3IEVycm9yKCJFeHBlY3RlZCBjb29yZHMgdG8gY29udGFpbiBudW1iZXJzLiIpOyB0aGlzLmNvb3JkcyA9IHQ7IGNvbnN0IGUgPSBNYXRoLm1heCgyICogbiAtIDUsIDApOyB0aGlzLl90cmlhbmdsZXMgPSBuZXcgVWludDMyQXJyYXkoMyAqIGUpLCB0aGlzLl9oYWxmZWRnZXMgPSBuZXcgSW50MzJBcnJheSgzICogZSksIHRoaXMuX2hhc2hTaXplID0gTWF0aC5jZWlsKE1hdGguc3FydChuKSksIHRoaXMuX2h1bGxQcmV2ID0gbmV3IFVpbnQzMkFycmF5KG4pLCB0aGlzLl9odWxsTmV4dCA9IG5ldyBVaW50MzJBcnJheShuKSwgdGhpcy5faHVsbFRyaSA9IG5ldyBVaW50MzJBcnJheShuKSwgdGhpcy5faHVsbEhhc2ggPSBuZXcgSW50MzJBcnJheSh0aGlzLl9oYXNoU2l6ZSkuZmlsbCgtMSksIHRoaXMuX2lkcyA9IG5ldyBVaW50MzJBcnJheShuKSwgdGhpcy5fZGlzdHMgPSBuZXcgRmxvYXQ2NEFycmF5KG4pLCB0aGlzLnVwZGF0ZSgpIH0gdXBkYXRlKCkgeyBjb25zdCB7IGNvb3JkczogdCwgX2h1bGxQcmV2OiBuLCBfaHVsbE5leHQ6IGUsIF9odWxsVHJpOiByLCBfaHVsbEhhc2g6IGkgfSA9IHRoaXMsIG8gPSB0Lmxlbmd0aCA+PiAxOyBsZXQgYSA9IDEgLyAwLCB1ID0gMSAvIDAsIGMgPSAtMSAvIDAsIGYgPSAtMSAvIDA7IGZvciAobGV0IG4gPSAwOyBuIDwgbzsgbisrKSB7IGNvbnN0IGUgPSB0WzIgKiBuXSwgciA9IHRbMiAqIG4gKyAxXTsgZSA8IGEgJiYgKGEgPSBlKSwgciA8IHUgJiYgKHUgPSByKSwgZSA+IGMgJiYgKGMgPSBlKSwgciA+IGYgJiYgKGYgPSByKSwgdGhpcy5faWRzW25dID0gbiB9IGNvbnN0IHMgPSAoYSArIGMpIC8gMiwgbCA9ICh1ICsgZikgLyAyOyBsZXQgaCwgZCwgcCwgZyA9IDEgLyAwOyBmb3IgKGxldCBuID0gMDsgbiA8IG87IG4rKykgeyBjb25zdCBlID0gaHUocywgbCwgdFsyICogbl0sIHRbMiAqIG4gKyAxXSk7IGUgPCBnICYmIChoID0gbiwgZyA9IGUpIH0gY29uc3QgeSA9IHRbMiAqIGhdLCB2ID0gdFsyICogaCArIDFdOyBnID0gMSAvIDA7IGZvciAobGV0IG4gPSAwOyBuIDwgbzsgbisrKSB7IGlmIChuID09PSBoKSBjb250aW51ZTsgY29uc3QgZSA9IGh1KHksIHYsIHRbMiAqIG5dLCB0WzIgKiBuICsgMV0pOyBlIDwgZyAmJiBlID4gMCAmJiAoZCA9IG4sIGcgPSBlKSB9IGxldCBfID0gdFsyICogZF0sIGIgPSB0WzIgKiBkICsgMV0sIG0gPSAxIC8gMDsgZm9yIChsZXQgbiA9IDA7IG4gPCBvOyBuKyspIHsgaWYgKG4gPT09IGggfHwgbiA9PT0gZCkgY29udGludWU7IGNvbnN0IGUgPSBwdSh5LCB2LCBfLCBiLCB0WzIgKiBuXSwgdFsyICogbiArIDFdKTsgZSA8IG0gJiYgKHAgPSBuLCBtID0gZSkgfSBsZXQgeCA9IHRbMiAqIHBdLCB3ID0gdFsyICogcCArIDFdOyBpZiAobSA9PT0gMSAvIDApIHsgZm9yIChsZXQgbiA9IDA7IG4gPCBvOyBuKyspdGhpcy5fZGlzdHNbbl0gPSB0WzIgKiBuXSAtIHRbMF0gfHwgdFsyICogbiArIDFdIC0gdFsxXTsgZ3UodGhpcy5faWRzLCB0aGlzLl9kaXN0cywgMCwgbyAtIDEpOyBjb25zdCBuID0gbmV3IFVpbnQzMkFycmF5KG8pOyBsZXQgZSA9IDA7IGZvciAobGV0IHQgPSAwLCByID0gLTEgLyAwOyB0IDwgbzsgdCsrKSB7IGNvbnN0IGkgPSB0aGlzLl9pZHNbdF07IHRoaXMuX2Rpc3RzW2ldID4gciAmJiAobltlKytdID0gaSwgciA9IHRoaXMuX2Rpc3RzW2ldKSB9IHJldHVybiB0aGlzLmh1bGwgPSBuLnN1YmFycmF5KDAsIGUpLCB0aGlzLnRyaWFuZ2xlcyA9IG5ldyBVaW50MzJBcnJheSgwKSwgdm9pZCAodGhpcy5oYWxmZWRnZXMgPSBuZXcgVWludDMyQXJyYXkoMCkpIH0gaWYgKGN1KHksIHYsIF8sIGIsIHgsIHcpIDwgMCkgeyBjb25zdCB0ID0gZCwgbiA9IF8sIGUgPSBiOyBkID0gcCwgXyA9IHgsIGIgPSB3LCBwID0gdCwgeCA9IG4sIHcgPSBlIH0gY29uc3QgTSA9IGZ1bmN0aW9uICh0LCBuLCBlLCByLCBpLCBvKSB7IGNvbnN0IGEgPSBlIC0gdCwgdSA9IHIgLSBuLCBjID0gaSAtIHQsIGYgPSBvIC0gbiwgcyA9IGEgKiBhICsgdSAqIHUsIGwgPSBjICogYyArIGYgKiBmLCBoID0gLjUgLyAoYSAqIGYgLSB1ICogYyk7IHJldHVybiB7IHg6IHQgKyAoZiAqIHMgLSB1ICogbCkgKiBoLCB5OiBuICsgKGEgKiBsIC0gYyAqIHMpICogaCB9IH0oeSwgdiwgXywgYiwgeCwgdyk7IHRoaXMuX2N4ID0gTS54LCB0aGlzLl9jeSA9IE0ueTsgZm9yIChsZXQgbiA9IDA7IG4gPCBvOyBuKyspdGhpcy5fZGlzdHNbbl0gPSBodSh0WzIgKiBuXSwgdFsyICogbiArIDFdLCBNLngsIE0ueSk7IGd1KHRoaXMuX2lkcywgdGhpcy5fZGlzdHMsIDAsIG8gLSAxKSwgdGhpcy5faHVsbFN0YXJ0ID0gaDsgbGV0IEEgPSAzOyBlW2hdID0gbltwXSA9IGQsIGVbZF0gPSBuW2hdID0gcCwgZVtwXSA9IG5bZF0gPSBoLCByW2hdID0gMCwgcltkXSA9IDEsIHJbcF0gPSAyLCBpLmZpbGwoLTEpLCBpW3RoaXMuX2hhc2hLZXkoeSwgdildID0gaCwgaVt0aGlzLl9oYXNoS2V5KF8sIGIpXSA9IGQsIGlbdGhpcy5faGFzaEtleSh4LCB3KV0gPSBwLCB0aGlzLnRyaWFuZ2xlc0xlbiA9IDAsIHRoaXMuX2FkZFRyaWFuZ2xlKGgsIGQsIHAsIC0xLCAtMSwgLTEpOyBmb3IgKGxldCBvLCBhLCB1ID0gMDsgdSA8IHRoaXMuX2lkcy5sZW5ndGg7IHUrKykgeyBjb25zdCBjID0gdGhpcy5faWRzW3VdLCBmID0gdFsyICogY10sIHMgPSB0WzIgKiBjICsgMV07IGlmICh1ID4gMCAmJiBNYXRoLmFicyhmIC0gbykgPD0gZnUgJiYgTWF0aC5hYnMocyAtIGEpIDw9IGZ1KSBjb250aW51ZTsgaWYgKG8gPSBmLCBhID0gcywgYyA9PT0gaCB8fCBjID09PSBkIHx8IGMgPT09IHApIGNvbnRpbnVlOyBsZXQgbCA9IDA7IGZvciAobGV0IHQgPSAwLCBuID0gdGhpcy5faGFzaEtleShmLCBzKTsgdCA8IHRoaXMuX2hhc2hTaXplICYmIChsID0gaVsobiArIHQpICUgdGhpcy5faGFzaFNpemVdLCAtMSA9PT0gbCB8fCBsID09PSBlW2xdKTsgdCsrKTsgbCA9IG5bbF07IGxldCBnLCB5ID0gbDsgZm9yICg7IGcgPSBlW3ldLCBjdShmLCBzLCB0WzIgKiB5XSwgdFsyICogeSArIDFdLCB0WzIgKiBnXSwgdFsyICogZyArIDFdKSA+PSAwOylpZiAoeSA9IGcsIHkgPT09IGwpIHsgeSA9IC0xOyBicmVhayB9IGlmICgtMSA9PT0geSkgY29udGludWU7IGxldCB2ID0gdGhpcy5fYWRkVHJpYW5nbGUoeSwgYywgZVt5XSwgLTEsIC0xLCByW3ldKTsgcltjXSA9IHRoaXMuX2xlZ2FsaXplKHYgKyAyKSwgclt5XSA9IHYsIEErKzsgbGV0IF8gPSBlW3ldOyBmb3IgKDsgZyA9IGVbX10sIGN1KGYsIHMsIHRbMiAqIF9dLCB0WzIgKiBfICsgMV0sIHRbMiAqIGddLCB0WzIgKiBnICsgMV0pIDwgMDspdiA9IHRoaXMuX2FkZFRyaWFuZ2xlKF8sIGMsIGcsIHJbY10sIC0xLCByW19dKSwgcltjXSA9IHRoaXMuX2xlZ2FsaXplKHYgKyAyKSwgZVtfXSA9IF8sIEEtLSwgXyA9IGc7IGlmICh5ID09PSBsKSBmb3IgKDsgZyA9IG5beV0sIGN1KGYsIHMsIHRbMiAqIGddLCB0WzIgKiBnICsgMV0sIHRbMiAqIHldLCB0WzIgKiB5ICsgMV0pIDwgMDspdiA9IHRoaXMuX2FkZFRyaWFuZ2xlKGcsIGMsIHksIC0xLCByW3ldLCByW2ddKSwgdGhpcy5fbGVnYWxpemUodiArIDIpLCByW2ddID0gdiwgZVt5XSA9IHksIEEtLSwgeSA9IGc7IHRoaXMuX2h1bGxTdGFydCA9IG5bY10gPSB5LCBlW3ldID0gbltfXSA9IGMsIGVbY10gPSBfLCBpW3RoaXMuX2hhc2hLZXkoZiwgcyldID0gYywgaVt0aGlzLl9oYXNoS2V5KHRbMiAqIHldLCB0WzIgKiB5ICsgMV0pXSA9IHkgfSB0aGlzLmh1bGwgPSBuZXcgVWludDMyQXJyYXkoQSk7IGZvciAobGV0IHQgPSAwLCBuID0gdGhpcy5faHVsbFN0YXJ0OyB0IDwgQTsgdCsrKXRoaXMuaHVsbFt0XSA9IG4sIG4gPSBlW25dOyB0aGlzLnRyaWFuZ2xlcyA9IHRoaXMuX3RyaWFuZ2xlcy5zdWJhcnJheSgwLCB0aGlzLnRyaWFuZ2xlc0xlbiksIHRoaXMuaGFsZmVkZ2VzID0gdGhpcy5faGFsZmVkZ2VzLnN1YmFycmF5KDAsIHRoaXMudHJpYW5nbGVzTGVuKSB9IF9oYXNoS2V5KHQsIG4pIHsgcmV0dXJuIE1hdGguZmxvb3IoZnVuY3Rpb24gKHQsIG4pIHsgY29uc3QgZSA9IHQgLyAoTWF0aC5hYnModCkgKyBNYXRoLmFicyhuKSk7IHJldHVybiAobiA+IDAgPyAzIC0gZSA6IDEgKyBlKSAvIDQgfSh0IC0gdGhpcy5fY3gsIG4gLSB0aGlzLl9jeSkgKiB0aGlzLl9oYXNoU2l6ZSkgJSB0aGlzLl9oYXNoU2l6ZSB9IF9sZWdhbGl6ZSh0KSB7IGNvbnN0IHsgX3RyaWFuZ2xlczogbiwgX2hhbGZlZGdlczogZSwgY29vcmRzOiByIH0gPSB0aGlzOyBsZXQgaSA9IDAsIG8gPSAwOyBmb3IgKDsgOykgeyBjb25zdCBhID0gZVt0XSwgdSA9IHQgLSB0ICUgMzsgaWYgKG8gPSB1ICsgKHQgKyAyKSAlIDMsIC0xID09PSBhKSB7IGlmICgwID09PSBpKSBicmVhazsgdCA9IHN1Wy0taV07IGNvbnRpbnVlIH0gY29uc3QgYyA9IGEgLSBhICUgMywgZiA9IHUgKyAodCArIDEpICUgMywgcyA9IGMgKyAoYSArIDIpICUgMywgbCA9IG5bb10sIGggPSBuW3RdLCBkID0gbltmXSwgcCA9IG5bc107IGlmIChkdShyWzIgKiBsXSwgclsyICogbCArIDFdLCByWzIgKiBoXSwgclsyICogaCArIDFdLCByWzIgKiBkXSwgclsyICogZCArIDFdLCByWzIgKiBwXSwgclsyICogcCArIDFdKSkgeyBuW3RdID0gcCwgblthXSA9IGw7IGNvbnN0IHIgPSBlW3NdOyBpZiAoLTEgPT09IHIpIHsgbGV0IG4gPSB0aGlzLl9odWxsU3RhcnQ7IGRvIHsgaWYgKHRoaXMuX2h1bGxUcmlbbl0gPT09IHMpIHsgdGhpcy5faHVsbFRyaVtuXSA9IHQ7IGJyZWFrIH0gbiA9IHRoaXMuX2h1bGxQcmV2W25dIH0gd2hpbGUgKG4gIT09IHRoaXMuX2h1bGxTdGFydCkgfSB0aGlzLl9saW5rKHQsIHIpLCB0aGlzLl9saW5rKGEsIGVbb10pLCB0aGlzLl9saW5rKG8sIHMpOyBjb25zdCB1ID0gYyArIChhICsgMSkgJSAzOyBpIDwgc3UubGVuZ3RoICYmIChzdVtpKytdID0gdSkgfSBlbHNlIHsgaWYgKDAgPT09IGkpIGJyZWFrOyB0ID0gc3VbLS1pXSB9IH0gcmV0dXJuIG8gfSBfbGluayh0LCBuKSB7IHRoaXMuX2hhbGZlZGdlc1t0XSA9IG4sIC0xICE9PSBuICYmICh0aGlzLl9oYWxmZWRnZXNbbl0gPSB0KSB9IF9hZGRUcmlhbmdsZSh0LCBuLCBlLCByLCBpLCBvKSB7IGNvbnN0IGEgPSB0aGlzLnRyaWFuZ2xlc0xlbjsgcmV0dXJuIHRoaXMuX3RyaWFuZ2xlc1thXSA9IHQsIHRoaXMuX3RyaWFuZ2xlc1thICsgMV0gPSBuLCB0aGlzLl90cmlhbmdsZXNbYSArIDJdID0gZSwgdGhpcy5fbGluayhhLCByKSwgdGhpcy5fbGluayhhICsgMSwgaSksIHRoaXMuX2xpbmsoYSArIDIsIG8pLCB0aGlzLnRyaWFuZ2xlc0xlbiArPSAzLCBhIH0gfSBmdW5jdGlvbiBodSh0LCBuLCBlLCByKSB7IGNvbnN0IGkgPSB0IC0gZSwgbyA9IG4gLSByOyByZXR1cm4gaSAqIGkgKyBvICogbyB9IGZ1bmN0aW9uIGR1KHQsIG4sIGUsIHIsIGksIG8sIGEsIHUpIHsgY29uc3QgYyA9IHQgLSBhLCBmID0gbiAtIHUsIHMgPSBlIC0gYSwgbCA9IHIgLSB1LCBoID0gaSAtIGEsIGQgPSBvIC0gdSwgcCA9IHMgKiBzICsgbCAqIGwsIGcgPSBoICogaCArIGQgKiBkOyByZXR1cm4gYyAqIChsICogZyAtIHAgKiBkKSAtIGYgKiAocyAqIGcgLSBwICogaCkgKyAoYyAqIGMgKyBmICogZikgKiAocyAqIGQgLSBsICogaCkgPCAwIH0gZnVuY3Rpb24gcHUodCwgbiwgZSwgciwgaSwgbykgeyBjb25zdCBhID0gZSAtIHQsIHUgPSByIC0gbiwgYyA9IGkgLSB0LCBmID0gbyAtIG4sIHMgPSBhICogYSArIHUgKiB1LCBsID0gYyAqIGMgKyBmICogZiwgaCA9IC41IC8gKGEgKiBmIC0gdSAqIGMpLCBkID0gKGYgKiBzIC0gdSAqIGwpICogaCwgcCA9IChhICogbCAtIGMgKiBzKSAqIGg7IHJldHVybiBkICogZCArIHAgKiBwIH0gZnVuY3Rpb24gZ3UodCwgbiwgZSwgcikgeyBpZiAociAtIGUgPD0gMjApIGZvciAobGV0IGkgPSBlICsgMTsgaSA8PSByOyBpKyspIHsgY29uc3QgciA9IHRbaV0sIG8gPSBuW3JdOyBsZXQgYSA9IGkgLSAxOyBmb3IgKDsgYSA+PSBlICYmIG5bdFthXV0gPiBvOyl0W2EgKyAxXSA9IHRbYS0tXTsgdFthICsgMV0gPSByIH0gZWxzZSB7IGxldCBpID0gZSArIDEsIG8gPSByOyB5dSh0LCBlICsgciA+PiAxLCBpKSwgblt0W2VdXSA+IG5bdFtyXV0gJiYgeXUodCwgZSwgciksIG5bdFtpXV0gPiBuW3Rbcl1dICYmIHl1KHQsIGksIHIpLCBuW3RbZV1dID4gblt0W2ldXSAmJiB5dSh0LCBlLCBpKTsgY29uc3QgYSA9IHRbaV0sIHUgPSBuW2FdOyBmb3IgKDsgOykgeyBkbyB7IGkrKyB9IHdoaWxlIChuW3RbaV1dIDwgdSk7IGRvIHsgby0tIH0gd2hpbGUgKG5bdFtvXV0gPiB1KTsgaWYgKG8gPCBpKSBicmVhazsgeXUodCwgaSwgbykgfSB0W2UgKyAxXSA9IHRbb10sIHRbb10gPSBhLCByIC0gaSArIDEgPj0gbyAtIGUgPyAoZ3UodCwgbiwgaSwgciksIGd1KHQsIG4sIGUsIG8gLSAxKSkgOiAoZ3UodCwgbiwgZSwgbyAtIDEpLCBndSh0LCBuLCBpLCByKSkgfSB9IGZ1bmN0aW9uIHl1KHQsIG4sIGUpIHsgY29uc3QgciA9IHRbbl07IHRbbl0gPSB0W2VdLCB0W2VdID0gciB9IGZ1bmN0aW9uIHZ1KHQpIHsgcmV0dXJuIHRbMF0gfSBmdW5jdGlvbiBfdSh0KSB7IHJldHVybiB0WzFdIH0gY29uc3QgYnUgPSAxZS02OyBjbGFzcyBtdSB7IGNvbnN0cnVjdG9yKCkgeyB0aGlzLl94MCA9IHRoaXMuX3kwID0gdGhpcy5feDEgPSB0aGlzLl95MSA9IG51bGwsIHRoaXMuXyA9ICIiIH0gbW92ZVRvKHQsIG4pIHsgdGhpcy5fICs9IGBNJHt0aGlzLl94MCA9IHRoaXMuX3gxID0gK3R9LCR7dGhpcy5feTAgPSB0aGlzLl95MSA9ICtufWAgfSBjbG9zZVBhdGgoKSB7IG51bGwgIT09IHRoaXMuX3gxICYmICh0aGlzLl94MSA9IHRoaXMuX3gwLCB0aGlzLl95MSA9IHRoaXMuX3kwLCB0aGlzLl8gKz0gIloiKSB9IGxpbmVUbyh0LCBuKSB7IHRoaXMuXyArPSBgTCR7dGhpcy5feDEgPSArdH0sJHt0aGlzLl95MSA9ICtufWAgfSBhcmModCwgbiwgZSkgeyBjb25zdCByID0gKHQgPSArdCkgKyAoZSA9ICtlKSwgaSA9IG4gPSArbjsgaWYgKGUgPCAwKSB0aHJvdyBuZXcgRXJyb3IoIm5lZ2F0aXZlIHJhZGl1cyIpOyBudWxsID09PSB0aGlzLl94MSA/IHRoaXMuXyArPSBgTSR7cn0sJHtpfWAgOiAoTWF0aC5hYnModGhpcy5feDEgLSByKSA+IGJ1IHx8IE1hdGguYWJzKHRoaXMuX3kxIC0gaSkgPiBidSkgJiYgKHRoaXMuXyArPSAiTCIgKyByICsgIiwiICsgaSksIGUgJiYgKHRoaXMuXyArPSBgQSR7ZX0sJHtlfSwwLDEsMSwke3QgLSBlfSwke259QSR7ZX0sJHtlfSwwLDEsMSwke3RoaXMuX3gxID0gcn0sJHt0aGlzLl95MSA9IGl9YCkgfSByZWN0KHQsIG4sIGUsIHIpIHsgdGhpcy5fICs9IGBNJHt0aGlzLl94MCA9IHRoaXMuX3gxID0gK3R9LCR7dGhpcy5feTAgPSB0aGlzLl95MSA9ICtufWgkeytlfXYkeytyfWgkey1lfVpgIH0gdmFsdWUoKSB7IHJldHVybiB0aGlzLl8gfHwgbnVsbCB9IH0gY2xhc3MgeHUgeyBjb25zdHJ1Y3RvcigpIHsgdGhpcy5fID0gW10gfSBtb3ZlVG8odCwgbikgeyB0aGlzLl8ucHVzaChbdCwgbl0pIH0gY2xvc2VQYXRoKCkgeyB0aGlzLl8ucHVzaCh0aGlzLl9bMF0uc2xpY2UoKSkgfSBsaW5lVG8odCwgbikgeyB0aGlzLl8ucHVzaChbdCwgbl0pIH0gdmFsdWUoKSB7IHJldHVybiB0aGlzLl8ubGVuZ3RoID8gdGhpcy5fIDogbnVsbCB9IH0gY2xhc3Mgd3UgeyBjb25zdHJ1Y3Rvcih0LCBbbiwgZSwgciwgaV0gPSBbMCwgMCwgOTYwLCA1MDBdKSB7IGlmICghKChyID0gK3IpID49IChuID0gK24pICYmIChpID0gK2kpID49IChlID0gK2UpKSkgdGhyb3cgbmV3IEVycm9yKCJpbnZhbGlkIGJvdW5kcyIpOyB0aGlzLmRlbGF1bmF5ID0gdCwgdGhpcy5fY2lyY3VtY2VudGVycyA9IG5ldyBGbG9hdDY0QXJyYXkoMiAqIHQucG9pbnRzLmxlbmd0aCksIHRoaXMudmVjdG9ycyA9IG5ldyBGbG9hdDY0QXJyYXkoMiAqIHQucG9pbnRzLmxlbmd0aCksIHRoaXMueG1heCA9IHIsIHRoaXMueG1pbiA9IG4sIHRoaXMueW1heCA9IGksIHRoaXMueW1pbiA9IGUsIHRoaXMuX2luaXQoKSB9IHVwZGF0ZSgpIHsgcmV0dXJuIHRoaXMuZGVsYXVuYXkudXBkYXRlKCksIHRoaXMuX2luaXQoKSwgdGhpcyB9IF9pbml0KCkgeyBjb25zdCB7IGRlbGF1bmF5OiB7IHBvaW50czogdCwgaHVsbDogbiwgdHJpYW5nbGVzOiBlIH0sIHZlY3RvcnM6IHIgfSA9IHRoaXMsIGkgPSB0aGlzLmNpcmN1bWNlbnRlcnMgPSB0aGlzLl9jaXJjdW1jZW50ZXJzLnN1YmFycmF5KDAsIGUubGVuZ3RoIC8gMyAqIDIpOyBmb3IgKGxldCBuLCByLCBvID0gMCwgYSA9IDAsIHUgPSBlLmxlbmd0aDsgbyA8IHU7IG8gKz0gMywgYSArPSAyKSB7IGNvbnN0IHUgPSAyICogZVtvXSwgYyA9IDIgKiBlW28gKyAxXSwgZiA9IDIgKiBlW28gKyAyXSwgcyA9IHRbdV0sIGwgPSB0W3UgKyAxXSwgaCA9IHRbY10sIGQgPSB0W2MgKyAxXSwgcCA9IHRbZl0sIGcgPSB0W2YgKyAxXSwgeSA9IGggLSBzLCB2ID0gZCAtIGwsIF8gPSBwIC0gcywgYiA9IGcgLSBsLCBtID0gMiAqICh5ICogYiAtIHYgKiBfKTsgaWYgKE1hdGguYWJzKG0pIDwgMWUtOSkgeyBsZXQgaSA9IDFlOTsgY29uc3QgbyA9IDIgKiBlWzBdOyBpICo9IE1hdGguc2lnbigodFtvXSAtIHMpICogYiAtICh0W28gKyAxXSAtIGwpICogXyksIG4gPSAocyArIHApIC8gMiAtIGkgKiBiLCByID0gKGwgKyBnKSAvIDIgKyBpICogXyB9IGVsc2UgeyBjb25zdCB0ID0gMSAvIG0sIGUgPSB5ICogeSArIHYgKiB2LCBpID0gXyAqIF8gKyBiICogYjsgbiA9IHMgKyAoYiAqIGUgLSB2ICogaSkgKiB0LCByID0gbCArICh5ICogaSAtIF8gKiBlKSAqIHQgfSBpW2FdID0gbiwgaVthICsgMV0gPSByIH0gbGV0IG8sIGEsIHUsIGMgPSBuW24ubGVuZ3RoIC0gMV0sIGYgPSA0ICogYywgcyA9IHRbMiAqIGNdLCBsID0gdFsyICogYyArIDFdOyByLmZpbGwoMCk7IGZvciAobGV0IGUgPSAwOyBlIDwgbi5sZW5ndGg7ICsrZSljID0gbltlXSwgbyA9IGYsIGEgPSBzLCB1ID0gbCwgZiA9IDQgKiBjLCBzID0gdFsyICogY10sIGwgPSB0WzIgKiBjICsgMV0sIHJbbyArIDJdID0gcltmXSA9IHUgLSBsLCByW28gKyAzXSA9IHJbZiArIDFdID0gcyAtIGEgfSByZW5kZXIodCkgeyBjb25zdCBuID0gbnVsbCA9PSB0ID8gdCA9IG5ldyBtdSA6IHZvaWQgMCwgeyBkZWxhdW5heTogeyBoYWxmZWRnZXM6IGUsIGluZWRnZXM6IHIsIGh1bGw6IGkgfSwgY2lyY3VtY2VudGVyczogbywgdmVjdG9yczogYSB9ID0gdGhpczsgaWYgKGkubGVuZ3RoIDw9IDEpIHJldHVybiBudWxsOyBmb3IgKGxldCBuID0gMCwgciA9IGUubGVuZ3RoOyBuIDwgcjsgKytuKSB7IGNvbnN0IHIgPSBlW25dOyBpZiAociA8IG4pIGNvbnRpbnVlOyBjb25zdCBpID0gMiAqIE1hdGguZmxvb3IobiAvIDMpLCBhID0gMiAqIE1hdGguZmxvb3IociAvIDMpLCB1ID0gb1tpXSwgYyA9IG9baSArIDFdLCBmID0gb1thXSwgcyA9IG9bYSArIDFdOyB0aGlzLl9yZW5kZXJTZWdtZW50KHUsIGMsIGYsIHMsIHQpIH0gbGV0IHUsIGMgPSBpW2kubGVuZ3RoIC0gMV07IGZvciAobGV0IG4gPSAwOyBuIDwgaS5sZW5ndGg7ICsrbikgeyB1ID0gYywgYyA9IGlbbl07IGNvbnN0IGUgPSAyICogTWF0aC5mbG9vcihyW2NdIC8gMyksIGYgPSBvW2VdLCBzID0gb1tlICsgMV0sIGwgPSA0ICogdSwgaCA9IHRoaXMuX3Byb2plY3QoZiwgcywgYVtsICsgMl0sIGFbbCArIDNdKTsgaCAmJiB0aGlzLl9yZW5kZXJTZWdtZW50KGYsIHMsIGhbMF0sIGhbMV0sIHQpIH0gcmV0dXJuIG4gJiYgbi52YWx1ZSgpIH0gcmVuZGVyQm91bmRzKHQpIHsgY29uc3QgbiA9IG51bGwgPT0gdCA/IHQgPSBuZXcgbXUgOiB2b2lkIDA7IHJldHVybiB0LnJlY3QodGhpcy54bWluLCB0aGlzLnltaW4sIHRoaXMueG1heCAtIHRoaXMueG1pbiwgdGhpcy55bWF4IC0gdGhpcy55bWluKSwgbiAmJiBuLnZhbHVlKCkgfSByZW5kZXJDZWxsKHQsIG4pIHsgY29uc3QgZSA9IG51bGwgPT0gbiA/IG4gPSBuZXcgbXUgOiB2b2lkIDAsIHIgPSB0aGlzLl9jbGlwKHQpOyBpZiAobnVsbCA9PT0gciB8fCAhci5sZW5ndGgpIHJldHVybjsgbi5tb3ZlVG8oclswXSwgclsxXSk7IGxldCBpID0gci5sZW5ndGg7IGZvciAoOyByWzBdID09PSByW2kgLSAyXSAmJiByWzFdID09PSByW2kgLSAxXSAmJiBpID4gMTspaSAtPSAyOyBmb3IgKGxldCB0ID0gMjsgdCA8IGk7IHQgKz0gMilyW3RdID09PSByW3QgLSAyXSAmJiByW3QgKyAxXSA9PT0gclt0IC0gMV0gfHwgbi5saW5lVG8oclt0XSwgclt0ICsgMV0pOyByZXR1cm4gbi5jbG9zZVBhdGgoKSwgZSAmJiBlLnZhbHVlKCkgfSAqY2VsbFBvbHlnb25zKCkgeyBjb25zdCB7IGRlbGF1bmF5OiB7IHBvaW50czogdCB9IH0gPSB0aGlzOyBmb3IgKGxldCBuID0gMCwgZSA9IHQubGVuZ3RoIC8gMjsgbiA8IGU7ICsrbikgeyBjb25zdCB0ID0gdGhpcy5jZWxsUG9seWdvbihuKTsgdCAmJiAodC5pbmRleCA9IG4sIHlpZWxkIHQpIH0gfSBjZWxsUG9seWdvbih0KSB7IGNvbnN0IG4gPSBuZXcgeHU7IHJldHVybiB0aGlzLnJlbmRlckNlbGwodCwgbiksIG4udmFsdWUoKSB9IF9yZW5kZXJTZWdtZW50KHQsIG4sIGUsIHIsIGkpIHsgbGV0IG87IGNvbnN0IGEgPSB0aGlzLl9yZWdpb25jb2RlKHQsIG4pLCB1ID0gdGhpcy5fcmVnaW9uY29kZShlLCByKTsgMCA9PT0gYSAmJiAwID09PSB1ID8gKGkubW92ZVRvKHQsIG4pLCBpLmxpbmVUbyhlLCByKSkgOiAobyA9IHRoaXMuX2NsaXBTZWdtZW50KHQsIG4sIGUsIHIsIGEsIHUpKSAmJiAoaS5tb3ZlVG8ob1swXSwgb1sxXSksIGkubGluZVRvKG9bMl0sIG9bM10pKSB9IGNvbnRhaW5zKHQsIG4sIGUpIHsgcmV0dXJuIChuID0gK24pID09IG4gJiYgKGUgPSArZSkgPT0gZSAmJiB0aGlzLmRlbGF1bmF5Ll9zdGVwKHQsIG4sIGUpID09PSB0IH0gKm5laWdoYm9ycyh0KSB7IGNvbnN0IG4gPSB0aGlzLl9jbGlwKHQpOyBpZiAobikgZm9yIChjb25zdCBlIG9mIHRoaXMuZGVsYXVuYXkubmVpZ2hib3JzKHQpKSB7IGNvbnN0IHQgPSB0aGlzLl9jbGlwKGUpOyBpZiAodCkgdDogZm9yIChsZXQgciA9IDAsIGkgPSBuLmxlbmd0aDsgciA8IGk7IHIgKz0gMilmb3IgKGxldCBvID0gMCwgYSA9IHQubGVuZ3RoOyBvIDwgYTsgbyArPSAyKWlmIChuW3JdID09IHRbb10gJiYgbltyICsgMV0gPT0gdFtvICsgMV0gJiYgblsociArIDIpICUgaV0gPT0gdFsobyArIGEgLSAyKSAlIGFdICYmIG5bKHIgKyAzKSAlIGldID09IHRbKG8gKyBhIC0gMSkgJSBhXSkgeyB5aWVsZCBlOyBicmVhayB0IH0gfSB9IF9jZWxsKHQpIHsgY29uc3QgeyBjaXJjdW1jZW50ZXJzOiBuLCBkZWxhdW5heTogeyBpbmVkZ2VzOiBlLCBoYWxmZWRnZXM6IHIsIHRyaWFuZ2xlczogaSB9IH0gPSB0aGlzLCBvID0gZVt0XTsgaWYgKC0xID09PSBvKSByZXR1cm4gbnVsbDsgY29uc3QgYSA9IFtdOyBsZXQgdSA9IG87IGRvIHsgY29uc3QgZSA9IE1hdGguZmxvb3IodSAvIDMpOyBpZiAoYS5wdXNoKG5bMiAqIGVdLCBuWzIgKiBlICsgMV0pLCB1ID0gdSAlIDMgPT0gMiA/IHUgLSAyIDogdSArIDEsIGlbdV0gIT09IHQpIGJyZWFrOyB1ID0gclt1XSB9IHdoaWxlICh1ICE9PSBvICYmIC0xICE9PSB1KTsgcmV0dXJuIGEgfSBfY2xpcCh0KSB7IGlmICgwID09PSB0ICYmIDEgPT09IHRoaXMuZGVsYXVuYXkuaHVsbC5sZW5ndGgpIHJldHVybiBbdGhpcy54bWF4LCB0aGlzLnltaW4sIHRoaXMueG1heCwgdGhpcy55bWF4LCB0aGlzLnhtaW4sIHRoaXMueW1heCwgdGhpcy54bWluLCB0aGlzLnltaW5dOyBjb25zdCBuID0gdGhpcy5fY2VsbCh0KTsgaWYgKG51bGwgPT09IG4pIHJldHVybiBudWxsOyBjb25zdCB7IHZlY3RvcnM6IGUgfSA9IHRoaXMsIHIgPSA0ICogdDsgcmV0dXJuIGVbcl0gfHwgZVtyICsgMV0gPyB0aGlzLl9jbGlwSW5maW5pdGUodCwgbiwgZVtyXSwgZVtyICsgMV0sIGVbciArIDJdLCBlW3IgKyAzXSkgOiB0aGlzLl9jbGlwRmluaXRlKHQsIG4pIH0gX2NsaXBGaW5pdGUodCwgbikgeyBjb25zdCBlID0gbi5sZW5ndGg7IGxldCByLCBpLCBvLCBhLCB1ID0gbnVsbCwgYyA9IG5bZSAtIDJdLCBmID0gbltlIC0gMV0sIHMgPSB0aGlzLl9yZWdpb25jb2RlKGMsIGYpLCBsID0gMDsgZm9yIChsZXQgaCA9IDA7IGggPCBlOyBoICs9IDIpaWYgKHIgPSBjLCBpID0gZiwgYyA9IG5baF0sIGYgPSBuW2ggKyAxXSwgbyA9IHMsIHMgPSB0aGlzLl9yZWdpb25jb2RlKGMsIGYpLCAwID09PSBvICYmIDAgPT09IHMpIGEgPSBsLCBsID0gMCwgdSA/IHUucHVzaChjLCBmKSA6IHUgPSBbYywgZl07IGVsc2UgeyBsZXQgbiwgZSwgaCwgZCwgcDsgaWYgKDAgPT09IG8pIHsgaWYgKG51bGwgPT09IChuID0gdGhpcy5fY2xpcFNlZ21lbnQociwgaSwgYywgZiwgbywgcykpKSBjb250aW51ZTtbZSwgaCwgZCwgcF0gPSBuIH0gZWxzZSB7IGlmIChudWxsID09PSAobiA9IHRoaXMuX2NsaXBTZWdtZW50KGMsIGYsIHIsIGksIHMsIG8pKSkgY29udGludWU7W2QsIHAsIGUsIGhdID0gbiwgYSA9IGwsIGwgPSB0aGlzLl9lZGdlY29kZShlLCBoKSwgYSAmJiBsICYmIHRoaXMuX2VkZ2UodCwgYSwgbCwgdSwgdS5sZW5ndGgpLCB1ID8gdS5wdXNoKGUsIGgpIDogdSA9IFtlLCBoXSB9IGEgPSBsLCBsID0gdGhpcy5fZWRnZWNvZGUoZCwgcCksIGEgJiYgbCAmJiB0aGlzLl9lZGdlKHQsIGEsIGwsIHUsIHUubGVuZ3RoKSwgdSA/IHUucHVzaChkLCBwKSA6IHUgPSBbZCwgcF0gfSBpZiAodSkgYSA9IGwsIGwgPSB0aGlzLl9lZGdlY29kZSh1WzBdLCB1WzFdKSwgYSAmJiBsICYmIHRoaXMuX2VkZ2UodCwgYSwgbCwgdSwgdS5sZW5ndGgpOyBlbHNlIGlmICh0aGlzLmNvbnRhaW5zKHQsICh0aGlzLnhtaW4gKyB0aGlzLnhtYXgpIC8gMiwgKHRoaXMueW1pbiArIHRoaXMueW1heCkgLyAyKSkgcmV0dXJuIFt0aGlzLnhtYXgsIHRoaXMueW1pbiwgdGhpcy54bWF4LCB0aGlzLnltYXgsIHRoaXMueG1pbiwgdGhpcy55bWF4LCB0aGlzLnhtaW4sIHRoaXMueW1pbl07IHJldHVybiB1IH0gX2NsaXBTZWdtZW50KHQsIG4sIGUsIHIsIGksIG8pIHsgZm9yICg7IDspIHsgaWYgKDAgPT09IGkgJiYgMCA9PT0gbykgcmV0dXJuIFt0LCBuLCBlLCByXTsgaWYgKGkgJiBvKSByZXR1cm4gbnVsbDsgbGV0IGEsIHUsIGMgPSBpIHx8IG87IDggJiBjID8gKGEgPSB0ICsgKGUgLSB0KSAqICh0aGlzLnltYXggLSBuKSAvIChyIC0gbiksIHUgPSB0aGlzLnltYXgpIDogNCAmIGMgPyAoYSA9IHQgKyAoZSAtIHQpICogKHRoaXMueW1pbiAtIG4pIC8gKHIgLSBuKSwgdSA9IHRoaXMueW1pbikgOiAyICYgYyA/ICh1ID0gbiArIChyIC0gbikgKiAodGhpcy54bWF4IC0gdCkgLyAoZSAtIHQpLCBhID0gdGhpcy54bWF4KSA6ICh1ID0gbiArIChyIC0gbikgKiAodGhpcy54bWluIC0gdCkgLyAoZSAtIHQpLCBhID0gdGhpcy54bWluKSwgaSA/ICh0ID0gYSwgbiA9IHUsIGkgPSB0aGlzLl9yZWdpb25jb2RlKHQsIG4pKSA6IChlID0gYSwgciA9IHUsIG8gPSB0aGlzLl9yZWdpb25jb2RlKGUsIHIpKSB9IH0gX2NsaXBJbmZpbml0ZSh0LCBuLCBlLCByLCBpLCBvKSB7IGxldCBhLCB1ID0gQXJyYXkuZnJvbShuKTsgaWYgKChhID0gdGhpcy5fcHJvamVjdCh1WzBdLCB1WzFdLCBlLCByKSkgJiYgdS51bnNoaWZ0KGFbMF0sIGFbMV0pLCAoYSA9IHRoaXMuX3Byb2plY3QodVt1Lmxlbmd0aCAtIDJdLCB1W3UubGVuZ3RoIC0gMV0sIGksIG8pKSAmJiB1LnB1c2goYVswXSwgYVsxXSksIHUgPSB0aGlzLl9jbGlwRmluaXRlKHQsIHUpKSBmb3IgKGxldCBuLCBlID0gMCwgciA9IHUubGVuZ3RoLCBpID0gdGhpcy5fZWRnZWNvZGUodVtyIC0gMl0sIHVbciAtIDFdKTsgZSA8IHI7IGUgKz0gMiluID0gaSwgaSA9IHRoaXMuX2VkZ2Vjb2RlKHVbZV0sIHVbZSArIDFdKSwgbiAmJiBpICYmIChlID0gdGhpcy5fZWRnZSh0LCBuLCBpLCB1LCBlKSwgciA9IHUubGVuZ3RoKTsgZWxzZSB0aGlzLmNvbnRhaW5zKHQsICh0aGlzLnhtaW4gKyB0aGlzLnhtYXgpIC8gMiwgKHRoaXMueW1pbiArIHRoaXMueW1heCkgLyAyKSAmJiAodSA9IFt0aGlzLnhtaW4sIHRoaXMueW1pbiwgdGhpcy54bWF4LCB0aGlzLnltaW4sIHRoaXMueG1heCwgdGhpcy55bWF4LCB0aGlzLnhtaW4sIHRoaXMueW1heF0pOyByZXR1cm4gdSB9IF9lZGdlKHQsIG4sIGUsIHIsIGkpIHsgZm9yICg7IG4gIT09IGU7KSB7IGxldCBlLCBvOyBzd2l0Y2ggKG4pIHsgY2FzZSA1OiBuID0gNDsgY29udGludWU7IGNhc2UgNDogbiA9IDYsIGUgPSB0aGlzLnhtYXgsIG8gPSB0aGlzLnltaW47IGJyZWFrOyBjYXNlIDY6IG4gPSAyOyBjb250aW51ZTsgY2FzZSAyOiBuID0gMTAsIGUgPSB0aGlzLnhtYXgsIG8gPSB0aGlzLnltYXg7IGJyZWFrOyBjYXNlIDEwOiBuID0gODsgY29udGludWU7IGNhc2UgODogbiA9IDksIGUgPSB0aGlzLnhtaW4sIG8gPSB0aGlzLnltYXg7IGJyZWFrOyBjYXNlIDk6IG4gPSAxOyBjb250aW51ZTsgY2FzZSAxOiBuID0gNSwgZSA9IHRoaXMueG1pbiwgbyA9IHRoaXMueW1pbiB9cltpXSA9PT0gZSAmJiByW2kgKyAxXSA9PT0gbyB8fCAhdGhpcy5jb250YWlucyh0LCBlLCBvKSB8fCAoci5zcGxpY2UoaSwgMCwgZSwgbyksIGkgKz0gMikgfSBpZiAoci5sZW5ndGggPiA0KSBmb3IgKGxldCB0ID0gMDsgdCA8IHIubGVuZ3RoOyB0ICs9IDIpIHsgY29uc3QgbiA9ICh0ICsgMikgJSByLmxlbmd0aCwgZSA9ICh0ICsgNCkgJSByLmxlbmd0aDsgKHJbdF0gPT09IHJbbl0gJiYgcltuXSA9PT0gcltlXSB8fCByW3QgKyAxXSA9PT0gcltuICsgMV0gJiYgcltuICsgMV0gPT09IHJbZSArIDFdKSAmJiAoci5zcGxpY2UobiwgMiksIHQgLT0gMikgfSByZXR1cm4gaSB9IF9wcm9qZWN0KHQsIG4sIGUsIHIpIHsgbGV0IGksIG8sIGEsIHUgPSAxIC8gMDsgaWYgKHIgPCAwKSB7IGlmIChuIDw9IHRoaXMueW1pbikgcmV0dXJuIG51bGw7IChpID0gKHRoaXMueW1pbiAtIG4pIC8gcikgPCB1ICYmIChhID0gdGhpcy55bWluLCBvID0gdCArICh1ID0gaSkgKiBlKSB9IGVsc2UgaWYgKHIgPiAwKSB7IGlmIChuID49IHRoaXMueW1heCkgcmV0dXJuIG51bGw7IChpID0gKHRoaXMueW1heCAtIG4pIC8gcikgPCB1ICYmIChhID0gdGhpcy55bWF4LCBvID0gdCArICh1ID0gaSkgKiBlKSB9IGlmIChlID4gMCkgeyBpZiAodCA+PSB0aGlzLnhtYXgpIHJldHVybiBudWxsOyAoaSA9ICh0aGlzLnhtYXggLSB0KSAvIGUpIDwgdSAmJiAobyA9IHRoaXMueG1heCwgYSA9IG4gKyAodSA9IGkpICogcikgfSBlbHNlIGlmIChlIDwgMCkgeyBpZiAodCA8PSB0aGlzLnhtaW4pIHJldHVybiBudWxsOyAoaSA9ICh0aGlzLnhtaW4gLSB0KSAvIGUpIDwgdSAmJiAobyA9IHRoaXMueG1pbiwgYSA9IG4gKyAodSA9IGkpICogcikgfSByZXR1cm4gW28sIGFdIH0gX2VkZ2Vjb2RlKHQsIG4pIHsgcmV0dXJuICh0ID09PSB0aGlzLnhtaW4gPyAxIDogdCA9PT0gdGhpcy54bWF4ID8gMiA6IDApIHwgKG4gPT09IHRoaXMueW1pbiA/IDQgOiBuID09PSB0aGlzLnltYXggPyA4IDogMCkgfSBfcmVnaW9uY29kZSh0LCBuKSB7IHJldHVybiAodCA8IHRoaXMueG1pbiA/IDEgOiB0ID4gdGhpcy54bWF4ID8gMiA6IDApIHwgKG4gPCB0aGlzLnltaW4gPyA0IDogbiA+IHRoaXMueW1heCA/IDggOiAwKSB9IH0gY29uc3QgTXUgPSAyICogTWF0aC5QSSwgQXUgPSBNYXRoLnBvdzsgZnVuY3Rpb24gVHUodCkgeyByZXR1cm4gdFswXSB9IGZ1bmN0aW9uIFN1KHQpIHsgcmV0dXJuIHRbMV0gfSBmdW5jdGlvbiBFdSh0LCBuLCBlKSB7IHJldHVybiBbdCArIE1hdGguc2luKHQgKyBuKSAqIGUsIG4gKyBNYXRoLmNvcyh0IC0gbikgKiBlXSB9IGNsYXNzIGt1IHsgc3RhdGljIGZyb20odCwgbiA9IFR1LCBlID0gU3UsIHIpIHsgcmV0dXJuIG5ldyBrdSgibGVuZ3RoIiBpbiB0ID8gZnVuY3Rpb24gKHQsIG4sIGUsIHIpIHsgY29uc3QgaSA9IHQubGVuZ3RoLCBvID0gbmV3IEZsb2F0NjRBcnJheSgyICogaSk7IGZvciAobGV0IGEgPSAwOyBhIDwgaTsgKythKSB7IGNvbnN0IGkgPSB0W2FdOyBvWzIgKiBhXSA9IG4uY2FsbChyLCBpLCBhLCB0KSwgb1syICogYSArIDFdID0gZS5jYWxsKHIsIGksIGEsIHQpIH0gcmV0dXJuIG8gfSh0LCBuLCBlLCByKSA6IEZsb2F0NjRBcnJheS5mcm9tKGZ1bmN0aW9uKiAodCwgbiwgZSwgcikgeyBsZXQgaSA9IDA7IGZvciAoY29uc3QgbyBvZiB0KSB5aWVsZCBuLmNhbGwociwgbywgaSwgdCksIHlpZWxkIGUuY2FsbChyLCBvLCBpLCB0KSwgKytpIH0odCwgbiwgZSwgcikpKSB9IGNvbnN0cnVjdG9yKHQpIHsgdGhpcy5fZGVsYXVuYXRvciA9IG5ldyBsdSh0KSwgdGhpcy5pbmVkZ2VzID0gbmV3IEludDMyQXJyYXkodC5sZW5ndGggLyAyKSwgdGhpcy5faHVsbEluZGV4ID0gbmV3IEludDMyQXJyYXkodC5sZW5ndGggLyAyKSwgdGhpcy5wb2ludHMgPSB0aGlzLl9kZWxhdW5hdG9yLmNvb3JkcywgdGhpcy5faW5pdCgpIH0gdXBkYXRlKCkgeyByZXR1cm4gdGhpcy5fZGVsYXVuYXRvci51cGRhdGUoKSwgdGhpcy5faW5pdCgpLCB0aGlzIH0gX2luaXQoKSB7IGNvbnN0IHQgPSB0aGlzLl9kZWxhdW5hdG9yLCBuID0gdGhpcy5wb2ludHM7IGlmICh0Lmh1bGwgJiYgdC5odWxsLmxlbmd0aCA+IDIgJiYgZnVuY3Rpb24gKHQpIHsgY29uc3QgeyB0cmlhbmdsZXM6IG4sIGNvb3JkczogZSB9ID0gdDsgZm9yIChsZXQgdCA9IDA7IHQgPCBuLmxlbmd0aDsgdCArPSAzKSB7IGNvbnN0IHIgPSAyICogblt0XSwgaSA9IDIgKiBuW3QgKyAxXSwgbyA9IDIgKiBuW3QgKyAyXTsgaWYgKChlW29dIC0gZVtyXSkgKiAoZVtpICsgMV0gLSBlW3IgKyAxXSkgLSAoZVtpXSAtIGVbcl0pICogKGVbbyArIDFdIC0gZVtyICsgMV0pID4gMWUtMTApIHJldHVybiAhMSB9IHJldHVybiAhMCB9KHQpKSB7IHRoaXMuY29sbGluZWFyID0gSW50MzJBcnJheS5mcm9tKHsgbGVuZ3RoOiBuLmxlbmd0aCAvIDIgfSwgKCh0LCBuKSA9PiBuKSkuc29ydCgoKHQsIGUpID0+IG5bMiAqIHRdIC0gblsyICogZV0gfHwgblsyICogdCArIDFdIC0gblsyICogZSArIDFdKSk7IGNvbnN0IHQgPSB0aGlzLmNvbGxpbmVhclswXSwgZSA9IHRoaXMuY29sbGluZWFyW3RoaXMuY29sbGluZWFyLmxlbmd0aCAtIDFdLCByID0gW25bMiAqIHRdLCBuWzIgKiB0ICsgMV0sIG5bMiAqIGVdLCBuWzIgKiBlICsgMV1dLCBpID0gMWUtOCAqIE1hdGguaHlwb3QoclszXSAtIHJbMV0sIHJbMl0gLSByWzBdKTsgZm9yIChsZXQgdCA9IDAsIGUgPSBuLmxlbmd0aCAvIDI7IHQgPCBlOyArK3QpIHsgY29uc3QgZSA9IEV1KG5bMiAqIHRdLCBuWzIgKiB0ICsgMV0sIGkpOyBuWzIgKiB0XSA9IGVbMF0sIG5bMiAqIHQgKyAxXSA9IGVbMV0gfSB0aGlzLl9kZWxhdW5hdG9yID0gbmV3IGx1KG4pIH0gZWxzZSBkZWxldGUgdGhpcy5jb2xsaW5lYXI7IGNvbnN0IGUgPSB0aGlzLmhhbGZlZGdlcyA9IHRoaXMuX2RlbGF1bmF0b3IuaGFsZmVkZ2VzLCByID0gdGhpcy5odWxsID0gdGhpcy5fZGVsYXVuYXRvci5odWxsLCBpID0gdGhpcy50cmlhbmdsZXMgPSB0aGlzLl9kZWxhdW5hdG9yLnRyaWFuZ2xlcywgbyA9IHRoaXMuaW5lZGdlcy5maWxsKC0xKSwgYSA9IHRoaXMuX2h1bGxJbmRleC5maWxsKC0xKTsgZm9yIChsZXQgdCA9IDAsIG4gPSBlLmxlbmd0aDsgdCA8IG47ICsrdCkgeyBjb25zdCBuID0gaVt0ICUgMyA9PSAyID8gdCAtIDIgOiB0ICsgMV07IC0xICE9PSBlW3RdICYmIC0xICE9PSBvW25dIHx8IChvW25dID0gdCkgfSBmb3IgKGxldCB0ID0gMCwgbiA9IHIubGVuZ3RoOyB0IDwgbjsgKyt0KWFbclt0XV0gPSB0OyByLmxlbmd0aCA8PSAyICYmIHIubGVuZ3RoID4gMCAmJiAodGhpcy50cmlhbmdsZXMgPSBuZXcgSW50MzJBcnJheSgzKS5maWxsKC0xKSwgdGhpcy5oYWxmZWRnZXMgPSBuZXcgSW50MzJBcnJheSgzKS5maWxsKC0xKSwgdGhpcy50cmlhbmdsZXNbMF0gPSByWzBdLCBvW3JbMF1dID0gMSwgMiA9PT0gci5sZW5ndGggJiYgKG9bclsxXV0gPSAwLCB0aGlzLnRyaWFuZ2xlc1sxXSA9IHJbMV0sIHRoaXMudHJpYW5nbGVzWzJdID0gclsxXSkpIH0gdm9yb25vaSh0KSB7IHJldHVybiBuZXcgd3UodGhpcywgdCkgfSAqbmVpZ2hib3JzKHQpIHsgY29uc3QgeyBpbmVkZ2VzOiBuLCBodWxsOiBlLCBfaHVsbEluZGV4OiByLCBoYWxmZWRnZXM6IGksIHRyaWFuZ2xlczogbywgY29sbGluZWFyOiBhIH0gPSB0aGlzOyBpZiAoYSkgeyBjb25zdCBuID0gYS5pbmRleE9mKHQpOyByZXR1cm4gbiA+IDAgJiYgKHlpZWxkIGFbbiAtIDFdKSwgdm9pZCAobiA8IGEubGVuZ3RoIC0gMSAmJiAoeWllbGQgYVtuICsgMV0pKSB9IGNvbnN0IHUgPSBuW3RdOyBpZiAoLTEgPT09IHUpIHJldHVybjsgbGV0IGMgPSB1LCBmID0gLTE7IGRvIHsgaWYgKHlpZWxkIGYgPSBvW2NdLCBjID0gYyAlIDMgPT0gMiA/IGMgLSAyIDogYyArIDEsIG9bY10gIT09IHQpIHJldHVybjsgaWYgKGMgPSBpW2NdLCAtMSA9PT0gYykgeyBjb25zdCBuID0gZVsoclt0XSArIDEpICUgZS5sZW5ndGhdOyByZXR1cm4gdm9pZCAobiAhPT0gZiAmJiAoeWllbGQgbikpIH0gfSB3aGlsZSAoYyAhPT0gdSkgfSBmaW5kKHQsIG4sIGUgPSAwKSB7IGlmICgodCA9ICt0KSAhPSB0IHx8IChuID0gK24pICE9IG4pIHJldHVybiAtMTsgY29uc3QgciA9IGU7IGxldCBpOyBmb3IgKDsgKGkgPSB0aGlzLl9zdGVwKGUsIHQsIG4pKSA+PSAwICYmIGkgIT09IGUgJiYgaSAhPT0gcjspZSA9IGk7IHJldHVybiBpIH0gX3N0ZXAodCwgbiwgZSkgeyBjb25zdCB7IGluZWRnZXM6IHIsIGh1bGw6IGksIF9odWxsSW5kZXg6IG8sIGhhbGZlZGdlczogYSwgdHJpYW5nbGVzOiB1LCBwb2ludHM6IGMgfSA9IHRoaXM7IGlmICgtMSA9PT0gclt0XSB8fCAhYy5sZW5ndGgpIHJldHVybiAodCArIDEpICUgKGMubGVuZ3RoID4+IDEpOyBsZXQgZiA9IHQsIHMgPSBBdShuIC0gY1syICogdF0sIDIpICsgQXUoZSAtIGNbMiAqIHQgKyAxXSwgMik7IGNvbnN0IGwgPSByW3RdOyBsZXQgaCA9IGw7IGRvIHsgbGV0IHIgPSB1W2hdOyBjb25zdCBsID0gQXUobiAtIGNbMiAqIHJdLCAyKSArIEF1KGUgLSBjWzIgKiByICsgMV0sIDIpOyBpZiAobCA8IHMgJiYgKHMgPSBsLCBmID0gciksIGggPSBoICUgMyA9PSAyID8gaCAtIDIgOiBoICsgMSwgdVtoXSAhPT0gdCkgYnJlYWs7IGlmIChoID0gYVtoXSwgLTEgPT09IGgpIHsgaWYgKGggPSBpWyhvW3RdICsgMSkgJSBpLmxlbmd0aF0sIGggIT09IHIgJiYgQXUobiAtIGNbMiAqIGhdLCAyKSArIEF1KGUgLSBjWzIgKiBoICsgMV0sIDIpIDwgcykgcmV0dXJuIGg7IGJyZWFrIH0gfSB3aGlsZSAoaCAhPT0gbCk7IHJldHVybiBmIH0gcmVuZGVyKHQpIHsgY29uc3QgbiA9IG51bGwgPT0gdCA/IHQgPSBuZXcgbXUgOiB2b2lkIDAsIHsgcG9pbnRzOiBlLCBoYWxmZWRnZXM6IHIsIHRyaWFuZ2xlczogaSB9ID0gdGhpczsgZm9yIChsZXQgbiA9IDAsIG8gPSByLmxlbmd0aDsgbiA8IG87ICsrbikgeyBjb25zdCBvID0gcltuXTsgaWYgKG8gPCBuKSBjb250aW51ZTsgY29uc3QgYSA9IDIgKiBpW25dLCB1ID0gMiAqIGlbb107IHQubW92ZVRvKGVbYV0sIGVbYSArIDFdKSwgdC5saW5lVG8oZVt1XSwgZVt1ICsgMV0pIH0gcmV0dXJuIHRoaXMucmVuZGVySHVsbCh0KSwgbiAmJiBuLnZhbHVlKCkgfSByZW5kZXJQb2ludHModCwgbikgeyB2b2lkIDAgIT09IG4gfHwgdCAmJiAiZnVuY3Rpb24iID09IHR5cGVvZiB0Lm1vdmVUbyB8fCAobiA9IHQsIHQgPSBudWxsKSwgbiA9IG51bGwgPT0gbiA/IDIgOiArbjsgY29uc3QgZSA9IG51bGwgPT0gdCA/IHQgPSBuZXcgbXUgOiB2b2lkIDAsIHsgcG9pbnRzOiByIH0gPSB0aGlzOyBmb3IgKGxldCBlID0gMCwgaSA9IHIubGVuZ3RoOyBlIDwgaTsgZSArPSAyKSB7IGNvbnN0IGkgPSByW2VdLCBvID0gcltlICsgMV07IHQubW92ZVRvKGkgKyBuLCBvKSwgdC5hcmMoaSwgbywgbiwgMCwgTXUpIH0gcmV0dXJuIGUgJiYgZS52YWx1ZSgpIH0gcmVuZGVySHVsbCh0KSB7IGNvbnN0IG4gPSBudWxsID09IHQgPyB0ID0gbmV3IG11IDogdm9pZCAwLCB7IGh1bGw6IGUsIHBvaW50czogciB9ID0gdGhpcywgaSA9IDIgKiBlWzBdLCBvID0gZS5sZW5ndGg7IHQubW92ZVRvKHJbaV0sIHJbaSArIDFdKTsgZm9yIChsZXQgbiA9IDE7IG4gPCBvOyArK24pIHsgY29uc3QgaSA9IDIgKiBlW25dOyB0LmxpbmVUbyhyW2ldLCByW2kgKyAxXSkgfSByZXR1cm4gdC5jbG9zZVBhdGgoKSwgbiAmJiBuLnZhbHVlKCkgfSBodWxsUG9seWdvbigpIHsgY29uc3QgdCA9IG5ldyB4dTsgcmV0dXJuIHRoaXMucmVuZGVySHVsbCh0KSwgdC52YWx1ZSgpIH0gcmVuZGVyVHJpYW5nbGUodCwgbikgeyBjb25zdCBlID0gbnVsbCA9PSBuID8gbiA9IG5ldyBtdSA6IHZvaWQgMCwgeyBwb2ludHM6IHIsIHRyaWFuZ2xlczogaSB9ID0gdGhpcywgbyA9IDIgKiBpW3QgKj0gM10sIGEgPSAyICogaVt0ICsgMV0sIHUgPSAyICogaVt0ICsgMl07IHJldHVybiBuLm1vdmVUbyhyW29dLCByW28gKyAxXSksIG4ubGluZVRvKHJbYV0sIHJbYSArIDFdKSwgbi5saW5lVG8oclt1XSwgclt1ICsgMV0pLCBuLmNsb3NlUGF0aCgpLCBlICYmIGUudmFsdWUoKSB9ICp0cmlhbmdsZVBvbHlnb25zKCkgeyBjb25zdCB7IHRyaWFuZ2xlczogdCB9ID0gdGhpczsgZm9yIChsZXQgbiA9IDAsIGUgPSB0Lmxlbmd0aCAvIDM7IG4gPCBlOyArK24peWllbGQgdGhpcy50cmlhbmdsZVBvbHlnb24obikgfSB0cmlhbmdsZVBvbHlnb24odCkgeyBjb25zdCBuID0gbmV3IHh1OyByZXR1cm4gdGhpcy5yZW5kZXJUcmlhbmdsZSh0LCBuKSwgbi52YWx1ZSgpIH0gfSB2YXIgTnUgPSB7fSwgQ3UgPSB7fTsgZnVuY3Rpb24gUHUodCkgeyByZXR1cm4gbmV3IEZ1bmN0aW9uKCJkIiwgInJldHVybiB7IiArIHQubWFwKChmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gSlNPTi5zdHJpbmdpZnkodCkgKyAiOiBkWyIgKyBuICsgJ10gfHwgIiInIH0pKS5qb2luKCIsIikgKyAifSIpIH0gZnVuY3Rpb24genUodCkgeyB2YXIgbiA9IE9iamVjdC5jcmVhdGUobnVsbCksIGUgPSBbXTsgcmV0dXJuIHQuZm9yRWFjaCgoZnVuY3Rpb24gKHQpIHsgZm9yICh2YXIgciBpbiB0KSByIGluIG4gfHwgZS5wdXNoKG5bcl0gPSByKSB9KSksIGUgfSBmdW5jdGlvbiBEdSh0LCBuKSB7IHZhciBlID0gdCArICIiLCByID0gZS5sZW5ndGg7IHJldHVybiByIDwgbiA/IG5ldyBBcnJheShuIC0gciArIDEpLmpvaW4oMCkgKyBlIDogZSB9IGZ1bmN0aW9uIFJ1KHQpIHsgdmFyIG4gPSB0LmdldFVUQ0hvdXJzKCksIGUgPSB0LmdldFVUQ01pbnV0ZXMoKSwgciA9IHQuZ2V0VVRDU2Vjb25kcygpLCBpID0gdC5nZXRVVENNaWxsaXNlY29uZHMoKTsgcmV0dXJuIGlzTmFOKHQpID8gIkludmFsaWQgRGF0ZSIgOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gdCA8IDAgPyAiLSIgKyBEdSgtdCwgNikgOiB0ID4gOTk5OSA/ICIrIiArIER1KHQsIDYpIDogRHUodCwgNCkgfSh0LmdldFVUQ0Z1bGxZZWFyKCkpICsgIi0iICsgRHUodC5nZXRVVENNb250aCgpICsgMSwgMikgKyAiLSIgKyBEdSh0LmdldFVUQ0RhdGUoKSwgMikgKyAoaSA/ICJUIiArIER1KG4sIDIpICsgIjoiICsgRHUoZSwgMikgKyAiOiIgKyBEdShyLCAyKSArICIuIiArIER1KGksIDMpICsgIloiIDogciA/ICJUIiArIER1KG4sIDIpICsgIjoiICsgRHUoZSwgMikgKyAiOiIgKyBEdShyLCAyKSArICJaIiA6IGUgfHwgbiA/ICJUIiArIER1KG4sIDIpICsgIjoiICsgRHUoZSwgMikgKyAiWiIgOiAiIikgfSBmdW5jdGlvbiBGdSh0KSB7IHZhciBuID0gbmV3IFJlZ0V4cCgnWyInICsgdCArICJcblxyXSIpLCBlID0gdC5jaGFyQ29kZUF0KDApOyBmdW5jdGlvbiByKHQsIG4pIHsgdmFyIHIsIGkgPSBbXSwgbyA9IHQubGVuZ3RoLCBhID0gMCwgdSA9IDAsIGMgPSBvIDw9IDAsIGYgPSAhMTsgZnVuY3Rpb24gcygpIHsgaWYgKGMpIHJldHVybiBDdTsgaWYgKGYpIHJldHVybiBmID0gITEsIE51OyB2YXIgbiwgciwgaSA9IGE7IGlmICgzNCA9PT0gdC5jaGFyQ29kZUF0KGkpKSB7IGZvciAoOyBhKysgPCBvICYmIDM0ICE9PSB0LmNoYXJDb2RlQXQoYSkgfHwgMzQgPT09IHQuY2hhckNvZGVBdCgrK2EpOyk7IHJldHVybiAobiA9IGEpID49IG8gPyBjID0gITAgOiAxMCA9PT0gKHIgPSB0LmNoYXJDb2RlQXQoYSsrKSkgPyBmID0gITAgOiAxMyA9PT0gciAmJiAoZiA9ICEwLCAxMCA9PT0gdC5jaGFyQ29kZUF0KGEpICYmICsrYSksIHQuc2xpY2UoaSArIDEsIG4gLSAxKS5yZXBsYWNlKC8iIi9nLCAnIicpIH0gZm9yICg7IGEgPCBvOykgeyBpZiAoMTAgPT09IChyID0gdC5jaGFyQ29kZUF0KG4gPSBhKyspKSkgZiA9ICEwOyBlbHNlIGlmICgxMyA9PT0gcikgZiA9ICEwLCAxMCA9PT0gdC5jaGFyQ29kZUF0KGEpICYmICsrYTsgZWxzZSBpZiAociAhPT0gZSkgY29udGludWU7IHJldHVybiB0LnNsaWNlKGksIG4pIH0gcmV0dXJuIGMgPSAhMCwgdC5zbGljZShpLCBvKSB9IGZvciAoMTAgPT09IHQuY2hhckNvZGVBdChvIC0gMSkgJiYgLS1vLCAxMyA9PT0gdC5jaGFyQ29kZUF0KG8gLSAxKSAmJiAtLW87IChyID0gcygpKSAhPT0gQ3U7KSB7IGZvciAodmFyIGwgPSBbXTsgciAhPT0gTnUgJiYgciAhPT0gQ3U7KWwucHVzaChyKSwgciA9IHMoKTsgbiAmJiBudWxsID09IChsID0gbihsLCB1KyspKSB8fCBpLnB1c2gobCkgfSByZXR1cm4gaSB9IGZ1bmN0aW9uIGkobiwgZSkgeyByZXR1cm4gbi5tYXAoKGZ1bmN0aW9uIChuKSB7IHJldHVybiBlLm1hcCgoZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGEoblt0XSkgfSkpLmpvaW4odCkgfSkpIH0gZnVuY3Rpb24gbyhuKSB7IHJldHVybiBuLm1hcChhKS5qb2luKHQpIH0gZnVuY3Rpb24gYSh0KSB7IHJldHVybiBudWxsID09IHQgPyAiIiA6IHQgaW5zdGFuY2VvZiBEYXRlID8gUnUodCkgOiBuLnRlc3QodCArPSAiIikgPyAnIicgKyB0LnJlcGxhY2UoLyIvZywgJyIiJykgKyAnIicgOiB0IH0gcmV0dXJuIHsgcGFyc2U6IGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlLCBpLCBvID0gcih0LCAoZnVuY3Rpb24gKHQsIHIpIHsgaWYgKGUpIHJldHVybiBlKHQsIHIgLSAxKTsgaSA9IHQsIGUgPSBuID8gZnVuY3Rpb24gKHQsIG4pIHsgdmFyIGUgPSBQdSh0KTsgcmV0dXJuIGZ1bmN0aW9uIChyLCBpKSB7IHJldHVybiBuKGUociksIGksIHQpIH0gfSh0LCBuKSA6IFB1KHQpIH0pKTsgcmV0dXJuIG8uY29sdW1ucyA9IGkgfHwgW10sIG8gfSwgcGFyc2VSb3dzOiByLCBmb3JtYXQ6IGZ1bmN0aW9uIChuLCBlKSB7IHJldHVybiBudWxsID09IGUgJiYgKGUgPSB6dShuKSksIFtlLm1hcChhKS5qb2luKHQpXS5jb25jYXQoaShuLCBlKSkuam9pbigiXG4iKSB9LCBmb3JtYXRCb2R5OiBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gbnVsbCA9PSBuICYmIChuID0genUodCkpLCBpKHQsIG4pLmpvaW4oIlxuIikgfSwgZm9ybWF0Um93czogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQubWFwKG8pLmpvaW4oIlxuIikgfSwgZm9ybWF0Um93OiBvLCBmb3JtYXRWYWx1ZTogYSB9IH0gdmFyIHF1ID0gRnUoIiwiKSwgSXUgPSBxdS5wYXJzZSwgT3UgPSBxdS5wYXJzZVJvd3MsIFV1ID0gcXUuZm9ybWF0LCBCdSA9IHF1LmZvcm1hdEJvZHksIFl1ID0gcXUuZm9ybWF0Um93cywgTHUgPSBxdS5mb3JtYXRSb3csIGp1ID0gcXUuZm9ybWF0VmFsdWUsICR1ID0gRnUoIlx0IiksIEh1ID0gJHUucGFyc2UsIFh1ID0gJHUucGFyc2VSb3dzLCBHdSA9ICR1LmZvcm1hdCwgVnUgPSAkdS5mb3JtYXRCb2R5LCBXdSA9ICR1LmZvcm1hdFJvd3MsIFp1ID0gJHUuZm9ybWF0Um93LCBLdSA9ICR1LmZvcm1hdFZhbHVlOyBjb25zdCBRdSA9IG5ldyBEYXRlKCIyMDE5LTAxLTAxVDAwOjAwIikuZ2V0SG91cnMoKSB8fCBuZXcgRGF0ZSgiMjAxOS0wNy0wMVQwMDowMCIpLmdldEhvdXJzKCk7IGZ1bmN0aW9uIEp1KHQpIHsgaWYgKCF0Lm9rKSB0aHJvdyBuZXcgRXJyb3IodC5zdGF0dXMgKyAiICIgKyB0LnN0YXR1c1RleHQpOyByZXR1cm4gdC5ibG9iKCkgfSBmdW5jdGlvbiB0Yyh0KSB7IGlmICghdC5vaykgdGhyb3cgbmV3IEVycm9yKHQuc3RhdHVzICsgIiAiICsgdC5zdGF0dXNUZXh0KTsgcmV0dXJuIHQuYXJyYXlCdWZmZXIoKSB9IGZ1bmN0aW9uIG5jKHQpIHsgaWYgKCF0Lm9rKSB0aHJvdyBuZXcgRXJyb3IodC5zdGF0dXMgKyAiICIgKyB0LnN0YXR1c1RleHQpOyByZXR1cm4gdC50ZXh0KCkgfSBmdW5jdGlvbiBlYyh0LCBuKSB7IHJldHVybiBmZXRjaCh0LCBuKS50aGVuKG5jKSB9IGZ1bmN0aW9uIHJjKHQpIHsgcmV0dXJuIGZ1bmN0aW9uIChuLCBlLCByKSB7IHJldHVybiAyID09PSBhcmd1bWVudHMubGVuZ3RoICYmICJmdW5jdGlvbiIgPT0gdHlwZW9mIGUgJiYgKHIgPSBlLCBlID0gdm9pZCAwKSwgZWMobiwgZSkudGhlbigoZnVuY3Rpb24gKG4pIHsgcmV0dXJuIHQobiwgcikgfSkpIH0gfSB2YXIgaWMgPSByYyhJdSksIG9jID0gcmMoSHUpOyBmdW5jdGlvbiBhYyh0KSB7IGlmICghdC5vaykgdGhyb3cgbmV3IEVycm9yKHQuc3RhdHVzICsgIiAiICsgdC5zdGF0dXNUZXh0KTsgaWYgKDIwNCAhPT0gdC5zdGF0dXMgJiYgMjA1ICE9PSB0LnN0YXR1cykgcmV0dXJuIHQuanNvbigpIH0gZnVuY3Rpb24gdWModCkgeyByZXR1cm4gKG4sIGUpID0+IGVjKG4sIGUpLnRoZW4oKG4gPT4gKG5ldyBET01QYXJzZXIpLnBhcnNlRnJvbVN0cmluZyhuLCB0KSkpIH0gdmFyIGNjID0gdWMoImFwcGxpY2F0aW9uL3htbCIpLCBmYyA9IHVjKCJ0ZXh0L2h0bWwiKSwgc2MgPSB1YygiaW1hZ2Uvc3ZnK3htbCIpOyBmdW5jdGlvbiBsYyh0LCBuLCBlLCByKSB7IGlmIChpc05hTihuKSB8fCBpc05hTihlKSkgcmV0dXJuIHQ7IHZhciBpLCBvLCBhLCB1LCBjLCBmLCBzLCBsLCBoLCBkID0gdC5fcm9vdCwgcCA9IHsgZGF0YTogciB9LCBnID0gdC5feDAsIHkgPSB0Ll95MCwgdiA9IHQuX3gxLCBfID0gdC5feTE7IGlmICghZCkgcmV0dXJuIHQuX3Jvb3QgPSBwLCB0OyBmb3IgKDsgZC5sZW5ndGg7KWlmICgoZiA9IG4gPj0gKG8gPSAoZyArIHYpIC8gMikpID8gZyA9IG8gOiB2ID0gbywgKHMgPSBlID49IChhID0gKHkgKyBfKSAvIDIpKSA/IHkgPSBhIDogXyA9IGEsIGkgPSBkLCAhKGQgPSBkW2wgPSBzIDw8IDEgfCBmXSkpIHJldHVybiBpW2xdID0gcCwgdDsgaWYgKHUgPSArdC5feC5jYWxsKG51bGwsIGQuZGF0YSksIGMgPSArdC5feS5jYWxsKG51bGwsIGQuZGF0YSksIG4gPT09IHUgJiYgZSA9PT0gYykgcmV0dXJuIHAubmV4dCA9IGQsIGkgPyBpW2xdID0gcCA6IHQuX3Jvb3QgPSBwLCB0OyBkbyB7IGkgPSBpID8gaVtsXSA9IG5ldyBBcnJheSg0KSA6IHQuX3Jvb3QgPSBuZXcgQXJyYXkoNCksIChmID0gbiA+PSAobyA9IChnICsgdikgLyAyKSkgPyBnID0gbyA6IHYgPSBvLCAocyA9IGUgPj0gKGEgPSAoeSArIF8pIC8gMikpID8geSA9IGEgOiBfID0gYSB9IHdoaWxlICgobCA9IHMgPDwgMSB8IGYpID09IChoID0gKGMgPj0gYSkgPDwgMSB8IHUgPj0gbykpOyByZXR1cm4gaVtoXSA9IGQsIGlbbF0gPSBwLCB0IH0gZnVuY3Rpb24gaGModCwgbiwgZSwgciwgaSkgeyB0aGlzLm5vZGUgPSB0LCB0aGlzLngwID0gbiwgdGhpcy55MCA9IGUsIHRoaXMueDEgPSByLCB0aGlzLnkxID0gaSB9IGZ1bmN0aW9uIGRjKHQpIHsgcmV0dXJuIHRbMF0gfSBmdW5jdGlvbiBwYyh0KSB7IHJldHVybiB0WzFdIH0gZnVuY3Rpb24gZ2ModCwgbiwgZSkgeyB2YXIgciA9IG5ldyB5YyhudWxsID09IG4gPyBkYyA6IG4sIG51bGwgPT0gZSA/IHBjIDogZSwgTmFOLCBOYU4sIE5hTiwgTmFOKTsgcmV0dXJuIG51bGwgPT0gdCA/IHIgOiByLmFkZEFsbCh0KSB9IGZ1bmN0aW9uIHljKHQsIG4sIGUsIHIsIGksIG8pIHsgdGhpcy5feCA9IHQsIHRoaXMuX3kgPSBuLCB0aGlzLl94MCA9IGUsIHRoaXMuX3kwID0gciwgdGhpcy5feDEgPSBpLCB0aGlzLl95MSA9IG8sIHRoaXMuX3Jvb3QgPSB2b2lkIDAgfSBmdW5jdGlvbiB2Yyh0KSB7IGZvciAodmFyIG4gPSB7IGRhdGE6IHQuZGF0YSB9LCBlID0gbjsgdCA9IHQubmV4dDspZSA9IGUubmV4dCA9IHsgZGF0YTogdC5kYXRhIH07IHJldHVybiBuIH0gdmFyIF9jID0gZ2MucHJvdG90eXBlID0geWMucHJvdG90eXBlOyBmdW5jdGlvbiBiYyh0KSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiB0IH0gfSBmdW5jdGlvbiBtYyh0KSB7IHJldHVybiAxZS02ICogKHQoKSAtIC41KSB9IGZ1bmN0aW9uIHhjKHQpIHsgcmV0dXJuIHQueCArIHQudnggfSBmdW5jdGlvbiB3Yyh0KSB7IHJldHVybiB0LnkgKyB0LnZ5IH0gZnVuY3Rpb24gTWModCkgeyByZXR1cm4gdC5pbmRleCB9IGZ1bmN0aW9uIEFjKHQsIG4pIHsgdmFyIGUgPSB0LmdldChuKTsgaWYgKCFlKSB0aHJvdyBuZXcgRXJyb3IoIm5vZGUgbm90IGZvdW5kOiAiICsgbik7IHJldHVybiBlIH0gX2MuY29weSA9IGZ1bmN0aW9uICgpIHsgdmFyIHQsIG4sIGUgPSBuZXcgeWModGhpcy5feCwgdGhpcy5feSwgdGhpcy5feDAsIHRoaXMuX3kwLCB0aGlzLl94MSwgdGhpcy5feTEpLCByID0gdGhpcy5fcm9vdDsgaWYgKCFyKSByZXR1cm4gZTsgaWYgKCFyLmxlbmd0aCkgcmV0dXJuIGUuX3Jvb3QgPSB2YyhyKSwgZTsgZm9yICh0ID0gW3sgc291cmNlOiByLCB0YXJnZXQ6IGUuX3Jvb3QgPSBuZXcgQXJyYXkoNCkgfV07IHIgPSB0LnBvcCgpOylmb3IgKHZhciBpID0gMDsgaSA8IDQ7ICsraSkobiA9IHIuc291cmNlW2ldKSAmJiAobi5sZW5ndGggPyB0LnB1c2goeyBzb3VyY2U6IG4sIHRhcmdldDogci50YXJnZXRbaV0gPSBuZXcgQXJyYXkoNCkgfSkgOiByLnRhcmdldFtpXSA9IHZjKG4pKTsgcmV0dXJuIGUgfSwgX2MuYWRkID0gZnVuY3Rpb24gKHQpIHsgY29uc3QgbiA9ICt0aGlzLl94LmNhbGwobnVsbCwgdCksIGUgPSArdGhpcy5feS5jYWxsKG51bGwsIHQpOyByZXR1cm4gbGModGhpcy5jb3ZlcihuLCBlKSwgbiwgZSwgdCkgfSwgX2MuYWRkQWxsID0gZnVuY3Rpb24gKHQpIHsgdmFyIG4sIGUsIHIsIGksIG8gPSB0Lmxlbmd0aCwgYSA9IG5ldyBBcnJheShvKSwgdSA9IG5ldyBBcnJheShvKSwgYyA9IDEgLyAwLCBmID0gMSAvIDAsIHMgPSAtMSAvIDAsIGwgPSAtMSAvIDA7IGZvciAoZSA9IDA7IGUgPCBvOyArK2UpaXNOYU4ociA9ICt0aGlzLl94LmNhbGwobnVsbCwgbiA9IHRbZV0pKSB8fCBpc05hTihpID0gK3RoaXMuX3kuY2FsbChudWxsLCBuKSkgfHwgKGFbZV0gPSByLCB1W2VdID0gaSwgciA8IGMgJiYgKGMgPSByKSwgciA+IHMgJiYgKHMgPSByKSwgaSA8IGYgJiYgKGYgPSBpKSwgaSA+IGwgJiYgKGwgPSBpKSk7IGlmIChjID4gcyB8fCBmID4gbCkgcmV0dXJuIHRoaXM7IGZvciAodGhpcy5jb3ZlcihjLCBmKS5jb3ZlcihzLCBsKSwgZSA9IDA7IGUgPCBvOyArK2UpbGModGhpcywgYVtlXSwgdVtlXSwgdFtlXSk7IHJldHVybiB0aGlzIH0sIF9jLmNvdmVyID0gZnVuY3Rpb24gKHQsIG4pIHsgaWYgKGlzTmFOKHQgPSArdCkgfHwgaXNOYU4obiA9ICtuKSkgcmV0dXJuIHRoaXM7IHZhciBlID0gdGhpcy5feDAsIHIgPSB0aGlzLl95MCwgaSA9IHRoaXMuX3gxLCBvID0gdGhpcy5feTE7IGlmIChpc05hTihlKSkgaSA9IChlID0gTWF0aC5mbG9vcih0KSkgKyAxLCBvID0gKHIgPSBNYXRoLmZsb29yKG4pKSArIDE7IGVsc2UgeyBmb3IgKHZhciBhLCB1LCBjID0gaSAtIGUgfHwgMSwgZiA9IHRoaXMuX3Jvb3Q7IGUgPiB0IHx8IHQgPj0gaSB8fCByID4gbiB8fCBuID49IG87KXN3aXRjaCAodSA9IChuIDwgcikgPDwgMSB8IHQgPCBlLCAoYSA9IG5ldyBBcnJheSg0KSlbdV0gPSBmLCBmID0gYSwgYyAqPSAyLCB1KSB7IGNhc2UgMDogaSA9IGUgKyBjLCBvID0gciArIGM7IGJyZWFrOyBjYXNlIDE6IGUgPSBpIC0gYywgbyA9IHIgKyBjOyBicmVhazsgY2FzZSAyOiBpID0gZSArIGMsIHIgPSBvIC0gYzsgYnJlYWs7IGNhc2UgMzogZSA9IGkgLSBjLCByID0gbyAtIGMgfXRoaXMuX3Jvb3QgJiYgdGhpcy5fcm9vdC5sZW5ndGggJiYgKHRoaXMuX3Jvb3QgPSBmKSB9IHJldHVybiB0aGlzLl94MCA9IGUsIHRoaXMuX3kwID0gciwgdGhpcy5feDEgPSBpLCB0aGlzLl95MSA9IG8sIHRoaXMgfSwgX2MuZGF0YSA9IGZ1bmN0aW9uICgpIHsgdmFyIHQgPSBbXTsgcmV0dXJuIHRoaXMudmlzaXQoKGZ1bmN0aW9uIChuKSB7IGlmICghbi5sZW5ndGgpIGRvIHsgdC5wdXNoKG4uZGF0YSkgfSB3aGlsZSAobiA9IG4ubmV4dCkgfSkpLCB0IH0sIF9jLmV4dGVudCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gdGhpcy5jb3ZlcigrdFswXVswXSwgK3RbMF1bMV0pLmNvdmVyKCt0WzFdWzBdLCArdFsxXVsxXSkgOiBpc05hTih0aGlzLl94MCkgPyB2b2lkIDAgOiBbW3RoaXMuX3gwLCB0aGlzLl95MF0sIFt0aGlzLl94MSwgdGhpcy5feTFdXSB9LCBfYy5maW5kID0gZnVuY3Rpb24gKHQsIG4sIGUpIHsgdmFyIHIsIGksIG8sIGEsIHUsIGMsIGYsIHMgPSB0aGlzLl94MCwgbCA9IHRoaXMuX3kwLCBoID0gdGhpcy5feDEsIGQgPSB0aGlzLl95MSwgcCA9IFtdLCBnID0gdGhpcy5fcm9vdDsgZm9yIChnICYmIHAucHVzaChuZXcgaGMoZywgcywgbCwgaCwgZCkpLCBudWxsID09IGUgPyBlID0gMSAvIDAgOiAocyA9IHQgLSBlLCBsID0gbiAtIGUsIGggPSB0ICsgZSwgZCA9IG4gKyBlLCBlICo9IGUpOyBjID0gcC5wb3AoKTspaWYgKCEoIShnID0gYy5ub2RlKSB8fCAoaSA9IGMueDApID4gaCB8fCAobyA9IGMueTApID4gZCB8fCAoYSA9IGMueDEpIDwgcyB8fCAodSA9IGMueTEpIDwgbCkpIGlmIChnLmxlbmd0aCkgeyB2YXIgeSA9IChpICsgYSkgLyAyLCB2ID0gKG8gKyB1KSAvIDI7IHAucHVzaChuZXcgaGMoZ1szXSwgeSwgdiwgYSwgdSksIG5ldyBoYyhnWzJdLCBpLCB2LCB5LCB1KSwgbmV3IGhjKGdbMV0sIHksIG8sIGEsIHYpLCBuZXcgaGMoZ1swXSwgaSwgbywgeSwgdikpLCAoZiA9IChuID49IHYpIDw8IDEgfCB0ID49IHkpICYmIChjID0gcFtwLmxlbmd0aCAtIDFdLCBwW3AubGVuZ3RoIC0gMV0gPSBwW3AubGVuZ3RoIC0gMSAtIGZdLCBwW3AubGVuZ3RoIC0gMSAtIGZdID0gYykgfSBlbHNlIHsgdmFyIF8gPSB0IC0gK3RoaXMuX3guY2FsbChudWxsLCBnLmRhdGEpLCBiID0gbiAtICt0aGlzLl95LmNhbGwobnVsbCwgZy5kYXRhKSwgbSA9IF8gKiBfICsgYiAqIGI7IGlmIChtIDwgZSkgeyB2YXIgeCA9IE1hdGguc3FydChlID0gbSk7IHMgPSB0IC0geCwgbCA9IG4gLSB4LCBoID0gdCArIHgsIGQgPSBuICsgeCwgciA9IGcuZGF0YSB9IH0gcmV0dXJuIHIgfSwgX2MucmVtb3ZlID0gZnVuY3Rpb24gKHQpIHsgaWYgKGlzTmFOKG8gPSArdGhpcy5feC5jYWxsKG51bGwsIHQpKSB8fCBpc05hTihhID0gK3RoaXMuX3kuY2FsbChudWxsLCB0KSkpIHJldHVybiB0aGlzOyB2YXIgbiwgZSwgciwgaSwgbywgYSwgdSwgYywgZiwgcywgbCwgaCwgZCA9IHRoaXMuX3Jvb3QsIHAgPSB0aGlzLl94MCwgZyA9IHRoaXMuX3kwLCB5ID0gdGhpcy5feDEsIHYgPSB0aGlzLl95MTsgaWYgKCFkKSByZXR1cm4gdGhpczsgaWYgKGQubGVuZ3RoKSBmb3IgKDsgOykgeyBpZiAoKGYgPSBvID49ICh1ID0gKHAgKyB5KSAvIDIpKSA/IHAgPSB1IDogeSA9IHUsIChzID0gYSA+PSAoYyA9IChnICsgdikgLyAyKSkgPyBnID0gYyA6IHYgPSBjLCBuID0gZCwgIShkID0gZFtsID0gcyA8PCAxIHwgZl0pKSByZXR1cm4gdGhpczsgaWYgKCFkLmxlbmd0aCkgYnJlYWs7IChuW2wgKyAxICYgM10gfHwgbltsICsgMiAmIDNdIHx8IG5bbCArIDMgJiAzXSkgJiYgKGUgPSBuLCBoID0gbCkgfSBmb3IgKDsgZC5kYXRhICE9PSB0OylpZiAociA9IGQsICEoZCA9IGQubmV4dCkpIHJldHVybiB0aGlzOyByZXR1cm4gKGkgPSBkLm5leHQpICYmIGRlbGV0ZSBkLm5leHQsIHIgPyAoaSA/IHIubmV4dCA9IGkgOiBkZWxldGUgci5uZXh0LCB0aGlzKSA6IG4gPyAoaSA/IG5bbF0gPSBpIDogZGVsZXRlIG5bbF0sIChkID0gblswXSB8fCBuWzFdIHx8IG5bMl0gfHwgblszXSkgJiYgZCA9PT0gKG5bM10gfHwgblsyXSB8fCBuWzFdIHx8IG5bMF0pICYmICFkLmxlbmd0aCAmJiAoZSA/IGVbaF0gPSBkIDogdGhpcy5fcm9vdCA9IGQpLCB0aGlzKSA6ICh0aGlzLl9yb290ID0gaSwgdGhpcykgfSwgX2MucmVtb3ZlQWxsID0gZnVuY3Rpb24gKHQpIHsgZm9yICh2YXIgbiA9IDAsIGUgPSB0Lmxlbmd0aDsgbiA8IGU7ICsrbil0aGlzLnJlbW92ZSh0W25dKTsgcmV0dXJuIHRoaXMgfSwgX2Mucm9vdCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMuX3Jvb3QgfSwgX2Muc2l6ZSA9IGZ1bmN0aW9uICgpIHsgdmFyIHQgPSAwOyByZXR1cm4gdGhpcy52aXNpdCgoZnVuY3Rpb24gKG4pIHsgaWYgKCFuLmxlbmd0aCkgZG8geyArK3QgfSB3aGlsZSAobiA9IG4ubmV4dCkgfSkpLCB0IH0sIF9jLnZpc2l0ID0gZnVuY3Rpb24gKHQpIHsgdmFyIG4sIGUsIHIsIGksIG8sIGEsIHUgPSBbXSwgYyA9IHRoaXMuX3Jvb3Q7IGZvciAoYyAmJiB1LnB1c2gobmV3IGhjKGMsIHRoaXMuX3gwLCB0aGlzLl95MCwgdGhpcy5feDEsIHRoaXMuX3kxKSk7IG4gPSB1LnBvcCgpOylpZiAoIXQoYyA9IG4ubm9kZSwgciA9IG4ueDAsIGkgPSBuLnkwLCBvID0gbi54MSwgYSA9IG4ueTEpICYmIGMubGVuZ3RoKSB7IHZhciBmID0gKHIgKyBvKSAvIDIsIHMgPSAoaSArIGEpIC8gMjsgKGUgPSBjWzNdKSAmJiB1LnB1c2gobmV3IGhjKGUsIGYsIHMsIG8sIGEpKSwgKGUgPSBjWzJdKSAmJiB1LnB1c2gobmV3IGhjKGUsIHIsIHMsIGYsIGEpKSwgKGUgPSBjWzFdKSAmJiB1LnB1c2gobmV3IGhjKGUsIGYsIGksIG8sIHMpKSwgKGUgPSBjWzBdKSAmJiB1LnB1c2gobmV3IGhjKGUsIHIsIGksIGYsIHMpKSB9IHJldHVybiB0aGlzIH0sIF9jLnZpc2l0QWZ0ZXIgPSBmdW5jdGlvbiAodCkgeyB2YXIgbiwgZSA9IFtdLCByID0gW107IGZvciAodGhpcy5fcm9vdCAmJiBlLnB1c2gobmV3IGhjKHRoaXMuX3Jvb3QsIHRoaXMuX3gwLCB0aGlzLl95MCwgdGhpcy5feDEsIHRoaXMuX3kxKSk7IG4gPSBlLnBvcCgpOykgeyB2YXIgaSA9IG4ubm9kZTsgaWYgKGkubGVuZ3RoKSB7IHZhciBvLCBhID0gbi54MCwgdSA9IG4ueTAsIGMgPSBuLngxLCBmID0gbi55MSwgcyA9IChhICsgYykgLyAyLCBsID0gKHUgKyBmKSAvIDI7IChvID0gaVswXSkgJiYgZS5wdXNoKG5ldyBoYyhvLCBhLCB1LCBzLCBsKSksIChvID0gaVsxXSkgJiYgZS5wdXNoKG5ldyBoYyhvLCBzLCB1LCBjLCBsKSksIChvID0gaVsyXSkgJiYgZS5wdXNoKG5ldyBoYyhvLCBhLCBsLCBzLCBmKSksIChvID0gaVszXSkgJiYgZS5wdXNoKG5ldyBoYyhvLCBzLCBsLCBjLCBmKSkgfSByLnB1c2gobikgfSBmb3IgKDsgbiA9IHIucG9wKCk7KXQobi5ub2RlLCBuLngwLCBuLnkwLCBuLngxLCBuLnkxKTsgcmV0dXJuIHRoaXMgfSwgX2MueCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRoaXMuX3ggPSB0LCB0aGlzKSA6IHRoaXMuX3ggfSwgX2MueSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHRoaXMuX3kgPSB0LCB0aGlzKSA6IHRoaXMuX3kgfTsgY29uc3QgVGMgPSA0Mjk0OTY3Mjk2OyBmdW5jdGlvbiBTYyh0KSB7IHJldHVybiB0LnggfSBmdW5jdGlvbiBFYyh0KSB7IHJldHVybiB0LnkgfSB2YXIga2MgPSBNYXRoLlBJICogKDMgLSBNYXRoLnNxcnQoNSkpOyBmdW5jdGlvbiBOYyh0LCBuKSB7IGlmICgoZSA9ICh0ID0gbiA/IHQudG9FeHBvbmVudGlhbChuIC0gMSkgOiB0LnRvRXhwb25lbnRpYWwoKSkuaW5kZXhPZigiZSIpKSA8IDApIHJldHVybiBudWxsOyB2YXIgZSwgciA9IHQuc2xpY2UoMCwgZSk7IHJldHVybiBbci5sZW5ndGggPiAxID8gclswXSArIHIuc2xpY2UoMikgOiByLCArdC5zbGljZShlICsgMSldIH0gZnVuY3Rpb24gQ2ModCkgeyByZXR1cm4gKHQgPSBOYyhNYXRoLmFicyh0KSkpID8gdFsxXSA6IE5hTiB9IHZhciBQYywgemMgPSAvXig/OiguKT8oWzw+PV5dKSk/KFsrXC0oIF0pPyhbJCNdKT8oMCk/KFxkKyk/KCwpPyhcLlxkKyk/KH4pPyhbYS16JV0pPyQvaTsgZnVuY3Rpb24gRGModCkgeyBpZiAoIShuID0gemMuZXhlYyh0KSkpIHRocm93IG5ldyBFcnJvcigiaW52YWxpZCBmb3JtYXQ6ICIgKyB0KTsgdmFyIG47IHJldHVybiBuZXcgUmMoeyBmaWxsOiBuWzFdLCBhbGlnbjogblsyXSwgc2lnbjogblszXSwgc3ltYm9sOiBuWzRdLCB6ZXJvOiBuWzVdLCB3aWR0aDogbls2XSwgY29tbWE6IG5bN10sIHByZWNpc2lvbjogbls4XSAmJiBuWzhdLnNsaWNlKDEpLCB0cmltOiBuWzldLCB0eXBlOiBuWzEwXSB9KSB9IGZ1bmN0aW9uIFJjKHQpIHsgdGhpcy5maWxsID0gdm9pZCAwID09PSB0LmZpbGwgPyAiICIgOiB0LmZpbGwgKyAiIiwgdGhpcy5hbGlnbiA9IHZvaWQgMCA9PT0gdC5hbGlnbiA/ICI+IiA6IHQuYWxpZ24gKyAiIiwgdGhpcy5zaWduID0gdm9pZCAwID09PSB0LnNpZ24gPyAiLSIgOiB0LnNpZ24gKyAiIiwgdGhpcy5zeW1ib2wgPSB2b2lkIDAgPT09IHQuc3ltYm9sID8gIiIgOiB0LnN5bWJvbCArICIiLCB0aGlzLnplcm8gPSAhIXQuemVybywgdGhpcy53aWR0aCA9IHZvaWQgMCA9PT0gdC53aWR0aCA/IHZvaWQgMCA6ICt0LndpZHRoLCB0aGlzLmNvbW1hID0gISF0LmNvbW1hLCB0aGlzLnByZWNpc2lvbiA9IHZvaWQgMCA9PT0gdC5wcmVjaXNpb24gPyB2b2lkIDAgOiArdC5wcmVjaXNpb24sIHRoaXMudHJpbSA9ICEhdC50cmltLCB0aGlzLnR5cGUgPSB2b2lkIDAgPT09IHQudHlwZSA/ICIiIDogdC50eXBlICsgIiIgfSBmdW5jdGlvbiBGYyh0LCBuKSB7IHZhciBlID0gTmModCwgbik7IGlmICghZSkgcmV0dXJuIHQgKyAiIjsgdmFyIHIgPSBlWzBdLCBpID0gZVsxXTsgcmV0dXJuIGkgPCAwID8gIjAuIiArIG5ldyBBcnJheSgtaSkuam9pbigiMCIpICsgciA6IHIubGVuZ3RoID4gaSArIDEgPyByLnNsaWNlKDAsIGkgKyAxKSArICIuIiArIHIuc2xpY2UoaSArIDEpIDogciArIG5ldyBBcnJheShpIC0gci5sZW5ndGggKyAyKS5qb2luKCIwIikgfSBEYy5wcm90b3R5cGUgPSBSYy5wcm90b3R5cGUsIFJjLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMuZmlsbCArIHRoaXMuYWxpZ24gKyB0aGlzLnNpZ24gKyB0aGlzLnN5bWJvbCArICh0aGlzLnplcm8gPyAiMCIgOiAiIikgKyAodm9pZCAwID09PSB0aGlzLndpZHRoID8gIiIgOiBNYXRoLm1heCgxLCAwIHwgdGhpcy53aWR0aCkpICsgKHRoaXMuY29tbWEgPyAiLCIgOiAiIikgKyAodm9pZCAwID09PSB0aGlzLnByZWNpc2lvbiA/ICIiIDogIi4iICsgTWF0aC5tYXgoMCwgMCB8IHRoaXMucHJlY2lzaW9uKSkgKyAodGhpcy50cmltID8gIn4iIDogIiIpICsgdGhpcy50eXBlIH07IHZhciBxYyA9IHsgIiUiOiAodCwgbikgPT4gKDEwMCAqIHQpLnRvRml4ZWQobiksIGI6IHQgPT4gTWF0aC5yb3VuZCh0KS50b1N0cmluZygyKSwgYzogdCA9PiB0ICsgIiIsIGQ6IGZ1bmN0aW9uICh0KSB7IHJldHVybiBNYXRoLmFicyh0ID0gTWF0aC5yb3VuZCh0KSkgPj0gMWUyMSA/IHQudG9Mb2NhbGVTdHJpbmcoImVuIikucmVwbGFjZSgvLC9nLCAiIikgOiB0LnRvU3RyaW5nKDEwKSB9LCBlOiAodCwgbikgPT4gdC50b0V4cG9uZW50aWFsKG4pLCBmOiAodCwgbikgPT4gdC50b0ZpeGVkKG4pLCBnOiAodCwgbikgPT4gdC50b1ByZWNpc2lvbihuKSwgbzogdCA9PiBNYXRoLnJvdW5kKHQpLnRvU3RyaW5nKDgpLCBwOiAodCwgbikgPT4gRmMoMTAwICogdCwgbiksIHI6IEZjLCBzOiBmdW5jdGlvbiAodCwgbikgeyB2YXIgZSA9IE5jKHQsIG4pOyBpZiAoIWUpIHJldHVybiB0ICsgIiI7IHZhciByID0gZVswXSwgaSA9IGVbMV0sIG8gPSBpIC0gKFBjID0gMyAqIE1hdGgubWF4KC04LCBNYXRoLm1pbig4LCBNYXRoLmZsb29yKGkgLyAzKSkpKSArIDEsIGEgPSByLmxlbmd0aDsgcmV0dXJuIG8gPT09IGEgPyByIDogbyA+IGEgPyByICsgbmV3IEFycmF5KG8gLSBhICsgMSkuam9pbigiMCIpIDogbyA+IDAgPyByLnNsaWNlKDAsIG8pICsgIi4iICsgci5zbGljZShvKSA6ICIwLiIgKyBuZXcgQXJyYXkoMSAtIG8pLmpvaW4oIjAiKSArIE5jKHQsIE1hdGgubWF4KDAsIG4gKyBvIC0gMSkpWzBdIH0sIFg6IHQgPT4gTWF0aC5yb3VuZCh0KS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKSwgeDogdCA9PiBNYXRoLnJvdW5kKHQpLnRvU3RyaW5nKDE2KSB9OyBmdW5jdGlvbiBJYyh0KSB7IHJldHVybiB0IH0gdmFyIE9jLCBVYyA9IEFycmF5LnByb3RvdHlwZS5tYXAsIEJjID0gWyJ5IiwgInoiLCAiYSIsICJmIiwgInAiLCAibiIsICLCtSIsICJtIiwgIiIsICJrIiwgIk0iLCAiRyIsICJUIiwgIlAiLCAiRSIsICJaIiwgIlkiXTsgZnVuY3Rpb24gWWModCkgeyB2YXIgbiwgZSwgciA9IHZvaWQgMCA9PT0gdC5ncm91cGluZyB8fCB2b2lkIDAgPT09IHQudGhvdXNhbmRzID8gSWMgOiAobiA9IFVjLmNhbGwodC5ncm91cGluZywgTnVtYmVyKSwgZSA9IHQudGhvdXNhbmRzICsgIiIsIGZ1bmN0aW9uICh0LCByKSB7IGZvciAodmFyIGkgPSB0Lmxlbmd0aCwgbyA9IFtdLCBhID0gMCwgdSA9IG5bMF0sIGMgPSAwOyBpID4gMCAmJiB1ID4gMCAmJiAoYyArIHUgKyAxID4gciAmJiAodSA9IE1hdGgubWF4KDEsIHIgLSBjKSksIG8ucHVzaCh0LnN1YnN0cmluZyhpIC09IHUsIGkgKyB1KSksICEoKGMgKz0gdSArIDEpID4gcikpOyl1ID0gblthID0gKGEgKyAxKSAlIG4ubGVuZ3RoXTsgcmV0dXJuIG8ucmV2ZXJzZSgpLmpvaW4oZSkgfSksIGkgPSB2b2lkIDAgPT09IHQuY3VycmVuY3kgPyAiIiA6IHQuY3VycmVuY3lbMF0gKyAiIiwgbyA9IHZvaWQgMCA9PT0gdC5jdXJyZW5jeSA/ICIiIDogdC5jdXJyZW5jeVsxXSArICIiLCBhID0gdm9pZCAwID09PSB0LmRlY2ltYWwgPyAiLiIgOiB0LmRlY2ltYWwgKyAiIiwgdSA9IHZvaWQgMCA9PT0gdC5udW1lcmFscyA/IEljIDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGZ1bmN0aW9uIChuKSB7IHJldHVybiBuLnJlcGxhY2UoL1swLTldL2csIChmdW5jdGlvbiAobikgeyByZXR1cm4gdFsrbl0gfSkpIH0gfShVYy5jYWxsKHQubnVtZXJhbHMsIFN0cmluZykpLCBjID0gdm9pZCAwID09PSB0LnBlcmNlbnQgPyAiJSIgOiB0LnBlcmNlbnQgKyAiIiwgZiA9IHZvaWQgMCA9PT0gdC5taW51cyA/ICLiiJIiIDogdC5taW51cyArICIiLCBzID0gdm9pZCAwID09PSB0Lm5hbiA/ICJOYU4iIDogdC5uYW4gKyAiIjsgZnVuY3Rpb24gbCh0KSB7IHZhciBuID0gKHQgPSBEYyh0KSkuZmlsbCwgZSA9IHQuYWxpZ24sIGwgPSB0LnNpZ24sIGggPSB0LnN5bWJvbCwgZCA9IHQuemVybywgcCA9IHQud2lkdGgsIGcgPSB0LmNvbW1hLCB5ID0gdC5wcmVjaXNpb24sIHYgPSB0LnRyaW0sIF8gPSB0LnR5cGU7ICJuIiA9PT0gXyA/IChnID0gITAsIF8gPSAiZyIpIDogcWNbX10gfHwgKHZvaWQgMCA9PT0geSAmJiAoeSA9IDEyKSwgdiA9ICEwLCBfID0gImciKSwgKGQgfHwgIjAiID09PSBuICYmICI9IiA9PT0gZSkgJiYgKGQgPSAhMCwgbiA9ICIwIiwgZSA9ICI9Iik7IHZhciBiID0gIiQiID09PSBoID8gaSA6ICIjIiA9PT0gaCAmJiAvW2JveFhdLy50ZXN0KF8pID8gIjAiICsgXy50b0xvd2VyQ2FzZSgpIDogIiIsIG0gPSAiJCIgPT09IGggPyBvIDogL1slcF0vLnRlc3QoXykgPyBjIDogIiIsIHggPSBxY1tfXSwgdyA9IC9bZGVmZ3BycyVdLy50ZXN0KF8pOyBmdW5jdGlvbiBNKHQpIHsgdmFyIGksIG8sIGMsIGggPSBiLCBNID0gbTsgaWYgKCJjIiA9PT0gXykgTSA9IHgodCkgKyBNLCB0ID0gIiI7IGVsc2UgeyB2YXIgQSA9ICh0ID0gK3QpIDwgMCB8fCAxIC8gdCA8IDA7IGlmICh0ID0gaXNOYU4odCkgPyBzIDogeChNYXRoLmFicyh0KSwgeSksIHYgJiYgKHQgPSBmdW5jdGlvbiAodCkgeyB0OiBmb3IgKHZhciBuLCBlID0gdC5sZW5ndGgsIHIgPSAxLCBpID0gLTE7IHIgPCBlOyArK3Ipc3dpdGNoICh0W3JdKSB7IGNhc2UgIi4iOiBpID0gbiA9IHI7IGJyZWFrOyBjYXNlICIwIjogMCA9PT0gaSAmJiAoaSA9IHIpLCBuID0gcjsgYnJlYWs7IGRlZmF1bHQ6IGlmICghK3Rbcl0pIGJyZWFrIHQ7IGkgPiAwICYmIChpID0gMCkgfXJldHVybiBpID4gMCA/IHQuc2xpY2UoMCwgaSkgKyB0LnNsaWNlKG4gKyAxKSA6IHQgfSh0KSksIEEgJiYgMCA9PSArdCAmJiAiKyIgIT09IGwgJiYgKEEgPSAhMSksIGggPSAoQSA/ICIoIiA9PT0gbCA/IGwgOiBmIDogIi0iID09PSBsIHx8ICIoIiA9PT0gbCA/ICIiIDogbCkgKyBoLCBNID0gKCJzIiA9PT0gXyA/IEJjWzggKyBQYyAvIDNdIDogIiIpICsgTSArIChBICYmICIoIiA9PT0gbCA/ICIpIiA6ICIiKSwgdykgZm9yIChpID0gLTEsIG8gPSB0Lmxlbmd0aDsgKytpIDwgbzspaWYgKDQ4ID4gKGMgPSB0LmNoYXJDb2RlQXQoaSkpIHx8IGMgPiA1NykgeyBNID0gKDQ2ID09PSBjID8gYSArIHQuc2xpY2UoaSArIDEpIDogdC5zbGljZShpKSkgKyBNLCB0ID0gdC5zbGljZSgwLCBpKTsgYnJlYWsgfSB9IGcgJiYgIWQgJiYgKHQgPSByKHQsIDEgLyAwKSk7IHZhciBUID0gaC5sZW5ndGggKyB0Lmxlbmd0aCArIE0ubGVuZ3RoLCBTID0gVCA8IHAgPyBuZXcgQXJyYXkocCAtIFQgKyAxKS5qb2luKG4pIDogIiI7IHN3aXRjaCAoZyAmJiBkICYmICh0ID0gcihTICsgdCwgUy5sZW5ndGggPyBwIC0gTS5sZW5ndGggOiAxIC8gMCksIFMgPSAiIiksIGUpIHsgY2FzZSAiPCI6IHQgPSBoICsgdCArIE0gKyBTOyBicmVhazsgY2FzZSAiPSI6IHQgPSBoICsgUyArIHQgKyBNOyBicmVhazsgY2FzZSAiXiI6IHQgPSBTLnNsaWNlKDAsIFQgPSBTLmxlbmd0aCA+PiAxKSArIGggKyB0ICsgTSArIFMuc2xpY2UoVCk7IGJyZWFrOyBkZWZhdWx0OiB0ID0gUyArIGggKyB0ICsgTSB9cmV0dXJuIHUodCkgfSByZXR1cm4geSA9IHZvaWQgMCA9PT0geSA/IDYgOiAvW2dwcnNdLy50ZXN0KF8pID8gTWF0aC5tYXgoMSwgTWF0aC5taW4oMjEsIHkpKSA6IE1hdGgubWF4KDAsIE1hdGgubWluKDIwLCB5KSksIE0udG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB0ICsgIiIgfSwgTSB9IHJldHVybiB7IGZvcm1hdDogbCwgZm9ybWF0UHJlZml4OiBmdW5jdGlvbiAodCwgbikgeyB2YXIgZSA9IGwoKCh0ID0gRGModCkpLnR5cGUgPSAiZiIsIHQpKSwgciA9IDMgKiBNYXRoLm1heCgtOCwgTWF0aC5taW4oOCwgTWF0aC5mbG9vcihDYyhuKSAvIDMpKSksIGkgPSBNYXRoLnBvdygxMCwgLXIpLCBvID0gQmNbOCArIHIgLyAzXTsgcmV0dXJuIGZ1bmN0aW9uICh0KSB7IHJldHVybiBlKGkgKiB0KSArIG8gfSB9IH0gfSBmdW5jdGlvbiBMYyhuKSB7IHJldHVybiBPYyA9IFljKG4pLCB0LmZvcm1hdCA9IE9jLmZvcm1hdCwgdC5mb3JtYXRQcmVmaXggPSBPYy5mb3JtYXRQcmVmaXgsIE9jIH0gZnVuY3Rpb24gamModCkgeyByZXR1cm4gTWF0aC5tYXgoMCwgLUNjKE1hdGguYWJzKHQpKSkgfSBmdW5jdGlvbiAkYyh0LCBuKSB7IHJldHVybiBNYXRoLm1heCgwLCAzICogTWF0aC5tYXgoLTgsIE1hdGgubWluKDgsIE1hdGguZmxvb3IoQ2MobikgLyAzKSkpIC0gQ2MoTWF0aC5hYnModCkpKSB9IGZ1bmN0aW9uIEhjKHQsIG4pIHsgcmV0dXJuIHQgPSBNYXRoLmFicyh0KSwgbiA9IE1hdGguYWJzKG4pIC0gdCwgTWF0aC5tYXgoMCwgQ2MobikgLSBDYyh0KSkgKyAxIH0gdC5mb3JtYXQgPSB2b2lkIDAsIHQuZm9ybWF0UHJlZml4ID0gdm9pZCAwLCBMYyh7IHRob3VzYW5kczogIiwiLCBncm91cGluZzogWzNdLCBjdXJyZW5jeTogWyIkIiwgIiJdIH0pOyB2YXIgWGMgPSAxZS02LCBHYyA9IDFlLTEyLCBWYyA9IE1hdGguUEksIFdjID0gVmMgLyAyLCBaYyA9IFZjIC8gNCwgS2MgPSAyICogVmMsIFFjID0gMTgwIC8gVmMsIEpjID0gVmMgLyAxODAsIHRmID0gTWF0aC5hYnMsIG5mID0gTWF0aC5hdGFuLCBlZiA9IE1hdGguYXRhbjIsIHJmID0gTWF0aC5jb3MsIG9mID0gTWF0aC5jZWlsLCBhZiA9IE1hdGguZXhwLCB1ZiA9IE1hdGguaHlwb3QsIGNmID0gTWF0aC5sb2csIGZmID0gTWF0aC5wb3csIHNmID0gTWF0aC5zaW4sIGxmID0gTWF0aC5zaWduIHx8IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0ID4gMCA/IDEgOiB0IDwgMCA/IC0xIDogMCB9LCBoZiA9IE1hdGguc3FydCwgZGYgPSBNYXRoLnRhbjsgZnVuY3Rpb24gcGYodCkgeyByZXR1cm4gdCA+IDEgPyAwIDogdCA8IC0xID8gVmMgOiBNYXRoLmFjb3ModCkgfSBmdW5jdGlvbiBnZih0KSB7IHJldHVybiB0ID4gMSA/IFdjIDogdCA8IC0xID8gLVdjIDogTWF0aC5hc2luKHQpIH0gZnVuY3Rpb24geWYodCkgeyByZXR1cm4gKHQgPSBzZih0IC8gMikpICogdCB9IGZ1bmN0aW9uIHZmKCkgeyB9IGZ1bmN0aW9uIF9mKHQsIG4pIHsgdCAmJiBtZi5oYXNPd25Qcm9wZXJ0eSh0LnR5cGUpICYmIG1mW3QudHlwZV0odCwgbikgfSB2YXIgYmYgPSB7IEZlYXR1cmU6IGZ1bmN0aW9uICh0LCBuKSB7IF9mKHQuZ2VvbWV0cnksIG4pIH0sIEZlYXR1cmVDb2xsZWN0aW9uOiBmdW5jdGlvbiAodCwgbikgeyBmb3IgKHZhciBlID0gdC5mZWF0dXJlcywgciA9IC0xLCBpID0gZS5sZW5ndGg7ICsrciA8IGk7KV9mKGVbcl0uZ2VvbWV0cnksIG4pIH0gfSwgbWYgPSB7IFNwaGVyZTogZnVuY3Rpb24gKHQsIG4pIHsgbi5zcGhlcmUoKSB9LCBQb2ludDogZnVuY3Rpb24gKHQsIG4pIHsgdCA9IHQuY29vcmRpbmF0ZXMsIG4ucG9pbnQodFswXSwgdFsxXSwgdFsyXSkgfSwgTXVsdGlQb2ludDogZnVuY3Rpb24gKHQsIG4pIHsgZm9yICh2YXIgZSA9IHQuY29vcmRpbmF0ZXMsIHIgPSAtMSwgaSA9IGUubGVuZ3RoOyArK3IgPCBpOyl0ID0gZVtyXSwgbi5wb2ludCh0WzBdLCB0WzFdLCB0WzJdKSB9LCBMaW5lU3RyaW5nOiBmdW5jdGlvbiAodCwgbikgeyB4Zih0LmNvb3JkaW5hdGVzLCBuLCAwKSB9LCBNdWx0aUxpbmVTdHJpbmc6IGZ1bmN0aW9uICh0LCBuKSB7IGZvciAodmFyIGUgPSB0LmNvb3JkaW5hdGVzLCByID0gLTEsIGkgPSBlLmxlbmd0aDsgKytyIDwgaTspeGYoZVtyXSwgbiwgMCkgfSwgUG9seWdvbjogZnVuY3Rpb24gKHQsIG4pIHsgd2YodC5jb29yZGluYXRlcywgbikgfSwgTXVsdGlQb2x5Z29uOiBmdW5jdGlvbiAodCwgbikgeyBmb3IgKHZhciBlID0gdC5jb29yZGluYXRlcywgciA9IC0xLCBpID0gZS5sZW5ndGg7ICsrciA8IGk7KXdmKGVbcl0sIG4pIH0sIEdlb21ldHJ5Q29sbGVjdGlvbjogZnVuY3Rpb24gKHQsIG4pIHsgZm9yICh2YXIgZSA9IHQuZ2VvbWV0cmllcywgciA9IC0xLCBpID0gZS5sZW5ndGg7ICsrciA8IGk7KV9mKGVbcl0sIG4pIH0gfTsgZnVuY3Rpb24geGYodCwgbiwgZSkgeyB2YXIgciwgaSA9IC0xLCBvID0gdC5sZW5ndGggLSBlOyBmb3IgKG4ubGluZVN0YXJ0KCk7ICsraSA8IG87KXIgPSB0W2ldLCBuLnBvaW50KHJbMF0sIHJbMV0sIHJbMl0pOyBuLmxpbmVFbmQoKSB9IGZ1bmN0aW9uIHdmKHQsIG4pIHsgdmFyIGUgPSAtMSwgciA9IHQubGVuZ3RoOyBmb3IgKG4ucG9seWdvblN0YXJ0KCk7ICsrZSA8IHI7KXhmKHRbZV0sIG4sIDEpOyBuLnBvbHlnb25FbmQoKSB9IGZ1bmN0aW9uIE1mKHQsIG4pIHsgdCAmJiBiZi5oYXNPd25Qcm9wZXJ0eSh0LnR5cGUpID8gYmZbdC50eXBlXSh0LCBuKSA6IF9mKHQsIG4pIH0gdmFyIEFmLCBUZiwgU2YsIEVmLCBrZiwgTmYsIENmLCBQZiwgemYsIERmLCBSZiwgRmYsIHFmLCBJZiwgT2YsIFVmLCBCZiA9IG5ldyBULCBZZiA9IG5ldyBULCBMZiA9IHsgcG9pbnQ6IHZmLCBsaW5lU3RhcnQ6IHZmLCBsaW5lRW5kOiB2ZiwgcG9seWdvblN0YXJ0OiBmdW5jdGlvbiAoKSB7IEJmID0gbmV3IFQsIExmLmxpbmVTdGFydCA9IGpmLCBMZi5saW5lRW5kID0gJGYgfSwgcG9seWdvbkVuZDogZnVuY3Rpb24gKCkgeyB2YXIgdCA9ICtCZjsgWWYuYWRkKHQgPCAwID8gS2MgKyB0IDogdCksIHRoaXMubGluZVN0YXJ0ID0gdGhpcy5saW5lRW5kID0gdGhpcy5wb2ludCA9IHZmIH0sIHNwaGVyZTogZnVuY3Rpb24gKCkgeyBZZi5hZGQoS2MpIH0gfTsgZnVuY3Rpb24gamYoKSB7IExmLnBvaW50ID0gSGYgfSBmdW5jdGlvbiAkZigpIHsgWGYoQWYsIFRmKSB9IGZ1bmN0aW9uIEhmKHQsIG4pIHsgTGYucG9pbnQgPSBYZiwgQWYgPSB0LCBUZiA9IG4sIFNmID0gdCAqPSBKYywgRWYgPSByZihuID0gKG4gKj0gSmMpIC8gMiArIFpjKSwga2YgPSBzZihuKSB9IGZ1bmN0aW9uIFhmKHQsIG4pIHsgdmFyIGUgPSAodCAqPSBKYykgLSBTZiwgciA9IGUgPj0gMCA/IDEgOiAtMSwgaSA9IHIgKiBlLCBvID0gcmYobiA9IChuICo9IEpjKSAvIDIgKyBaYyksIGEgPSBzZihuKSwgdSA9IGtmICogYSwgYyA9IEVmICogbyArIHUgKiByZihpKSwgZiA9IHUgKiByICogc2YoaSk7IEJmLmFkZChlZihmLCBjKSksIFNmID0gdCwgRWYgPSBvLCBrZiA9IGEgfSBmdW5jdGlvbiBHZih0KSB7IHJldHVybiBbZWYodFsxXSwgdFswXSksIGdmKHRbMl0pXSB9IGZ1bmN0aW9uIFZmKHQpIHsgdmFyIG4gPSB0WzBdLCBlID0gdFsxXSwgciA9IHJmKGUpOyByZXR1cm4gW3IgKiByZihuKSwgciAqIHNmKG4pLCBzZihlKV0gfSBmdW5jdGlvbiBXZih0LCBuKSB7IHJldHVybiB0WzBdICogblswXSArIHRbMV0gKiBuWzFdICsgdFsyXSAqIG5bMl0gfSBmdW5jdGlvbiBaZih0LCBuKSB7IHJldHVybiBbdFsxXSAqIG5bMl0gLSB0WzJdICogblsxXSwgdFsyXSAqIG5bMF0gLSB0WzBdICogblsyXSwgdFswXSAqIG5bMV0gLSB0WzFdICogblswXV0gfSBmdW5jdGlvbiBLZih0LCBuKSB7IHRbMF0gKz0gblswXSwgdFsxXSArPSBuWzFdLCB0WzJdICs9IG5bMl0gfSBmdW5jdGlvbiBRZih0LCBuKSB7IHJldHVybiBbdFswXSAqIG4sIHRbMV0gKiBuLCB0WzJdICogbl0gfSBmdW5jdGlvbiBKZih0KSB7IHZhciBuID0gaGYodFswXSAqIHRbMF0gKyB0WzFdICogdFsxXSArIHRbMl0gKiB0WzJdKTsgdFswXSAvPSBuLCB0WzFdIC89IG4sIHRbMl0gLz0gbiB9IHZhciB0cywgbnMsIGVzLCBycywgaXMsIG9zLCBhcywgdXMsIGNzLCBmcywgc3MsIGxzLCBocywgZHMsIHBzLCBncywgeXMgPSB7IHBvaW50OiB2cywgbGluZVN0YXJ0OiBicywgbGluZUVuZDogbXMsIHBvbHlnb25TdGFydDogZnVuY3Rpb24gKCkgeyB5cy5wb2ludCA9IHhzLCB5cy5saW5lU3RhcnQgPSB3cywgeXMubGluZUVuZCA9IE1zLCBJZiA9IG5ldyBULCBMZi5wb2x5Z29uU3RhcnQoKSB9LCBwb2x5Z29uRW5kOiBmdW5jdGlvbiAoKSB7IExmLnBvbHlnb25FbmQoKSwgeXMucG9pbnQgPSB2cywgeXMubGluZVN0YXJ0ID0gYnMsIHlzLmxpbmVFbmQgPSBtcywgQmYgPCAwID8gKE5mID0gLShQZiA9IDE4MCksIENmID0gLSh6ZiA9IDkwKSkgOiBJZiA+IFhjID8gemYgPSA5MCA6IElmIDwgLTFlLTYgJiYgKENmID0gLTkwKSwgVWZbMF0gPSBOZiwgVWZbMV0gPSBQZiB9LCBzcGhlcmU6IGZ1bmN0aW9uICgpIHsgTmYgPSAtKFBmID0gMTgwKSwgQ2YgPSAtKHpmID0gOTApIH0gfTsgZnVuY3Rpb24gdnModCwgbikgeyBPZi5wdXNoKFVmID0gW05mID0gdCwgUGYgPSB0XSksIG4gPCBDZiAmJiAoQ2YgPSBuKSwgbiA+IHpmICYmICh6ZiA9IG4pIH0gZnVuY3Rpb24gX3ModCwgbikgeyB2YXIgZSA9IFZmKFt0ICogSmMsIG4gKiBKY10pOyBpZiAocWYpIHsgdmFyIHIgPSBaZihxZiwgZSksIGkgPSBaZihbclsxXSwgLXJbMF0sIDBdLCByKTsgSmYoaSksIGkgPSBHZihpKTsgdmFyIG8sIGEgPSB0IC0gRGYsIHUgPSBhID4gMCA/IDEgOiAtMSwgYyA9IGlbMF0gKiBRYyAqIHUsIGYgPSB0ZihhKSA+IDE4MDsgZiBeICh1ICogRGYgPCBjICYmIGMgPCB1ICogdCkgPyAobyA9IGlbMV0gKiBRYykgPiB6ZiAmJiAoemYgPSBvKSA6IGYgXiAodSAqIERmIDwgKGMgPSAoYyArIDM2MCkgJSAzNjAgLSAxODApICYmIGMgPCB1ICogdCkgPyAobyA9IC1pWzFdICogUWMpIDwgQ2YgJiYgKENmID0gbykgOiAobiA8IENmICYmIChDZiA9IG4pLCBuID4gemYgJiYgKHpmID0gbikpLCBmID8gdCA8IERmID8gQXMoTmYsIHQpID4gQXMoTmYsIFBmKSAmJiAoUGYgPSB0KSA6IEFzKHQsIFBmKSA+IEFzKE5mLCBQZikgJiYgKE5mID0gdCkgOiBQZiA+PSBOZiA/ICh0IDwgTmYgJiYgKE5mID0gdCksIHQgPiBQZiAmJiAoUGYgPSB0KSkgOiB0ID4gRGYgPyBBcyhOZiwgdCkgPiBBcyhOZiwgUGYpICYmIChQZiA9IHQpIDogQXModCwgUGYpID4gQXMoTmYsIFBmKSAmJiAoTmYgPSB0KSB9IGVsc2UgT2YucHVzaChVZiA9IFtOZiA9IHQsIFBmID0gdF0pOyBuIDwgQ2YgJiYgKENmID0gbiksIG4gPiB6ZiAmJiAoemYgPSBuKSwgcWYgPSBlLCBEZiA9IHQgfSBmdW5jdGlvbiBicygpIHsgeXMucG9pbnQgPSBfcyB9IGZ1bmN0aW9uIG1zKCkgeyBVZlswXSA9IE5mLCBVZlsxXSA9IFBmLCB5cy5wb2ludCA9IHZzLCBxZiA9IG51bGwgfSBmdW5jdGlvbiB4cyh0LCBuKSB7IGlmIChxZikgeyB2YXIgZSA9IHQgLSBEZjsgSWYuYWRkKHRmKGUpID4gMTgwID8gZSArIChlID4gMCA/IDM2MCA6IC0zNjApIDogZSkgfSBlbHNlIFJmID0gdCwgRmYgPSBuOyBMZi5wb2ludCh0LCBuKSwgX3ModCwgbikgfSBmdW5jdGlvbiB3cygpIHsgTGYubGluZVN0YXJ0KCkgfSBmdW5jdGlvbiBNcygpIHsgeHMoUmYsIEZmKSwgTGYubGluZUVuZCgpLCB0ZihJZikgPiBYYyAmJiAoTmYgPSAtKFBmID0gMTgwKSksIFVmWzBdID0gTmYsIFVmWzFdID0gUGYsIHFmID0gbnVsbCB9IGZ1bmN0aW9uIEFzKHQsIG4pIHsgcmV0dXJuIChuIC09IHQpIDwgMCA/IG4gKyAzNjAgOiBuIH0gZnVuY3Rpb24gVHModCwgbikgeyByZXR1cm4gdFswXSAtIG5bMF0gfSBmdW5jdGlvbiBTcyh0LCBuKSB7IHJldHVybiB0WzBdIDw9IHRbMV0gPyB0WzBdIDw9IG4gJiYgbiA8PSB0WzFdIDogbiA8IHRbMF0gfHwgdFsxXSA8IG4gfSB2YXIgRXMgPSB7IHNwaGVyZTogdmYsIHBvaW50OiBrcywgbGluZVN0YXJ0OiBDcywgbGluZUVuZDogRHMsIHBvbHlnb25TdGFydDogZnVuY3Rpb24gKCkgeyBFcy5saW5lU3RhcnQgPSBScywgRXMubGluZUVuZCA9IEZzIH0sIHBvbHlnb25FbmQ6IGZ1bmN0aW9uICgpIHsgRXMubGluZVN0YXJ0ID0gQ3MsIEVzLmxpbmVFbmQgPSBEcyB9IH07IGZ1bmN0aW9uIGtzKHQsIG4pIHsgdCAqPSBKYzsgdmFyIGUgPSByZihuICo9IEpjKTsgTnMoZSAqIHJmKHQpLCBlICogc2YodCksIHNmKG4pKSB9IGZ1bmN0aW9uIE5zKHQsIG4sIGUpIHsgKyt0cywgZXMgKz0gKHQgLSBlcykgLyB0cywgcnMgKz0gKG4gLSBycykgLyB0cywgaXMgKz0gKGUgLSBpcykgLyB0cyB9IGZ1bmN0aW9uIENzKCkgeyBFcy5wb2ludCA9IFBzIH0gZnVuY3Rpb24gUHModCwgbikgeyB0ICo9IEpjOyB2YXIgZSA9IHJmKG4gKj0gSmMpOyBkcyA9IGUgKiByZih0KSwgcHMgPSBlICogc2YodCksIGdzID0gc2YobiksIEVzLnBvaW50ID0genMsIE5zKGRzLCBwcywgZ3MpIH0gZnVuY3Rpb24genModCwgbikgeyB0ICo9IEpjOyB2YXIgZSA9IHJmKG4gKj0gSmMpLCByID0gZSAqIHJmKHQpLCBpID0gZSAqIHNmKHQpLCBvID0gc2YobiksIGEgPSBlZihoZigoYSA9IHBzICogbyAtIGdzICogaSkgKiBhICsgKGEgPSBncyAqIHIgLSBkcyAqIG8pICogYSArIChhID0gZHMgKiBpIC0gcHMgKiByKSAqIGEpLCBkcyAqIHIgKyBwcyAqIGkgKyBncyAqIG8pOyBucyArPSBhLCBvcyArPSBhICogKGRzICsgKGRzID0gcikpLCBhcyArPSBhICogKHBzICsgKHBzID0gaSkpLCB1cyArPSBhICogKGdzICsgKGdzID0gbykpLCBOcyhkcywgcHMsIGdzKSB9IGZ1bmN0aW9uIERzKCkgeyBFcy5wb2ludCA9IGtzIH0gZnVuY3Rpb24gUnMoKSB7IEVzLnBvaW50ID0gcXMgfSBmdW5jdGlvbiBGcygpIHsgSXMobHMsIGhzKSwgRXMucG9pbnQgPSBrcyB9IGZ1bmN0aW9uIHFzKHQsIG4pIHsgbHMgPSB0LCBocyA9IG4sIHQgKj0gSmMsIG4gKj0gSmMsIEVzLnBvaW50ID0gSXM7IHZhciBlID0gcmYobik7IGRzID0gZSAqIHJmKHQpLCBwcyA9IGUgKiBzZih0KSwgZ3MgPSBzZihuKSwgTnMoZHMsIHBzLCBncykgfSBmdW5jdGlvbiBJcyh0LCBuKSB7IHQgKj0gSmM7IHZhciBlID0gcmYobiAqPSBKYyksIHIgPSBlICogcmYodCksIGkgPSBlICogc2YodCksIG8gPSBzZihuKSwgYSA9IHBzICogbyAtIGdzICogaSwgdSA9IGdzICogciAtIGRzICogbywgYyA9IGRzICogaSAtIHBzICogciwgZiA9IHVmKGEsIHUsIGMpLCBzID0gZ2YoZiksIGwgPSBmICYmIC1zIC8gZjsgY3MuYWRkKGwgKiBhKSwgZnMuYWRkKGwgKiB1KSwgc3MuYWRkKGwgKiBjKSwgbnMgKz0gcywgb3MgKz0gcyAqIChkcyArIChkcyA9IHIpKSwgYXMgKz0gcyAqIChwcyArIChwcyA9IGkpKSwgdXMgKz0gcyAqIChncyArIChncyA9IG8pKSwgTnMoZHMsIHBzLCBncykgfSBmdW5jdGlvbiBPcyh0KSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiB0IH0gfSBmdW5jdGlvbiBVcyh0LCBuKSB7IGZ1bmN0aW9uIGUoZSwgcikgeyByZXR1cm4gZSA9IHQoZSwgciksIG4oZVswXSwgZVsxXSkgfSByZXR1cm4gdC5pbnZlcnQgJiYgbi5pbnZlcnQgJiYgKGUuaW52ZXJ0ID0gZnVuY3Rpb24gKGUsIHIpIHsgcmV0dXJuIChlID0gbi5pbnZlcnQoZSwgcikpICYmIHQuaW52ZXJ0KGVbMF0sIGVbMV0pIH0pLCBlIH0gZnVuY3Rpb24gQnModCwgbikgeyByZXR1cm4gW3RmKHQpID4gVmMgPyB0ICsgTWF0aC5yb3VuZCgtdCAvIEtjKSAqIEtjIDogdCwgbl0gfSBmdW5jdGlvbiBZcyh0LCBuLCBlKSB7IHJldHVybiAodCAlPSBLYykgPyBuIHx8IGUgPyBVcyhqcyh0KSwgJHMobiwgZSkpIDoganModCkgOiBuIHx8IGUgPyAkcyhuLCBlKSA6IEJzIH0gZnVuY3Rpb24gTHModCkgeyByZXR1cm4gZnVuY3Rpb24gKG4sIGUpIHsgcmV0dXJuIFsobiArPSB0KSA+IFZjID8gbiAtIEtjIDogbiA8IC1WYyA/IG4gKyBLYyA6IG4sIGVdIH0gfSBmdW5jdGlvbiBqcyh0KSB7IHZhciBuID0gTHModCk7IHJldHVybiBuLmludmVydCA9IExzKC10KSwgbiB9IGZ1bmN0aW9uICRzKHQsIG4pIHsgdmFyIGUgPSByZih0KSwgciA9IHNmKHQpLCBpID0gcmYobiksIG8gPSBzZihuKTsgZnVuY3Rpb24gYSh0LCBuKSB7IHZhciBhID0gcmYobiksIHUgPSByZih0KSAqIGEsIGMgPSBzZih0KSAqIGEsIGYgPSBzZihuKSwgcyA9IGYgKiBlICsgdSAqIHI7IHJldHVybiBbZWYoYyAqIGkgLSBzICogbywgdSAqIGUgLSBmICogciksIGdmKHMgKiBpICsgYyAqIG8pXSB9IHJldHVybiBhLmludmVydCA9IGZ1bmN0aW9uICh0LCBuKSB7IHZhciBhID0gcmYobiksIHUgPSByZih0KSAqIGEsIGMgPSBzZih0KSAqIGEsIGYgPSBzZihuKSwgcyA9IGYgKiBpIC0gYyAqIG87IHJldHVybiBbZWYoYyAqIGkgKyBmICogbywgdSAqIGUgKyBzICogciksIGdmKHMgKiBlIC0gdSAqIHIpXSB9LCBhIH0gZnVuY3Rpb24gSHModCkgeyBmdW5jdGlvbiBuKG4pIHsgcmV0dXJuIChuID0gdChuWzBdICogSmMsIG5bMV0gKiBKYykpWzBdICo9IFFjLCBuWzFdICo9IFFjLCBuIH0gcmV0dXJuIHQgPSBZcyh0WzBdICogSmMsIHRbMV0gKiBKYywgdC5sZW5ndGggPiAyID8gdFsyXSAqIEpjIDogMCksIG4uaW52ZXJ0ID0gZnVuY3Rpb24gKG4pIHsgcmV0dXJuIChuID0gdC5pbnZlcnQoblswXSAqIEpjLCBuWzFdICogSmMpKVswXSAqPSBRYywgblsxXSAqPSBRYywgbiB9LCBuIH0gZnVuY3Rpb24gWHModCwgbiwgZSwgciwgaSwgbykgeyBpZiAoZSkgeyB2YXIgYSA9IHJmKG4pLCB1ID0gc2YobiksIGMgPSByICogZTsgbnVsbCA9PSBpID8gKGkgPSBuICsgciAqIEtjLCBvID0gbiAtIGMgLyAyKSA6IChpID0gR3MoYSwgaSksIG8gPSBHcyhhLCBvKSwgKHIgPiAwID8gaSA8IG8gOiBpID4gbykgJiYgKGkgKz0gciAqIEtjKSk7IGZvciAodmFyIGYsIHMgPSBpOyByID4gMCA/IHMgPiBvIDogcyA8IG87IHMgLT0gYylmID0gR2YoW2EsIC11ICogcmYocyksIC11ICogc2YocyldKSwgdC5wb2ludChmWzBdLCBmWzFdKSB9IH0gZnVuY3Rpb24gR3ModCwgbikgeyAobiA9IFZmKG4pKVswXSAtPSB0LCBKZihuKTsgdmFyIGUgPSBwZigtblsxXSk7IHJldHVybiAoKC1uWzJdIDwgMCA/IC1lIDogZSkgKyBLYyAtIFhjKSAlIEtjIH0gZnVuY3Rpb24gVnMoKSB7IHZhciB0LCBuID0gW107IHJldHVybiB7IHBvaW50OiBmdW5jdGlvbiAobiwgZSwgcikgeyB0LnB1c2goW24sIGUsIHJdKSB9LCBsaW5lU3RhcnQ6IGZ1bmN0aW9uICgpIHsgbi5wdXNoKHQgPSBbXSkgfSwgbGluZUVuZDogdmYsIHJlam9pbjogZnVuY3Rpb24gKCkgeyBuLmxlbmd0aCA+IDEgJiYgbi5wdXNoKG4ucG9wKCkuY29uY2F0KG4uc2hpZnQoKSkpIH0sIHJlc3VsdDogZnVuY3Rpb24gKCkgeyB2YXIgZSA9IG47IHJldHVybiBuID0gW10sIHQgPSBudWxsLCBlIH0gfSB9IGZ1bmN0aW9uIFdzKHQsIG4pIHsgcmV0dXJuIHRmKHRbMF0gLSBuWzBdKSA8IFhjICYmIHRmKHRbMV0gLSBuWzFdKSA8IFhjIH0gZnVuY3Rpb24gWnModCwgbiwgZSwgcikgeyB0aGlzLnggPSB0LCB0aGlzLnogPSBuLCB0aGlzLm8gPSBlLCB0aGlzLmUgPSByLCB0aGlzLnYgPSAhMSwgdGhpcy5uID0gdGhpcy5wID0gbnVsbCB9IGZ1bmN0aW9uIEtzKHQsIG4sIGUsIHIsIGkpIHsgdmFyIG8sIGEsIHUgPSBbXSwgYyA9IFtdOyBpZiAodC5mb3JFYWNoKChmdW5jdGlvbiAodCkgeyBpZiAoISgobiA9IHQubGVuZ3RoIC0gMSkgPD0gMCkpIHsgdmFyIG4sIGUsIHIgPSB0WzBdLCBhID0gdFtuXTsgaWYgKFdzKHIsIGEpKSB7IGlmICghclsyXSAmJiAhYVsyXSkgeyBmb3IgKGkubGluZVN0YXJ0KCksIG8gPSAwOyBvIDwgbjsgKytvKWkucG9pbnQoKHIgPSB0W29dKVswXSwgclsxXSk7IHJldHVybiB2b2lkIGkubGluZUVuZCgpIH0gYVswXSArPSAyZS02IH0gdS5wdXNoKGUgPSBuZXcgWnMociwgdCwgbnVsbCwgITApKSwgYy5wdXNoKGUubyA9IG5ldyBacyhyLCBudWxsLCBlLCAhMSkpLCB1LnB1c2goZSA9IG5ldyBacyhhLCB0LCBudWxsLCAhMSkpLCBjLnB1c2goZS5vID0gbmV3IFpzKGEsIG51bGwsIGUsICEwKSkgfSB9KSksIHUubGVuZ3RoKSB7IGZvciAoYy5zb3J0KG4pLCBRcyh1KSwgUXMoYyksIG8gPSAwLCBhID0gYy5sZW5ndGg7IG8gPCBhOyArK28pY1tvXS5lID0gZSA9ICFlOyBmb3IgKHZhciBmLCBzLCBsID0gdVswXTsgOykgeyBmb3IgKHZhciBoID0gbCwgZCA9ICEwOyBoLnY7KWlmICgoaCA9IGgubikgPT09IGwpIHJldHVybjsgZiA9IGgueiwgaS5saW5lU3RhcnQoKTsgZG8geyBpZiAoaC52ID0gaC5vLnYgPSAhMCwgaC5lKSB7IGlmIChkKSBmb3IgKG8gPSAwLCBhID0gZi5sZW5ndGg7IG8gPCBhOyArK28paS5wb2ludCgocyA9IGZbb10pWzBdLCBzWzFdKTsgZWxzZSByKGgueCwgaC5uLngsIDEsIGkpOyBoID0gaC5uIH0gZWxzZSB7IGlmIChkKSBmb3IgKGYgPSBoLnAueiwgbyA9IGYubGVuZ3RoIC0gMTsgbyA+PSAwOyAtLW8paS5wb2ludCgocyA9IGZbb10pWzBdLCBzWzFdKTsgZWxzZSByKGgueCwgaC5wLngsIC0xLCBpKTsgaCA9IGgucCB9IGYgPSAoaCA9IGgubykueiwgZCA9ICFkIH0gd2hpbGUgKCFoLnYpOyBpLmxpbmVFbmQoKSB9IH0gfSBmdW5jdGlvbiBRcyh0KSB7IGlmIChuID0gdC5sZW5ndGgpIHsgZm9yICh2YXIgbiwgZSwgciA9IDAsIGkgPSB0WzBdOyArK3IgPCBuOylpLm4gPSBlID0gdFtyXSwgZS5wID0gaSwgaSA9IGU7IGkubiA9IGUgPSB0WzBdLCBlLnAgPSBpIH0gfSBmdW5jdGlvbiBKcyh0KSB7IHJldHVybiB0Zih0WzBdKSA8PSBWYyA/IHRbMF0gOiBsZih0WzBdKSAqICgodGYodFswXSkgKyBWYykgJSBLYyAtIFZjKSB9IGZ1bmN0aW9uIHRsKHQsIG4pIHsgdmFyIGUgPSBKcyhuKSwgciA9IG5bMV0sIGkgPSBzZihyKSwgbyA9IFtzZihlKSwgLXJmKGUpLCAwXSwgYSA9IDAsIHUgPSAwLCBjID0gbmV3IFQ7IDEgPT09IGkgPyByID0gV2MgKyBYYyA6IC0xID09PSBpICYmIChyID0gLVdjIC0gWGMpOyBmb3IgKHZhciBmID0gMCwgcyA9IHQubGVuZ3RoOyBmIDwgczsgKytmKWlmIChoID0gKGwgPSB0W2ZdKS5sZW5ndGgpIGZvciAodmFyIGwsIGgsIGQgPSBsW2ggLSAxXSwgcCA9IEpzKGQpLCBnID0gZFsxXSAvIDIgKyBaYywgeSA9IHNmKGcpLCB2ID0gcmYoZyksIF8gPSAwOyBfIDwgaDsgKytfLCBwID0gbSwgeSA9IHcsIHYgPSBNLCBkID0gYikgeyB2YXIgYiA9IGxbX10sIG0gPSBKcyhiKSwgeCA9IGJbMV0gLyAyICsgWmMsIHcgPSBzZih4KSwgTSA9IHJmKHgpLCBBID0gbSAtIHAsIFMgPSBBID49IDAgPyAxIDogLTEsIEUgPSBTICogQSwgayA9IEUgPiBWYywgTiA9IHkgKiB3OyBpZiAoYy5hZGQoZWYoTiAqIFMgKiBzZihFKSwgdiAqIE0gKyBOICogcmYoRSkpKSwgYSArPSBrID8gQSArIFMgKiBLYyA6IEEsIGsgXiBwID49IGUgXiBtID49IGUpIHsgdmFyIEMgPSBaZihWZihkKSwgVmYoYikpOyBKZihDKTsgdmFyIFAgPSBaZihvLCBDKTsgSmYoUCk7IHZhciB6ID0gKGsgXiBBID49IDAgPyAtMSA6IDEpICogZ2YoUFsyXSk7IChyID4geiB8fCByID09PSB6ICYmIChDWzBdIHx8IENbMV0pKSAmJiAodSArPSBrIF4gQSA+PSAwID8gMSA6IC0xKSB9IH0gcmV0dXJuIChhIDwgLTFlLTYgfHwgYSA8IFhjICYmIGMgPCAtMWUtMTIpIF4gMSAmIHUgfSBmdW5jdGlvbiBubCh0LCBuLCBlLCByKSB7IHJldHVybiBmdW5jdGlvbiAoaSkgeyB2YXIgbywgYSwgdSwgYyA9IG4oaSksIGYgPSBWcygpLCBzID0gbihmKSwgbCA9ICExLCBoID0geyBwb2ludDogZCwgbGluZVN0YXJ0OiBnLCBsaW5lRW5kOiB5LCBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uICgpIHsgaC5wb2ludCA9IHYsIGgubGluZVN0YXJ0ID0gXywgaC5saW5lRW5kID0gYiwgYSA9IFtdLCBvID0gW10gfSwgcG9seWdvbkVuZDogZnVuY3Rpb24gKCkgeyBoLnBvaW50ID0gZCwgaC5saW5lU3RhcnQgPSBnLCBoLmxpbmVFbmQgPSB5LCBhID0gZnQoYSk7IHZhciB0ID0gdGwobywgcik7IGEubGVuZ3RoID8gKGwgfHwgKGkucG9seWdvblN0YXJ0KCksIGwgPSAhMCksIEtzKGEsIHJsLCB0LCBlLCBpKSkgOiB0ICYmIChsIHx8IChpLnBvbHlnb25TdGFydCgpLCBsID0gITApLCBpLmxpbmVTdGFydCgpLCBlKG51bGwsIG51bGwsIDEsIGkpLCBpLmxpbmVFbmQoKSksIGwgJiYgKGkucG9seWdvbkVuZCgpLCBsID0gITEpLCBhID0gbyA9IG51bGwgfSwgc3BoZXJlOiBmdW5jdGlvbiAoKSB7IGkucG9seWdvblN0YXJ0KCksIGkubGluZVN0YXJ0KCksIGUobnVsbCwgbnVsbCwgMSwgaSksIGkubGluZUVuZCgpLCBpLnBvbHlnb25FbmQoKSB9IH07IGZ1bmN0aW9uIGQobiwgZSkgeyB0KG4sIGUpICYmIGkucG9pbnQobiwgZSkgfSBmdW5jdGlvbiBwKHQsIG4pIHsgYy5wb2ludCh0LCBuKSB9IGZ1bmN0aW9uIGcoKSB7IGgucG9pbnQgPSBwLCBjLmxpbmVTdGFydCgpIH0gZnVuY3Rpb24geSgpIHsgaC5wb2ludCA9IGQsIGMubGluZUVuZCgpIH0gZnVuY3Rpb24gdih0LCBuKSB7IHUucHVzaChbdCwgbl0pLCBzLnBvaW50KHQsIG4pIH0gZnVuY3Rpb24gXygpIHsgcy5saW5lU3RhcnQoKSwgdSA9IFtdIH0gZnVuY3Rpb24gYigpIHsgdih1WzBdWzBdLCB1WzBdWzFdKSwgcy5saW5lRW5kKCk7IHZhciB0LCBuLCBlLCByLCBjID0gcy5jbGVhbigpLCBoID0gZi5yZXN1bHQoKSwgZCA9IGgubGVuZ3RoOyBpZiAodS5wb3AoKSwgby5wdXNoKHUpLCB1ID0gbnVsbCwgZCkgaWYgKDEgJiBjKSB7IGlmICgobiA9IChlID0gaFswXSkubGVuZ3RoIC0gMSkgPiAwKSB7IGZvciAobCB8fCAoaS5wb2x5Z29uU3RhcnQoKSwgbCA9ICEwKSwgaS5saW5lU3RhcnQoKSwgdCA9IDA7IHQgPCBuOyArK3QpaS5wb2ludCgociA9IGVbdF0pWzBdLCByWzFdKTsgaS5saW5lRW5kKCkgfSB9IGVsc2UgZCA+IDEgJiYgMiAmIGMgJiYgaC5wdXNoKGgucG9wKCkuY29uY2F0KGguc2hpZnQoKSkpLCBhLnB1c2goaC5maWx0ZXIoZWwpKSB9IHJldHVybiBoIH0gfSBmdW5jdGlvbiBlbCh0KSB7IHJldHVybiB0Lmxlbmd0aCA+IDEgfSBmdW5jdGlvbiBybCh0LCBuKSB7IHJldHVybiAoKHQgPSB0LngpWzBdIDwgMCA/IHRbMV0gLSBXYyAtIFhjIDogV2MgLSB0WzFdKSAtICgobiA9IG4ueClbMF0gPCAwID8gblsxXSAtIFdjIC0gWGMgOiBXYyAtIG5bMV0pIH0gQnMuaW52ZXJ0ID0gQnM7IHZhciBpbCA9IG5sKChmdW5jdGlvbiAoKSB7IHJldHVybiAhMCB9KSwgKGZ1bmN0aW9uICh0KSB7IHZhciBuLCBlID0gTmFOLCByID0gTmFOLCBpID0gTmFOOyByZXR1cm4geyBsaW5lU3RhcnQ6IGZ1bmN0aW9uICgpIHsgdC5saW5lU3RhcnQoKSwgbiA9IDEgfSwgcG9pbnQ6IGZ1bmN0aW9uIChvLCBhKSB7IHZhciB1ID0gbyA+IDAgPyBWYyA6IC1WYywgYyA9IHRmKG8gLSBlKTsgdGYoYyAtIFZjKSA8IFhjID8gKHQucG9pbnQoZSwgciA9IChyICsgYSkgLyAyID4gMCA/IFdjIDogLVdjKSwgdC5wb2ludChpLCByKSwgdC5saW5lRW5kKCksIHQubGluZVN0YXJ0KCksIHQucG9pbnQodSwgciksIHQucG9pbnQobywgciksIG4gPSAwKSA6IGkgIT09IHUgJiYgYyA+PSBWYyAmJiAodGYoZSAtIGkpIDwgWGMgJiYgKGUgLT0gaSAqIFhjKSwgdGYobyAtIHUpIDwgWGMgJiYgKG8gLT0gdSAqIFhjKSwgciA9IGZ1bmN0aW9uICh0LCBuLCBlLCByKSB7IHZhciBpLCBvLCBhID0gc2YodCAtIGUpOyByZXR1cm4gdGYoYSkgPiBYYyA/IG5mKChzZihuKSAqIChvID0gcmYocikpICogc2YoZSkgLSBzZihyKSAqIChpID0gcmYobikpICogc2YodCkpIC8gKGkgKiBvICogYSkpIDogKG4gKyByKSAvIDIgfShlLCByLCBvLCBhKSwgdC5wb2ludChpLCByKSwgdC5saW5lRW5kKCksIHQubGluZVN0YXJ0KCksIHQucG9pbnQodSwgciksIG4gPSAwKSwgdC5wb2ludChlID0gbywgciA9IGEpLCBpID0gdSB9LCBsaW5lRW5kOiBmdW5jdGlvbiAoKSB7IHQubGluZUVuZCgpLCBlID0gciA9IE5hTiB9LCBjbGVhbjogZnVuY3Rpb24gKCkgeyByZXR1cm4gMiAtIG4gfSB9IH0pLCAoZnVuY3Rpb24gKHQsIG4sIGUsIHIpIHsgdmFyIGk7IGlmIChudWxsID09IHQpIGkgPSBlICogV2MsIHIucG9pbnQoLVZjLCBpKSwgci5wb2ludCgwLCBpKSwgci5wb2ludChWYywgaSksIHIucG9pbnQoVmMsIDApLCByLnBvaW50KFZjLCAtaSksIHIucG9pbnQoMCwgLWkpLCByLnBvaW50KC1WYywgLWkpLCByLnBvaW50KC1WYywgMCksIHIucG9pbnQoLVZjLCBpKTsgZWxzZSBpZiAodGYodFswXSAtIG5bMF0pID4gWGMpIHsgdmFyIG8gPSB0WzBdIDwgblswXSA/IFZjIDogLVZjOyBpID0gZSAqIG8gLyAyLCByLnBvaW50KC1vLCBpKSwgci5wb2ludCgwLCBpKSwgci5wb2ludChvLCBpKSB9IGVsc2Ugci5wb2ludChuWzBdLCBuWzFdKSB9KSwgWy1WYywgLVdjXSk7IGZ1bmN0aW9uIG9sKHQpIHsgdmFyIG4gPSByZih0KSwgZSA9IDYgKiBKYywgciA9IG4gPiAwLCBpID0gdGYobikgPiBYYzsgZnVuY3Rpb24gbyh0LCBlKSB7IHJldHVybiByZih0KSAqIHJmKGUpID4gbiB9IGZ1bmN0aW9uIGEodCwgZSwgcikgeyB2YXIgaSA9IFsxLCAwLCAwXSwgbyA9IFpmKFZmKHQpLCBWZihlKSksIGEgPSBXZihvLCBvKSwgdSA9IG9bMF0sIGMgPSBhIC0gdSAqIHU7IGlmICghYykgcmV0dXJuICFyICYmIHQ7IHZhciBmID0gbiAqIGEgLyBjLCBzID0gLW4gKiB1IC8gYywgbCA9IFpmKGksIG8pLCBoID0gUWYoaSwgZik7IEtmKGgsIFFmKG8sIHMpKTsgdmFyIGQgPSBsLCBwID0gV2YoaCwgZCksIGcgPSBXZihkLCBkKSwgeSA9IHAgKiBwIC0gZyAqIChXZihoLCBoKSAtIDEpOyBpZiAoISh5IDwgMCkpIHsgdmFyIHYgPSBoZih5KSwgXyA9IFFmKGQsICgtcCAtIHYpIC8gZyk7IGlmIChLZihfLCBoKSwgXyA9IEdmKF8pLCAhcikgcmV0dXJuIF87IHZhciBiLCBtID0gdFswXSwgeCA9IGVbMF0sIHcgPSB0WzFdLCBNID0gZVsxXTsgeCA8IG0gJiYgKGIgPSBtLCBtID0geCwgeCA9IGIpOyB2YXIgQSA9IHggLSBtLCBUID0gdGYoQSAtIFZjKSA8IFhjOyBpZiAoIVQgJiYgTSA8IHcgJiYgKGIgPSB3LCB3ID0gTSwgTSA9IGIpLCBUIHx8IEEgPCBYYyA/IFQgPyB3ICsgTSA+IDAgXiBfWzFdIDwgKHRmKF9bMF0gLSBtKSA8IFhjID8gdyA6IE0pIDogdyA8PSBfWzFdICYmIF9bMV0gPD0gTSA6IEEgPiBWYyBeIChtIDw9IF9bMF0gJiYgX1swXSA8PSB4KSkgeyB2YXIgUyA9IFFmKGQsICgtcCArIHYpIC8gZyk7IHJldHVybiBLZihTLCBoKSwgW18sIEdmKFMpXSB9IH0gfSBmdW5jdGlvbiB1KG4sIGUpIHsgdmFyIGkgPSByID8gdCA6IFZjIC0gdCwgbyA9IDA7IHJldHVybiBuIDwgLWkgPyBvIHw9IDEgOiBuID4gaSAmJiAobyB8PSAyKSwgZSA8IC1pID8gbyB8PSA0IDogZSA+IGkgJiYgKG8gfD0gOCksIG8gfSByZXR1cm4gbmwobywgKGZ1bmN0aW9uICh0KSB7IHZhciBuLCBlLCBjLCBmLCBzOyByZXR1cm4geyBsaW5lU3RhcnQ6IGZ1bmN0aW9uICgpIHsgZiA9IGMgPSAhMSwgcyA9IDEgfSwgcG9pbnQ6IGZ1bmN0aW9uIChsLCBoKSB7IHZhciBkLCBwID0gW2wsIGhdLCBnID0gbyhsLCBoKSwgeSA9IHIgPyBnID8gMCA6IHUobCwgaCkgOiBnID8gdShsICsgKGwgPCAwID8gVmMgOiAtVmMpLCBoKSA6IDA7IGlmICghbiAmJiAoZiA9IGMgPSBnKSAmJiB0LmxpbmVTdGFydCgpLCBnICE9PSBjICYmICghKGQgPSBhKG4sIHApKSB8fCBXcyhuLCBkKSB8fCBXcyhwLCBkKSkgJiYgKHBbMl0gPSAxKSwgZyAhPT0gYykgcyA9IDAsIGcgPyAodC5saW5lU3RhcnQoKSwgZCA9IGEocCwgbiksIHQucG9pbnQoZFswXSwgZFsxXSkpIDogKGQgPSBhKG4sIHApLCB0LnBvaW50KGRbMF0sIGRbMV0sIDIpLCB0LmxpbmVFbmQoKSksIG4gPSBkOyBlbHNlIGlmIChpICYmIG4gJiYgciBeIGcpIHsgdmFyIHY7IHkgJiBlIHx8ICEodiA9IGEocCwgbiwgITApKSB8fCAocyA9IDAsIHIgPyAodC5saW5lU3RhcnQoKSwgdC5wb2ludCh2WzBdWzBdLCB2WzBdWzFdKSwgdC5wb2ludCh2WzFdWzBdLCB2WzFdWzFdKSwgdC5saW5lRW5kKCkpIDogKHQucG9pbnQodlsxXVswXSwgdlsxXVsxXSksIHQubGluZUVuZCgpLCB0LmxpbmVTdGFydCgpLCB0LnBvaW50KHZbMF1bMF0sIHZbMF1bMV0sIDMpKSkgfSAhZyB8fCBuICYmIFdzKG4sIHApIHx8IHQucG9pbnQocFswXSwgcFsxXSksIG4gPSBwLCBjID0gZywgZSA9IHkgfSwgbGluZUVuZDogZnVuY3Rpb24gKCkgeyBjICYmIHQubGluZUVuZCgpLCBuID0gbnVsbCB9LCBjbGVhbjogZnVuY3Rpb24gKCkgeyByZXR1cm4gcyB8IChmICYmIGMpIDw8IDEgfSB9IH0pLCAoZnVuY3Rpb24gKG4sIHIsIGksIG8pIHsgWHMobywgdCwgZSwgaSwgbiwgcikgfSksIHIgPyBbMCwgLXRdIDogWy1WYywgdCAtIFZjXSkgfSB2YXIgYWwsIHVsLCBjbCwgZmwsIHNsID0gMWU5LCBsbCA9IC1zbDsgZnVuY3Rpb24gaGwodCwgbiwgZSwgcikgeyBmdW5jdGlvbiBpKGksIG8pIHsgcmV0dXJuIHQgPD0gaSAmJiBpIDw9IGUgJiYgbiA8PSBvICYmIG8gPD0gciB9IGZ1bmN0aW9uIG8oaSwgbywgdSwgZikgeyB2YXIgcyA9IDAsIGwgPSAwOyBpZiAobnVsbCA9PSBpIHx8IChzID0gYShpLCB1KSkgIT09IChsID0gYShvLCB1KSkgfHwgYyhpLCBvKSA8IDAgXiB1ID4gMCkgZG8geyBmLnBvaW50KDAgPT09IHMgfHwgMyA9PT0gcyA/IHQgOiBlLCBzID4gMSA/IHIgOiBuKSB9IHdoaWxlICgocyA9IChzICsgdSArIDQpICUgNCkgIT09IGwpOyBlbHNlIGYucG9pbnQob1swXSwgb1sxXSkgfSBmdW5jdGlvbiBhKHIsIGkpIHsgcmV0dXJuIHRmKHJbMF0gLSB0KSA8IFhjID8gaSA+IDAgPyAwIDogMyA6IHRmKHJbMF0gLSBlKSA8IFhjID8gaSA+IDAgPyAyIDogMSA6IHRmKHJbMV0gLSBuKSA8IFhjID8gaSA+IDAgPyAxIDogMCA6IGkgPiAwID8gMyA6IDIgfSBmdW5jdGlvbiB1KHQsIG4pIHsgcmV0dXJuIGModC54LCBuLngpIH0gZnVuY3Rpb24gYyh0LCBuKSB7IHZhciBlID0gYSh0LCAxKSwgciA9IGEobiwgMSk7IHJldHVybiBlICE9PSByID8gZSAtIHIgOiAwID09PSBlID8gblsxXSAtIHRbMV0gOiAxID09PSBlID8gdFswXSAtIG5bMF0gOiAyID09PSBlID8gdFsxXSAtIG5bMV0gOiBuWzBdIC0gdFswXSB9IHJldHVybiBmdW5jdGlvbiAoYSkgeyB2YXIgYywgZiwgcywgbCwgaCwgZCwgcCwgZywgeSwgdiwgXywgYiA9IGEsIG0gPSBWcygpLCB4ID0geyBwb2ludDogdywgbGluZVN0YXJ0OiBmdW5jdGlvbiAoKSB7IHgucG9pbnQgPSBNLCBmICYmIGYucHVzaChzID0gW10pOyB2ID0gITAsIHkgPSAhMSwgcCA9IGcgPSBOYU4gfSwgbGluZUVuZDogZnVuY3Rpb24gKCkgeyBjICYmIChNKGwsIGgpLCBkICYmIHkgJiYgbS5yZWpvaW4oKSwgYy5wdXNoKG0ucmVzdWx0KCkpKTsgeC5wb2ludCA9IHcsIHkgJiYgYi5saW5lRW5kKCkgfSwgcG9seWdvblN0YXJ0OiBmdW5jdGlvbiAoKSB7IGIgPSBtLCBjID0gW10sIGYgPSBbXSwgXyA9ICEwIH0sIHBvbHlnb25FbmQ6IGZ1bmN0aW9uICgpIHsgdmFyIG4gPSBmdW5jdGlvbiAoKSB7IGZvciAodmFyIG4gPSAwLCBlID0gMCwgaSA9IGYubGVuZ3RoOyBlIDwgaTsgKytlKWZvciAodmFyIG8sIGEsIHUgPSBmW2VdLCBjID0gMSwgcyA9IHUubGVuZ3RoLCBsID0gdVswXSwgaCA9IGxbMF0sIGQgPSBsWzFdOyBjIDwgczsgKytjKW8gPSBoLCBhID0gZCwgaCA9IChsID0gdVtjXSlbMF0sIGQgPSBsWzFdLCBhIDw9IHIgPyBkID4gciAmJiAoaCAtIG8pICogKHIgLSBhKSA+IChkIC0gYSkgKiAodCAtIG8pICYmICsrbiA6IGQgPD0gciAmJiAoaCAtIG8pICogKHIgLSBhKSA8IChkIC0gYSkgKiAodCAtIG8pICYmIC0tbjsgcmV0dXJuIG4gfSgpLCBlID0gXyAmJiBuLCBpID0gKGMgPSBmdChjKSkubGVuZ3RoOyAoZSB8fCBpKSAmJiAoYS5wb2x5Z29uU3RhcnQoKSwgZSAmJiAoYS5saW5lU3RhcnQoKSwgbyhudWxsLCBudWxsLCAxLCBhKSwgYS5saW5lRW5kKCkpLCBpICYmIEtzKGMsIHUsIG4sIG8sIGEpLCBhLnBvbHlnb25FbmQoKSk7IGIgPSBhLCBjID0gZiA9IHMgPSBudWxsIH0gfTsgZnVuY3Rpb24gdyh0LCBuKSB7IGkodCwgbikgJiYgYi5wb2ludCh0LCBuKSB9IGZ1bmN0aW9uIE0obywgYSkgeyB2YXIgdSA9IGkobywgYSk7IGlmIChmICYmIHMucHVzaChbbywgYV0pLCB2KSBsID0gbywgaCA9IGEsIGQgPSB1LCB2ID0gITEsIHUgJiYgKGIubGluZVN0YXJ0KCksIGIucG9pbnQobywgYSkpOyBlbHNlIGlmICh1ICYmIHkpIGIucG9pbnQobywgYSk7IGVsc2UgeyB2YXIgYyA9IFtwID0gTWF0aC5tYXgobGwsIE1hdGgubWluKHNsLCBwKSksIGcgPSBNYXRoLm1heChsbCwgTWF0aC5taW4oc2wsIGcpKV0sIG0gPSBbbyA9IE1hdGgubWF4KGxsLCBNYXRoLm1pbihzbCwgbykpLCBhID0gTWF0aC5tYXgobGwsIE1hdGgubWluKHNsLCBhKSldOyAhZnVuY3Rpb24gKHQsIG4sIGUsIHIsIGksIG8pIHsgdmFyIGEsIHUgPSB0WzBdLCBjID0gdFsxXSwgZiA9IDAsIHMgPSAxLCBsID0gblswXSAtIHUsIGggPSBuWzFdIC0gYzsgaWYgKGEgPSBlIC0gdSwgbCB8fCAhKGEgPiAwKSkgeyBpZiAoYSAvPSBsLCBsIDwgMCkgeyBpZiAoYSA8IGYpIHJldHVybjsgYSA8IHMgJiYgKHMgPSBhKSB9IGVsc2UgaWYgKGwgPiAwKSB7IGlmIChhID4gcykgcmV0dXJuOyBhID4gZiAmJiAoZiA9IGEpIH0gaWYgKGEgPSBpIC0gdSwgbCB8fCAhKGEgPCAwKSkgeyBpZiAoYSAvPSBsLCBsIDwgMCkgeyBpZiAoYSA+IHMpIHJldHVybjsgYSA+IGYgJiYgKGYgPSBhKSB9IGVsc2UgaWYgKGwgPiAwKSB7IGlmIChhIDwgZikgcmV0dXJuOyBhIDwgcyAmJiAocyA9IGEpIH0gaWYgKGEgPSByIC0gYywgaCB8fCAhKGEgPiAwKSkgeyBpZiAoYSAvPSBoLCBoIDwgMCkgeyBpZiAoYSA8IGYpIHJldHVybjsgYSA8IHMgJiYgKHMgPSBhKSB9IGVsc2UgaWYgKGggPiAwKSB7IGlmIChhID4gcykgcmV0dXJuOyBhID4gZiAmJiAoZiA9IGEpIH0gaWYgKGEgPSBvIC0gYywgaCB8fCAhKGEgPCAwKSkgeyBpZiAoYSAvPSBoLCBoIDwgMCkgeyBpZiAoYSA+IHMpIHJldHVybjsgYSA+IGYgJiYgKGYgPSBhKSB9IGVsc2UgaWYgKGggPiAwKSB7IGlmIChhIDwgZikgcmV0dXJuOyBhIDwgcyAmJiAocyA9IGEpIH0gcmV0dXJuIGYgPiAwICYmICh0WzBdID0gdSArIGYgKiBsLCB0WzFdID0gYyArIGYgKiBoKSwgcyA8IDEgJiYgKG5bMF0gPSB1ICsgcyAqIGwsIG5bMV0gPSBjICsgcyAqIGgpLCAhMCB9IH0gfSB9IH0oYywgbSwgdCwgbiwgZSwgcikgPyB1ICYmIChiLmxpbmVTdGFydCgpLCBiLnBvaW50KG8sIGEpLCBfID0gITEpIDogKHkgfHwgKGIubGluZVN0YXJ0KCksIGIucG9pbnQoY1swXSwgY1sxXSkpLCBiLnBvaW50KG1bMF0sIG1bMV0pLCB1IHx8IGIubGluZUVuZCgpLCBfID0gITEpIH0gcCA9IG8sIGcgPSBhLCB5ID0gdSB9IHJldHVybiB4IH0gfSB2YXIgZGwgPSB7IHNwaGVyZTogdmYsIHBvaW50OiB2ZiwgbGluZVN0YXJ0OiBmdW5jdGlvbiAoKSB7IGRsLnBvaW50ID0gZ2wsIGRsLmxpbmVFbmQgPSBwbCB9LCBsaW5lRW5kOiB2ZiwgcG9seWdvblN0YXJ0OiB2ZiwgcG9seWdvbkVuZDogdmYgfTsgZnVuY3Rpb24gcGwoKSB7IGRsLnBvaW50ID0gZGwubGluZUVuZCA9IHZmIH0gZnVuY3Rpb24gZ2wodCwgbikgeyB1bCA9IHQgKj0gSmMsIGNsID0gc2YobiAqPSBKYyksIGZsID0gcmYobiksIGRsLnBvaW50ID0geWwgfSBmdW5jdGlvbiB5bCh0LCBuKSB7IHQgKj0gSmM7IHZhciBlID0gc2YobiAqPSBKYyksIHIgPSByZihuKSwgaSA9IHRmKHQgLSB1bCksIG8gPSByZihpKSwgYSA9IHIgKiBzZihpKSwgdSA9IGZsICogZSAtIGNsICogciAqIG8sIGMgPSBjbCAqIGUgKyBmbCAqIHIgKiBvOyBhbC5hZGQoZWYoaGYoYSAqIGEgKyB1ICogdSksIGMpKSwgdWwgPSB0LCBjbCA9IGUsIGZsID0gciB9IGZ1bmN0aW9uIHZsKHQpIHsgcmV0dXJuIGFsID0gbmV3IFQsIE1mKHQsIGRsKSwgK2FsIH0gdmFyIF9sID0gW251bGwsIG51bGxdLCBibCA9IHsgdHlwZTogIkxpbmVTdHJpbmciLCBjb29yZGluYXRlczogX2wgfTsgZnVuY3Rpb24gbWwodCwgbikgeyByZXR1cm4gX2xbMF0gPSB0LCBfbFsxXSA9IG4sIHZsKGJsKSB9IHZhciB4bCA9IHsgRmVhdHVyZTogZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIE1sKHQuZ2VvbWV0cnksIG4pIH0sIEZlYXR1cmVDb2xsZWN0aW9uOiBmdW5jdGlvbiAodCwgbikgeyBmb3IgKHZhciBlID0gdC5mZWF0dXJlcywgciA9IC0xLCBpID0gZS5sZW5ndGg7ICsrciA8IGk7KWlmIChNbChlW3JdLmdlb21ldHJ5LCBuKSkgcmV0dXJuICEwOyByZXR1cm4gITEgfSB9LCB3bCA9IHsgU3BoZXJlOiBmdW5jdGlvbiAoKSB7IHJldHVybiAhMCB9LCBQb2ludDogZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIEFsKHQuY29vcmRpbmF0ZXMsIG4pIH0sIE11bHRpUG9pbnQ6IGZ1bmN0aW9uICh0LCBuKSB7IGZvciAodmFyIGUgPSB0LmNvb3JkaW5hdGVzLCByID0gLTEsIGkgPSBlLmxlbmd0aDsgKytyIDwgaTspaWYgKEFsKGVbcl0sIG4pKSByZXR1cm4gITA7IHJldHVybiAhMSB9LCBMaW5lU3RyaW5nOiBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gVGwodC5jb29yZGluYXRlcywgbikgfSwgTXVsdGlMaW5lU3RyaW5nOiBmdW5jdGlvbiAodCwgbikgeyBmb3IgKHZhciBlID0gdC5jb29yZGluYXRlcywgciA9IC0xLCBpID0gZS5sZW5ndGg7ICsrciA8IGk7KWlmIChUbChlW3JdLCBuKSkgcmV0dXJuICEwOyByZXR1cm4gITEgfSwgUG9seWdvbjogZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIFNsKHQuY29vcmRpbmF0ZXMsIG4pIH0sIE11bHRpUG9seWdvbjogZnVuY3Rpb24gKHQsIG4pIHsgZm9yICh2YXIgZSA9IHQuY29vcmRpbmF0ZXMsIHIgPSAtMSwgaSA9IGUubGVuZ3RoOyArK3IgPCBpOylpZiAoU2woZVtyXSwgbikpIHJldHVybiAhMDsgcmV0dXJuICExIH0sIEdlb21ldHJ5Q29sbGVjdGlvbjogZnVuY3Rpb24gKHQsIG4pIHsgZm9yICh2YXIgZSA9IHQuZ2VvbWV0cmllcywgciA9IC0xLCBpID0gZS5sZW5ndGg7ICsrciA8IGk7KWlmIChNbChlW3JdLCBuKSkgcmV0dXJuICEwOyByZXR1cm4gITEgfSB9OyBmdW5jdGlvbiBNbCh0LCBuKSB7IHJldHVybiAhKCF0IHx8ICF3bC5oYXNPd25Qcm9wZXJ0eSh0LnR5cGUpKSAmJiB3bFt0LnR5cGVdKHQsIG4pIH0gZnVuY3Rpb24gQWwodCwgbikgeyByZXR1cm4gMCA9PT0gbWwodCwgbikgfSBmdW5jdGlvbiBUbCh0LCBuKSB7IGZvciAodmFyIGUsIHIsIGksIG8gPSAwLCBhID0gdC5sZW5ndGg7IG8gPCBhOyBvKyspIHsgaWYgKDAgPT09IChyID0gbWwodFtvXSwgbikpKSByZXR1cm4gITA7IGlmIChvID4gMCAmJiAoaSA9IG1sKHRbb10sIHRbbyAtIDFdKSkgPiAwICYmIGUgPD0gaSAmJiByIDw9IGkgJiYgKGUgKyByIC0gaSkgKiAoMSAtIE1hdGgucG93KChlIC0gcikgLyBpLCAyKSkgPCBHYyAqIGkpIHJldHVybiAhMDsgZSA9IHIgfSByZXR1cm4gITEgfSBmdW5jdGlvbiBTbCh0LCBuKSB7IHJldHVybiAhIXRsKHQubWFwKEVsKSwga2wobikpIH0gZnVuY3Rpb24gRWwodCkgeyByZXR1cm4gKHQgPSB0Lm1hcChrbCkpLnBvcCgpLCB0IH0gZnVuY3Rpb24ga2wodCkgeyByZXR1cm4gW3RbMF0gKiBKYywgdFsxXSAqIEpjXSB9IGZ1bmN0aW9uIE5sKHQsIG4sIGUpIHsgdmFyIHIgPSBsdCh0LCBuIC0gWGMsIGUpLmNvbmNhdChuKTsgcmV0dXJuIGZ1bmN0aW9uICh0KSB7IHJldHVybiByLm1hcCgoZnVuY3Rpb24gKG4pIHsgcmV0dXJuIFt0LCBuXSB9KSkgfSB9IGZ1bmN0aW9uIENsKHQsIG4sIGUpIHsgdmFyIHIgPSBsdCh0LCBuIC0gWGMsIGUpLmNvbmNhdChuKTsgcmV0dXJuIGZ1bmN0aW9uICh0KSB7IHJldHVybiByLm1hcCgoZnVuY3Rpb24gKG4pIHsgcmV0dXJuIFtuLCB0XSB9KSkgfSB9IGZ1bmN0aW9uIFBsKCkgeyB2YXIgdCwgbiwgZSwgciwgaSwgbywgYSwgdSwgYywgZiwgcywgbCwgaCA9IDEwLCBkID0gaCwgcCA9IDkwLCBnID0gMzYwLCB5ID0gMi41OyBmdW5jdGlvbiB2KCkgeyByZXR1cm4geyB0eXBlOiAiTXVsdGlMaW5lU3RyaW5nIiwgY29vcmRpbmF0ZXM6IF8oKSB9IH0gZnVuY3Rpb24gXygpIHsgcmV0dXJuIGx0KG9mKHIgLyBwKSAqIHAsIGUsIHApLm1hcChzKS5jb25jYXQobHQob2YodSAvIGcpICogZywgYSwgZykubWFwKGwpKS5jb25jYXQobHQob2YobiAvIGgpICogaCwgdCwgaCkuZmlsdGVyKChmdW5jdGlvbiAodCkgeyByZXR1cm4gdGYodCAlIHApID4gWGMgfSkpLm1hcChjKSkuY29uY2F0KGx0KG9mKG8gLyBkKSAqIGQsIGksIGQpLmZpbHRlcigoZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHRmKHQgJSBnKSA+IFhjIH0pKS5tYXAoZikpIH0gcmV0dXJuIHYubGluZXMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBfKCkubWFwKChmdW5jdGlvbiAodCkgeyByZXR1cm4geyB0eXBlOiAiTGluZVN0cmluZyIsIGNvb3JkaW5hdGVzOiB0IH0gfSkpIH0sIHYub3V0bGluZSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHsgdHlwZTogIlBvbHlnb24iLCBjb29yZGluYXRlczogW3MocikuY29uY2F0KGwoYSkuc2xpY2UoMSksIHMoZSkucmV2ZXJzZSgpLnNsaWNlKDEpLCBsKHUpLnJldmVyc2UoKS5zbGljZSgxKSldIH0gfSwgdi5leHRlbnQgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IHYuZXh0ZW50TWFqb3IodCkuZXh0ZW50TWlub3IodCkgOiB2LmV4dGVudE1pbm9yKCkgfSwgdi5leHRlbnRNYWpvciA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHIgPSArdFswXVswXSwgZSA9ICt0WzFdWzBdLCB1ID0gK3RbMF1bMV0sIGEgPSArdFsxXVsxXSwgciA+IGUgJiYgKHQgPSByLCByID0gZSwgZSA9IHQpLCB1ID4gYSAmJiAodCA9IHUsIHUgPSBhLCBhID0gdCksIHYucHJlY2lzaW9uKHkpKSA6IFtbciwgdV0sIFtlLCBhXV0gfSwgdi5leHRlbnRNaW5vciA9IGZ1bmN0aW9uIChlKSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG4gPSArZVswXVswXSwgdCA9ICtlWzFdWzBdLCBvID0gK2VbMF1bMV0sIGkgPSArZVsxXVsxXSwgbiA+IHQgJiYgKGUgPSBuLCBuID0gdCwgdCA9IGUpLCBvID4gaSAmJiAoZSA9IG8sIG8gPSBpLCBpID0gZSksIHYucHJlY2lzaW9uKHkpKSA6IFtbbiwgb10sIFt0LCBpXV0gfSwgdi5zdGVwID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyB2LnN0ZXBNYWpvcih0KS5zdGVwTWlub3IodCkgOiB2LnN0ZXBNaW5vcigpIH0sIHYuc3RlcE1ham9yID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocCA9ICt0WzBdLCBnID0gK3RbMV0sIHYpIDogW3AsIGddIH0sIHYuc3RlcE1pbm9yID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoaCA9ICt0WzBdLCBkID0gK3RbMV0sIHYpIDogW2gsIGRdIH0sIHYucHJlY2lzaW9uID0gZnVuY3Rpb24gKGgpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeSA9ICtoLCBjID0gTmwobywgaSwgOTApLCBmID0gQ2wobiwgdCwgeSksIHMgPSBObCh1LCBhLCA5MCksIGwgPSBDbChyLCBlLCB5KSwgdikgOiB5IH0sIHYuZXh0ZW50TWFqb3IoW1stMTgwLCAtODkuOTk5OTk5XSwgWzE4MCwgODkuOTk5OTk5XV0pLmV4dGVudE1pbm9yKFtbLTE4MCwgLTgwLjAwMDAwMV0sIFsxODAsIDgwLjAwMDAwMV1dKSB9IHZhciB6bCwgRGwsIFJsLCBGbCwgcWwgPSB0ID0+IHQsIElsID0gbmV3IFQsIE9sID0gbmV3IFQsIFVsID0geyBwb2ludDogdmYsIGxpbmVTdGFydDogdmYsIGxpbmVFbmQ6IHZmLCBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uICgpIHsgVWwubGluZVN0YXJ0ID0gQmwsIFVsLmxpbmVFbmQgPSBqbCB9LCBwb2x5Z29uRW5kOiBmdW5jdGlvbiAoKSB7IFVsLmxpbmVTdGFydCA9IFVsLmxpbmVFbmQgPSBVbC5wb2ludCA9IHZmLCBJbC5hZGQodGYoT2wpKSwgT2wgPSBuZXcgVCB9LCByZXN1bHQ6IGZ1bmN0aW9uICgpIHsgdmFyIHQgPSBJbCAvIDI7IHJldHVybiBJbCA9IG5ldyBULCB0IH0gfTsgZnVuY3Rpb24gQmwoKSB7IFVsLnBvaW50ID0gWWwgfSBmdW5jdGlvbiBZbCh0LCBuKSB7IFVsLnBvaW50ID0gTGwsIHpsID0gUmwgPSB0LCBEbCA9IEZsID0gbiB9IGZ1bmN0aW9uIExsKHQsIG4pIHsgT2wuYWRkKEZsICogdCAtIFJsICogbiksIFJsID0gdCwgRmwgPSBuIH0gZnVuY3Rpb24gamwoKSB7IExsKHpsLCBEbCkgfSB2YXIgJGwgPSBVbCwgSGwgPSAxIC8gMCwgWGwgPSBIbCwgR2wgPSAtSGwsIFZsID0gR2wsIFdsID0geyBwb2ludDogZnVuY3Rpb24gKHQsIG4pIHsgdCA8IEhsICYmIChIbCA9IHQpOyB0ID4gR2wgJiYgKEdsID0gdCk7IG4gPCBYbCAmJiAoWGwgPSBuKTsgbiA+IFZsICYmIChWbCA9IG4pIH0sIGxpbmVTdGFydDogdmYsIGxpbmVFbmQ6IHZmLCBwb2x5Z29uU3RhcnQ6IHZmLCBwb2x5Z29uRW5kOiB2ZiwgcmVzdWx0OiBmdW5jdGlvbiAoKSB7IHZhciB0ID0gW1tIbCwgWGxdLCBbR2wsIFZsXV07IHJldHVybiBHbCA9IFZsID0gLShYbCA9IEhsID0gMSAvIDApLCB0IH0gfTsgdmFyIFpsLCBLbCwgUWwsIEpsLCB0aCA9IFdsLCBuaCA9IDAsIGVoID0gMCwgcmggPSAwLCBpaCA9IDAsIG9oID0gMCwgYWggPSAwLCB1aCA9IDAsIGNoID0gMCwgZmggPSAwLCBzaCA9IHsgcG9pbnQ6IGxoLCBsaW5lU3RhcnQ6IGhoLCBsaW5lRW5kOiBnaCwgcG9seWdvblN0YXJ0OiBmdW5jdGlvbiAoKSB7IHNoLmxpbmVTdGFydCA9IHloLCBzaC5saW5lRW5kID0gdmggfSwgcG9seWdvbkVuZDogZnVuY3Rpb24gKCkgeyBzaC5wb2ludCA9IGxoLCBzaC5saW5lU3RhcnQgPSBoaCwgc2gubGluZUVuZCA9IGdoIH0sIHJlc3VsdDogZnVuY3Rpb24gKCkgeyB2YXIgdCA9IGZoID8gW3VoIC8gZmgsIGNoIC8gZmhdIDogYWggPyBbaWggLyBhaCwgb2ggLyBhaF0gOiByaCA/IFtuaCAvIHJoLCBlaCAvIHJoXSA6IFtOYU4sIE5hTl07IHJldHVybiBuaCA9IGVoID0gcmggPSBpaCA9IG9oID0gYWggPSB1aCA9IGNoID0gZmggPSAwLCB0IH0gfTsgZnVuY3Rpb24gbGgodCwgbikgeyBuaCArPSB0LCBlaCArPSBuLCArK3JoIH0gZnVuY3Rpb24gaGgoKSB7IHNoLnBvaW50ID0gZGggfSBmdW5jdGlvbiBkaCh0LCBuKSB7IHNoLnBvaW50ID0gcGgsIGxoKFFsID0gdCwgSmwgPSBuKSB9IGZ1bmN0aW9uIHBoKHQsIG4pIHsgdmFyIGUgPSB0IC0gUWwsIHIgPSBuIC0gSmwsIGkgPSBoZihlICogZSArIHIgKiByKTsgaWggKz0gaSAqIChRbCArIHQpIC8gMiwgb2ggKz0gaSAqIChKbCArIG4pIC8gMiwgYWggKz0gaSwgbGgoUWwgPSB0LCBKbCA9IG4pIH0gZnVuY3Rpb24gZ2goKSB7IHNoLnBvaW50ID0gbGggfSBmdW5jdGlvbiB5aCgpIHsgc2gucG9pbnQgPSBfaCB9IGZ1bmN0aW9uIHZoKCkgeyBiaChabCwgS2wpIH0gZnVuY3Rpb24gX2godCwgbikgeyBzaC5wb2ludCA9IGJoLCBsaChabCA9IFFsID0gdCwgS2wgPSBKbCA9IG4pIH0gZnVuY3Rpb24gYmgodCwgbikgeyB2YXIgZSA9IHQgLSBRbCwgciA9IG4gLSBKbCwgaSA9IGhmKGUgKiBlICsgciAqIHIpOyBpaCArPSBpICogKFFsICsgdCkgLyAyLCBvaCArPSBpICogKEpsICsgbikgLyAyLCBhaCArPSBpLCB1aCArPSAoaSA9IEpsICogdCAtIFFsICogbikgKiAoUWwgKyB0KSwgY2ggKz0gaSAqIChKbCArIG4pLCBmaCArPSAzICogaSwgbGgoUWwgPSB0LCBKbCA9IG4pIH0gdmFyIG1oID0gc2g7IGZ1bmN0aW9uIHhoKHQpIHsgdGhpcy5fY29udGV4dCA9IHQgfSB4aC5wcm90b3R5cGUgPSB7IF9yYWRpdXM6IDQuNSwgcG9pbnRSYWRpdXM6IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0aGlzLl9yYWRpdXMgPSB0LCB0aGlzIH0sIHBvbHlnb25TdGFydDogZnVuY3Rpb24gKCkgeyB0aGlzLl9saW5lID0gMCB9LCBwb2x5Z29uRW5kOiBmdW5jdGlvbiAoKSB7IHRoaXMuX2xpbmUgPSBOYU4gfSwgbGluZVN0YXJ0OiBmdW5jdGlvbiAoKSB7IHRoaXMuX3BvaW50ID0gMCB9LCBsaW5lRW5kOiBmdW5jdGlvbiAoKSB7IDAgPT09IHRoaXMuX2xpbmUgJiYgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKSwgdGhpcy5fcG9pbnQgPSBOYU4gfSwgcG9pbnQ6IGZ1bmN0aW9uICh0LCBuKSB7IHN3aXRjaCAodGhpcy5fcG9pbnQpIHsgY2FzZSAwOiB0aGlzLl9jb250ZXh0Lm1vdmVUbyh0LCBuKSwgdGhpcy5fcG9pbnQgPSAxOyBicmVhazsgY2FzZSAxOiB0aGlzLl9jb250ZXh0LmxpbmVUbyh0LCBuKTsgYnJlYWs7IGRlZmF1bHQ6IHRoaXMuX2NvbnRleHQubW92ZVRvKHQgKyB0aGlzLl9yYWRpdXMsIG4pLCB0aGlzLl9jb250ZXh0LmFyYyh0LCBuLCB0aGlzLl9yYWRpdXMsIDAsIEtjKSB9IH0sIHJlc3VsdDogdmYgfTsgdmFyIHdoLCBNaCwgQWgsIFRoLCBTaCwgRWggPSBuZXcgVCwga2ggPSB7IHBvaW50OiB2ZiwgbGluZVN0YXJ0OiBmdW5jdGlvbiAoKSB7IGtoLnBvaW50ID0gTmggfSwgbGluZUVuZDogZnVuY3Rpb24gKCkgeyB3aCAmJiBDaChNaCwgQWgpLCBraC5wb2ludCA9IHZmIH0sIHBvbHlnb25TdGFydDogZnVuY3Rpb24gKCkgeyB3aCA9ICEwIH0sIHBvbHlnb25FbmQ6IGZ1bmN0aW9uICgpIHsgd2ggPSBudWxsIH0sIHJlc3VsdDogZnVuY3Rpb24gKCkgeyB2YXIgdCA9ICtFaDsgcmV0dXJuIEVoID0gbmV3IFQsIHQgfSB9OyBmdW5jdGlvbiBOaCh0LCBuKSB7IGtoLnBvaW50ID0gQ2gsIE1oID0gVGggPSB0LCBBaCA9IFNoID0gbiB9IGZ1bmN0aW9uIENoKHQsIG4pIHsgVGggLT0gdCwgU2ggLT0gbiwgRWguYWRkKGhmKFRoICogVGggKyBTaCAqIFNoKSksIFRoID0gdCwgU2ggPSBuIH0gdmFyIFBoID0ga2g7IGZ1bmN0aW9uIHpoKCkgeyB0aGlzLl9zdHJpbmcgPSBbXSB9IGZ1bmN0aW9uIERoKHQpIHsgcmV0dXJuICJtMCwiICsgdCArICJhIiArIHQgKyAiLCIgKyB0ICsgIiAwIDEsMSAwLCIgKyAtMiAqIHQgKyAiYSIgKyB0ICsgIiwiICsgdCArICIgMCAxLDEgMCwiICsgMiAqIHQgKyAieiIgfSBmdW5jdGlvbiBSaCh0KSB7IHJldHVybiBmdW5jdGlvbiAobikgeyB2YXIgZSA9IG5ldyBGaDsgZm9yICh2YXIgciBpbiB0KSBlW3JdID0gdFtyXTsgcmV0dXJuIGUuc3RyZWFtID0gbiwgZSB9IH0gZnVuY3Rpb24gRmgoKSB7IH0gZnVuY3Rpb24gcWgodCwgbiwgZSkgeyB2YXIgciA9IHQuY2xpcEV4dGVudCAmJiB0LmNsaXBFeHRlbnQoKTsgcmV0dXJuIHQuc2NhbGUoMTUwKS50cmFuc2xhdGUoWzAsIDBdKSwgbnVsbCAhPSByICYmIHQuY2xpcEV4dGVudChudWxsKSwgTWYoZSwgdC5zdHJlYW0odGgpKSwgbih0aC5yZXN1bHQoKSksIG51bGwgIT0gciAmJiB0LmNsaXBFeHRlbnQociksIHQgfSBmdW5jdGlvbiBJaCh0LCBuLCBlKSB7IHJldHVybiBxaCh0LCAoZnVuY3Rpb24gKGUpIHsgdmFyIHIgPSBuWzFdWzBdIC0gblswXVswXSwgaSA9IG5bMV1bMV0gLSBuWzBdWzFdLCBvID0gTWF0aC5taW4ociAvIChlWzFdWzBdIC0gZVswXVswXSksIGkgLyAoZVsxXVsxXSAtIGVbMF1bMV0pKSwgYSA9ICtuWzBdWzBdICsgKHIgLSBvICogKGVbMV1bMF0gKyBlWzBdWzBdKSkgLyAyLCB1ID0gK25bMF1bMV0gKyAoaSAtIG8gKiAoZVsxXVsxXSArIGVbMF1bMV0pKSAvIDI7IHQuc2NhbGUoMTUwICogbykudHJhbnNsYXRlKFthLCB1XSkgfSksIGUpIH0gZnVuY3Rpb24gT2godCwgbiwgZSkgeyByZXR1cm4gSWgodCwgW1swLCAwXSwgbl0sIGUpIH0gZnVuY3Rpb24gVWgodCwgbiwgZSkgeyByZXR1cm4gcWgodCwgKGZ1bmN0aW9uIChlKSB7IHZhciByID0gK24sIGkgPSByIC8gKGVbMV1bMF0gLSBlWzBdWzBdKSwgbyA9IChyIC0gaSAqIChlWzFdWzBdICsgZVswXVswXSkpIC8gMiwgYSA9IC1pICogZVswXVsxXTsgdC5zY2FsZSgxNTAgKiBpKS50cmFuc2xhdGUoW28sIGFdKSB9KSwgZSkgfSBmdW5jdGlvbiBCaCh0LCBuLCBlKSB7IHJldHVybiBxaCh0LCAoZnVuY3Rpb24gKGUpIHsgdmFyIHIgPSArbiwgaSA9IHIgLyAoZVsxXVsxXSAtIGVbMF1bMV0pLCBvID0gLWkgKiBlWzBdWzBdLCBhID0gKHIgLSBpICogKGVbMV1bMV0gKyBlWzBdWzFdKSkgLyAyOyB0LnNjYWxlKDE1MCAqIGkpLnRyYW5zbGF0ZShbbywgYV0pIH0pLCBlKSB9IHpoLnByb3RvdHlwZSA9IHsgX3JhZGl1czogNC41LCBfY2lyY2xlOiBEaCg0LjUpLCBwb2ludFJhZGl1czogZnVuY3Rpb24gKHQpIHsgcmV0dXJuICh0ID0gK3QpICE9PSB0aGlzLl9yYWRpdXMgJiYgKHRoaXMuX3JhZGl1cyA9IHQsIHRoaXMuX2NpcmNsZSA9IG51bGwpLCB0aGlzIH0sIHBvbHlnb25TdGFydDogZnVuY3Rpb24gKCkgeyB0aGlzLl9saW5lID0gMCB9LCBwb2x5Z29uRW5kOiBmdW5jdGlvbiAoKSB7IHRoaXMuX2xpbmUgPSBOYU4gfSwgbGluZVN0YXJ0OiBmdW5jdGlvbiAoKSB7IHRoaXMuX3BvaW50ID0gMCB9LCBsaW5lRW5kOiBmdW5jdGlvbiAoKSB7IDAgPT09IHRoaXMuX2xpbmUgJiYgdGhpcy5fc3RyaW5nLnB1c2goIloiKSwgdGhpcy5fcG9pbnQgPSBOYU4gfSwgcG9pbnQ6IGZ1bmN0aW9uICh0LCBuKSB7IHN3aXRjaCAodGhpcy5fcG9pbnQpIHsgY2FzZSAwOiB0aGlzLl9zdHJpbmcucHVzaCgiTSIsIHQsICIsIiwgbiksIHRoaXMuX3BvaW50ID0gMTsgYnJlYWs7IGNhc2UgMTogdGhpcy5fc3RyaW5nLnB1c2goIkwiLCB0LCAiLCIsIG4pOyBicmVhazsgZGVmYXVsdDogbnVsbCA9PSB0aGlzLl9jaXJjbGUgJiYgKHRoaXMuX2NpcmNsZSA9IERoKHRoaXMuX3JhZGl1cykpLCB0aGlzLl9zdHJpbmcucHVzaCgiTSIsIHQsICIsIiwgbiwgdGhpcy5fY2lyY2xlKSB9IH0sIHJlc3VsdDogZnVuY3Rpb24gKCkgeyBpZiAodGhpcy5fc3RyaW5nLmxlbmd0aCkgeyB2YXIgdCA9IHRoaXMuX3N0cmluZy5qb2luKCIiKTsgcmV0dXJuIHRoaXMuX3N0cmluZyA9IFtdLCB0IH0gcmV0dXJuIG51bGwgfSB9LCBGaC5wcm90b3R5cGUgPSB7IGNvbnN0cnVjdG9yOiBGaCwgcG9pbnQ6IGZ1bmN0aW9uICh0LCBuKSB7IHRoaXMuc3RyZWFtLnBvaW50KHQsIG4pIH0sIHNwaGVyZTogZnVuY3Rpb24gKCkgeyB0aGlzLnN0cmVhbS5zcGhlcmUoKSB9LCBsaW5lU3RhcnQ6IGZ1bmN0aW9uICgpIHsgdGhpcy5zdHJlYW0ubGluZVN0YXJ0KCkgfSwgbGluZUVuZDogZnVuY3Rpb24gKCkgeyB0aGlzLnN0cmVhbS5saW5lRW5kKCkgfSwgcG9seWdvblN0YXJ0OiBmdW5jdGlvbiAoKSB7IHRoaXMuc3RyZWFtLnBvbHlnb25TdGFydCgpIH0sIHBvbHlnb25FbmQ6IGZ1bmN0aW9uICgpIHsgdGhpcy5zdHJlYW0ucG9seWdvbkVuZCgpIH0gfTsgdmFyIFloID0gcmYoMzAgKiBKYyk7IGZ1bmN0aW9uIExoKHQsIG4pIHsgcmV0dXJuICtuID8gZnVuY3Rpb24gKHQsIG4pIHsgZnVuY3Rpb24gZShyLCBpLCBvLCBhLCB1LCBjLCBmLCBzLCBsLCBoLCBkLCBwLCBnLCB5KSB7IHZhciB2ID0gZiAtIHIsIF8gPSBzIC0gaSwgYiA9IHYgKiB2ICsgXyAqIF87IGlmIChiID4gNCAqIG4gJiYgZy0tKSB7IHZhciBtID0gYSArIGgsIHggPSB1ICsgZCwgdyA9IGMgKyBwLCBNID0gaGYobSAqIG0gKyB4ICogeCArIHcgKiB3KSwgQSA9IGdmKHcgLz0gTSksIFQgPSB0Zih0Zih3KSAtIDEpIDwgWGMgfHwgdGYobyAtIGwpIDwgWGMgPyAobyArIGwpIC8gMiA6IGVmKHgsIG0pLCBTID0gdChULCBBKSwgRSA9IFNbMF0sIGsgPSBTWzFdLCBOID0gRSAtIHIsIEMgPSBrIC0gaSwgUCA9IF8gKiBOIC0gdiAqIEM7IChQICogUCAvIGIgPiBuIHx8IHRmKCh2ICogTiArIF8gKiBDKSAvIGIgLSAuNSkgPiAuMyB8fCBhICogaCArIHUgKiBkICsgYyAqIHAgPCBZaCkgJiYgKGUociwgaSwgbywgYSwgdSwgYywgRSwgaywgVCwgbSAvPSBNLCB4IC89IE0sIHcsIGcsIHkpLCB5LnBvaW50KEUsIGspLCBlKEUsIGssIFQsIG0sIHgsIHcsIGYsIHMsIGwsIGgsIGQsIHAsIGcsIHkpKSB9IH0gcmV0dXJuIGZ1bmN0aW9uIChuKSB7IHZhciByLCBpLCBvLCBhLCB1LCBjLCBmLCBzLCBsLCBoLCBkLCBwLCBnID0geyBwb2ludDogeSwgbGluZVN0YXJ0OiB2LCBsaW5lRW5kOiBiLCBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uICgpIHsgbi5wb2x5Z29uU3RhcnQoKSwgZy5saW5lU3RhcnQgPSBtIH0sIHBvbHlnb25FbmQ6IGZ1bmN0aW9uICgpIHsgbi5wb2x5Z29uRW5kKCksIGcubGluZVN0YXJ0ID0gdiB9IH07IGZ1bmN0aW9uIHkoZSwgcikgeyBlID0gdChlLCByKSwgbi5wb2ludChlWzBdLCBlWzFdKSB9IGZ1bmN0aW9uIHYoKSB7IHMgPSBOYU4sIGcucG9pbnQgPSBfLCBuLmxpbmVTdGFydCgpIH0gZnVuY3Rpb24gXyhyLCBpKSB7IHZhciBvID0gVmYoW3IsIGldKSwgYSA9IHQociwgaSk7IGUocywgbCwgZiwgaCwgZCwgcCwgcyA9IGFbMF0sIGwgPSBhWzFdLCBmID0gciwgaCA9IG9bMF0sIGQgPSBvWzFdLCBwID0gb1syXSwgMTYsIG4pLCBuLnBvaW50KHMsIGwpIH0gZnVuY3Rpb24gYigpIHsgZy5wb2ludCA9IHksIG4ubGluZUVuZCgpIH0gZnVuY3Rpb24gbSgpIHsgdigpLCBnLnBvaW50ID0geCwgZy5saW5lRW5kID0gdyB9IGZ1bmN0aW9uIHgodCwgbikgeyBfKHIgPSB0LCBuKSwgaSA9IHMsIG8gPSBsLCBhID0gaCwgdSA9IGQsIGMgPSBwLCBnLnBvaW50ID0gXyB9IGZ1bmN0aW9uIHcoKSB7IGUocywgbCwgZiwgaCwgZCwgcCwgaSwgbywgciwgYSwgdSwgYywgMTYsIG4pLCBnLmxpbmVFbmQgPSBiLCBiKCkgfSByZXR1cm4gZyB9IH0odCwgbikgOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gUmgoeyBwb2ludDogZnVuY3Rpb24gKG4sIGUpIHsgbiA9IHQobiwgZSksIHRoaXMuc3RyZWFtLnBvaW50KG5bMF0sIG5bMV0pIH0gfSkgfSh0KSB9IHZhciBqaCA9IFJoKHsgcG9pbnQ6IGZ1bmN0aW9uICh0LCBuKSB7IHRoaXMuc3RyZWFtLnBvaW50KHQgKiBKYywgbiAqIEpjKSB9IH0pOyBmdW5jdGlvbiAkaCh0LCBuLCBlLCByLCBpLCBvKSB7IGlmICghbykgcmV0dXJuIGZ1bmN0aW9uICh0LCBuLCBlLCByLCBpKSB7IGZ1bmN0aW9uIG8obywgYSkgeyByZXR1cm4gW24gKyB0ICogKG8gKj0gciksIGUgLSB0ICogKGEgKj0gaSldIH0gcmV0dXJuIG8uaW52ZXJ0ID0gZnVuY3Rpb24gKG8sIGEpIHsgcmV0dXJuIFsobyAtIG4pIC8gdCAqIHIsIChlIC0gYSkgLyB0ICogaV0gfSwgbyB9KHQsIG4sIGUsIHIsIGkpOyB2YXIgYSA9IHJmKG8pLCB1ID0gc2YobyksIGMgPSBhICogdCwgZiA9IHUgKiB0LCBzID0gYSAvIHQsIGwgPSB1IC8gdCwgaCA9ICh1ICogZSAtIGEgKiBuKSAvIHQsIGQgPSAodSAqIG4gKyBhICogZSkgLyB0OyBmdW5jdGlvbiBwKHQsIG8pIHsgcmV0dXJuIFtjICogKHQgKj0gcikgLSBmICogKG8gKj0gaSkgKyBuLCBlIC0gZiAqIHQgLSBjICogb10gfSByZXR1cm4gcC5pbnZlcnQgPSBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gW3IgKiAocyAqIHQgLSBsICogbiArIGgpLCBpICogKGQgLSBsICogdCAtIHMgKiBuKV0gfSwgcCB9IGZ1bmN0aW9uIEhoKHQpIHsgcmV0dXJuIFhoKChmdW5jdGlvbiAoKSB7IHJldHVybiB0IH0pKSgpIH0gZnVuY3Rpb24gWGgodCkgeyB2YXIgbiwgZSwgciwgaSwgbywgYSwgdSwgYywgZiwgcywgbCA9IDE1MCwgaCA9IDQ4MCwgZCA9IDI1MCwgcCA9IDAsIGcgPSAwLCB5ID0gMCwgdiA9IDAsIF8gPSAwLCBiID0gMCwgbSA9IDEsIHggPSAxLCB3ID0gbnVsbCwgTSA9IGlsLCBBID0gbnVsbCwgVCA9IHFsLCBTID0gLjU7IGZ1bmN0aW9uIEUodCkgeyByZXR1cm4gYyh0WzBdICogSmMsIHRbMV0gKiBKYykgfSBmdW5jdGlvbiBrKHQpIHsgcmV0dXJuICh0ID0gYy5pbnZlcnQodFswXSwgdFsxXSkpICYmIFt0WzBdICogUWMsIHRbMV0gKiBRY10gfSBmdW5jdGlvbiBOKCkgeyB2YXIgdCA9ICRoKGwsIDAsIDAsIG0sIHgsIGIpLmFwcGx5KG51bGwsIG4ocCwgZykpLCByID0gJGgobCwgaCAtIHRbMF0sIGQgLSB0WzFdLCBtLCB4LCBiKTsgcmV0dXJuIGUgPSBZcyh5LCB2LCBfKSwgdSA9IFVzKG4sIHIpLCBjID0gVXMoZSwgdSksIGEgPSBMaCh1LCBTKSwgQygpIH0gZnVuY3Rpb24gQygpIHsgcmV0dXJuIGYgPSBzID0gbnVsbCwgRSB9IHJldHVybiBFLnN0cmVhbSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBmICYmIHMgPT09IHQgPyBmIDogZiA9IGpoKGZ1bmN0aW9uICh0KSB7IHJldHVybiBSaCh7IHBvaW50OiBmdW5jdGlvbiAobiwgZSkgeyB2YXIgciA9IHQobiwgZSk7IHJldHVybiB0aGlzLnN0cmVhbS5wb2ludChyWzBdLCByWzFdKSB9IH0pIH0oZSkoTShhKFQocyA9IHQpKSkpKSB9LCBFLnByZWNsaXAgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChNID0gdCwgdyA9IHZvaWQgMCwgQygpKSA6IE0gfSwgRS5wb3N0Y2xpcCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKFQgPSB0LCBBID0gciA9IGkgPSBvID0gbnVsbCwgQygpKSA6IFQgfSwgRS5jbGlwQW5nbGUgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChNID0gK3QgPyBvbCh3ID0gdCAqIEpjKSA6ICh3ID0gbnVsbCwgaWwpLCBDKCkpIDogdyAqIFFjIH0sIEUuY2xpcEV4dGVudCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKFQgPSBudWxsID09IHQgPyAoQSA9IHIgPSBpID0gbyA9IG51bGwsIHFsKSA6IGhsKEEgPSArdFswXVswXSwgciA9ICt0WzBdWzFdLCBpID0gK3RbMV1bMF0sIG8gPSArdFsxXVsxXSksIEMoKSkgOiBudWxsID09IEEgPyBudWxsIDogW1tBLCByXSwgW2ksIG9dXSB9LCBFLnNjYWxlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobCA9ICt0LCBOKCkpIDogbCB9LCBFLnRyYW5zbGF0ZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGggPSArdFswXSwgZCA9ICt0WzFdLCBOKCkpIDogW2gsIGRdIH0sIEUuY2VudGVyID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocCA9IHRbMF0gJSAzNjAgKiBKYywgZyA9IHRbMV0gJSAzNjAgKiBKYywgTigpKSA6IFtwICogUWMsIGcgKiBRY10gfSwgRS5yb3RhdGUgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh5ID0gdFswXSAlIDM2MCAqIEpjLCB2ID0gdFsxXSAlIDM2MCAqIEpjLCBfID0gdC5sZW5ndGggPiAyID8gdFsyXSAlIDM2MCAqIEpjIDogMCwgTigpKSA6IFt5ICogUWMsIHYgKiBRYywgXyAqIFFjXSB9LCBFLmFuZ2xlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYiA9IHQgJSAzNjAgKiBKYywgTigpKSA6IGIgKiBRYyB9LCBFLnJlZmxlY3RYID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobSA9IHQgPyAtMSA6IDEsIE4oKSkgOiBtIDwgMCB9LCBFLnJlZmxlY3RZID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeCA9IHQgPyAtMSA6IDEsIE4oKSkgOiB4IDwgMCB9LCBFLnByZWNpc2lvbiA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGEgPSBMaCh1LCBTID0gdCAqIHQpLCBDKCkpIDogaGYoUykgfSwgRS5maXRFeHRlbnQgPSBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gSWgoRSwgdCwgbikgfSwgRS5maXRTaXplID0gZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIE9oKEUsIHQsIG4pIH0sIEUuZml0V2lkdGggPSBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gVWgoRSwgdCwgbikgfSwgRS5maXRIZWlnaHQgPSBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gQmgoRSwgdCwgbikgfSwgZnVuY3Rpb24gKCkgeyByZXR1cm4gbiA9IHQuYXBwbHkodGhpcywgYXJndW1lbnRzKSwgRS5pbnZlcnQgPSBuLmludmVydCAmJiBrLCBOKCkgfSB9IGZ1bmN0aW9uIEdoKHQpIHsgdmFyIG4gPSAwLCBlID0gVmMgLyAzLCByID0gWGgodCksIGkgPSByKG4sIGUpOyByZXR1cm4gaS5wYXJhbGxlbHMgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IHIobiA9IHRbMF0gKiBKYywgZSA9IHRbMV0gKiBKYykgOiBbbiAqIFFjLCBlICogUWNdIH0sIGkgfSBmdW5jdGlvbiBWaCh0LCBuKSB7IHZhciBlID0gc2YodCksIHIgPSAoZSArIHNmKG4pKSAvIDI7IGlmICh0ZihyKSA8IFhjKSByZXR1cm4gZnVuY3Rpb24gKHQpIHsgdmFyIG4gPSByZih0KTsgZnVuY3Rpb24gZSh0LCBlKSB7IHJldHVybiBbdCAqIG4sIHNmKGUpIC8gbl0gfSByZXR1cm4gZS5pbnZlcnQgPSBmdW5jdGlvbiAodCwgZSkgeyByZXR1cm4gW3QgLyBuLCBnZihlICogbildIH0sIGUgfSh0KTsgdmFyIGkgPSAxICsgZSAqICgyICogciAtIGUpLCBvID0gaGYoaSkgLyByOyBmdW5jdGlvbiBhKHQsIG4pIHsgdmFyIGUgPSBoZihpIC0gMiAqIHIgKiBzZihuKSkgLyByOyByZXR1cm4gW2UgKiBzZih0ICo9IHIpLCBvIC0gZSAqIHJmKHQpXSB9IHJldHVybiBhLmludmVydCA9IGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlID0gbyAtIG4sIGEgPSBlZih0LCB0ZihlKSkgKiBsZihlKTsgcmV0dXJuIGUgKiByIDwgMCAmJiAoYSAtPSBWYyAqIGxmKHQpICogbGYoZSkpLCBbYSAvIHIsIGdmKChpIC0gKHQgKiB0ICsgZSAqIGUpICogciAqIHIpIC8gKDIgKiByKSldIH0sIGEgfSBmdW5jdGlvbiBXaCgpIHsgcmV0dXJuIEdoKFZoKS5zY2FsZSgxNTUuNDI0KS5jZW50ZXIoWzAsIDMzLjY0NDJdKSB9IGZ1bmN0aW9uIFpoKCkgeyByZXR1cm4gV2goKS5wYXJhbGxlbHMoWzI5LjUsIDQ1LjVdKS5zY2FsZSgxMDcwKS50cmFuc2xhdGUoWzQ4MCwgMjUwXSkucm90YXRlKFs5NiwgMF0pLmNlbnRlcihbLS42LCAzOC43XSkgfSBmdW5jdGlvbiBLaCh0KSB7IHJldHVybiBmdW5jdGlvbiAobiwgZSkgeyB2YXIgciA9IHJmKG4pLCBpID0gcmYoZSksIG8gPSB0KHIgKiBpKTsgcmV0dXJuIG8gPT09IDEgLyAwID8gWzIsIDBdIDogW28gKiBpICogc2YobiksIG8gKiBzZihlKV0gfSB9IGZ1bmN0aW9uIFFoKHQpIHsgcmV0dXJuIGZ1bmN0aW9uIChuLCBlKSB7IHZhciByID0gaGYobiAqIG4gKyBlICogZSksIGkgPSB0KHIpLCBvID0gc2YoaSksIGEgPSByZihpKTsgcmV0dXJuIFtlZihuICogbywgciAqIGEpLCBnZihyICYmIGUgKiBvIC8gcildIH0gfSB2YXIgSmggPSBLaCgoZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGhmKDIgLyAoMSArIHQpKSB9KSk7IEpoLmludmVydCA9IFFoKChmdW5jdGlvbiAodCkgeyByZXR1cm4gMiAqIGdmKHQgLyAyKSB9KSk7IHZhciB0ZCA9IEtoKChmdW5jdGlvbiAodCkgeyByZXR1cm4gKHQgPSBwZih0KSkgJiYgdCAvIHNmKHQpIH0pKTsgZnVuY3Rpb24gbmQodCwgbikgeyByZXR1cm4gW3QsIGNmKGRmKChXYyArIG4pIC8gMikpXSB9IGZ1bmN0aW9uIGVkKHQpIHsgdmFyIG4sIGUsIHIsIGkgPSBIaCh0KSwgbyA9IGkuY2VudGVyLCBhID0gaS5zY2FsZSwgdSA9IGkudHJhbnNsYXRlLCBjID0gaS5jbGlwRXh0ZW50LCBmID0gbnVsbDsgZnVuY3Rpb24gcygpIHsgdmFyIG8gPSBWYyAqIGEoKSwgdSA9IGkoSHMoaS5yb3RhdGUoKSkuaW52ZXJ0KFswLCAwXSkpOyByZXR1cm4gYyhudWxsID09IGYgPyBbW3VbMF0gLSBvLCB1WzFdIC0gb10sIFt1WzBdICsgbywgdVsxXSArIG9dXSA6IHQgPT09IG5kID8gW1tNYXRoLm1heCh1WzBdIC0gbywgZiksIG5dLCBbTWF0aC5taW4odVswXSArIG8sIGUpLCByXV0gOiBbW2YsIE1hdGgubWF4KHVbMV0gLSBvLCBuKV0sIFtlLCBNYXRoLm1pbih1WzFdICsgbywgcildXSkgfSByZXR1cm4gaS5zY2FsZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGEodCksIHMoKSkgOiBhKCkgfSwgaS50cmFuc2xhdGUgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh1KHQpLCBzKCkpIDogdSgpIH0sIGkuY2VudGVyID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobyh0KSwgcygpKSA6IG8oKSB9LCBpLmNsaXBFeHRlbnQgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChudWxsID09IHQgPyBmID0gbiA9IGUgPSByID0gbnVsbCA6IChmID0gK3RbMF1bMF0sIG4gPSArdFswXVsxXSwgZSA9ICt0WzFdWzBdLCByID0gK3RbMV1bMV0pLCBzKCkpIDogbnVsbCA9PSBmID8gbnVsbCA6IFtbZiwgbl0sIFtlLCByXV0gfSwgcygpIH0gZnVuY3Rpb24gcmQodCkgeyByZXR1cm4gZGYoKFdjICsgdCkgLyAyKSB9IGZ1bmN0aW9uIGlkKHQsIG4pIHsgdmFyIGUgPSByZih0KSwgciA9IHQgPT09IG4gPyBzZih0KSA6IGNmKGUgLyByZihuKSkgLyBjZihyZChuKSAvIHJkKHQpKSwgaSA9IGUgKiBmZihyZCh0KSwgcikgLyByOyBpZiAoIXIpIHJldHVybiBuZDsgZnVuY3Rpb24gbyh0LCBuKSB7IGkgPiAwID8gbiA8IC1XYyArIFhjICYmIChuID0gLVdjICsgWGMpIDogbiA+IFdjIC0gWGMgJiYgKG4gPSBXYyAtIFhjKTsgdmFyIGUgPSBpIC8gZmYocmQobiksIHIpOyByZXR1cm4gW2UgKiBzZihyICogdCksIGkgLSBlICogcmYociAqIHQpXSB9IHJldHVybiBvLmludmVydCA9IGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlID0gaSAtIG4sIG8gPSBsZihyKSAqIGhmKHQgKiB0ICsgZSAqIGUpLCBhID0gZWYodCwgdGYoZSkpICogbGYoZSk7IHJldHVybiBlICogciA8IDAgJiYgKGEgLT0gVmMgKiBsZih0KSAqIGxmKGUpKSwgW2EgLyByLCAyICogbmYoZmYoaSAvIG8sIDEgLyByKSkgLSBXY10gfSwgbyB9IGZ1bmN0aW9uIG9kKHQsIG4pIHsgcmV0dXJuIFt0LCBuXSB9IGZ1bmN0aW9uIGFkKHQsIG4pIHsgdmFyIGUgPSByZih0KSwgciA9IHQgPT09IG4gPyBzZih0KSA6IChlIC0gcmYobikpIC8gKG4gLSB0KSwgaSA9IGUgLyByICsgdDsgaWYgKHRmKHIpIDwgWGMpIHJldHVybiBvZDsgZnVuY3Rpb24gbyh0LCBuKSB7IHZhciBlID0gaSAtIG4sIG8gPSByICogdDsgcmV0dXJuIFtlICogc2YobyksIGkgLSBlICogcmYobyldIH0gcmV0dXJuIG8uaW52ZXJ0ID0gZnVuY3Rpb24gKHQsIG4pIHsgdmFyIGUgPSBpIC0gbiwgbyA9IGVmKHQsIHRmKGUpKSAqIGxmKGUpOyByZXR1cm4gZSAqIHIgPCAwICYmIChvIC09IFZjICogbGYodCkgKiBsZihlKSksIFtvIC8gciwgaSAtIGxmKHIpICogaGYodCAqIHQgKyBlICogZSldIH0sIG8gfSB0ZC5pbnZlcnQgPSBRaCgoZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQgfSkpLCBuZC5pbnZlcnQgPSBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gW3QsIDIgKiBuZihhZihuKSkgLSBXY10gfSwgb2QuaW52ZXJ0ID0gb2Q7IHZhciB1ZCA9IDEuMzQwMjY0LCBjZCA9IC0uMDgxMTA2LCBmZCA9IDg5M2UtNiwgc2QgPSAuMDAzNzk2LCBsZCA9IGhmKDMpIC8gMjsgZnVuY3Rpb24gaGQodCwgbikgeyB2YXIgZSA9IGdmKGxkICogc2YobikpLCByID0gZSAqIGUsIGkgPSByICogciAqIHI7IHJldHVybiBbdCAqIHJmKGUpIC8gKGxkICogKHVkICsgMyAqIGNkICogciArIGkgKiAoNyAqIGZkICsgOSAqIHNkICogcikpKSwgZSAqICh1ZCArIGNkICogciArIGkgKiAoZmQgKyBzZCAqIHIpKV0gfSBmdW5jdGlvbiBkZCh0LCBuKSB7IHZhciBlID0gcmYobiksIHIgPSByZih0KSAqIGU7IHJldHVybiBbZSAqIHNmKHQpIC8gciwgc2YobikgLyByXSB9IGZ1bmN0aW9uIHBkKHQsIG4pIHsgdmFyIGUgPSBuICogbiwgciA9IGUgKiBlOyByZXR1cm4gW3QgKiAoLjg3MDcgLSAuMTMxOTc5ICogZSArIHIgKiAociAqICguMDAzOTcxICogZSAtIC4wMDE1MjkgKiByKSAtIC4wMTM3OTEpKSwgbiAqICgxLjAwNzIyNiArIGUgKiAoLjAxNTA4NSArIHIgKiAoLjAyODg3NCAqIGUgLSAuMDQ0NDc1IC0gLjAwNTkxNiAqIHIpKSldIH0gZnVuY3Rpb24gZ2QodCwgbikgeyByZXR1cm4gW3JmKG4pICogc2YodCksIHNmKG4pXSB9IGZ1bmN0aW9uIHlkKHQsIG4pIHsgdmFyIGUgPSByZihuKSwgciA9IDEgKyByZih0KSAqIGU7IHJldHVybiBbZSAqIHNmKHQpIC8gciwgc2YobikgLyByXSB9IGZ1bmN0aW9uIHZkKHQsIG4pIHsgcmV0dXJuIFtjZihkZigoV2MgKyBuKSAvIDIpKSwgLXRdIH0gZnVuY3Rpb24gX2QodCwgbikgeyByZXR1cm4gdC5wYXJlbnQgPT09IG4ucGFyZW50ID8gMSA6IDIgfSBmdW5jdGlvbiBiZCh0LCBuKSB7IHJldHVybiB0ICsgbi54IH0gZnVuY3Rpb24gbWQodCwgbikgeyByZXR1cm4gTWF0aC5tYXgodCwgbi55KSB9IGZ1bmN0aW9uIHhkKHQpIHsgdmFyIG4gPSAwLCBlID0gdC5jaGlsZHJlbiwgciA9IGUgJiYgZS5sZW5ndGg7IGlmIChyKSBmb3IgKDsgLS1yID49IDA7KW4gKz0gZVtyXS52YWx1ZTsgZWxzZSBuID0gMTsgdC52YWx1ZSA9IG4gfSBmdW5jdGlvbiB3ZCh0LCBuKSB7IHQgaW5zdGFuY2VvZiBNYXAgPyAodCA9IFt2b2lkIDAsIHRdLCB2b2lkIDAgPT09IG4gJiYgKG4gPSBBZCkpIDogdm9pZCAwID09PSBuICYmIChuID0gTWQpOyBmb3IgKHZhciBlLCByLCBpLCBvLCBhLCB1ID0gbmV3IEVkKHQpLCBjID0gW3VdOyBlID0gYy5wb3AoKTspaWYgKChpID0gbihlLmRhdGEpKSAmJiAoYSA9IChpID0gQXJyYXkuZnJvbShpKSkubGVuZ3RoKSkgZm9yIChlLmNoaWxkcmVuID0gaSwgbyA9IGEgLSAxOyBvID49IDA7IC0tbyljLnB1c2gociA9IGlbb10gPSBuZXcgRWQoaVtvXSkpLCByLnBhcmVudCA9IGUsIHIuZGVwdGggPSBlLmRlcHRoICsgMTsgcmV0dXJuIHUuZWFjaEJlZm9yZShTZCkgfSBmdW5jdGlvbiBNZCh0KSB7IHJldHVybiB0LmNoaWxkcmVuIH0gZnVuY3Rpb24gQWQodCkgeyByZXR1cm4gQXJyYXkuaXNBcnJheSh0KSA/IHRbMV0gOiBudWxsIH0gZnVuY3Rpb24gVGQodCkgeyB2b2lkIDAgIT09IHQuZGF0YS52YWx1ZSAmJiAodC52YWx1ZSA9IHQuZGF0YS52YWx1ZSksIHQuZGF0YSA9IHQuZGF0YS5kYXRhIH0gZnVuY3Rpb24gU2QodCkgeyB2YXIgbiA9IDA7IGRvIHsgdC5oZWlnaHQgPSBuIH0gd2hpbGUgKCh0ID0gdC5wYXJlbnQpICYmIHQuaGVpZ2h0IDwgKytuKSB9IGZ1bmN0aW9uIEVkKHQpIHsgdGhpcy5kYXRhID0gdCwgdGhpcy5kZXB0aCA9IHRoaXMuaGVpZ2h0ID0gMCwgdGhpcy5wYXJlbnQgPSBudWxsIH0gZnVuY3Rpb24ga2QodCkgeyByZXR1cm4gbnVsbCA9PSB0ID8gbnVsbCA6IE5kKHQpIH0gZnVuY3Rpb24gTmQodCkgeyBpZiAoImZ1bmN0aW9uIiAhPSB0eXBlb2YgdCkgdGhyb3cgbmV3IEVycm9yOyByZXR1cm4gdCB9IGZ1bmN0aW9uIENkKCkgeyByZXR1cm4gMCB9IGZ1bmN0aW9uIFBkKHQpIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHQgfSB9IGhkLmludmVydCA9IGZ1bmN0aW9uICh0LCBuKSB7IGZvciAodmFyIGUsIHIgPSBuLCBpID0gciAqIHIsIG8gPSBpICogaSAqIGksIGEgPSAwOyBhIDwgMTIgJiYgKG8gPSAoaSA9IChyIC09IGUgPSAociAqICh1ZCArIGNkICogaSArIG8gKiAoZmQgKyBzZCAqIGkpKSAtIG4pIC8gKHVkICsgMyAqIGNkICogaSArIG8gKiAoNyAqIGZkICsgOSAqIHNkICogaSkpKSAqIHIpICogaSAqIGksICEodGYoZSkgPCBHYykpOyArK2EpOyByZXR1cm4gW2xkICogdCAqICh1ZCArIDMgKiBjZCAqIGkgKyBvICogKDcgKiBmZCArIDkgKiBzZCAqIGkpKSAvIHJmKHIpLCBnZihzZihyKSAvIGxkKV0gfSwgZGQuaW52ZXJ0ID0gUWgobmYpLCBwZC5pbnZlcnQgPSBmdW5jdGlvbiAodCwgbikgeyB2YXIgZSwgciA9IG4sIGkgPSAyNTsgZG8geyB2YXIgbyA9IHIgKiByLCBhID0gbyAqIG87IHIgLT0gZSA9IChyICogKDEuMDA3MjI2ICsgbyAqICguMDE1MDg1ICsgYSAqICguMDI4ODc0ICogbyAtIC4wNDQ0NzUgLSAuMDA1OTE2ICogYSkpKSAtIG4pIC8gKDEuMDA3MjI2ICsgbyAqICguMDQ1MjU1ICsgYSAqICguMjU5ODY2ICogbyAtIC4zMTEzMjUgLSAuMDA1OTE2ICogMTEgKiBhKSkpIH0gd2hpbGUgKHRmKGUpID4gWGMgJiYgLS1pID4gMCk7IHJldHVybiBbdCAvICguODcwNyArIChvID0gciAqIHIpICogKG8gKiAobyAqIG8gKiBvICogKC4wMDM5NzEgLSAuMDAxNTI5ICogbykgLSAuMDEzNzkxKSAtIC4xMzE5NzkpKSwgcl0gfSwgZ2QuaW52ZXJ0ID0gUWgoZ2YpLCB5ZC5pbnZlcnQgPSBRaCgoZnVuY3Rpb24gKHQpIHsgcmV0dXJuIDIgKiBuZih0KSB9KSksIHZkLmludmVydCA9IGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiBbLW4sIDIgKiBuZihhZih0KSkgLSBXY10gfSwgRWQucHJvdG90eXBlID0gd2QucHJvdG90eXBlID0geyBjb25zdHJ1Y3RvcjogRWQsIGNvdW50OiBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzLmVhY2hBZnRlcih4ZCkgfSwgZWFjaDogZnVuY3Rpb24gKHQsIG4pIHsgbGV0IGUgPSAtMTsgZm9yIChjb25zdCByIG9mIHRoaXMpIHQuY2FsbChuLCByLCArK2UsIHRoaXMpOyByZXR1cm4gdGhpcyB9LCBlYWNoQWZ0ZXI6IGZ1bmN0aW9uICh0LCBuKSB7IGZvciAodmFyIGUsIHIsIGksIG8gPSB0aGlzLCBhID0gW29dLCB1ID0gW10sIGMgPSAtMTsgbyA9IGEucG9wKCk7KWlmICh1LnB1c2gobyksIGUgPSBvLmNoaWxkcmVuKSBmb3IgKHIgPSAwLCBpID0gZS5sZW5ndGg7IHIgPCBpOyArK3IpYS5wdXNoKGVbcl0pOyBmb3IgKDsgbyA9IHUucG9wKCk7KXQuY2FsbChuLCBvLCArK2MsIHRoaXMpOyByZXR1cm4gdGhpcyB9LCBlYWNoQmVmb3JlOiBmdW5jdGlvbiAodCwgbikgeyBmb3IgKHZhciBlLCByLCBpID0gdGhpcywgbyA9IFtpXSwgYSA9IC0xOyBpID0gby5wb3AoKTspaWYgKHQuY2FsbChuLCBpLCArK2EsIHRoaXMpLCBlID0gaS5jaGlsZHJlbikgZm9yIChyID0gZS5sZW5ndGggLSAxOyByID49IDA7IC0tcilvLnB1c2goZVtyXSk7IHJldHVybiB0aGlzIH0sIGZpbmQ6IGZ1bmN0aW9uICh0LCBuKSB7IGxldCBlID0gLTE7IGZvciAoY29uc3QgciBvZiB0aGlzKSBpZiAodC5jYWxsKG4sIHIsICsrZSwgdGhpcykpIHJldHVybiByIH0sIHN1bTogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHRoaXMuZWFjaEFmdGVyKChmdW5jdGlvbiAobikgeyBmb3IgKHZhciBlID0gK3Qobi5kYXRhKSB8fCAwLCByID0gbi5jaGlsZHJlbiwgaSA9IHIgJiYgci5sZW5ndGg7IC0taSA+PSAwOyllICs9IHJbaV0udmFsdWU7IG4udmFsdWUgPSBlIH0pKSB9LCBzb3J0OiBmdW5jdGlvbiAodCkgeyByZXR1cm4gdGhpcy5lYWNoQmVmb3JlKChmdW5jdGlvbiAobikgeyBuLmNoaWxkcmVuICYmIG4uY2hpbGRyZW4uc29ydCh0KSB9KSkgfSwgcGF0aDogZnVuY3Rpb24gKHQpIHsgZm9yICh2YXIgbiA9IHRoaXMsIGUgPSBmdW5jdGlvbiAodCwgbikgeyBpZiAodCA9PT0gbikgcmV0dXJuIHQ7IHZhciBlID0gdC5hbmNlc3RvcnMoKSwgciA9IG4uYW5jZXN0b3JzKCksIGkgPSBudWxsOyB0ID0gZS5wb3AoKSwgbiA9IHIucG9wKCk7IGZvciAoOyB0ID09PSBuOylpID0gdCwgdCA9IGUucG9wKCksIG4gPSByLnBvcCgpOyByZXR1cm4gaSB9KG4sIHQpLCByID0gW25dOyBuICE9PSBlOyluID0gbi5wYXJlbnQsIHIucHVzaChuKTsgZm9yICh2YXIgaSA9IHIubGVuZ3RoOyB0ICE9PSBlOylyLnNwbGljZShpLCAwLCB0KSwgdCA9IHQucGFyZW50OyByZXR1cm4gciB9LCBhbmNlc3RvcnM6IGZ1bmN0aW9uICgpIHsgZm9yICh2YXIgdCA9IHRoaXMsIG4gPSBbdF07IHQgPSB0LnBhcmVudDspbi5wdXNoKHQpOyByZXR1cm4gbiB9LCBkZXNjZW5kYW50czogZnVuY3Rpb24gKCkgeyByZXR1cm4gQXJyYXkuZnJvbSh0aGlzKSB9LCBsZWF2ZXM6IGZ1bmN0aW9uICgpIHsgdmFyIHQgPSBbXTsgcmV0dXJuIHRoaXMuZWFjaEJlZm9yZSgoZnVuY3Rpb24gKG4pIHsgbi5jaGlsZHJlbiB8fCB0LnB1c2gobikgfSkpLCB0IH0sIGxpbmtzOiBmdW5jdGlvbiAoKSB7IHZhciB0ID0gdGhpcywgbiA9IFtdOyByZXR1cm4gdC5lYWNoKChmdW5jdGlvbiAoZSkgeyBlICE9PSB0ICYmIG4ucHVzaCh7IHNvdXJjZTogZS5wYXJlbnQsIHRhcmdldDogZSB9KSB9KSksIG4gfSwgY29weTogZnVuY3Rpb24gKCkgeyByZXR1cm4gd2QodGhpcykuZWFjaEJlZm9yZShUZCkgfSwgW1N5bWJvbC5pdGVyYXRvcl06IGZ1bmN0aW9uKiAoKSB7IHZhciB0LCBuLCBlLCByLCBpID0gdGhpcywgbyA9IFtpXTsgZG8geyBmb3IgKHQgPSBvLnJldmVyc2UoKSwgbyA9IFtdOyBpID0gdC5wb3AoKTspaWYgKHlpZWxkIGksIG4gPSBpLmNoaWxkcmVuKSBmb3IgKGUgPSAwLCByID0gbi5sZW5ndGg7IGUgPCByOyArK2Upby5wdXNoKG5bZV0pIH0gd2hpbGUgKG8ubGVuZ3RoKSB9IH07IGNvbnN0IHpkID0gNDI5NDk2NzI5NjsgZnVuY3Rpb24gRGQoKSB7IGxldCB0ID0gMTsgcmV0dXJuICgpID0+ICh0ID0gKDE2NjQ1MjUgKiB0ICsgMTAxMzkwNDIyMykgJSB6ZCkgLyB6ZCB9IGZ1bmN0aW9uIFJkKHQsIG4pIHsgZm9yICh2YXIgZSwgciwgaSA9IDAsIG8gPSAodCA9IGZ1bmN0aW9uICh0LCBuKSB7IGxldCBlLCByLCBpID0gdC5sZW5ndGg7IGZvciAoOyBpOylyID0gbigpICogaS0tIHwgMCwgZSA9IHRbaV0sIHRbaV0gPSB0W3JdLCB0W3JdID0gZTsgcmV0dXJuIHQgfShBcnJheS5mcm9tKHQpLCBuKSkubGVuZ3RoLCBhID0gW107IGkgPCBvOyllID0gdFtpXSwgciAmJiBJZChyLCBlKSA/ICsraSA6IChyID0gVWQoYSA9IEZkKGEsIGUpKSwgaSA9IDApOyByZXR1cm4gciB9IGZ1bmN0aW9uIEZkKHQsIG4pIHsgdmFyIGUsIHI7IGlmIChPZChuLCB0KSkgcmV0dXJuIFtuXTsgZm9yIChlID0gMDsgZSA8IHQubGVuZ3RoOyArK2UpaWYgKHFkKG4sIHRbZV0pICYmIE9kKEJkKHRbZV0sIG4pLCB0KSkgcmV0dXJuIFt0W2VdLCBuXTsgZm9yIChlID0gMDsgZSA8IHQubGVuZ3RoIC0gMTsgKytlKWZvciAociA9IGUgKyAxOyByIDwgdC5sZW5ndGg7ICsrcilpZiAocWQoQmQodFtlXSwgdFtyXSksIG4pICYmIHFkKEJkKHRbZV0sIG4pLCB0W3JdKSAmJiBxZChCZCh0W3JdLCBuKSwgdFtlXSkgJiYgT2QoWWQodFtlXSwgdFtyXSwgbiksIHQpKSByZXR1cm4gW3RbZV0sIHRbcl0sIG5dOyB0aHJvdyBuZXcgRXJyb3IgfSBmdW5jdGlvbiBxZCh0LCBuKSB7IHZhciBlID0gdC5yIC0gbi5yLCByID0gbi54IC0gdC54LCBpID0gbi55IC0gdC55OyByZXR1cm4gZSA8IDAgfHwgZSAqIGUgPCByICogciArIGkgKiBpIH0gZnVuY3Rpb24gSWQodCwgbikgeyB2YXIgZSA9IHQuciAtIG4uciArIDFlLTkgKiBNYXRoLm1heCh0LnIsIG4uciwgMSksIHIgPSBuLnggLSB0LngsIGkgPSBuLnkgLSB0Lnk7IHJldHVybiBlID4gMCAmJiBlICogZSA+IHIgKiByICsgaSAqIGkgfSBmdW5jdGlvbiBPZCh0LCBuKSB7IGZvciAodmFyIGUgPSAwOyBlIDwgbi5sZW5ndGg7ICsrZSlpZiAoIUlkKHQsIG5bZV0pKSByZXR1cm4gITE7IHJldHVybiAhMCB9IGZ1bmN0aW9uIFVkKHQpIHsgc3dpdGNoICh0Lmxlbmd0aCkgeyBjYXNlIDE6IHJldHVybiBmdW5jdGlvbiAodCkgeyByZXR1cm4geyB4OiB0LngsIHk6IHQueSwgcjogdC5yIH0gfSh0WzBdKTsgY2FzZSAyOiByZXR1cm4gQmQodFswXSwgdFsxXSk7IGNhc2UgMzogcmV0dXJuIFlkKHRbMF0sIHRbMV0sIHRbMl0pIH0gfSBmdW5jdGlvbiBCZCh0LCBuKSB7IHZhciBlID0gdC54LCByID0gdC55LCBpID0gdC5yLCBvID0gbi54LCBhID0gbi55LCB1ID0gbi5yLCBjID0gbyAtIGUsIGYgPSBhIC0gciwgcyA9IHUgLSBpLCBsID0gTWF0aC5zcXJ0KGMgKiBjICsgZiAqIGYpOyByZXR1cm4geyB4OiAoZSArIG8gKyBjIC8gbCAqIHMpIC8gMiwgeTogKHIgKyBhICsgZiAvIGwgKiBzKSAvIDIsIHI6IChsICsgaSArIHUpIC8gMiB9IH0gZnVuY3Rpb24gWWQodCwgbiwgZSkgeyB2YXIgciA9IHQueCwgaSA9IHQueSwgbyA9IHQuciwgYSA9IG4ueCwgdSA9IG4ueSwgYyA9IG4uciwgZiA9IGUueCwgcyA9IGUueSwgbCA9IGUuciwgaCA9IHIgLSBhLCBkID0gciAtIGYsIHAgPSBpIC0gdSwgZyA9IGkgLSBzLCB5ID0gYyAtIG8sIHYgPSBsIC0gbywgXyA9IHIgKiByICsgaSAqIGkgLSBvICogbywgYiA9IF8gLSBhICogYSAtIHUgKiB1ICsgYyAqIGMsIG0gPSBfIC0gZiAqIGYgLSBzICogcyArIGwgKiBsLCB4ID0gZCAqIHAgLSBoICogZywgdyA9IChwICogbSAtIGcgKiBiKSAvICgyICogeCkgLSByLCBNID0gKGcgKiB5IC0gcCAqIHYpIC8geCwgQSA9IChkICogYiAtIGggKiBtKSAvICgyICogeCkgLSBpLCBUID0gKGggKiB2IC0gZCAqIHkpIC8geCwgUyA9IE0gKiBNICsgVCAqIFQgLSAxLCBFID0gMiAqIChvICsgdyAqIE0gKyBBICogVCksIGsgPSB3ICogdyArIEEgKiBBIC0gbyAqIG8sIE4gPSAtKE1hdGguYWJzKFMpID4gMWUtNiA/IChFICsgTWF0aC5zcXJ0KEUgKiBFIC0gNCAqIFMgKiBrKSkgLyAoMiAqIFMpIDogayAvIEUpOyByZXR1cm4geyB4OiByICsgdyArIE0gKiBOLCB5OiBpICsgQSArIFQgKiBOLCByOiBOIH0gfSBmdW5jdGlvbiBMZCh0LCBuLCBlKSB7IHZhciByLCBpLCBvLCBhLCB1ID0gdC54IC0gbi54LCBjID0gdC55IC0gbi55LCBmID0gdSAqIHUgKyBjICogYzsgZiA/IChpID0gbi5yICsgZS5yLCBpICo9IGksIGEgPSB0LnIgKyBlLnIsIGkgPiAoYSAqPSBhKSA/IChyID0gKGYgKyBhIC0gaSkgLyAoMiAqIGYpLCBvID0gTWF0aC5zcXJ0KE1hdGgubWF4KDAsIGEgLyBmIC0gciAqIHIpKSwgZS54ID0gdC54IC0gciAqIHUgLSBvICogYywgZS55ID0gdC55IC0gciAqIGMgKyBvICogdSkgOiAociA9IChmICsgaSAtIGEpIC8gKDIgKiBmKSwgbyA9IE1hdGguc3FydChNYXRoLm1heCgwLCBpIC8gZiAtIHIgKiByKSksIGUueCA9IG4ueCArIHIgKiB1IC0gbyAqIGMsIGUueSA9IG4ueSArIHIgKiBjICsgbyAqIHUpKSA6IChlLnggPSBuLnggKyBlLnIsIGUueSA9IG4ueSkgfSBmdW5jdGlvbiBqZCh0LCBuKSB7IHZhciBlID0gdC5yICsgbi5yIC0gMWUtNiwgciA9IG4ueCAtIHQueCwgaSA9IG4ueSAtIHQueTsgcmV0dXJuIGUgPiAwICYmIGUgKiBlID4gciAqIHIgKyBpICogaSB9IGZ1bmN0aW9uICRkKHQpIHsgdmFyIG4gPSB0Ll8sIGUgPSB0Lm5leHQuXywgciA9IG4uciArIGUuciwgaSA9IChuLnggKiBlLnIgKyBlLnggKiBuLnIpIC8gciwgbyA9IChuLnkgKiBlLnIgKyBlLnkgKiBuLnIpIC8gcjsgcmV0dXJuIGkgKiBpICsgbyAqIG8gfSBmdW5jdGlvbiBIZCh0KSB7IHRoaXMuXyA9IHQsIHRoaXMubmV4dCA9IG51bGwsIHRoaXMucHJldmlvdXMgPSBudWxsIH0gZnVuY3Rpb24gWGQodCwgbikgeyBpZiAoIShvID0gKHQgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gIm9iamVjdCIgPT0gdHlwZW9mIHQgJiYgImxlbmd0aCIgaW4gdCA/IHQgOiBBcnJheS5mcm9tKHQpIH0odCkpLmxlbmd0aCkpIHJldHVybiAwOyB2YXIgZSwgciwgaSwgbywgYSwgdSwgYywgZiwgcywgbCwgaDsgaWYgKChlID0gdFswXSkueCA9IDAsIGUueSA9IDAsICEobyA+IDEpKSByZXR1cm4gZS5yOyBpZiAociA9IHRbMV0sIGUueCA9IC1yLnIsIHIueCA9IGUuciwgci55ID0gMCwgIShvID4gMikpIHJldHVybiBlLnIgKyByLnI7IExkKHIsIGUsIGkgPSB0WzJdKSwgZSA9IG5ldyBIZChlKSwgciA9IG5ldyBIZChyKSwgaSA9IG5ldyBIZChpKSwgZS5uZXh0ID0gaS5wcmV2aW91cyA9IHIsIHIubmV4dCA9IGUucHJldmlvdXMgPSBpLCBpLm5leHQgPSByLnByZXZpb3VzID0gZTsgdDogZm9yIChjID0gMzsgYyA8IG87ICsrYykgeyBMZChlLl8sIHIuXywgaSA9IHRbY10pLCBpID0gbmV3IEhkKGkpLCBmID0gci5uZXh0LCBzID0gZS5wcmV2aW91cywgbCA9IHIuXy5yLCBoID0gZS5fLnI7IGRvIHsgaWYgKGwgPD0gaCkgeyBpZiAoamQoZi5fLCBpLl8pKSB7IHIgPSBmLCBlLm5leHQgPSByLCByLnByZXZpb3VzID0gZSwgLS1jOyBjb250aW51ZSB0IH0gbCArPSBmLl8uciwgZiA9IGYubmV4dCB9IGVsc2UgeyBpZiAoamQocy5fLCBpLl8pKSB7IChlID0gcykubmV4dCA9IHIsIHIucHJldmlvdXMgPSBlLCAtLWM7IGNvbnRpbnVlIHQgfSBoICs9IHMuXy5yLCBzID0gcy5wcmV2aW91cyB9IH0gd2hpbGUgKGYgIT09IHMubmV4dCk7IGZvciAoaS5wcmV2aW91cyA9IGUsIGkubmV4dCA9IHIsIGUubmV4dCA9IHIucHJldmlvdXMgPSByID0gaSwgYSA9ICRkKGUpOyAoaSA9IGkubmV4dCkgIT09IHI7KSh1ID0gJGQoaSkpIDwgYSAmJiAoZSA9IGksIGEgPSB1KTsgciA9IGUubmV4dCB9IGZvciAoZSA9IFtyLl9dLCBpID0gcjsgKGkgPSBpLm5leHQpICE9PSByOyllLnB1c2goaS5fKTsgZm9yIChpID0gUmQoZSwgbiksIGMgPSAwOyBjIDwgbzsgKytjKShlID0gdFtjXSkueCAtPSBpLngsIGUueSAtPSBpLnk7IHJldHVybiBpLnIgfSBmdW5jdGlvbiBHZCh0KSB7IHJldHVybiBNYXRoLnNxcnQodC52YWx1ZSkgfSBmdW5jdGlvbiBWZCh0KSB7IHJldHVybiBmdW5jdGlvbiAobikgeyBuLmNoaWxkcmVuIHx8IChuLnIgPSBNYXRoLm1heCgwLCArdChuKSB8fCAwKSkgfSB9IGZ1bmN0aW9uIFdkKHQsIG4sIGUpIHsgcmV0dXJuIGZ1bmN0aW9uIChyKSB7IGlmIChpID0gci5jaGlsZHJlbikgeyB2YXIgaSwgbywgYSwgdSA9IGkubGVuZ3RoLCBjID0gdChyKSAqIG4gfHwgMDsgaWYgKGMpIGZvciAobyA9IDA7IG8gPCB1OyArK28paVtvXS5yICs9IGM7IGlmIChhID0gWGQoaSwgZSksIGMpIGZvciAobyA9IDA7IG8gPCB1OyArK28paVtvXS5yIC09IGM7IHIuciA9IGEgKyBjIH0gfSB9IGZ1bmN0aW9uIFpkKHQpIHsgcmV0dXJuIGZ1bmN0aW9uIChuKSB7IHZhciBlID0gbi5wYXJlbnQ7IG4uciAqPSB0LCBlICYmIChuLnggPSBlLnggKyB0ICogbi54LCBuLnkgPSBlLnkgKyB0ICogbi55KSB9IH0gZnVuY3Rpb24gS2QodCkgeyB0LngwID0gTWF0aC5yb3VuZCh0LngwKSwgdC55MCA9IE1hdGgucm91bmQodC55MCksIHQueDEgPSBNYXRoLnJvdW5kKHQueDEpLCB0LnkxID0gTWF0aC5yb3VuZCh0LnkxKSB9IGZ1bmN0aW9uIFFkKHQsIG4sIGUsIHIsIGkpIHsgZm9yICh2YXIgbywgYSA9IHQuY2hpbGRyZW4sIHUgPSAtMSwgYyA9IGEubGVuZ3RoLCBmID0gdC52YWx1ZSAmJiAociAtIG4pIC8gdC52YWx1ZTsgKyt1IDwgYzspKG8gPSBhW3VdKS55MCA9IGUsIG8ueTEgPSBpLCBvLngwID0gbiwgby54MSA9IG4gKz0gby52YWx1ZSAqIGYgfSB2YXIgSmQgPSB7IGRlcHRoOiAtMSB9LCB0cCA9IHt9LCBucCA9IHt9OyBmdW5jdGlvbiBlcCh0KSB7IHJldHVybiB0LmlkIH0gZnVuY3Rpb24gcnAodCkgeyByZXR1cm4gdC5wYXJlbnRJZCB9IGZ1bmN0aW9uIGlwKHQpIHsgbGV0IG4gPSB0Lmxlbmd0aDsgaWYgKG4gPCAyKSByZXR1cm4gIiI7IGZvciAoOyAtLW4gPiAxICYmICFvcCh0LCBuKTspOyByZXR1cm4gdC5zbGljZSgwLCBuKSB9IGZ1bmN0aW9uIG9wKHQsIG4pIHsgaWYgKCIvIiA9PT0gdFtuXSkgeyBsZXQgZSA9IDA7IGZvciAoOyBuID4gMCAmJiAiXFwiID09PSB0Wy0tbl07KSsrZTsgaWYgKDAgPT0gKDEgJiBlKSkgcmV0dXJuICEwIH0gcmV0dXJuICExIH0gZnVuY3Rpb24gYXAodCwgbikgeyByZXR1cm4gdC5wYXJlbnQgPT09IG4ucGFyZW50ID8gMSA6IDIgfSBmdW5jdGlvbiB1cCh0KSB7IHZhciBuID0gdC5jaGlsZHJlbjsgcmV0dXJuIG4gPyBuWzBdIDogdC50IH0gZnVuY3Rpb24gY3AodCkgeyB2YXIgbiA9IHQuY2hpbGRyZW47IHJldHVybiBuID8gbltuLmxlbmd0aCAtIDFdIDogdC50IH0gZnVuY3Rpb24gZnAodCwgbiwgZSkgeyB2YXIgciA9IGUgLyAobi5pIC0gdC5pKTsgbi5jIC09IHIsIG4ucyArPSBlLCB0LmMgKz0gciwgbi56ICs9IGUsIG4ubSArPSBlIH0gZnVuY3Rpb24gc3AodCwgbiwgZSkgeyByZXR1cm4gdC5hLnBhcmVudCA9PT0gbi5wYXJlbnQgPyB0LmEgOiBlIH0gZnVuY3Rpb24gbHAodCwgbikgeyB0aGlzLl8gPSB0LCB0aGlzLnBhcmVudCA9IG51bGwsIHRoaXMuY2hpbGRyZW4gPSBudWxsLCB0aGlzLkEgPSBudWxsLCB0aGlzLmEgPSB0aGlzLCB0aGlzLnogPSAwLCB0aGlzLm0gPSAwLCB0aGlzLmMgPSAwLCB0aGlzLnMgPSAwLCB0aGlzLnQgPSBudWxsLCB0aGlzLmkgPSBuIH0gZnVuY3Rpb24gaHAodCwgbiwgZSwgciwgaSkgeyBmb3IgKHZhciBvLCBhID0gdC5jaGlsZHJlbiwgdSA9IC0xLCBjID0gYS5sZW5ndGgsIGYgPSB0LnZhbHVlICYmIChpIC0gZSkgLyB0LnZhbHVlOyArK3UgPCBjOykobyA9IGFbdV0pLngwID0gbiwgby54MSA9IHIsIG8ueTAgPSBlLCBvLnkxID0gZSArPSBvLnZhbHVlICogZiB9IGxwLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoRWQucHJvdG90eXBlKTsgdmFyIGRwID0gKDEgKyBNYXRoLnNxcnQoNSkpIC8gMjsgZnVuY3Rpb24gcHAodCwgbiwgZSwgciwgaSwgbykgeyBmb3IgKHZhciBhLCB1LCBjLCBmLCBzLCBsLCBoLCBkLCBwLCBnLCB5LCB2ID0gW10sIF8gPSBuLmNoaWxkcmVuLCBiID0gMCwgbSA9IDAsIHggPSBfLmxlbmd0aCwgdyA9IG4udmFsdWU7IGIgPCB4OykgeyBjID0gaSAtIGUsIGYgPSBvIC0gcjsgZG8geyBzID0gX1ttKytdLnZhbHVlIH0gd2hpbGUgKCFzICYmIG0gPCB4KTsgZm9yIChsID0gaCA9IHMsIHkgPSBzICogcyAqIChnID0gTWF0aC5tYXgoZiAvIGMsIGMgLyBmKSAvICh3ICogdCkpLCBwID0gTWF0aC5tYXgoaCAvIHksIHkgLyBsKTsgbSA8IHg7ICsrbSkgeyBpZiAocyArPSB1ID0gX1ttXS52YWx1ZSwgdSA8IGwgJiYgKGwgPSB1KSwgdSA+IGggJiYgKGggPSB1KSwgeSA9IHMgKiBzICogZywgKGQgPSBNYXRoLm1heChoIC8geSwgeSAvIGwpKSA+IHApIHsgcyAtPSB1OyBicmVhayB9IHAgPSBkIH0gdi5wdXNoKGEgPSB7IHZhbHVlOiBzLCBkaWNlOiBjIDwgZiwgY2hpbGRyZW46IF8uc2xpY2UoYiwgbSkgfSksIGEuZGljZSA/IFFkKGEsIGUsIHIsIGksIHcgPyByICs9IGYgKiBzIC8gdyA6IG8pIDogaHAoYSwgZSwgciwgdyA/IGUgKz0gYyAqIHMgLyB3IDogaSwgbyksIHcgLT0gcywgYiA9IG0gfSByZXR1cm4gdiB9IHZhciBncCA9IGZ1bmN0aW9uIHQobikgeyBmdW5jdGlvbiBlKHQsIGUsIHIsIGksIG8pIHsgcHAobiwgdCwgZSwgciwgaSwgbykgfSByZXR1cm4gZS5yYXRpbyA9IGZ1bmN0aW9uIChuKSB7IHJldHVybiB0KChuID0gK24pID4gMSA/IG4gOiAxKSB9LCBlIH0oZHApOyB2YXIgeXAgPSBmdW5jdGlvbiB0KG4pIHsgZnVuY3Rpb24gZSh0LCBlLCByLCBpLCBvKSB7IGlmICgoYSA9IHQuX3NxdWFyaWZ5KSAmJiBhLnJhdGlvID09PSBuKSBmb3IgKHZhciBhLCB1LCBjLCBmLCBzLCBsID0gLTEsIGggPSBhLmxlbmd0aCwgZCA9IHQudmFsdWU7ICsrbCA8IGg7KSB7IGZvciAoYyA9ICh1ID0gYVtsXSkuY2hpbGRyZW4sIGYgPSB1LnZhbHVlID0gMCwgcyA9IGMubGVuZ3RoOyBmIDwgczsgKytmKXUudmFsdWUgKz0gY1tmXS52YWx1ZTsgdS5kaWNlID8gUWQodSwgZSwgciwgaSwgZCA/IHIgKz0gKG8gLSByKSAqIHUudmFsdWUgLyBkIDogbykgOiBocCh1LCBlLCByLCBkID8gZSArPSAoaSAtIGUpICogdS52YWx1ZSAvIGQgOiBpLCBvKSwgZCAtPSB1LnZhbHVlIH0gZWxzZSB0Ll9zcXVhcmlmeSA9IGEgPSBwcChuLCB0LCBlLCByLCBpLCBvKSwgYS5yYXRpbyA9IG4gfSByZXR1cm4gZS5yYXRpbyA9IGZ1bmN0aW9uIChuKSB7IHJldHVybiB0KChuID0gK24pID4gMSA/IG4gOiAxKSB9LCBlIH0oZHApOyBmdW5jdGlvbiB2cCh0LCBuLCBlKSB7IHJldHVybiAoblswXSAtIHRbMF0pICogKGVbMV0gLSB0WzFdKSAtIChuWzFdIC0gdFsxXSkgKiAoZVswXSAtIHRbMF0pIH0gZnVuY3Rpb24gX3AodCwgbikgeyByZXR1cm4gdFswXSAtIG5bMF0gfHwgdFsxXSAtIG5bMV0gfSBmdW5jdGlvbiBicCh0KSB7IGNvbnN0IG4gPSB0Lmxlbmd0aCwgZSA9IFswLCAxXTsgbGV0IHIsIGkgPSAyOyBmb3IgKHIgPSAyOyByIDwgbjsgKytyKSB7IGZvciAoOyBpID4gMSAmJiB2cCh0W2VbaSAtIDJdXSwgdFtlW2kgLSAxXV0sIHRbcl0pIDw9IDA7KS0taTsgZVtpKytdID0gciB9IHJldHVybiBlLnNsaWNlKDAsIGkpIH0gdmFyIG1wID0gTWF0aC5yYW5kb20sIHhwID0gZnVuY3Rpb24gdChuKSB7IGZ1bmN0aW9uIGUodCwgZSkgeyByZXR1cm4gdCA9IG51bGwgPT0gdCA/IDAgOiArdCwgZSA9IG51bGwgPT0gZSA/IDEgOiArZSwgMSA9PT0gYXJndW1lbnRzLmxlbmd0aCA/IChlID0gdCwgdCA9IDApIDogZSAtPSB0LCBmdW5jdGlvbiAoKSB7IHJldHVybiBuKCkgKiBlICsgdCB9IH0gcmV0dXJuIGUuc291cmNlID0gdCwgZSB9KG1wKSwgd3AgPSBmdW5jdGlvbiB0KG4pIHsgZnVuY3Rpb24gZSh0LCBlKSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoIDwgMiAmJiAoZSA9IHQsIHQgPSAwKSwgdCA9IE1hdGguZmxvb3IodCksIGUgPSBNYXRoLmZsb29yKGUpIC0gdCwgZnVuY3Rpb24gKCkgeyByZXR1cm4gTWF0aC5mbG9vcihuKCkgKiBlICsgdCkgfSB9IHJldHVybiBlLnNvdXJjZSA9IHQsIGUgfShtcCksIE1wID0gZnVuY3Rpb24gdChuKSB7IGZ1bmN0aW9uIGUodCwgZSkgeyB2YXIgciwgaTsgcmV0dXJuIHQgPSBudWxsID09IHQgPyAwIDogK3QsIGUgPSBudWxsID09IGUgPyAxIDogK2UsIGZ1bmN0aW9uICgpIHsgdmFyIG87IGlmIChudWxsICE9IHIpIG8gPSByLCByID0gbnVsbDsgZWxzZSBkbyB7IHIgPSAyICogbigpIC0gMSwgbyA9IDIgKiBuKCkgLSAxLCBpID0gciAqIHIgKyBvICogbyB9IHdoaWxlICghaSB8fCBpID4gMSk7IHJldHVybiB0ICsgZSAqIG8gKiBNYXRoLnNxcnQoLTIgKiBNYXRoLmxvZyhpKSAvIGkpIH0gfSByZXR1cm4gZS5zb3VyY2UgPSB0LCBlIH0obXApLCBBcCA9IGZ1bmN0aW9uIHQobikgeyB2YXIgZSA9IE1wLnNvdXJjZShuKTsgZnVuY3Rpb24gcigpIHsgdmFyIHQgPSBlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiBNYXRoLmV4cCh0KCkpIH0gfSByZXR1cm4gci5zb3VyY2UgPSB0LCByIH0obXApLCBUcCA9IGZ1bmN0aW9uIHQobikgeyBmdW5jdGlvbiBlKHQpIHsgcmV0dXJuICh0ID0gK3QpIDw9IDAgPyAoKSA9PiAwIDogZnVuY3Rpb24gKCkgeyBmb3IgKHZhciBlID0gMCwgciA9IHQ7IHIgPiAxOyAtLXIpZSArPSBuKCk7IHJldHVybiBlICsgciAqIG4oKSB9IH0gcmV0dXJuIGUuc291cmNlID0gdCwgZSB9KG1wKSwgU3AgPSBmdW5jdGlvbiB0KG4pIHsgdmFyIGUgPSBUcC5zb3VyY2Uobik7IGZ1bmN0aW9uIHIodCkgeyBpZiAoMCA9PSAodCA9ICt0KSkgcmV0dXJuIG47IHZhciByID0gZSh0KTsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHIoKSAvIHQgfSB9IHJldHVybiByLnNvdXJjZSA9IHQsIHIgfShtcCksIEVwID0gZnVuY3Rpb24gdChuKSB7IGZ1bmN0aW9uIGUodCkgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyByZXR1cm4gLU1hdGgubG9nMXAoLW4oKSkgLyB0IH0gfSByZXR1cm4gZS5zb3VyY2UgPSB0LCBlIH0obXApLCBrcCA9IGZ1bmN0aW9uIHQobikgeyBmdW5jdGlvbiBlKHQpIHsgaWYgKCh0ID0gK3QpIDwgMCkgdGhyb3cgbmV3IFJhbmdlRXJyb3IoImludmFsaWQgYWxwaGEiKTsgcmV0dXJuIHQgPSAxIC8gLXQsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIE1hdGgucG93KDEgLSBuKCksIHQpIH0gfSByZXR1cm4gZS5zb3VyY2UgPSB0LCBlIH0obXApLCBOcCA9IGZ1bmN0aW9uIHQobikgeyBmdW5jdGlvbiBlKHQpIHsgaWYgKCh0ID0gK3QpIDwgMCB8fCB0ID4gMSkgdGhyb3cgbmV3IFJhbmdlRXJyb3IoImludmFsaWQgcCIpOyByZXR1cm4gZnVuY3Rpb24gKCkgeyByZXR1cm4gTWF0aC5mbG9vcihuKCkgKyB0KSB9IH0gcmV0dXJuIGUuc291cmNlID0gdCwgZSB9KG1wKSwgQ3AgPSBmdW5jdGlvbiB0KG4pIHsgZnVuY3Rpb24gZSh0KSB7IGlmICgodCA9ICt0KSA8IDAgfHwgdCA+IDEpIHRocm93IG5ldyBSYW5nZUVycm9yKCJpbnZhbGlkIHAiKTsgcmV0dXJuIDAgPT09IHQgPyAoKSA9PiAxIC8gMCA6IDEgPT09IHQgPyAoKSA9PiAxIDogKHQgPSBNYXRoLmxvZzFwKC10KSwgZnVuY3Rpb24gKCkgeyByZXR1cm4gMSArIE1hdGguZmxvb3IoTWF0aC5sb2cxcCgtbigpKSAvIHQpIH0pIH0gcmV0dXJuIGUuc291cmNlID0gdCwgZSB9KG1wKSwgUHAgPSBmdW5jdGlvbiB0KG4pIHsgdmFyIGUgPSBNcC5zb3VyY2UobikoKTsgZnVuY3Rpb24gcih0LCByKSB7IGlmICgodCA9ICt0KSA8IDApIHRocm93IG5ldyBSYW5nZUVycm9yKCJpbnZhbGlkIGsiKTsgaWYgKDAgPT09IHQpIHJldHVybiAoKSA9PiAwOyBpZiAociA9IG51bGwgPT0gciA/IDEgOiArciwgMSA9PT0gdCkgcmV0dXJuICgpID0+IC1NYXRoLmxvZzFwKC1uKCkpICogcjsgdmFyIGkgPSAodCA8IDEgPyB0ICsgMSA6IHQpIC0gMSAvIDMsIG8gPSAxIC8gKDMgKiBNYXRoLnNxcnQoaSkpLCBhID0gdCA8IDEgPyAoKSA9PiBNYXRoLnBvdyhuKCksIDEgLyB0KSA6ICgpID0+IDE7IHJldHVybiBmdW5jdGlvbiAoKSB7IGRvIHsgZG8geyB2YXIgdCA9IGUoKSwgdSA9IDEgKyBvICogdCB9IHdoaWxlICh1IDw9IDApOyB1ICo9IHUgKiB1OyB2YXIgYyA9IDEgLSBuKCkgfSB3aGlsZSAoYyA+PSAxIC0gLjAzMzEgKiB0ICogdCAqIHQgKiB0ICYmIE1hdGgubG9nKGMpID49IC41ICogdCAqIHQgKyBpICogKDEgLSB1ICsgTWF0aC5sb2codSkpKTsgcmV0dXJuIGkgKiB1ICogYSgpICogciB9IH0gcmV0dXJuIHIuc291cmNlID0gdCwgciB9KG1wKSwgenAgPSBmdW5jdGlvbiB0KG4pIHsgdmFyIGUgPSBQcC5zb3VyY2Uobik7IGZ1bmN0aW9uIHIodCwgbikgeyB2YXIgciA9IGUodCksIGkgPSBlKG4pOyByZXR1cm4gZnVuY3Rpb24gKCkgeyB2YXIgdCA9IHIoKTsgcmV0dXJuIDAgPT09IHQgPyAwIDogdCAvICh0ICsgaSgpKSB9IH0gcmV0dXJuIHIuc291cmNlID0gdCwgciB9KG1wKSwgRHAgPSBmdW5jdGlvbiB0KG4pIHsgdmFyIGUgPSBDcC5zb3VyY2UobiksIHIgPSB6cC5zb3VyY2Uobik7IGZ1bmN0aW9uIGkodCwgbikgeyByZXR1cm4gdCA9ICt0LCAobiA9ICtuKSA+PSAxID8gKCkgPT4gdCA6IG4gPD0gMCA/ICgpID0+IDAgOiBmdW5jdGlvbiAoKSB7IGZvciAodmFyIGkgPSAwLCBvID0gdCwgYSA9IG47IG8gKiBhID4gMTYgJiYgbyAqICgxIC0gYSkgPiAxNjspIHsgdmFyIHUgPSBNYXRoLmZsb29yKChvICsgMSkgKiBhKSwgYyA9IHIodSwgbyAtIHUgKyAxKSgpOyBjIDw9IGEgPyAoaSArPSB1LCBvIC09IHUsIGEgPSAoYSAtIGMpIC8gKDEgLSBjKSkgOiAobyA9IHUgLSAxLCBhIC89IGMpIH0gZm9yICh2YXIgZiA9IGEgPCAuNSwgcyA9IGUoZiA/IGEgOiAxIC0gYSksIGwgPSBzKCksIGggPSAwOyBsIDw9IG87ICsraClsICs9IHMoKTsgcmV0dXJuIGkgKyAoZiA/IGggOiBvIC0gaCkgfSB9IHJldHVybiBpLnNvdXJjZSA9IHQsIGkgfShtcCksIFJwID0gZnVuY3Rpb24gdChuKSB7IGZ1bmN0aW9uIGUodCwgZSwgcikgeyB2YXIgaTsgcmV0dXJuIDAgPT0gKHQgPSArdCkgPyBpID0gdCA9PiAtTWF0aC5sb2codCkgOiAodCA9IDEgLyB0LCBpID0gbiA9PiBNYXRoLnBvdyhuLCB0KSksIGUgPSBudWxsID09IGUgPyAwIDogK2UsIHIgPSBudWxsID09IHIgPyAxIDogK3IsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGUgKyByICogaSgtTWF0aC5sb2cxcCgtbigpKSkgfSB9IHJldHVybiBlLnNvdXJjZSA9IHQsIGUgfShtcCksIEZwID0gZnVuY3Rpb24gdChuKSB7IGZ1bmN0aW9uIGUodCwgZSkgeyByZXR1cm4gdCA9IG51bGwgPT0gdCA/IDAgOiArdCwgZSA9IG51bGwgPT0gZSA/IDEgOiArZSwgZnVuY3Rpb24gKCkgeyByZXR1cm4gdCArIGUgKiBNYXRoLnRhbihNYXRoLlBJICogbigpKSB9IH0gcmV0dXJuIGUuc291cmNlID0gdCwgZSB9KG1wKSwgcXAgPSBmdW5jdGlvbiB0KG4pIHsgZnVuY3Rpb24gZSh0LCBlKSB7IHJldHVybiB0ID0gbnVsbCA9PSB0ID8gMCA6ICt0LCBlID0gbnVsbCA9PSBlID8gMSA6ICtlLCBmdW5jdGlvbiAoKSB7IHZhciByID0gbigpOyByZXR1cm4gdCArIGUgKiBNYXRoLmxvZyhyIC8gKDEgLSByKSkgfSB9IHJldHVybiBlLnNvdXJjZSA9IHQsIGUgfShtcCksIElwID0gZnVuY3Rpb24gdChuKSB7IHZhciBlID0gUHAuc291cmNlKG4pLCByID0gRHAuc291cmNlKG4pOyBmdW5jdGlvbiBpKHQpIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgZm9yICh2YXIgaSA9IDAsIG8gPSB0OyBvID4gMTY7KSB7IHZhciBhID0gTWF0aC5mbG9vciguODc1ICogbyksIHUgPSBlKGEpKCk7IGlmICh1ID4gbykgcmV0dXJuIGkgKyByKGEgLSAxLCBvIC8gdSkoKTsgaSArPSBhLCBvIC09IHUgfSBmb3IgKHZhciBjID0gLU1hdGgubG9nMXAoLW4oKSksIGYgPSAwOyBjIDw9IG87ICsrZiljIC09IE1hdGgubG9nMXAoLW4oKSk7IHJldHVybiBpICsgZiB9IH0gcmV0dXJuIGkuc291cmNlID0gdCwgaSB9KG1wKTsgY29uc3QgT3AgPSAxIC8gNDI5NDk2NzI5NjsgZnVuY3Rpb24gVXAodCwgbikgeyBzd2l0Y2ggKGFyZ3VtZW50cy5sZW5ndGgpIHsgY2FzZSAwOiBicmVhazsgY2FzZSAxOiB0aGlzLnJhbmdlKHQpOyBicmVhazsgZGVmYXVsdDogdGhpcy5yYW5nZShuKS5kb21haW4odCkgfXJldHVybiB0aGlzIH0gZnVuY3Rpb24gQnAodCwgbikgeyBzd2l0Y2ggKGFyZ3VtZW50cy5sZW5ndGgpIHsgY2FzZSAwOiBicmVhazsgY2FzZSAxOiAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdGhpcy5pbnRlcnBvbGF0b3IodCkgOiB0aGlzLnJhbmdlKHQpOyBicmVhazsgZGVmYXVsdDogdGhpcy5kb21haW4odCksICJmdW5jdGlvbiIgPT0gdHlwZW9mIG4gPyB0aGlzLmludGVycG9sYXRvcihuKSA6IHRoaXMucmFuZ2UobikgfXJldHVybiB0aGlzIH0gY29uc3QgWXAgPSBTeW1ib2woImltcGxpY2l0Iik7IGZ1bmN0aW9uIExwKCkgeyB2YXIgdCA9IG5ldyBJbnRlcm5NYXAsIG4gPSBbXSwgZSA9IFtdLCByID0gWXA7IGZ1bmN0aW9uIGkoaSkgeyBsZXQgbyA9IHQuZ2V0KGkpOyBpZiAodm9pZCAwID09PSBvKSB7IGlmIChyICE9PSBZcCkgcmV0dXJuIHI7IHQuc2V0KGksIG8gPSBuLnB1c2goaSkgLSAxKSB9IHJldHVybiBlW28gJSBlLmxlbmd0aF0gfSByZXR1cm4gaS5kb21haW4gPSBmdW5jdGlvbiAoZSkgeyBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBuLnNsaWNlKCk7IG4gPSBbXSwgdCA9IG5ldyBJbnRlcm5NYXA7IGZvciAoY29uc3QgciBvZiBlKSB0LmhhcyhyKSB8fCB0LnNldChyLCBuLnB1c2gocikgLSAxKTsgcmV0dXJuIGkgfSwgaS5yYW5nZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGUgPSBBcnJheS5mcm9tKHQpLCBpKSA6IGUuc2xpY2UoKSB9LCBpLnVua25vd24gPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyID0gdCwgaSkgOiByIH0sIGkuY29weSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIExwKG4sIGUpLnVua25vd24ocikgfSwgVXAuYXBwbHkoaSwgYXJndW1lbnRzKSwgaSB9IGZ1bmN0aW9uIGpwKCkgeyB2YXIgdCwgbiwgZSA9IExwKCkudW5rbm93bih2b2lkIDApLCByID0gZS5kb21haW4sIGkgPSBlLnJhbmdlLCBvID0gMCwgYSA9IDEsIHUgPSAhMSwgYyA9IDAsIGYgPSAwLCBzID0gLjU7IGZ1bmN0aW9uIGwoKSB7IHZhciBlID0gcigpLmxlbmd0aCwgbCA9IGEgPCBvLCBoID0gbCA/IGEgOiBvLCBkID0gbCA/IG8gOiBhOyB0ID0gKGQgLSBoKSAvIE1hdGgubWF4KDEsIGUgLSBjICsgMiAqIGYpLCB1ICYmICh0ID0gTWF0aC5mbG9vcih0KSksIGggKz0gKGQgLSBoIC0gdCAqIChlIC0gYykpICogcywgbiA9IHQgKiAoMSAtIGMpLCB1ICYmIChoID0gTWF0aC5yb3VuZChoKSwgbiA9IE1hdGgucm91bmQobikpOyB2YXIgcCA9IGx0KGUpLm1hcCgoZnVuY3Rpb24gKG4pIHsgcmV0dXJuIGggKyB0ICogbiB9KSk7IHJldHVybiBpKGwgPyBwLnJldmVyc2UoKSA6IHApIH0gcmV0dXJuIGRlbGV0ZSBlLnVua25vd24sIGUuZG9tYWluID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocih0KSwgbCgpKSA6IHIoKSB9LCBlLnJhbmdlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoW28sIGFdID0gdCwgbyA9ICtvLCBhID0gK2EsIGwoKSkgOiBbbywgYV0gfSwgZS5yYW5nZVJvdW5kID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIFtvLCBhXSA9IHQsIG8gPSArbywgYSA9ICthLCB1ID0gITAsIGwoKSB9LCBlLmJhbmR3aWR0aCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG4gfSwgZS5zdGVwID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdCB9LCBlLnJvdW5kID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodSA9ICEhdCwgbCgpKSA6IHUgfSwgZS5wYWRkaW5nID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYyA9IE1hdGgubWluKDEsIGYgPSArdCksIGwoKSkgOiBjIH0sIGUucGFkZGluZ0lubmVyID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYyA9IE1hdGgubWluKDEsIHQpLCBsKCkpIDogYyB9LCBlLnBhZGRpbmdPdXRlciA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGYgPSArdCwgbCgpKSA6IGYgfSwgZS5hbGlnbiA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHMgPSBNYXRoLm1heCgwLCBNYXRoLm1pbigxLCB0KSksIGwoKSkgOiBzIH0sIGUuY29weSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGpwKHIoKSwgW28sIGFdKS5yb3VuZCh1KS5wYWRkaW5nSW5uZXIoYykucGFkZGluZ091dGVyKGYpLmFsaWduKHMpIH0sIFVwLmFwcGx5KGwoKSwgYXJndW1lbnRzKSB9IGZ1bmN0aW9uICRwKHQpIHsgdmFyIG4gPSB0LmNvcHk7IHJldHVybiB0LnBhZGRpbmcgPSB0LnBhZGRpbmdPdXRlciwgZGVsZXRlIHQucGFkZGluZ0lubmVyLCBkZWxldGUgdC5wYWRkaW5nT3V0ZXIsIHQuY29weSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuICRwKG4oKSkgfSwgdCB9IGZ1bmN0aW9uIEhwKHQpIHsgcmV0dXJuICt0IH0gdmFyIFhwID0gWzAsIDFdOyBmdW5jdGlvbiBHcCh0KSB7IHJldHVybiB0IH0gZnVuY3Rpb24gVnAodCwgbikgeyByZXR1cm4gKG4gLT0gdCA9ICt0KSA/IGZ1bmN0aW9uIChlKSB7IHJldHVybiAoZSAtIHQpIC8gbiB9IDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHQgfSB9KGlzTmFOKG4pID8gTmFOIDogLjUpIH0gZnVuY3Rpb24gV3AodCwgbiwgZSkgeyB2YXIgciA9IHRbMF0sIGkgPSB0WzFdLCBvID0gblswXSwgYSA9IG5bMV07IHJldHVybiBpIDwgciA/IChyID0gVnAoaSwgciksIG8gPSBlKGEsIG8pKSA6IChyID0gVnAociwgaSksIG8gPSBlKG8sIGEpKSwgZnVuY3Rpb24gKHQpIHsgcmV0dXJuIG8ocih0KSkgfSB9IGZ1bmN0aW9uIFpwKHQsIG4sIGUpIHsgdmFyIHIgPSBNYXRoLm1pbih0Lmxlbmd0aCwgbi5sZW5ndGgpIC0gMSwgaSA9IG5ldyBBcnJheShyKSwgbyA9IG5ldyBBcnJheShyKSwgYSA9IC0xOyBmb3IgKHRbcl0gPCB0WzBdICYmICh0ID0gdC5zbGljZSgpLnJldmVyc2UoKSwgbiA9IG4uc2xpY2UoKS5yZXZlcnNlKCkpOyArK2EgPCByOylpW2FdID0gVnAodFthXSwgdFthICsgMV0pLCBvW2FdID0gZShuW2FdLCBuW2EgKyAxXSk7IHJldHVybiBmdW5jdGlvbiAobikgeyB2YXIgZSA9IGwodCwgbiwgMSwgcikgLSAxOyByZXR1cm4gb1tlXShpW2VdKG4pKSB9IH0gZnVuY3Rpb24gS3AodCwgbikgeyByZXR1cm4gbi5kb21haW4odC5kb21haW4oKSkucmFuZ2UodC5yYW5nZSgpKS5pbnRlcnBvbGF0ZSh0LmludGVycG9sYXRlKCkpLmNsYW1wKHQuY2xhbXAoKSkudW5rbm93bih0LnVua25vd24oKSkgfSBmdW5jdGlvbiBRcCgpIHsgdmFyIHQsIG4sIGUsIHIsIGksIG8sIGEgPSBYcCwgdSA9IFhwLCBjID0gSHIsIGYgPSBHcDsgZnVuY3Rpb24gcygpIHsgdmFyIHQgPSBNYXRoLm1pbihhLmxlbmd0aCwgdS5sZW5ndGgpOyByZXR1cm4gZiAhPT0gR3AgJiYgKGYgPSBmdW5jdGlvbiAodCwgbikgeyB2YXIgZTsgcmV0dXJuIHQgPiBuICYmIChlID0gdCwgdCA9IG4sIG4gPSBlKSwgZnVuY3Rpb24gKGUpIHsgcmV0dXJuIE1hdGgubWF4KHQsIE1hdGgubWluKG4sIGUpKSB9IH0oYVswXSwgYVt0IC0gMV0pKSwgciA9IHQgPiAyID8gWnAgOiBXcCwgaSA9IG8gPSBudWxsLCBsIH0gZnVuY3Rpb24gbChuKSB7IHJldHVybiBudWxsID09IG4gfHwgaXNOYU4obiA9ICtuKSA/IGUgOiAoaSB8fCAoaSA9IHIoYS5tYXAodCksIHUsIGMpKSkodChmKG4pKSkgfSByZXR1cm4gbC5pbnZlcnQgPSBmdW5jdGlvbiAoZSkgeyByZXR1cm4gZihuKChvIHx8IChvID0gcih1LCBhLm1hcCh0KSwgQnIpKSkoZSkpKSB9LCBsLmRvbWFpbiA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGEgPSBBcnJheS5mcm9tKHQsIEhwKSwgcygpKSA6IGEuc2xpY2UoKSB9LCBsLnJhbmdlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodSA9IEFycmF5LmZyb20odCksIHMoKSkgOiB1LnNsaWNlKCkgfSwgbC5yYW5nZVJvdW5kID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHUgPSBBcnJheS5mcm9tKHQpLCBjID0gWHIsIHMoKSB9LCBsLmNsYW1wID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZiA9ICEhdCB8fCBHcCwgcygpKSA6IGYgIT09IEdwIH0sIGwuaW50ZXJwb2xhdGUgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChjID0gdCwgcygpKSA6IGMgfSwgbC51bmtub3duID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZSA9IHQsIGwpIDogZSB9LCBmdW5jdGlvbiAoZSwgcikgeyByZXR1cm4gdCA9IGUsIG4gPSByLCBzKCkgfSB9IGZ1bmN0aW9uIEpwKCkgeyByZXR1cm4gUXAoKShHcCwgR3ApIH0gZnVuY3Rpb24gdGcobiwgZSwgciwgaSkgeyB2YXIgbywgYSA9IFcobiwgZSwgcik7IHN3aXRjaCAoKGkgPSBEYyhudWxsID09IGkgPyAiLGYiIDogaSkpLnR5cGUpIHsgY2FzZSAicyI6IHZhciB1ID0gTWF0aC5tYXgoTWF0aC5hYnMobiksIE1hdGguYWJzKGUpKTsgcmV0dXJuIG51bGwgIT0gaS5wcmVjaXNpb24gfHwgaXNOYU4obyA9ICRjKGEsIHUpKSB8fCAoaS5wcmVjaXNpb24gPSBvKSwgdC5mb3JtYXRQcmVmaXgoaSwgdSk7IGNhc2UgIiI6IGNhc2UgImUiOiBjYXNlICJnIjogY2FzZSAicCI6IGNhc2UgInIiOiBudWxsICE9IGkucHJlY2lzaW9uIHx8IGlzTmFOKG8gPSBIYyhhLCBNYXRoLm1heChNYXRoLmFicyhuKSwgTWF0aC5hYnMoZSkpKSkgfHwgKGkucHJlY2lzaW9uID0gbyAtICgiZSIgPT09IGkudHlwZSkpOyBicmVhazsgY2FzZSAiZiI6IGNhc2UgIiUiOiBudWxsICE9IGkucHJlY2lzaW9uIHx8IGlzTmFOKG8gPSBqYyhhKSkgfHwgKGkucHJlY2lzaW9uID0gbyAtIDIgKiAoIiUiID09PSBpLnR5cGUpKSB9cmV0dXJuIHQuZm9ybWF0KGkpIH0gZnVuY3Rpb24gbmcodCkgeyB2YXIgbiA9IHQuZG9tYWluOyByZXR1cm4gdC50aWNrcyA9IGZ1bmN0aW9uICh0KSB7IHZhciBlID0gbigpOyByZXR1cm4gRyhlWzBdLCBlW2UubGVuZ3RoIC0gMV0sIG51bGwgPT0gdCA/IDEwIDogdCkgfSwgdC50aWNrRm9ybWF0ID0gZnVuY3Rpb24gKHQsIGUpIHsgdmFyIHIgPSBuKCk7IHJldHVybiB0ZyhyWzBdLCByW3IubGVuZ3RoIC0gMV0sIG51bGwgPT0gdCA/IDEwIDogdCwgZSkgfSwgdC5uaWNlID0gZnVuY3Rpb24gKGUpIHsgbnVsbCA9PSBlICYmIChlID0gMTApOyB2YXIgciwgaSwgbyA9IG4oKSwgYSA9IDAsIHUgPSBvLmxlbmd0aCAtIDEsIGMgPSBvW2FdLCBmID0gb1t1XSwgcyA9IDEwOyBmb3IgKGYgPCBjICYmIChpID0gYywgYyA9IGYsIGYgPSBpLCBpID0gYSwgYSA9IHUsIHUgPSBpKTsgcy0tID4gMDspIHsgaWYgKChpID0gVihjLCBmLCBlKSkgPT09IHIpIHJldHVybiBvW2FdID0gYywgb1t1XSA9IGYsIG4obyk7IGlmIChpID4gMCkgYyA9IE1hdGguZmxvb3IoYyAvIGkpICogaSwgZiA9IE1hdGguY2VpbChmIC8gaSkgKiBpOyBlbHNlIHsgaWYgKCEoaSA8IDApKSBicmVhazsgYyA9IE1hdGguY2VpbChjICogaSkgLyBpLCBmID0gTWF0aC5mbG9vcihmICogaSkgLyBpIH0gciA9IGkgfSByZXR1cm4gdCB9LCB0IH0gZnVuY3Rpb24gZWcodCwgbikgeyB2YXIgZSwgciA9IDAsIGkgPSAodCA9IHQuc2xpY2UoKSkubGVuZ3RoIC0gMSwgbyA9IHRbcl0sIGEgPSB0W2ldOyByZXR1cm4gYSA8IG8gJiYgKGUgPSByLCByID0gaSwgaSA9IGUsIGUgPSBvLCBvID0gYSwgYSA9IGUpLCB0W3JdID0gbi5mbG9vcihvKSwgdFtpXSA9IG4uY2VpbChhKSwgdCB9IGZ1bmN0aW9uIHJnKHQpIHsgcmV0dXJuIE1hdGgubG9nKHQpIH0gZnVuY3Rpb24gaWcodCkgeyByZXR1cm4gTWF0aC5leHAodCkgfSBmdW5jdGlvbiBvZyh0KSB7IHJldHVybiAtTWF0aC5sb2coLXQpIH0gZnVuY3Rpb24gYWcodCkgeyByZXR1cm4gLU1hdGguZXhwKC10KSB9IGZ1bmN0aW9uIHVnKHQpIHsgcmV0dXJuIGlzRmluaXRlKHQpID8gKygiMWUiICsgdCkgOiB0IDwgMCA/IDAgOiB0IH0gZnVuY3Rpb24gY2codCkgeyByZXR1cm4gKG4sIGUpID0+IC10KC1uLCBlKSB9IGZ1bmN0aW9uIGZnKG4pIHsgY29uc3QgZSA9IG4ocmcsIGlnKSwgciA9IGUuZG9tYWluOyBsZXQgaSwgbywgYSA9IDEwOyBmdW5jdGlvbiB1KCkgeyByZXR1cm4gaSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0ID09PSBNYXRoLkUgPyBNYXRoLmxvZyA6IDEwID09PSB0ICYmIE1hdGgubG9nMTAgfHwgMiA9PT0gdCAmJiBNYXRoLmxvZzIgfHwgKHQgPSBNYXRoLmxvZyh0KSwgbiA9PiBNYXRoLmxvZyhuKSAvIHQpIH0oYSksIG8gPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gMTAgPT09IHQgPyB1ZyA6IHQgPT09IE1hdGguRSA/IE1hdGguZXhwIDogbiA9PiBNYXRoLnBvdyh0LCBuKSB9KGEpLCByKClbMF0gPCAwID8gKGkgPSBjZyhpKSwgbyA9IGNnKG8pLCBuKG9nLCBhZykpIDogbihyZywgaWcpLCBlIH0gcmV0dXJuIGUuYmFzZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGEgPSArdCwgdSgpKSA6IGEgfSwgZS5kb21haW4gPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyKHQpLCB1KCkpIDogcigpIH0sIGUudGlja3MgPSB0ID0+IHsgY29uc3QgbiA9IHIoKTsgbGV0IGUgPSBuWzBdLCB1ID0gbltuLmxlbmd0aCAtIDFdOyBjb25zdCBjID0gdSA8IGU7IGMgJiYgKFtlLCB1XSA9IFt1LCBlXSk7IGxldCBmLCBzLCBsID0gaShlKSwgaCA9IGkodSk7IGNvbnN0IGQgPSBudWxsID09IHQgPyAxMCA6ICt0OyBsZXQgcCA9IFtdOyBpZiAoIShhICUgMSkgJiYgaCAtIGwgPCBkKSB7IGlmIChsID0gTWF0aC5mbG9vcihsKSwgaCA9IE1hdGguY2VpbChoKSwgZSA+IDApIHsgZm9yICg7IGwgPD0gaDsgKytsKWZvciAoZiA9IDE7IGYgPCBhOyArK2YpaWYgKHMgPSBsIDwgMCA/IGYgLyBvKC1sKSA6IGYgKiBvKGwpLCAhKHMgPCBlKSkgeyBpZiAocyA+IHUpIGJyZWFrOyBwLnB1c2gocykgfSB9IGVsc2UgZm9yICg7IGwgPD0gaDsgKytsKWZvciAoZiA9IGEgLSAxOyBmID49IDE7IC0tZilpZiAocyA9IGwgPiAwID8gZiAvIG8oLWwpIDogZiAqIG8obCksICEocyA8IGUpKSB7IGlmIChzID4gdSkgYnJlYWs7IHAucHVzaChzKSB9IDIgKiBwLmxlbmd0aCA8IGQgJiYgKHAgPSBHKGUsIHUsIGQpKSB9IGVsc2UgcCA9IEcobCwgaCwgTWF0aC5taW4oaCAtIGwsIGQpKS5tYXAobyk7IHJldHVybiBjID8gcC5yZXZlcnNlKCkgOiBwIH0sIGUudGlja0Zvcm1hdCA9IChuLCByKSA9PiB7IGlmIChudWxsID09IG4gJiYgKG4gPSAxMCksIG51bGwgPT0gciAmJiAociA9IDEwID09PSBhID8gInMiIDogIiwiKSwgImZ1bmN0aW9uIiAhPSB0eXBlb2YgciAmJiAoYSAlIDEgfHwgbnVsbCAhPSAociA9IERjKHIpKS5wcmVjaXNpb24gfHwgKHIudHJpbSA9ICEwKSwgciA9IHQuZm9ybWF0KHIpKSwgbiA9PT0gMSAvIDApIHJldHVybiByOyBjb25zdCB1ID0gTWF0aC5tYXgoMSwgYSAqIG4gLyBlLnRpY2tzKCkubGVuZ3RoKTsgcmV0dXJuIHQgPT4geyBsZXQgbiA9IHQgLyBvKE1hdGgucm91bmQoaSh0KSkpOyByZXR1cm4gbiAqIGEgPCBhIC0gLjUgJiYgKG4gKj0gYSksIG4gPD0gdSA/IHIodCkgOiAiIiB9IH0sIGUubmljZSA9ICgpID0+IHIoZWcocigpLCB7IGZsb29yOiB0ID0+IG8oTWF0aC5mbG9vcihpKHQpKSksIGNlaWw6IHQgPT4gbyhNYXRoLmNlaWwoaSh0KSkpIH0pKSwgZSB9IGZ1bmN0aW9uIHNnKHQpIHsgcmV0dXJuIGZ1bmN0aW9uIChuKSB7IHJldHVybiBNYXRoLnNpZ24obikgKiBNYXRoLmxvZzFwKE1hdGguYWJzKG4gLyB0KSkgfSB9IGZ1bmN0aW9uIGxnKHQpIHsgcmV0dXJuIGZ1bmN0aW9uIChuKSB7IHJldHVybiBNYXRoLnNpZ24obikgKiBNYXRoLmV4cG0xKE1hdGguYWJzKG4pKSAqIHQgfSB9IGZ1bmN0aW9uIGhnKHQpIHsgdmFyIG4gPSAxLCBlID0gdChzZyhuKSwgbGcobikpOyByZXR1cm4gZS5jb25zdGFudCA9IGZ1bmN0aW9uIChlKSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gdChzZyhuID0gK2UpLCBsZyhuKSkgOiBuIH0sIG5nKGUpIH0gZnVuY3Rpb24gZGcodCkgeyByZXR1cm4gZnVuY3Rpb24gKG4pIHsgcmV0dXJuIG4gPCAwID8gLU1hdGgucG93KC1uLCB0KSA6IE1hdGgucG93KG4sIHQpIH0gfSBmdW5jdGlvbiBwZyh0KSB7IHJldHVybiB0IDwgMCA/IC1NYXRoLnNxcnQoLXQpIDogTWF0aC5zcXJ0KHQpIH0gZnVuY3Rpb24gZ2codCkgeyByZXR1cm4gdCA8IDAgPyAtdCAqIHQgOiB0ICogdCB9IGZ1bmN0aW9uIHlnKHQpIHsgdmFyIG4gPSB0KEdwLCBHcCksIGUgPSAxOyBmdW5jdGlvbiByKCkgeyByZXR1cm4gMSA9PT0gZSA/IHQoR3AsIEdwKSA6IC41ID09PSBlID8gdChwZywgZ2cpIDogdChkZyhlKSwgZGcoMSAvIGUpKSB9IHJldHVybiBuLmV4cG9uZW50ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZSA9ICt0LCByKCkpIDogZSB9LCBuZyhuKSB9IGZ1bmN0aW9uIHZnKCkgeyB2YXIgdCA9IHlnKFFwKCkpOyByZXR1cm4gdC5jb3B5ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gS3AodCwgdmcoKSkuZXhwb25lbnQodC5leHBvbmVudCgpKSB9LCBVcC5hcHBseSh0LCBhcmd1bWVudHMpLCB0IH0gZnVuY3Rpb24gX2codCkgeyByZXR1cm4gTWF0aC5zaWduKHQpICogdCAqIHQgfSBmdW5jdGlvbiBiZyh0KSB7IHJldHVybiBNYXRoLnNpZ24odCkgKiBNYXRoLnNxcnQoTWF0aC5hYnModCkpIH0gdmFyIG1nID0gbmV3IERhdGUsIHhnID0gbmV3IERhdGU7IGZ1bmN0aW9uIHdnKHQsIG4sIGUsIHIpIHsgZnVuY3Rpb24gaShuKSB7IHJldHVybiB0KG4gPSAwID09PSBhcmd1bWVudHMubGVuZ3RoID8gbmV3IERhdGUgOiBuZXcgRGF0ZSgrbikpLCBuIH0gcmV0dXJuIGkuZmxvb3IgPSBmdW5jdGlvbiAobikgeyByZXR1cm4gdChuID0gbmV3IERhdGUoK24pKSwgbiB9LCBpLmNlaWwgPSBmdW5jdGlvbiAoZSkgeyByZXR1cm4gdChlID0gbmV3IERhdGUoZSAtIDEpKSwgbihlLCAxKSwgdChlKSwgZSB9LCBpLnJvdW5kID0gZnVuY3Rpb24gKHQpIHsgdmFyIG4gPSBpKHQpLCBlID0gaS5jZWlsKHQpOyByZXR1cm4gdCAtIG4gPCBlIC0gdCA/IG4gOiBlIH0sIGkub2Zmc2V0ID0gZnVuY3Rpb24gKHQsIGUpIHsgcmV0dXJuIG4odCA9IG5ldyBEYXRlKCt0KSwgbnVsbCA9PSBlID8gMSA6IE1hdGguZmxvb3IoZSkpLCB0IH0sIGkucmFuZ2UgPSBmdW5jdGlvbiAoZSwgciwgbykgeyB2YXIgYSwgdSA9IFtdOyBpZiAoZSA9IGkuY2VpbChlKSwgbyA9IG51bGwgPT0gbyA/IDEgOiBNYXRoLmZsb29yKG8pLCAhKGUgPCByICYmIG8gPiAwKSkgcmV0dXJuIHU7IGRvIHsgdS5wdXNoKGEgPSBuZXcgRGF0ZSgrZSkpLCBuKGUsIG8pLCB0KGUpIH0gd2hpbGUgKGEgPCBlICYmIGUgPCByKTsgcmV0dXJuIHUgfSwgaS5maWx0ZXIgPSBmdW5jdGlvbiAoZSkgeyByZXR1cm4gd2coKGZ1bmN0aW9uIChuKSB7IGlmIChuID49IG4pIGZvciAoOyB0KG4pLCAhZShuKTspbi5zZXRUaW1lKG4gLSAxKSB9KSwgKGZ1bmN0aW9uICh0LCByKSB7IGlmICh0ID49IHQpIGlmIChyIDwgMCkgZm9yICg7ICsrciA8PSAwOylmb3IgKDsgbih0LCAtMSksICFlKHQpOyk7IGVsc2UgZm9yICg7IC0tciA+PSAwOylmb3IgKDsgbih0LCAxKSwgIWUodCk7KTsgfSkpIH0sIGUgJiYgKGkuY291bnQgPSBmdW5jdGlvbiAobiwgcikgeyByZXR1cm4gbWcuc2V0VGltZSgrbiksIHhnLnNldFRpbWUoK3IpLCB0KG1nKSwgdCh4ZyksIE1hdGguZmxvb3IoZShtZywgeGcpKSB9LCBpLmV2ZXJ5ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQgPSBNYXRoLmZsb29yKHQpLCBpc0Zpbml0ZSh0KSAmJiB0ID4gMCA/IHQgPiAxID8gaS5maWx0ZXIociA/IGZ1bmN0aW9uIChuKSB7IHJldHVybiByKG4pICUgdCA9PSAwIH0gOiBmdW5jdGlvbiAobikgeyByZXR1cm4gaS5jb3VudCgwLCBuKSAlIHQgPT0gMCB9KSA6IGkgOiBudWxsIH0pLCBpIH0gdmFyIE1nID0gd2coKGZ1bmN0aW9uICgpIHsgfSksIChmdW5jdGlvbiAodCwgbikgeyB0LnNldFRpbWUoK3QgKyBuKSB9KSwgKGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiBuIC0gdCB9KSk7IE1nLmV2ZXJ5ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQgPSBNYXRoLmZsb29yKHQpLCBpc0Zpbml0ZSh0KSAmJiB0ID4gMCA/IHQgPiAxID8gd2coKGZ1bmN0aW9uIChuKSB7IG4uc2V0VGltZShNYXRoLmZsb29yKG4gLyB0KSAqIHQpIH0pLCAoZnVuY3Rpb24gKG4sIGUpIHsgbi5zZXRUaW1lKCtuICsgZSAqIHQpIH0pLCAoZnVuY3Rpb24gKG4sIGUpIHsgcmV0dXJuIChlIC0gbikgLyB0IH0pKSA6IE1nIDogbnVsbCB9OyB2YXIgQWcgPSBNZywgVGcgPSBNZy5yYW5nZTsgY29uc3QgU2cgPSAxZTMsIEVnID0gNmU0LCBrZyA9IDM2ZTUsIE5nID0gODY0ZTUsIENnID0gNjA0OGU1LCBQZyA9IDI1OTJlNiwgemcgPSAzMTUzNmU2OyB2YXIgRGcgPSB3ZygoZnVuY3Rpb24gKHQpIHsgdC5zZXRUaW1lKHQgLSB0LmdldE1pbGxpc2Vjb25kcygpKSB9KSwgKGZ1bmN0aW9uICh0LCBuKSB7IHQuc2V0VGltZSgrdCArIG4gKiBTZykgfSksIChmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gKG4gLSB0KSAvIFNnIH0pLCAoZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQuZ2V0VVRDU2Vjb25kcygpIH0pKSwgUmcgPSBEZywgRmcgPSBEZy5yYW5nZSwgcWcgPSB3ZygoZnVuY3Rpb24gKHQpIHsgdC5zZXRUaW1lKHQgLSB0LmdldE1pbGxpc2Vjb25kcygpIC0gdC5nZXRTZWNvbmRzKCkgKiBTZykgfSksIChmdW5jdGlvbiAodCwgbikgeyB0LnNldFRpbWUoK3QgKyBuICogRWcpIH0pLCAoZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIChuIC0gdCkgLyBFZyB9KSwgKGZ1bmN0aW9uICh0KSB7IHJldHVybiB0LmdldE1pbnV0ZXMoKSB9KSksIElnID0gcWcsIE9nID0gcWcucmFuZ2UsIFVnID0gd2coKGZ1bmN0aW9uICh0KSB7IHQuc2V0VGltZSh0IC0gdC5nZXRNaWxsaXNlY29uZHMoKSAtIHQuZ2V0U2Vjb25kcygpICogU2cgLSB0LmdldE1pbnV0ZXMoKSAqIEVnKSB9KSwgKGZ1bmN0aW9uICh0LCBuKSB7IHQuc2V0VGltZSgrdCArIG4gKiBrZykgfSksIChmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gKG4gLSB0KSAvIGtnIH0pLCAoZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQuZ2V0SG91cnMoKSB9KSksIEJnID0gVWcsIFlnID0gVWcucmFuZ2UsIExnID0gd2coKHQgPT4gdC5zZXRIb3VycygwLCAwLCAwLCAwKSksICgodCwgbikgPT4gdC5zZXREYXRlKHQuZ2V0RGF0ZSgpICsgbikpLCAoKHQsIG4pID0+IChuIC0gdCAtIChuLmdldFRpbWV6b25lT2Zmc2V0KCkgLSB0LmdldFRpbWV6b25lT2Zmc2V0KCkpICogRWcpIC8gTmcpLCAodCA9PiB0LmdldERhdGUoKSAtIDEpKSwgamcgPSBMZywgJGcgPSBMZy5yYW5nZTsgZnVuY3Rpb24gSGcodCkgeyByZXR1cm4gd2coKGZ1bmN0aW9uIChuKSB7IG4uc2V0RGF0ZShuLmdldERhdGUoKSAtIChuLmdldERheSgpICsgNyAtIHQpICUgNyksIG4uc2V0SG91cnMoMCwgMCwgMCwgMCkgfSksIChmdW5jdGlvbiAodCwgbikgeyB0LnNldERhdGUodC5nZXREYXRlKCkgKyA3ICogbikgfSksIChmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gKG4gLSB0IC0gKG4uZ2V0VGltZXpvbmVPZmZzZXQoKSAtIHQuZ2V0VGltZXpvbmVPZmZzZXQoKSkgKiBFZykgLyBDZyB9KSkgfSB2YXIgWGcgPSBIZygwKSwgR2cgPSBIZygxKSwgVmcgPSBIZygyKSwgV2cgPSBIZygzKSwgWmcgPSBIZyg0KSwgS2cgPSBIZyg1KSwgUWcgPSBIZyg2KSwgSmcgPSBYZy5yYW5nZSwgdHkgPSBHZy5yYW5nZSwgbnkgPSBWZy5yYW5nZSwgZXkgPSBXZy5yYW5nZSwgcnkgPSBaZy5yYW5nZSwgaXkgPSBLZy5yYW5nZSwgb3kgPSBRZy5yYW5nZSwgYXkgPSB3ZygoZnVuY3Rpb24gKHQpIHsgdC5zZXREYXRlKDEpLCB0LnNldEhvdXJzKDAsIDAsIDAsIDApIH0pLCAoZnVuY3Rpb24gKHQsIG4pIHsgdC5zZXRNb250aCh0LmdldE1vbnRoKCkgKyBuKSB9KSwgKGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiBuLmdldE1vbnRoKCkgLSB0LmdldE1vbnRoKCkgKyAxMiAqIChuLmdldEZ1bGxZZWFyKCkgLSB0LmdldEZ1bGxZZWFyKCkpIH0pLCAoZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQuZ2V0TW9udGgoKSB9KSksIHV5ID0gYXksIGN5ID0gYXkucmFuZ2UsIGZ5ID0gd2coKGZ1bmN0aW9uICh0KSB7IHQuc2V0TW9udGgoMCwgMSksIHQuc2V0SG91cnMoMCwgMCwgMCwgMCkgfSksIChmdW5jdGlvbiAodCwgbikgeyB0LnNldEZ1bGxZZWFyKHQuZ2V0RnVsbFllYXIoKSArIG4pIH0pLCAoZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIG4uZ2V0RnVsbFllYXIoKSAtIHQuZ2V0RnVsbFllYXIoKSB9KSwgKGZ1bmN0aW9uICh0KSB7IHJldHVybiB0LmdldEZ1bGxZZWFyKCkgfSkpOyBmeS5ldmVyeSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBpc0Zpbml0ZSh0ID0gTWF0aC5mbG9vcih0KSkgJiYgdCA+IDAgPyB3ZygoZnVuY3Rpb24gKG4pIHsgbi5zZXRGdWxsWWVhcihNYXRoLmZsb29yKG4uZ2V0RnVsbFllYXIoKSAvIHQpICogdCksIG4uc2V0TW9udGgoMCwgMSksIG4uc2V0SG91cnMoMCwgMCwgMCwgMCkgfSksIChmdW5jdGlvbiAobiwgZSkgeyBuLnNldEZ1bGxZZWFyKG4uZ2V0RnVsbFllYXIoKSArIGUgKiB0KSB9KSkgOiBudWxsIH07IHZhciBzeSA9IGZ5LCBseSA9IGZ5LnJhbmdlLCBoeSA9IHdnKChmdW5jdGlvbiAodCkgeyB0LnNldFVUQ1NlY29uZHMoMCwgMCkgfSksIChmdW5jdGlvbiAodCwgbikgeyB0LnNldFRpbWUoK3QgKyBuICogRWcpIH0pLCAoZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIChuIC0gdCkgLyBFZyB9KSwgKGZ1bmN0aW9uICh0KSB7IHJldHVybiB0LmdldFVUQ01pbnV0ZXMoKSB9KSksIGR5ID0gaHksIHB5ID0gaHkucmFuZ2UsIGd5ID0gd2coKGZ1bmN0aW9uICh0KSB7IHQuc2V0VVRDTWludXRlcygwLCAwLCAwKSB9KSwgKGZ1bmN0aW9uICh0LCBuKSB7IHQuc2V0VGltZSgrdCArIG4gKiBrZykgfSksIChmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gKG4gLSB0KSAvIGtnIH0pLCAoZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQuZ2V0VVRDSG91cnMoKSB9KSksIHl5ID0gZ3ksIHZ5ID0gZ3kucmFuZ2UsIF95ID0gd2coKGZ1bmN0aW9uICh0KSB7IHQuc2V0VVRDSG91cnMoMCwgMCwgMCwgMCkgfSksIChmdW5jdGlvbiAodCwgbikgeyB0LnNldFVUQ0RhdGUodC5nZXRVVENEYXRlKCkgKyBuKSB9KSwgKGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiAobiAtIHQpIC8gTmcgfSksIChmdW5jdGlvbiAodCkgeyByZXR1cm4gdC5nZXRVVENEYXRlKCkgLSAxIH0pKSwgYnkgPSBfeSwgbXkgPSBfeS5yYW5nZTsgZnVuY3Rpb24geHkodCkgeyByZXR1cm4gd2coKGZ1bmN0aW9uIChuKSB7IG4uc2V0VVRDRGF0ZShuLmdldFVUQ0RhdGUoKSAtIChuLmdldFVUQ0RheSgpICsgNyAtIHQpICUgNyksIG4uc2V0VVRDSG91cnMoMCwgMCwgMCwgMCkgfSksIChmdW5jdGlvbiAodCwgbikgeyB0LnNldFVUQ0RhdGUodC5nZXRVVENEYXRlKCkgKyA3ICogbikgfSksIChmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gKG4gLSB0KSAvIENnIH0pKSB9IHZhciB3eSA9IHh5KDApLCBNeSA9IHh5KDEpLCBBeSA9IHh5KDIpLCBUeSA9IHh5KDMpLCBTeSA9IHh5KDQpLCBFeSA9IHh5KDUpLCBreSA9IHh5KDYpLCBOeSA9IHd5LnJhbmdlLCBDeSA9IE15LnJhbmdlLCBQeSA9IEF5LnJhbmdlLCB6eSA9IFR5LnJhbmdlLCBEeSA9IFN5LnJhbmdlLCBSeSA9IEV5LnJhbmdlLCBGeSA9IGt5LnJhbmdlLCBxeSA9IHdnKChmdW5jdGlvbiAodCkgeyB0LnNldFVUQ0RhdGUoMSksIHQuc2V0VVRDSG91cnMoMCwgMCwgMCwgMCkgfSksIChmdW5jdGlvbiAodCwgbikgeyB0LnNldFVUQ01vbnRoKHQuZ2V0VVRDTW9udGgoKSArIG4pIH0pLCAoZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIG4uZ2V0VVRDTW9udGgoKSAtIHQuZ2V0VVRDTW9udGgoKSArIDEyICogKG4uZ2V0VVRDRnVsbFllYXIoKSAtIHQuZ2V0VVRDRnVsbFllYXIoKSkgfSksIChmdW5jdGlvbiAodCkgeyByZXR1cm4gdC5nZXRVVENNb250aCgpIH0pKSwgSXkgPSBxeSwgT3kgPSBxeS5yYW5nZSwgVXkgPSB3ZygoZnVuY3Rpb24gKHQpIHsgdC5zZXRVVENNb250aCgwLCAxKSwgdC5zZXRVVENIb3VycygwLCAwLCAwLCAwKSB9KSwgKGZ1bmN0aW9uICh0LCBuKSB7IHQuc2V0VVRDRnVsbFllYXIodC5nZXRVVENGdWxsWWVhcigpICsgbikgfSksIChmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gbi5nZXRVVENGdWxsWWVhcigpIC0gdC5nZXRVVENGdWxsWWVhcigpIH0pLCAoZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQuZ2V0VVRDRnVsbFllYXIoKSB9KSk7IFV5LmV2ZXJ5ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGlzRmluaXRlKHQgPSBNYXRoLmZsb29yKHQpKSAmJiB0ID4gMCA/IHdnKChmdW5jdGlvbiAobikgeyBuLnNldFVUQ0Z1bGxZZWFyKE1hdGguZmxvb3Iobi5nZXRVVENGdWxsWWVhcigpIC8gdCkgKiB0KSwgbi5zZXRVVENNb250aCgwLCAxKSwgbi5zZXRVVENIb3VycygwLCAwLCAwLCAwKSB9KSwgKGZ1bmN0aW9uIChuLCBlKSB7IG4uc2V0VVRDRnVsbFllYXIobi5nZXRVVENGdWxsWWVhcigpICsgZSAqIHQpIH0pKSA6IG51bGwgfTsgdmFyIEJ5ID0gVXksIFl5ID0gVXkucmFuZ2U7IGZ1bmN0aW9uIEx5KHQsIG4sIGUsIGksIG8sIGEpIHsgY29uc3QgdSA9IFtbUmcsIDEsIFNnXSwgW1JnLCA1LCA1ZTNdLCBbUmcsIDE1LCAxNWUzXSwgW1JnLCAzMCwgM2U0XSwgW2EsIDEsIEVnXSwgW2EsIDUsIDNlNV0sIFthLCAxNSwgOWU1XSwgW2EsIDMwLCAxOGU1XSwgW28sIDEsIGtnXSwgW28sIDMsIDEwOGU1XSwgW28sIDYsIDIxNmU1XSwgW28sIDEyLCA0MzJlNV0sIFtpLCAxLCBOZ10sIFtpLCAyLCAxNzI4ZTVdLCBbZSwgMSwgQ2ddLCBbbiwgMSwgUGddLCBbbiwgMywgNzc3NmU2XSwgW3QsIDEsIHpnXV07IGZ1bmN0aW9uIGMobiwgZSwgaSkgeyBjb25zdCBvID0gTWF0aC5hYnMoZSAtIG4pIC8gaSwgYSA9IHIoKChbLCAsIHRdKSA9PiB0KSkucmlnaHQodSwgbyk7IGlmIChhID09PSB1Lmxlbmd0aCkgcmV0dXJuIHQuZXZlcnkoVyhuIC8gemcsIGUgLyB6ZywgaSkpOyBpZiAoMCA9PT0gYSkgcmV0dXJuIEFnLmV2ZXJ5KE1hdGgubWF4KFcobiwgZSwgaSksIDEpKTsgY29uc3QgW2MsIGZdID0gdVtvIC8gdVthIC0gMV1bMl0gPCB1W2FdWzJdIC8gbyA/IGEgLSAxIDogYV07IHJldHVybiBjLmV2ZXJ5KGYpIH0gcmV0dXJuIFtmdW5jdGlvbiAodCwgbiwgZSkgeyBjb25zdCByID0gbiA8IHQ7IHIgJiYgKFt0LCBuXSA9IFtuLCB0XSk7IGNvbnN0IGkgPSBlICYmICJmdW5jdGlvbiIgPT0gdHlwZW9mIGUucmFuZ2UgPyBlIDogYyh0LCBuLCBlKSwgbyA9IGkgPyBpLnJhbmdlKHQsICtuICsgMSkgOiBbXTsgcmV0dXJuIHIgPyBvLnJldmVyc2UoKSA6IG8gfSwgY10gfSBjb25zdCBbanksICR5XSA9IEx5KEJ5LCBJeSwgd3ksIGJ5LCB5eSwgZHkpLCBbSHksIFh5XSA9IEx5KHN5LCB1eSwgWGcsIGpnLCBCZywgSWcpOyBmdW5jdGlvbiBHeSh0KSB7IGlmICgwIDw9IHQueSAmJiB0LnkgPCAxMDApIHsgdmFyIG4gPSBuZXcgRGF0ZSgtMSwgdC5tLCB0LmQsIHQuSCwgdC5NLCB0LlMsIHQuTCk7IHJldHVybiBuLnNldEZ1bGxZZWFyKHQueSksIG4gfSByZXR1cm4gbmV3IERhdGUodC55LCB0Lm0sIHQuZCwgdC5ILCB0Lk0sIHQuUywgdC5MKSB9IGZ1bmN0aW9uIFZ5KHQpIHsgaWYgKDAgPD0gdC55ICYmIHQueSA8IDEwMCkgeyB2YXIgbiA9IG5ldyBEYXRlKERhdGUuVVRDKC0xLCB0Lm0sIHQuZCwgdC5ILCB0Lk0sIHQuUywgdC5MKSk7IHJldHVybiBuLnNldFVUQ0Z1bGxZZWFyKHQueSksIG4gfSByZXR1cm4gbmV3IERhdGUoRGF0ZS5VVEModC55LCB0Lm0sIHQuZCwgdC5ILCB0Lk0sIHQuUywgdC5MKSkgfSBmdW5jdGlvbiBXeSh0LCBuLCBlKSB7IHJldHVybiB7IHk6IHQsIG06IG4sIGQ6IGUsIEg6IDAsIE06IDAsIFM6IDAsIEw6IDAgfSB9IGZ1bmN0aW9uIFp5KHQpIHsgdmFyIG4gPSB0LmRhdGVUaW1lLCBlID0gdC5kYXRlLCByID0gdC50aW1lLCBpID0gdC5wZXJpb2RzLCBvID0gdC5kYXlzLCBhID0gdC5zaG9ydERheXMsIHUgPSB0Lm1vbnRocywgYyA9IHQuc2hvcnRNb250aHMsIGYgPSBpdihpKSwgcyA9IG92KGkpLCBsID0gaXYobyksIGggPSBvdihvKSwgZCA9IGl2KGEpLCBwID0gb3YoYSksIGcgPSBpdih1KSwgeSA9IG92KHUpLCB2ID0gaXYoYyksIF8gPSBvdihjKSwgYiA9IHsgYTogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFbdC5nZXREYXkoKV0gfSwgQTogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIG9bdC5nZXREYXkoKV0gfSwgYjogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGNbdC5nZXRNb250aCgpXSB9LCBCOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gdVt0LmdldE1vbnRoKCldIH0sIGM6IG51bGwsIGQ6IFN2LCBlOiBTdiwgZjogUHYsIGc6IEx2LCBHOiAkdiwgSDogRXYsIEk6IGt2LCBqOiBOdiwgTDogQ3YsIG06IHp2LCBNOiBEdiwgcDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGlbKyh0LmdldEhvdXJzKCkgPj0gMTIpXSB9LCBxOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gMSArIH5+KHQuZ2V0TW9udGgoKSAvIDMpIH0sIFE6IGRfLCBzOiBwXywgUzogUnYsIHU6IEZ2LCBVOiBxdiwgVjogT3YsIHc6IFV2LCBXOiBCdiwgeDogbnVsbCwgWDogbnVsbCwgeTogWXYsIFk6IGp2LCBaOiBIdiwgIiUiOiBoXyB9LCBtID0geyBhOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gYVt0LmdldFVUQ0RheSgpXSB9LCBBOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gb1t0LmdldFVUQ0RheSgpXSB9LCBiOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gY1t0LmdldFVUQ01vbnRoKCldIH0sIEI6IGZ1bmN0aW9uICh0KSB7IHJldHVybiB1W3QuZ2V0VVRDTW9udGgoKV0gfSwgYzogbnVsbCwgZDogWHYsIGU6IFh2LCBmOiBLdiwgZzogY18sIEc6IHNfLCBIOiBHdiwgSTogVnYsIGo6IFd2LCBMOiBadiwgbTogUXYsIE06IEp2LCBwOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gaVsrKHQuZ2V0VVRDSG91cnMoKSA+PSAxMildIH0sIHE6IGZ1bmN0aW9uICh0KSB7IHJldHVybiAxICsgfn4odC5nZXRVVENNb250aCgpIC8gMykgfSwgUTogZF8sIHM6IHBfLCBTOiB0XywgdTogbl8sIFU6IGVfLCBWOiBpXywgdzogb18sIFc6IGFfLCB4OiBudWxsLCBYOiBudWxsLCB5OiB1XywgWTogZl8sIFo6IGxfLCAiJSI6IGhfIH0sIHggPSB7IGE6IGZ1bmN0aW9uICh0LCBuLCBlKSB7IHZhciByID0gZC5leGVjKG4uc2xpY2UoZSkpOyByZXR1cm4gciA/ICh0LncgPSBwLmdldChyWzBdLnRvTG93ZXJDYXNlKCkpLCBlICsgclswXS5sZW5ndGgpIDogLTEgfSwgQTogZnVuY3Rpb24gKHQsIG4sIGUpIHsgdmFyIHIgPSBsLmV4ZWMobi5zbGljZShlKSk7IHJldHVybiByID8gKHQudyA9IGguZ2V0KHJbMF0udG9Mb3dlckNhc2UoKSksIGUgKyByWzBdLmxlbmd0aCkgOiAtMSB9LCBiOiBmdW5jdGlvbiAodCwgbiwgZSkgeyB2YXIgciA9IHYuZXhlYyhuLnNsaWNlKGUpKTsgcmV0dXJuIHIgPyAodC5tID0gXy5nZXQoclswXS50b0xvd2VyQ2FzZSgpKSwgZSArIHJbMF0ubGVuZ3RoKSA6IC0xIH0sIEI6IGZ1bmN0aW9uICh0LCBuLCBlKSB7IHZhciByID0gZy5leGVjKG4uc2xpY2UoZSkpOyByZXR1cm4gciA/ICh0Lm0gPSB5LmdldChyWzBdLnRvTG93ZXJDYXNlKCkpLCBlICsgclswXS5sZW5ndGgpIDogLTEgfSwgYzogZnVuY3Rpb24gKHQsIGUsIHIpIHsgcmV0dXJuIEEodCwgbiwgZSwgcikgfSwgZDogeXYsIGU6IHl2LCBmOiB3diwgZzogaHYsIEc6IGx2LCBIOiBfdiwgSTogX3YsIGo6IHZ2LCBMOiB4diwgbTogZ3YsIE06IGJ2LCBwOiBmdW5jdGlvbiAodCwgbiwgZSkgeyB2YXIgciA9IGYuZXhlYyhuLnNsaWNlKGUpKTsgcmV0dXJuIHIgPyAodC5wID0gcy5nZXQoclswXS50b0xvd2VyQ2FzZSgpKSwgZSArIHJbMF0ubGVuZ3RoKSA6IC0xIH0sIHE6IHB2LCBROiBBdiwgczogVHYsIFM6IG12LCB1OiB1diwgVTogY3YsIFY6IGZ2LCB3OiBhdiwgVzogc3YsIHg6IGZ1bmN0aW9uICh0LCBuLCByKSB7IHJldHVybiBBKHQsIGUsIG4sIHIpIH0sIFg6IGZ1bmN0aW9uICh0LCBuLCBlKSB7IHJldHVybiBBKHQsIHIsIG4sIGUpIH0sIHk6IGh2LCBZOiBsdiwgWjogZHYsICIlIjogTXYgfTsgZnVuY3Rpb24gdyh0LCBuKSB7IHJldHVybiBmdW5jdGlvbiAoZSkgeyB2YXIgciwgaSwgbywgYSA9IFtdLCB1ID0gLTEsIGMgPSAwLCBmID0gdC5sZW5ndGg7IGZvciAoZSBpbnN0YW5jZW9mIERhdGUgfHwgKGUgPSBuZXcgRGF0ZSgrZSkpOyArK3UgPCBmOykzNyA9PT0gdC5jaGFyQ29kZUF0KHUpICYmIChhLnB1c2godC5zbGljZShjLCB1KSksIG51bGwgIT0gKGkgPSBReVtyID0gdC5jaGFyQXQoKyt1KV0pID8gciA9IHQuY2hhckF0KCsrdSkgOiBpID0gImUiID09PSByID8gIiAiIDogIjAiLCAobyA9IG5bcl0pICYmIChyID0gbyhlLCBpKSksIGEucHVzaChyKSwgYyA9IHUgKyAxKTsgcmV0dXJuIGEucHVzaCh0LnNsaWNlKGMsIHUpKSwgYS5qb2luKCIiKSB9IH0gZnVuY3Rpb24gTSh0LCBuKSB7IHJldHVybiBmdW5jdGlvbiAoZSkgeyB2YXIgciwgaSwgbyA9IFd5KDE5MDAsIHZvaWQgMCwgMSk7IGlmIChBKG8sIHQsIGUgKz0gIiIsIDApICE9IGUubGVuZ3RoKSByZXR1cm4gbnVsbDsgaWYgKCJRIiBpbiBvKSByZXR1cm4gbmV3IERhdGUoby5RKTsgaWYgKCJzIiBpbiBvKSByZXR1cm4gbmV3IERhdGUoMWUzICogby5zICsgKCJMIiBpbiBvID8gby5MIDogMCkpOyBpZiAobiAmJiAhKCJaIiBpbiBvKSAmJiAoby5aID0gMCksICJwIiBpbiBvICYmIChvLkggPSBvLkggJSAxMiArIDEyICogby5wKSwgdm9pZCAwID09PSBvLm0gJiYgKG8ubSA9ICJxIiBpbiBvID8gby5xIDogMCksICJWIiBpbiBvKSB7IGlmIChvLlYgPCAxIHx8IG8uViA+IDUzKSByZXR1cm4gbnVsbDsgInciIGluIG8gfHwgKG8udyA9IDEpLCAiWiIgaW4gbyA/IChpID0gKHIgPSBWeShXeShvLnksIDAsIDEpKSkuZ2V0VVRDRGF5KCksIHIgPSBpID4gNCB8fCAwID09PSBpID8gTXkuY2VpbChyKSA6IE15KHIpLCByID0gYnkub2Zmc2V0KHIsIDcgKiAoby5WIC0gMSkpLCBvLnkgPSByLmdldFVUQ0Z1bGxZZWFyKCksIG8ubSA9IHIuZ2V0VVRDTW9udGgoKSwgby5kID0gci5nZXRVVENEYXRlKCkgKyAoby53ICsgNikgJSA3KSA6IChpID0gKHIgPSBHeShXeShvLnksIDAsIDEpKSkuZ2V0RGF5KCksIHIgPSBpID4gNCB8fCAwID09PSBpID8gR2cuY2VpbChyKSA6IEdnKHIpLCByID0gamcub2Zmc2V0KHIsIDcgKiAoby5WIC0gMSkpLCBvLnkgPSByLmdldEZ1bGxZZWFyKCksIG8ubSA9IHIuZ2V0TW9udGgoKSwgby5kID0gci5nZXREYXRlKCkgKyAoby53ICsgNikgJSA3KSB9IGVsc2UgKCJXIiBpbiBvIHx8ICJVIiBpbiBvKSAmJiAoInciIGluIG8gfHwgKG8udyA9ICJ1IiBpbiBvID8gby51ICUgNyA6ICJXIiBpbiBvID8gMSA6IDApLCBpID0gIloiIGluIG8gPyBWeShXeShvLnksIDAsIDEpKS5nZXRVVENEYXkoKSA6IEd5KFd5KG8ueSwgMCwgMSkpLmdldERheSgpLCBvLm0gPSAwLCBvLmQgPSAiVyIgaW4gbyA/IChvLncgKyA2KSAlIDcgKyA3ICogby5XIC0gKGkgKyA1KSAlIDcgOiBvLncgKyA3ICogby5VIC0gKGkgKyA2KSAlIDcpOyByZXR1cm4gIloiIGluIG8gPyAoby5IICs9IG8uWiAvIDEwMCB8IDAsIG8uTSArPSBvLlogJSAxMDAsIFZ5KG8pKSA6IEd5KG8pIH0gfSBmdW5jdGlvbiBBKHQsIG4sIGUsIHIpIHsgZm9yICh2YXIgaSwgbywgYSA9IDAsIHUgPSBuLmxlbmd0aCwgYyA9IGUubGVuZ3RoOyBhIDwgdTspIHsgaWYgKHIgPj0gYykgcmV0dXJuIC0xOyBpZiAoMzcgPT09IChpID0gbi5jaGFyQ29kZUF0KGErKykpKSB7IGlmIChpID0gbi5jaGFyQXQoYSsrKSwgIShvID0geFtpIGluIFF5ID8gbi5jaGFyQXQoYSsrKSA6IGldKSB8fCAociA9IG8odCwgZSwgcikpIDwgMCkgcmV0dXJuIC0xIH0gZWxzZSBpZiAoaSAhPSBlLmNoYXJDb2RlQXQocisrKSkgcmV0dXJuIC0xIH0gcmV0dXJuIHIgfSByZXR1cm4gYi54ID0gdyhlLCBiKSwgYi5YID0gdyhyLCBiKSwgYi5jID0gdyhuLCBiKSwgbS54ID0gdyhlLCBtKSwgbS5YID0gdyhyLCBtKSwgbS5jID0gdyhuLCBtKSwgeyBmb3JtYXQ6IGZ1bmN0aW9uICh0KSB7IHZhciBuID0gdyh0ICs9ICIiLCBiKTsgcmV0dXJuIG4udG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB0IH0sIG4gfSwgcGFyc2U6IGZ1bmN0aW9uICh0KSB7IHZhciBuID0gTSh0ICs9ICIiLCAhMSk7IHJldHVybiBuLnRvU3RyaW5nID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdCB9LCBuIH0sIHV0Y0Zvcm1hdDogZnVuY3Rpb24gKHQpIHsgdmFyIG4gPSB3KHQgKz0gIiIsIG0pOyByZXR1cm4gbi50b1N0cmluZyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHQgfSwgbiB9LCB1dGNQYXJzZTogZnVuY3Rpb24gKHQpIHsgdmFyIG4gPSBNKHQgKz0gIiIsICEwKTsgcmV0dXJuIG4udG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB0IH0sIG4gfSB9IH0gdmFyIEt5LCBReSA9IHsgIi0iOiAiIiwgXzogIiAiLCAwOiAiMCIgfSwgSnkgPSAvXlxzKlxkKy8sIHR2ID0gL14lLywgbnYgPSAvW1xcXiQqKz98W1xdKCkue31dL2c7IGZ1bmN0aW9uIGV2KHQsIG4sIGUpIHsgdmFyIHIgPSB0IDwgMCA/ICItIiA6ICIiLCBpID0gKHIgPyAtdCA6IHQpICsgIiIsIG8gPSBpLmxlbmd0aDsgcmV0dXJuIHIgKyAobyA8IGUgPyBuZXcgQXJyYXkoZSAtIG8gKyAxKS5qb2luKG4pICsgaSA6IGkpIH0gZnVuY3Rpb24gcnYodCkgeyByZXR1cm4gdC5yZXBsYWNlKG52LCAiXFwkJiIpIH0gZnVuY3Rpb24gaXYodCkgeyByZXR1cm4gbmV3IFJlZ0V4cCgiXig/OiIgKyB0Lm1hcChydikuam9pbigifCIpICsgIikiLCAiaSIpIH0gZnVuY3Rpb24gb3YodCkgeyByZXR1cm4gbmV3IE1hcCh0Lm1hcCgoKHQsIG4pID0+IFt0LnRvTG93ZXJDYXNlKCksIG5dKSkpIH0gZnVuY3Rpb24gYXYodCwgbiwgZSkgeyB2YXIgciA9IEp5LmV4ZWMobi5zbGljZShlLCBlICsgMSkpOyByZXR1cm4gciA/ICh0LncgPSArclswXSwgZSArIHJbMF0ubGVuZ3RoKSA6IC0xIH0gZnVuY3Rpb24gdXYodCwgbiwgZSkgeyB2YXIgciA9IEp5LmV4ZWMobi5zbGljZShlLCBlICsgMSkpOyByZXR1cm4gciA/ICh0LnUgPSArclswXSwgZSArIHJbMF0ubGVuZ3RoKSA6IC0xIH0gZnVuY3Rpb24gY3YodCwgbiwgZSkgeyB2YXIgciA9IEp5LmV4ZWMobi5zbGljZShlLCBlICsgMikpOyByZXR1cm4gciA/ICh0LlUgPSArclswXSwgZSArIHJbMF0ubGVuZ3RoKSA6IC0xIH0gZnVuY3Rpb24gZnYodCwgbiwgZSkgeyB2YXIgciA9IEp5LmV4ZWMobi5zbGljZShlLCBlICsgMikpOyByZXR1cm4gciA/ICh0LlYgPSArclswXSwgZSArIHJbMF0ubGVuZ3RoKSA6IC0xIH0gZnVuY3Rpb24gc3YodCwgbiwgZSkgeyB2YXIgciA9IEp5LmV4ZWMobi5zbGljZShlLCBlICsgMikpOyByZXR1cm4gciA/ICh0LlcgPSArclswXSwgZSArIHJbMF0ubGVuZ3RoKSA6IC0xIH0gZnVuY3Rpb24gbHYodCwgbiwgZSkgeyB2YXIgciA9IEp5LmV4ZWMobi5zbGljZShlLCBlICsgNCkpOyByZXR1cm4gciA/ICh0LnkgPSArclswXSwgZSArIHJbMF0ubGVuZ3RoKSA6IC0xIH0gZnVuY3Rpb24gaHYodCwgbiwgZSkgeyB2YXIgciA9IEp5LmV4ZWMobi5zbGljZShlLCBlICsgMikpOyByZXR1cm4gciA/ICh0LnkgPSArclswXSArICgrclswXSA+IDY4ID8gMTkwMCA6IDJlMyksIGUgKyByWzBdLmxlbmd0aCkgOiAtMSB9IGZ1bmN0aW9uIGR2KHQsIG4sIGUpIHsgdmFyIHIgPSAvXihaKXwoWystXVxkXGQpKD86Oj8oXGRcZCkpPy8uZXhlYyhuLnNsaWNlKGUsIGUgKyA2KSk7IHJldHVybiByID8gKHQuWiA9IHJbMV0gPyAwIDogLShyWzJdICsgKHJbM10gfHwgIjAwIikpLCBlICsgclswXS5sZW5ndGgpIDogLTEgfSBmdW5jdGlvbiBwdih0LCBuLCBlKSB7IHZhciByID0gSnkuZXhlYyhuLnNsaWNlKGUsIGUgKyAxKSk7IHJldHVybiByID8gKHQucSA9IDMgKiByWzBdIC0gMywgZSArIHJbMF0ubGVuZ3RoKSA6IC0xIH0gZnVuY3Rpb24gZ3YodCwgbiwgZSkgeyB2YXIgciA9IEp5LmV4ZWMobi5zbGljZShlLCBlICsgMikpOyByZXR1cm4gciA/ICh0Lm0gPSByWzBdIC0gMSwgZSArIHJbMF0ubGVuZ3RoKSA6IC0xIH0gZnVuY3Rpb24geXYodCwgbiwgZSkgeyB2YXIgciA9IEp5LmV4ZWMobi5zbGljZShlLCBlICsgMikpOyByZXR1cm4gciA/ICh0LmQgPSArclswXSwgZSArIHJbMF0ubGVuZ3RoKSA6IC0xIH0gZnVuY3Rpb24gdnYodCwgbiwgZSkgeyB2YXIgciA9IEp5LmV4ZWMobi5zbGljZShlLCBlICsgMykpOyByZXR1cm4gciA/ICh0Lm0gPSAwLCB0LmQgPSArclswXSwgZSArIHJbMF0ubGVuZ3RoKSA6IC0xIH0gZnVuY3Rpb24gX3YodCwgbiwgZSkgeyB2YXIgciA9IEp5LmV4ZWMobi5zbGljZShlLCBlICsgMikpOyByZXR1cm4gciA/ICh0LkggPSArclswXSwgZSArIHJbMF0ubGVuZ3RoKSA6IC0xIH0gZnVuY3Rpb24gYnYodCwgbiwgZSkgeyB2YXIgciA9IEp5LmV4ZWMobi5zbGljZShlLCBlICsgMikpOyByZXR1cm4gciA/ICh0Lk0gPSArclswXSwgZSArIHJbMF0ubGVuZ3RoKSA6IC0xIH0gZnVuY3Rpb24gbXYodCwgbiwgZSkgeyB2YXIgciA9IEp5LmV4ZWMobi5zbGljZShlLCBlICsgMikpOyByZXR1cm4gciA/ICh0LlMgPSArclswXSwgZSArIHJbMF0ubGVuZ3RoKSA6IC0xIH0gZnVuY3Rpb24geHYodCwgbiwgZSkgeyB2YXIgciA9IEp5LmV4ZWMobi5zbGljZShlLCBlICsgMykpOyByZXR1cm4gciA/ICh0LkwgPSArclswXSwgZSArIHJbMF0ubGVuZ3RoKSA6IC0xIH0gZnVuY3Rpb24gd3YodCwgbiwgZSkgeyB2YXIgciA9IEp5LmV4ZWMobi5zbGljZShlLCBlICsgNikpOyByZXR1cm4gciA/ICh0LkwgPSBNYXRoLmZsb29yKHJbMF0gLyAxZTMpLCBlICsgclswXS5sZW5ndGgpIDogLTEgfSBmdW5jdGlvbiBNdih0LCBuLCBlKSB7IHZhciByID0gdHYuZXhlYyhuLnNsaWNlKGUsIGUgKyAxKSk7IHJldHVybiByID8gZSArIHJbMF0ubGVuZ3RoIDogLTEgfSBmdW5jdGlvbiBBdih0LCBuLCBlKSB7IHZhciByID0gSnkuZXhlYyhuLnNsaWNlKGUpKTsgcmV0dXJuIHIgPyAodC5RID0gK3JbMF0sIGUgKyByWzBdLmxlbmd0aCkgOiAtMSB9IGZ1bmN0aW9uIFR2KHQsIG4sIGUpIHsgdmFyIHIgPSBKeS5leGVjKG4uc2xpY2UoZSkpOyByZXR1cm4gciA/ICh0LnMgPSArclswXSwgZSArIHJbMF0ubGVuZ3RoKSA6IC0xIH0gZnVuY3Rpb24gU3YodCwgbikgeyByZXR1cm4gZXYodC5nZXREYXRlKCksIG4sIDIpIH0gZnVuY3Rpb24gRXYodCwgbikgeyByZXR1cm4gZXYodC5nZXRIb3VycygpLCBuLCAyKSB9IGZ1bmN0aW9uIGt2KHQsIG4pIHsgcmV0dXJuIGV2KHQuZ2V0SG91cnMoKSAlIDEyIHx8IDEyLCBuLCAyKSB9IGZ1bmN0aW9uIE52KHQsIG4pIHsgcmV0dXJuIGV2KDEgKyBqZy5jb3VudChzeSh0KSwgdCksIG4sIDMpIH0gZnVuY3Rpb24gQ3YodCwgbikgeyByZXR1cm4gZXYodC5nZXRNaWxsaXNlY29uZHMoKSwgbiwgMykgfSBmdW5jdGlvbiBQdih0LCBuKSB7IHJldHVybiBDdih0LCBuKSArICIwMDAiIH0gZnVuY3Rpb24genYodCwgbikgeyByZXR1cm4gZXYodC5nZXRNb250aCgpICsgMSwgbiwgMikgfSBmdW5jdGlvbiBEdih0LCBuKSB7IHJldHVybiBldih0LmdldE1pbnV0ZXMoKSwgbiwgMikgfSBmdW5jdGlvbiBSdih0LCBuKSB7IHJldHVybiBldih0LmdldFNlY29uZHMoKSwgbiwgMikgfSBmdW5jdGlvbiBGdih0KSB7IHZhciBuID0gdC5nZXREYXkoKTsgcmV0dXJuIDAgPT09IG4gPyA3IDogbiB9IGZ1bmN0aW9uIHF2KHQsIG4pIHsgcmV0dXJuIGV2KFhnLmNvdW50KHN5KHQpIC0gMSwgdCksIG4sIDIpIH0gZnVuY3Rpb24gSXYodCkgeyB2YXIgbiA9IHQuZ2V0RGF5KCk7IHJldHVybiBuID49IDQgfHwgMCA9PT0gbiA/IFpnKHQpIDogWmcuY2VpbCh0KSB9IGZ1bmN0aW9uIE92KHQsIG4pIHsgcmV0dXJuIHQgPSBJdih0KSwgZXYoWmcuY291bnQoc3kodCksIHQpICsgKDQgPT09IHN5KHQpLmdldERheSgpKSwgbiwgMikgfSBmdW5jdGlvbiBVdih0KSB7IHJldHVybiB0LmdldERheSgpIH0gZnVuY3Rpb24gQnYodCwgbikgeyByZXR1cm4gZXYoR2cuY291bnQoc3kodCkgLSAxLCB0KSwgbiwgMikgfSBmdW5jdGlvbiBZdih0LCBuKSB7IHJldHVybiBldih0LmdldEZ1bGxZZWFyKCkgJSAxMDAsIG4sIDIpIH0gZnVuY3Rpb24gTHYodCwgbikgeyByZXR1cm4gZXYoKHQgPSBJdih0KSkuZ2V0RnVsbFllYXIoKSAlIDEwMCwgbiwgMikgfSBmdW5jdGlvbiBqdih0LCBuKSB7IHJldHVybiBldih0LmdldEZ1bGxZZWFyKCkgJSAxZTQsIG4sIDQpIH0gZnVuY3Rpb24gJHYodCwgbikgeyB2YXIgZSA9IHQuZ2V0RGF5KCk7IHJldHVybiBldigodCA9IGUgPj0gNCB8fCAwID09PSBlID8gWmcodCkgOiBaZy5jZWlsKHQpKS5nZXRGdWxsWWVhcigpICUgMWU0LCBuLCA0KSB9IGZ1bmN0aW9uIEh2KHQpIHsgdmFyIG4gPSB0LmdldFRpbWV6b25lT2Zmc2V0KCk7IHJldHVybiAobiA+IDAgPyAiLSIgOiAobiAqPSAtMSwgIisiKSkgKyBldihuIC8gNjAgfCAwLCAiMCIsIDIpICsgZXYobiAlIDYwLCAiMCIsIDIpIH0gZnVuY3Rpb24gWHYodCwgbikgeyByZXR1cm4gZXYodC5nZXRVVENEYXRlKCksIG4sIDIpIH0gZnVuY3Rpb24gR3YodCwgbikgeyByZXR1cm4gZXYodC5nZXRVVENIb3VycygpLCBuLCAyKSB9IGZ1bmN0aW9uIFZ2KHQsIG4pIHsgcmV0dXJuIGV2KHQuZ2V0VVRDSG91cnMoKSAlIDEyIHx8IDEyLCBuLCAyKSB9IGZ1bmN0aW9uIFd2KHQsIG4pIHsgcmV0dXJuIGV2KDEgKyBieS5jb3VudChCeSh0KSwgdCksIG4sIDMpIH0gZnVuY3Rpb24gWnYodCwgbikgeyByZXR1cm4gZXYodC5nZXRVVENNaWxsaXNlY29uZHMoKSwgbiwgMykgfSBmdW5jdGlvbiBLdih0LCBuKSB7IHJldHVybiBadih0LCBuKSArICIwMDAiIH0gZnVuY3Rpb24gUXYodCwgbikgeyByZXR1cm4gZXYodC5nZXRVVENNb250aCgpICsgMSwgbiwgMikgfSBmdW5jdGlvbiBKdih0LCBuKSB7IHJldHVybiBldih0LmdldFVUQ01pbnV0ZXMoKSwgbiwgMikgfSBmdW5jdGlvbiB0Xyh0LCBuKSB7IHJldHVybiBldih0LmdldFVUQ1NlY29uZHMoKSwgbiwgMikgfSBmdW5jdGlvbiBuXyh0KSB7IHZhciBuID0gdC5nZXRVVENEYXkoKTsgcmV0dXJuIDAgPT09IG4gPyA3IDogbiB9IGZ1bmN0aW9uIGVfKHQsIG4pIHsgcmV0dXJuIGV2KHd5LmNvdW50KEJ5KHQpIC0gMSwgdCksIG4sIDIpIH0gZnVuY3Rpb24gcl8odCkgeyB2YXIgbiA9IHQuZ2V0VVRDRGF5KCk7IHJldHVybiBuID49IDQgfHwgMCA9PT0gbiA/IFN5KHQpIDogU3kuY2VpbCh0KSB9IGZ1bmN0aW9uIGlfKHQsIG4pIHsgcmV0dXJuIHQgPSByXyh0KSwgZXYoU3kuY291bnQoQnkodCksIHQpICsgKDQgPT09IEJ5KHQpLmdldFVUQ0RheSgpKSwgbiwgMikgfSBmdW5jdGlvbiBvXyh0KSB7IHJldHVybiB0LmdldFVUQ0RheSgpIH0gZnVuY3Rpb24gYV8odCwgbikgeyByZXR1cm4gZXYoTXkuY291bnQoQnkodCkgLSAxLCB0KSwgbiwgMikgfSBmdW5jdGlvbiB1Xyh0LCBuKSB7IHJldHVybiBldih0LmdldFVUQ0Z1bGxZZWFyKCkgJSAxMDAsIG4sIDIpIH0gZnVuY3Rpb24gY18odCwgbikgeyByZXR1cm4gZXYoKHQgPSByXyh0KSkuZ2V0VVRDRnVsbFllYXIoKSAlIDEwMCwgbiwgMikgfSBmdW5jdGlvbiBmXyh0LCBuKSB7IHJldHVybiBldih0LmdldFVUQ0Z1bGxZZWFyKCkgJSAxZTQsIG4sIDQpIH0gZnVuY3Rpb24gc18odCwgbikgeyB2YXIgZSA9IHQuZ2V0VVRDRGF5KCk7IHJldHVybiBldigodCA9IGUgPj0gNCB8fCAwID09PSBlID8gU3kodCkgOiBTeS5jZWlsKHQpKS5nZXRVVENGdWxsWWVhcigpICUgMWU0LCBuLCA0KSB9IGZ1bmN0aW9uIGxfKCkgeyByZXR1cm4gIiswMDAwIiB9IGZ1bmN0aW9uIGhfKCkgeyByZXR1cm4gIiUiIH0gZnVuY3Rpb24gZF8odCkgeyByZXR1cm4gK3QgfSBmdW5jdGlvbiBwXyh0KSB7IHJldHVybiBNYXRoLmZsb29yKCt0IC8gMWUzKSB9IGZ1bmN0aW9uIGdfKG4pIHsgcmV0dXJuIEt5ID0gWnkobiksIHQudGltZUZvcm1hdCA9IEt5LmZvcm1hdCwgdC50aW1lUGFyc2UgPSBLeS5wYXJzZSwgdC51dGNGb3JtYXQgPSBLeS51dGNGb3JtYXQsIHQudXRjUGFyc2UgPSBLeS51dGNQYXJzZSwgS3kgfSB0LnRpbWVGb3JtYXQgPSB2b2lkIDAsIHQudGltZVBhcnNlID0gdm9pZCAwLCB0LnV0Y0Zvcm1hdCA9IHZvaWQgMCwgdC51dGNQYXJzZSA9IHZvaWQgMCwgZ18oeyBkYXRlVGltZTogIiV4LCAlWCIsIGRhdGU6ICIlLW0vJS1kLyVZIiwgdGltZTogIiUtSTolTTolUyAlcCIsIHBlcmlvZHM6IFsiQU0iLCAiUE0iXSwgZGF5czogWyJTdW5kYXkiLCAiTW9uZGF5IiwgIlR1ZXNkYXkiLCAiV2VkbmVzZGF5IiwgIlRodXJzZGF5IiwgIkZyaWRheSIsICJTYXR1cmRheSJdLCBzaG9ydERheXM6IFsiU3VuIiwgIk1vbiIsICJUdWUiLCAiV2VkIiwgIlRodSIsICJGcmkiLCAiU2F0Il0sIG1vbnRoczogWyJKYW51YXJ5IiwgIkZlYnJ1YXJ5IiwgIk1hcmNoIiwgIkFwcmlsIiwgIk1heSIsICJKdW5lIiwgIkp1bHkiLCAiQXVndXN0IiwgIlNlcHRlbWJlciIsICJPY3RvYmVyIiwgIk5vdmVtYmVyIiwgIkRlY2VtYmVyIl0sIHNob3J0TW9udGhzOiBbIkphbiIsICJGZWIiLCAiTWFyIiwgIkFwciIsICJNYXkiLCAiSnVuIiwgIkp1bCIsICJBdWciLCAiU2VwIiwgIk9jdCIsICJOb3YiLCAiRGVjIl0gfSk7IHZhciB5XyA9ICIlWS0lbS0lZFQlSDolTTolUy4lTFoiOyB2YXIgdl8gPSBEYXRlLnByb3RvdHlwZS50b0lTT1N0cmluZyA/IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0LnRvSVNPU3RyaW5nKCkgfSA6IHQudXRjRm9ybWF0KHlfKSwgX18gPSB2XzsgdmFyIGJfID0gK25ldyBEYXRlKCIyMDAwLTAxLTAxVDAwOjAwOjAwLjAwMFoiKSA/IGZ1bmN0aW9uICh0KSB7IHZhciBuID0gbmV3IERhdGUodCk7IHJldHVybiBpc05hTihuKSA/IG51bGwgOiBuIH0gOiB0LnV0Y1BhcnNlKHlfKSwgbV8gPSBiXzsgZnVuY3Rpb24geF8odCkgeyByZXR1cm4gbmV3IERhdGUodCkgfSBmdW5jdGlvbiB3Xyh0KSB7IHJldHVybiB0IGluc3RhbmNlb2YgRGF0ZSA/ICt0IDogK25ldyBEYXRlKCt0KSB9IGZ1bmN0aW9uIE1fKHQsIG4sIGUsIHIsIGksIG8sIGEsIHUsIGMsIGYpIHsgdmFyIHMgPSBKcCgpLCBsID0gcy5pbnZlcnQsIGggPSBzLmRvbWFpbiwgZCA9IGYoIi4lTCIpLCBwID0gZigiOiVTIiksIGcgPSBmKCIlSTolTSIpLCB5ID0gZigiJUkgJXAiKSwgdiA9IGYoIiVhICVkIiksIF8gPSBmKCIlYiAlZCIpLCBiID0gZigiJUIiKSwgbSA9IGYoIiVZIik7IGZ1bmN0aW9uIHgodCkgeyByZXR1cm4gKGModCkgPCB0ID8gZCA6IHUodCkgPCB0ID8gcCA6IGEodCkgPCB0ID8gZyA6IG8odCkgPCB0ID8geSA6IHIodCkgPCB0ID8gaSh0KSA8IHQgPyB2IDogXyA6IGUodCkgPCB0ID8gYiA6IG0pKHQpIH0gcmV0dXJuIHMuaW52ZXJ0ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIG5ldyBEYXRlKGwodCkpIH0sIHMuZG9tYWluID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyBoKEFycmF5LmZyb20odCwgd18pKSA6IGgoKS5tYXAoeF8pIH0sIHMudGlja3MgPSBmdW5jdGlvbiAobikgeyB2YXIgZSA9IGgoKTsgcmV0dXJuIHQoZVswXSwgZVtlLmxlbmd0aCAtIDFdLCBudWxsID09IG4gPyAxMCA6IG4pIH0sIHMudGlja0Zvcm1hdCA9IGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiBudWxsID09IG4gPyB4IDogZihuKSB9LCBzLm5pY2UgPSBmdW5jdGlvbiAodCkgeyB2YXIgZSA9IGgoKTsgcmV0dXJuIHQgJiYgImZ1bmN0aW9uIiA9PSB0eXBlb2YgdC5yYW5nZSB8fCAodCA9IG4oZVswXSwgZVtlLmxlbmd0aCAtIDFdLCBudWxsID09IHQgPyAxMCA6IHQpKSwgdCA/IGgoZWcoZSwgdCkpIDogcyB9LCBzLmNvcHkgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBLcChzLCBNXyh0LCBuLCBlLCByLCBpLCBvLCBhLCB1LCBjLCBmKSkgfSwgcyB9IGZ1bmN0aW9uIEFfKCkgeyB2YXIgdCwgbiwgZSwgciwgaSwgbyA9IDAsIGEgPSAxLCB1ID0gR3AsIGMgPSAhMTsgZnVuY3Rpb24gZihuKSB7IHJldHVybiBudWxsID09IG4gfHwgaXNOYU4obiA9ICtuKSA/IGkgOiB1KDAgPT09IGUgPyAuNSA6IChuID0gKHIobikgLSB0KSAqIGUsIGMgPyBNYXRoLm1heCgwLCBNYXRoLm1pbigxLCBuKSkgOiBuKSkgfSBmdW5jdGlvbiBzKHQpIHsgcmV0dXJuIGZ1bmN0aW9uIChuKSB7IHZhciBlLCByOyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChbZSwgcl0gPSBuLCB1ID0gdChlLCByKSwgZikgOiBbdSgwKSwgdSgxKV0gfSB9IHJldHVybiBmLmRvbWFpbiA9IGZ1bmN0aW9uIChpKSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKFtvLCBhXSA9IGksIHQgPSByKG8gPSArbyksIG4gPSByKGEgPSArYSksIGUgPSB0ID09PSBuID8gMCA6IDEgLyAobiAtIHQpLCBmKSA6IFtvLCBhXSB9LCBmLmNsYW1wID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYyA9ICEhdCwgZikgOiBjIH0sIGYuaW50ZXJwb2xhdG9yID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodSA9IHQsIGYpIDogdSB9LCBmLnJhbmdlID0gcyhIciksIGYucmFuZ2VSb3VuZCA9IHMoWHIpLCBmLnVua25vd24gPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChpID0gdCwgZikgOiBpIH0sIGZ1bmN0aW9uIChpKSB7IHJldHVybiByID0gaSwgdCA9IGkobyksIG4gPSBpKGEpLCBlID0gdCA9PT0gbiA/IDAgOiAxIC8gKG4gLSB0KSwgZiB9IH0gZnVuY3Rpb24gVF8odCwgbikgeyByZXR1cm4gbi5kb21haW4odC5kb21haW4oKSkuaW50ZXJwb2xhdG9yKHQuaW50ZXJwb2xhdG9yKCkpLmNsYW1wKHQuY2xhbXAoKSkudW5rbm93bih0LnVua25vd24oKSkgfSBmdW5jdGlvbiBTXygpIHsgdmFyIHQgPSB5ZyhBXygpKTsgcmV0dXJuIHQuY29weSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFRfKHQsIFNfKCkpLmV4cG9uZW50KHQuZXhwb25lbnQoKSkgfSwgQnAuYXBwbHkodCwgYXJndW1lbnRzKSB9IGZ1bmN0aW9uIEVfKCkgeyB2YXIgdCwgbiwgZSwgciwgaSwgbywgYSwgdSA9IDAsIGMgPSAuNSwgZiA9IDEsIHMgPSAxLCBsID0gR3AsIGggPSAhMTsgZnVuY3Rpb24gZCh0KSB7IHJldHVybiBpc05hTih0ID0gK3QpID8gYSA6ICh0ID0gLjUgKyAoKHQgPSArbyh0KSkgLSBuKSAqIChzICogdCA8IHMgKiBuID8gciA6IGkpLCBsKGggPyBNYXRoLm1heCgwLCBNYXRoLm1pbigxLCB0KSkgOiB0KSkgfSBmdW5jdGlvbiBwKHQpIHsgcmV0dXJuIGZ1bmN0aW9uIChuKSB7IHZhciBlLCByLCBpOyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChbZSwgciwgaV0gPSBuLCBsID0gbGkodCwgW2UsIHIsIGldKSwgZCkgOiBbbCgwKSwgbCguNSksIGwoMSldIH0gfSByZXR1cm4gZC5kb21haW4gPSBmdW5jdGlvbiAoYSkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChbdSwgYywgZl0gPSBhLCB0ID0gbyh1ID0gK3UpLCBuID0gbyhjID0gK2MpLCBlID0gbyhmID0gK2YpLCByID0gdCA9PT0gbiA/IDAgOiAuNSAvIChuIC0gdCksIGkgPSBuID09PSBlID8gMCA6IC41IC8gKGUgLSBuKSwgcyA9IG4gPCB0ID8gLTEgOiAxLCBkKSA6IFt1LCBjLCBmXSB9LCBkLmNsYW1wID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoaCA9ICEhdCwgZCkgOiBoIH0sIGQuaW50ZXJwb2xhdG9yID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobCA9IHQsIGQpIDogbCB9LCBkLnJhbmdlID0gcChIciksIGQucmFuZ2VSb3VuZCA9IHAoWHIpLCBkLnVua25vd24gPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChhID0gdCwgZCkgOiBhIH0sIGZ1bmN0aW9uIChhKSB7IHJldHVybiBvID0gYSwgdCA9IGEodSksIG4gPSBhKGMpLCBlID0gYShmKSwgciA9IHQgPT09IG4gPyAwIDogLjUgLyAobiAtIHQpLCBpID0gbiA9PT0gZSA/IDAgOiAuNSAvIChlIC0gbiksIHMgPSBuIDwgdCA/IC0xIDogMSwgZCB9IH0gZnVuY3Rpb24ga18oKSB7IHZhciB0ID0geWcoRV8oKSk7IHJldHVybiB0LmNvcHkgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBUXyh0LCBrXygpKS5leHBvbmVudCh0LmV4cG9uZW50KCkpIH0sIEJwLmFwcGx5KHQsIGFyZ3VtZW50cykgfSBmdW5jdGlvbiBOXyh0KSB7IGZvciAodmFyIG4gPSB0Lmxlbmd0aCAvIDYgfCAwLCBlID0gbmV3IEFycmF5KG4pLCByID0gMDsgciA8IG47KWVbcl0gPSAiIyIgKyB0LnNsaWNlKDYgKiByLCA2ICogKytyKTsgcmV0dXJuIGUgfSB2YXIgQ18gPSBOXygiMWY3N2I0ZmY3ZjBlMmNhMDJjZDYyNzI4OTQ2N2JkOGM1NjRiZTM3N2MyN2Y3ZjdmYmNiZDIyMTdiZWNmIiksIFBfID0gTl8oIjdmYzk3ZmJlYWVkNGZkYzA4NmZmZmY5OTM4NmNiMGYwMDI3ZmJmNWIxNzY2NjY2NiIpLCB6XyA9IE5fKCIxYjllNzdkOTVmMDI3NTcwYjNlNzI5OGE2NmE2MWVlNmFiMDJhNjc2MWQ2NjY2NjYiKSwgRF8gPSBOXygiYTZjZWUzMWY3OGI0YjJkZjhhMzNhMDJjZmI5YTk5ZTMxYTFjZmRiZjZmZmY3ZjAwY2FiMmQ2NmEzZDlhZmZmZjk5YjE1OTI4IiksIFJfID0gTl8oImZiYjRhZWIzY2RlM2NjZWJjNWRlY2JlNGZlZDlhNmZmZmZjY2U1ZDhiZGZkZGFlY2YyZjJmMiIpLCBGXyA9IE5fKCJiM2UyY2RmZGNkYWNjYmQ1ZThmNGNhZTRlNmY1YzlmZmYyYWVmMWUyY2NjY2NjY2MiKSwgcV8gPSBOXygiZTQxYTFjMzc3ZWI4NGRhZjRhOTg0ZWEzZmY3ZjAwZmZmZjMzYTY1NjI4Zjc4MWJmOTk5OTk5IiksIElfID0gTl8oIjY2YzJhNWZjOGQ2MjhkYTBjYmU3OGFjM2E2ZDg1NGZmZDkyZmU1YzQ5NGIzYjNiMyIpLCBPXyA9IE5fKCI4ZGQzYzdmZmZmYjNiZWJhZGFmYjgwNzI4MGIxZDNmZGI0NjJiM2RlNjlmY2NkZTVkOWQ5ZDliYzgwYmRjY2ViYzVmZmVkNmYiKSwgVV8gPSBOXygiNGU3OWE3ZjI4ZTJjZTE1NzU5NzZiN2IyNTlhMTRmZWRjOTQ5YWY3YWExZmY5ZGE3OWM3NTVmYmFiMGFiIiksIEJfID0gdCA9PiBScih0W3QubGVuZ3RoIC0gMV0pLCBZXyA9IG5ldyBBcnJheSgzKS5jb25jYXQoImQ4YjM2NWY1ZjVmNTVhYjRhYyIsICJhNjYxMWFkZmMyN2Q4MGNkYzEwMTg1NzEiLCAiYTY2MTFhZGZjMjdkZjVmNWY1ODBjZGMxMDE4NTcxIiwgIjhjNTEwYWQ4YjM2NWY2ZThjM2M3ZWFlNTVhYjRhYzAxNjY1ZSIsICI4YzUxMGFkOGIzNjVmNmU4YzNmNWY1ZjVjN2VhZTU1YWI0YWMwMTY2NWUiLCAiOGM1MTBhYmY4MTJkZGZjMjdkZjZlOGMzYzdlYWU1ODBjZGMxMzU5NzhmMDE2NjVlIiwgIjhjNTEwYWJmODEyZGRmYzI3ZGY2ZThjM2Y1ZjVmNWM3ZWFlNTgwY2RjMTM1OTc4ZjAxNjY1ZSIsICI1NDMwMDU4YzUxMGFiZjgxMmRkZmMyN2RmNmU4YzNjN2VhZTU4MGNkYzEzNTk3OGYwMTY2NWUwMDNjMzAiLCAiNTQzMDA1OGM1MTBhYmY4MTJkZGZjMjdkZjZlOGMzZjVmNWY1YzdlYWU1ODBjZGMxMzU5NzhmMDE2NjVlMDAzYzMwIikubWFwKE5fKSwgTF8gPSBCXyhZXyksIGpfID0gbmV3IEFycmF5KDMpLmNvbmNhdCgiYWY4ZGMzZjdmN2Y3N2ZiZjdiIiwgIjdiMzI5NGMyYTVjZmE2ZGJhMDAwODgzNyIsICI3YjMyOTRjMmE1Y2ZmN2Y3ZjdhNmRiYTAwMDg4MzciLCAiNzYyYTgzYWY4ZGMzZTdkNGU4ZDlmMGQzN2ZiZjdiMWI3ODM3IiwgIjc2MmE4M2FmOGRjM2U3ZDRlOGY3ZjdmN2Q5ZjBkMzdmYmY3YjFiNzgzNyIsICI3NjJhODM5OTcwYWJjMmE1Y2ZlN2Q0ZThkOWYwZDNhNmRiYTA1YWFlNjExYjc4MzciLCAiNzYyYTgzOTk3MGFiYzJhNWNmZTdkNGU4ZjdmN2Y3ZDlmMGQzYTZkYmEwNWFhZTYxMWI3ODM3IiwgIjQwMDA0Yjc2MmE4Mzk5NzBhYmMyYTVjZmU3ZDRlOGQ5ZjBkM2E2ZGJhMDVhYWU2MTFiNzgzNzAwNDQxYiIsICI0MDAwNGI3NjJhODM5OTcwYWJjMmE1Y2ZlN2Q0ZThmN2Y3ZjdkOWYwZDNhNmRiYTA1YWFlNjExYjc4MzcwMDQ0MWIiKS5tYXAoTl8pLCAkXyA9IEJfKGpfKSwgSF8gPSBuZXcgQXJyYXkoMykuY29uY2F0KCJlOWEzYzlmN2Y3ZjdhMWQ3NmEiLCAiZDAxYzhiZjFiNmRhYjhlMTg2NGRhYzI2IiwgImQwMWM4YmYxYjZkYWY3ZjdmN2I4ZTE4NjRkYWMyNiIsICJjNTFiN2RlOWEzYzlmZGUwZWZlNmY1ZDBhMWQ3NmE0ZDkyMjEiLCAiYzUxYjdkZTlhM2M5ZmRlMGVmZjdmN2Y3ZTZmNWQwYTFkNzZhNGQ5MjIxIiwgImM1MWI3ZGRlNzdhZWYxYjZkYWZkZTBlZmU2ZjVkMGI4ZTE4NjdmYmM0MTRkOTIyMSIsICJjNTFiN2RkZTc3YWVmMWI2ZGFmZGUwZWZmN2Y3ZjdlNmY1ZDBiOGUxODY3ZmJjNDE0ZDkyMjEiLCAiOGUwMTUyYzUxYjdkZGU3N2FlZjFiNmRhZmRlMGVmZTZmNWQwYjhlMTg2N2ZiYzQxNGQ5MjIxMjc2NDE5IiwgIjhlMDE1MmM1MWI3ZGRlNzdhZWYxYjZkYWZkZTBlZmY3ZjdmN2U2ZjVkMGI4ZTE4NjdmYmM0MTRkOTIyMTI3NjQxOSIpLm1hcChOXyksIFhfID0gQl8oSF8pLCBHXyA9IG5ldyBBcnJheSgzKS5jb25jYXQoIjk5OGVjM2Y3ZjdmN2YxYTM0MCIsICI1ZTNjOTliMmFiZDJmZGI4NjNlNjYxMDEiLCAiNWUzYzk5YjJhYmQyZjdmN2Y3ZmRiODYzZTY2MTAxIiwgIjU0Mjc4ODk5OGVjM2Q4ZGFlYmZlZTBiNmYxYTM0MGIzNTgwNiIsICI1NDI3ODg5OThlYzNkOGRhZWJmN2Y3ZjdmZWUwYjZmMWEzNDBiMzU4MDYiLCAiNTQyNzg4ODA3M2FjYjJhYmQyZDhkYWViZmVlMGI2ZmRiODYzZTA4MjE0YjM1ODA2IiwgIjU0Mjc4ODgwNzNhY2IyYWJkMmQ4ZGFlYmY3ZjdmN2ZlZTBiNmZkYjg2M2UwODIxNGIzNTgwNiIsICIyZDAwNGI1NDI3ODg4MDczYWNiMmFiZDJkOGRhZWJmZWUwYjZmZGI4NjNlMDgyMTRiMzU4MDY3ZjNiMDgiLCAiMmQwMDRiNTQyNzg4ODA3M2FjYjJhYmQyZDhkYWViZjdmN2Y3ZmVlMGI2ZmRiODYzZTA4MjE0YjM1ODA2N2YzYjA4IikubWFwKE5fKSwgVl8gPSBCXyhHXyksIFdfID0gbmV3IEFycmF5KDMpLmNvbmNhdCgiZWY4YTYyZjdmN2Y3NjdhOWNmIiwgImNhMDAyMGY0YTU4MjkyYzVkZTA1NzFiMCIsICJjYTAwMjBmNGE1ODJmN2Y3Zjc5MmM1ZGUwNTcxYjAiLCAiYjIxODJiZWY4YTYyZmRkYmM3ZDFlNWYwNjdhOWNmMjE2NmFjIiwgImIyMTgyYmVmOGE2MmZkZGJjN2Y3ZjdmN2QxZTVmMDY3YTljZjIxNjZhYyIsICJiMjE4MmJkNjYwNGRmNGE1ODJmZGRiYzdkMWU1ZjA5MmM1ZGU0MzkzYzMyMTY2YWMiLCAiYjIxODJiZDY2MDRkZjRhNTgyZmRkYmM3ZjdmN2Y3ZDFlNWYwOTJjNWRlNDM5M2MzMjE2NmFjIiwgIjY3MDAxZmIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2QxZTVmMDkyYzVkZTQzOTNjMzIxNjZhYzA1MzA2MSIsICI2NzAwMWZiMjE4MmJkNjYwNGRmNGE1ODJmZGRiYzdmN2Y3ZjdkMWU1ZjA5MmM1ZGU0MzkzYzMyMTY2YWMwNTMwNjEiKS5tYXAoTl8pLCBaXyA9IEJfKFdfKSwgS18gPSBuZXcgQXJyYXkoMykuY29uY2F0KCJlZjhhNjJmZmZmZmY5OTk5OTkiLCAiY2EwMDIwZjRhNTgyYmFiYWJhNDA0MDQwIiwgImNhMDAyMGY0YTU4MmZmZmZmZmJhYmFiYTQwNDA0MCIsICJiMjE4MmJlZjhhNjJmZGRiYzdlMGUwZTA5OTk5OTk0ZDRkNGQiLCAiYjIxODJiZWY4YTYyZmRkYmM3ZmZmZmZmZTBlMGUwOTk5OTk5NGQ0ZDRkIiwgImIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2UwZTBlMGJhYmFiYTg3ODc4NzRkNGQ0ZCIsICJiMjE4MmJkNjYwNGRmNGE1ODJmZGRiYzdmZmZmZmZlMGUwZTBiYWJhYmE4Nzg3ODc0ZDRkNGQiLCAiNjcwMDFmYjIxODJiZDY2MDRkZjRhNTgyZmRkYmM3ZTBlMGUwYmFiYWJhODc4Nzg3NGQ0ZDRkMWExYTFhIiwgIjY3MDAxZmIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2ZmZmZmZmUwZTBlMGJhYmFiYTg3ODc4NzRkNGQ0ZDFhMWExYSIpLm1hcChOXyksIFFfID0gQl8oS18pLCBKXyA9IG5ldyBBcnJheSgzKS5jb25jYXQoImZjOGQ1OWZmZmZiZjkxYmZkYiIsICJkNzE5MWNmZGFlNjFhYmQ5ZTkyYzdiYjYiLCAiZDcxOTFjZmRhZTYxZmZmZmJmYWJkOWU5MmM3YmI2IiwgImQ3MzAyN2ZjOGQ1OWZlZTA5MGUwZjNmODkxYmZkYjQ1NzViNCIsICJkNzMwMjdmYzhkNTlmZWUwOTBmZmZmYmZlMGYzZjg5MWJmZGI0NTc1YjQiLCAiZDczMDI3ZjQ2ZDQzZmRhZTYxZmVlMDkwZTBmM2Y4YWJkOWU5NzRhZGQxNDU3NWI0IiwgImQ3MzAyN2Y0NmQ0M2ZkYWU2MWZlZTA5MGZmZmZiZmUwZjNmOGFiZDllOTc0YWRkMTQ1NzViNCIsICJhNTAwMjZkNzMwMjdmNDZkNDNmZGFlNjFmZWUwOTBlMGYzZjhhYmQ5ZTk3NGFkZDE0NTc1YjQzMTM2OTUiLCAiYTUwMDI2ZDczMDI3ZjQ2ZDQzZmRhZTYxZmVlMDkwZmZmZmJmZTBmM2Y4YWJkOWU5NzRhZGQxNDU3NWI0MzEzNjk1IikubWFwKE5fKSwgdGIgPSBCXyhKXyksIG5iID0gbmV3IEFycmF5KDMpLmNvbmNhdCgiZmM4ZDU5ZmZmZmJmOTFjZjYwIiwgImQ3MTkxY2ZkYWU2MWE2ZDk2YTFhOTY0MSIsICJkNzE5MWNmZGFlNjFmZmZmYmZhNmQ5NmExYTk2NDEiLCAiZDczMDI3ZmM4ZDU5ZmVlMDhiZDllZjhiOTFjZjYwMWE5ODUwIiwgImQ3MzAyN2ZjOGQ1OWZlZTA4YmZmZmZiZmQ5ZWY4YjkxY2Y2MDFhOTg1MCIsICJkNzMwMjdmNDZkNDNmZGFlNjFmZWUwOGJkOWVmOGJhNmQ5NmE2NmJkNjMxYTk4NTAiLCAiZDczMDI3ZjQ2ZDQzZmRhZTYxZmVlMDhiZmZmZmJmZDllZjhiYTZkOTZhNjZiZDYzMWE5ODUwIiwgImE1MDAyNmQ3MzAyN2Y0NmQ0M2ZkYWU2MWZlZTA4YmQ5ZWY4YmE2ZDk2YTY2YmQ2MzFhOTg1MDAwNjgzNyIsICJhNTAwMjZkNzMwMjdmNDZkNDNmZGFlNjFmZWUwOGJmZmZmYmZkOWVmOGJhNmQ5NmE2NmJkNjMxYTk4NTAwMDY4MzciKS5tYXAoTl8pLCBlYiA9IEJfKG5iKSwgcmIgPSBuZXcgQXJyYXkoMykuY29uY2F0KCJmYzhkNTlmZmZmYmY5OWQ1OTQiLCAiZDcxOTFjZmRhZTYxYWJkZGE0MmI4M2JhIiwgImQ3MTkxY2ZkYWU2MWZmZmZiZmFiZGRhNDJiODNiYSIsICJkNTNlNGZmYzhkNTlmZWUwOGJlNmY1OTg5OWQ1OTQzMjg4YmQiLCAiZDUzZTRmZmM4ZDU5ZmVlMDhiZmZmZmJmZTZmNTk4OTlkNTk0MzI4OGJkIiwgImQ1M2U0ZmY0NmQ0M2ZkYWU2MWZlZTA4YmU2ZjU5OGFiZGRhNDY2YzJhNTMyODhiZCIsICJkNTNlNGZmNDZkNDNmZGFlNjFmZWUwOGJmZmZmYmZlNmY1OThhYmRkYTQ2NmMyYTUzMjg4YmQiLCAiOWUwMTQyZDUzZTRmZjQ2ZDQzZmRhZTYxZmVlMDhiZTZmNTk4YWJkZGE0NjZjMmE1MzI4OGJkNWU0ZmEyIiwgIjllMDE0MmQ1M2U0ZmY0NmQ0M2ZkYWU2MWZlZTA4YmZmZmZiZmU2ZjU5OGFiZGRhNDY2YzJhNTMyODhiZDVlNGZhMiIpLm1hcChOXyksIGliID0gQl8ocmIpLCBvYiA9IG5ldyBBcnJheSgzKS5jb25jYXQoImU1ZjVmOTk5ZDhjOTJjYTI1ZiIsICJlZGY4ZmJiMmUyZTI2NmMyYTQyMzhiNDUiLCAiZWRmOGZiYjJlMmUyNjZjMmE0MmNhMjVmMDA2ZDJjIiwgImVkZjhmYmNjZWNlNjk5ZDhjOTY2YzJhNDJjYTI1ZjAwNmQyYyIsICJlZGY4ZmJjY2VjZTY5OWQ4Yzk2NmMyYTQ0MWFlNzYyMzhiNDUwMDU4MjQiLCAiZjdmY2ZkZTVmNWY5Y2NlY2U2OTlkOGM5NjZjMmE0NDFhZTc2MjM4YjQ1MDA1ODI0IiwgImY3ZmNmZGU1ZjVmOWNjZWNlNjk5ZDhjOTY2YzJhNDQxYWU3NjIzOGI0NTAwNmQyYzAwNDQxYiIpLm1hcChOXyksIGFiID0gQl8ob2IpLCB1YiA9IG5ldyBBcnJheSgzKS5jb25jYXQoImUwZWNmNDllYmNkYTg4NTZhNyIsICJlZGY4ZmJiM2NkZTM4Yzk2YzY4ODQxOWQiLCAiZWRmOGZiYjNjZGUzOGM5NmM2ODg1NmE3ODEwZjdjIiwgImVkZjhmYmJmZDNlNjllYmNkYThjOTZjNjg4NTZhNzgxMGY3YyIsICJlZGY4ZmJiZmQzZTY5ZWJjZGE4Yzk2YzY4YzZiYjE4ODQxOWQ2ZTAxNmIiLCAiZjdmY2ZkZTBlY2Y0YmZkM2U2OWViY2RhOGM5NmM2OGM2YmIxODg0MTlkNmUwMTZiIiwgImY3ZmNmZGUwZWNmNGJmZDNlNjllYmNkYThjOTZjNjhjNmJiMTg4NDE5ZDgxMGY3YzRkMDA0YiIpLm1hcChOXyksIGNiID0gQl8odWIpLCBmYiA9IG5ldyBBcnJheSgzKS5jb25jYXQoImUwZjNkYmE4ZGRiNTQzYTJjYSIsICJmMGY5ZThiYWU0YmM3YmNjYzQyYjhjYmUiLCAiZjBmOWU4YmFlNGJjN2JjY2M0NDNhMmNhMDg2OGFjIiwgImYwZjllOGNjZWJjNWE4ZGRiNTdiY2NjNDQzYTJjYTA4NjhhYyIsICJmMGY5ZThjY2ViYzVhOGRkYjU3YmNjYzQ0ZWIzZDMyYjhjYmUwODU4OWUiLCAiZjdmY2YwZTBmM2RiY2NlYmM1YThkZGI1N2JjY2M0NGViM2QzMmI4Y2JlMDg1ODllIiwgImY3ZmNmMGUwZjNkYmNjZWJjNWE4ZGRiNTdiY2NjNDRlYjNkMzJiOGNiZTA4NjhhYzA4NDA4MSIpLm1hcChOXyksIHNiID0gQl8oZmIpLCBsYiA9IG5ldyBBcnJheSgzKS5jb25jYXQoImZlZThjOGZkYmI4NGUzNGEzMyIsICJmZWYwZDlmZGNjOGFmYzhkNTlkNzMwMWYiLCAiZmVmMGQ5ZmRjYzhhZmM4ZDU5ZTM0YTMzYjMwMDAwIiwgImZlZjBkOWZkZDQ5ZWZkYmI4NGZjOGQ1OWUzNGEzM2IzMDAwMCIsICJmZWYwZDlmZGQ0OWVmZGJiODRmYzhkNTllZjY1NDhkNzMwMWY5OTAwMDAiLCAiZmZmN2VjZmVlOGM4ZmRkNDllZmRiYjg0ZmM4ZDU5ZWY2NTQ4ZDczMDFmOTkwMDAwIiwgImZmZjdlY2ZlZThjOGZkZDQ5ZWZkYmI4NGZjOGQ1OWVmNjU0OGQ3MzAxZmIzMDAwMDdmMDAwMCIpLm1hcChOXyksIGhiID0gQl8obGIpLCBkYiA9IG5ldyBBcnJheSgzKS5jb25jYXQoImVjZTJmMGE2YmRkYjFjOTA5OSIsICJmNmVmZjdiZGM5ZTE2N2E5Y2YwMjgxOGEiLCAiZjZlZmY3YmRjOWUxNjdhOWNmMWM5MDk5MDE2YzU5IiwgImY2ZWZmN2QwZDFlNmE2YmRkYjY3YTljZjFjOTA5OTAxNmM1OSIsICJmNmVmZjdkMGQxZTZhNmJkZGI2N2E5Y2YzNjkwYzAwMjgxOGEwMTY0NTAiLCAiZmZmN2ZiZWNlMmYwZDBkMWU2YTZiZGRiNjdhOWNmMzY5MGMwMDI4MThhMDE2NDUwIiwgImZmZjdmYmVjZTJmMGQwZDFlNmE2YmRkYjY3YTljZjM2OTBjMDAyODE4YTAxNmM1OTAxNDYzNiIpLm1hcChOXyksIHBiID0gQl8oZGIpLCBnYiA9IG5ldyBBcnJheSgzKS5jb25jYXQoImVjZTdmMmE2YmRkYjJiOGNiZSIsICJmMWVlZjZiZGM5ZTE3NGE5Y2YwNTcwYjAiLCAiZjFlZWY2YmRjOWUxNzRhOWNmMmI4Y2JlMDQ1YThkIiwgImYxZWVmNmQwZDFlNmE2YmRkYjc0YTljZjJiOGNiZTA0NWE4ZCIsICJmMWVlZjZkMGQxZTZhNmJkZGI3NGE5Y2YzNjkwYzAwNTcwYjAwMzRlN2IiLCAiZmZmN2ZiZWNlN2YyZDBkMWU2YTZiZGRiNzRhOWNmMzY5MGMwMDU3MGIwMDM0ZTdiIiwgImZmZjdmYmVjZTdmMmQwZDFlNmE2YmRkYjc0YTljZjM2OTBjMDA1NzBiMDA0NWE4ZDAyMzg1OCIpLm1hcChOXyksIHliID0gQl8oZ2IpLCB2YiA9IG5ldyBBcnJheSgzKS5jb25jYXQoImU3ZTFlZmM5OTRjN2RkMWM3NyIsICJmMWVlZjZkN2I1ZDhkZjY1YjBjZTEyNTYiLCAiZjFlZWY2ZDdiNWQ4ZGY2NWIwZGQxYzc3OTgwMDQzIiwgImYxZWVmNmQ0YjlkYWM5OTRjN2RmNjViMGRkMWM3Nzk4MDA0MyIsICJmMWVlZjZkNGI5ZGFjOTk0YzdkZjY1YjBlNzI5OGFjZTEyNTY5MTAwM2YiLCAiZjdmNGY5ZTdlMWVmZDRiOWRhYzk5NGM3ZGY2NWIwZTcyOThhY2UxMjU2OTEwMDNmIiwgImY3ZjRmOWU3ZTFlZmQ0YjlkYWM5OTRjN2RmNjViMGU3Mjk4YWNlMTI1Njk4MDA0MzY3MDAxZiIpLm1hcChOXyksIF9iID0gQl8odmIpLCBiYiA9IG5ldyBBcnJheSgzKS5jb25jYXQoImZkZTBkZGZhOWZiNWM1MWI4YSIsICJmZWViZTJmYmI0YjlmNzY4YTFhZTAxN2UiLCAiZmVlYmUyZmJiNGI5Zjc2OGExYzUxYjhhN2EwMTc3IiwgImZlZWJlMmZjYzVjMGZhOWZiNWY3NjhhMWM1MWI4YTdhMDE3NyIsICJmZWViZTJmY2M1YzBmYTlmYjVmNzY4YTFkZDM0OTdhZTAxN2U3YTAxNzciLCAiZmZmN2YzZmRlMGRkZmNjNWMwZmE5ZmI1Zjc2OGExZGQzNDk3YWUwMTdlN2EwMTc3IiwgImZmZjdmM2ZkZTBkZGZjYzVjMGZhOWZiNWY3NjhhMWRkMzQ5N2FlMDE3ZTdhMDE3NzQ5MDA2YSIpLm1hcChOXyksIG1iID0gQl8oYmIpLCB4YiA9IG5ldyBBcnJheSgzKS5jb25jYXQoImVkZjhiMTdmY2RiYjJjN2ZiOCIsICJmZmZmY2NhMWRhYjQ0MWI2YzQyMjVlYTgiLCAiZmZmZmNjYTFkYWI0NDFiNmM0MmM3ZmI4MjUzNDk0IiwgImZmZmZjY2M3ZTliNDdmY2RiYjQxYjZjNDJjN2ZiODI1MzQ5NCIsICJmZmZmY2NjN2U5YjQ3ZmNkYmI0MWI2YzQxZDkxYzAyMjVlYTgwYzJjODQiLCAiZmZmZmQ5ZWRmOGIxYzdlOWI0N2ZjZGJiNDFiNmM0MWQ5MWMwMjI1ZWE4MGMyYzg0IiwgImZmZmZkOWVkZjhiMWM3ZTliNDdmY2RiYjQxYjZjNDFkOTFjMDIyNWVhODI1MzQ5NDA4MWQ1OCIpLm1hcChOXyksIHdiID0gQl8oeGIpLCBNYiA9IG5ldyBBcnJheSgzKS5jb25jYXQoImY3ZmNiOWFkZGQ4ZTMxYTM1NCIsICJmZmZmY2NjMmU2OTk3OGM2NzkyMzg0NDMiLCAiZmZmZmNjYzJlNjk5NzhjNjc5MzFhMzU0MDA2ODM3IiwgImZmZmZjY2Q5ZjBhM2FkZGQ4ZTc4YzY3OTMxYTM1NDAwNjgzNyIsICJmZmZmY2NkOWYwYTNhZGRkOGU3OGM2Nzk0MWFiNWQyMzg0NDMwMDVhMzIiLCAiZmZmZmU1ZjdmY2I5ZDlmMGEzYWRkZDhlNzhjNjc5NDFhYjVkMjM4NDQzMDA1YTMyIiwgImZmZmZlNWY3ZmNiOWQ5ZjBhM2FkZGQ4ZTc4YzY3OTQxYWI1ZDIzODQ0MzAwNjgzNzAwNDUyOSIpLm1hcChOXyksIEFiID0gQl8oTWIpLCBUYiA9IG5ldyBBcnJheSgzKS5jb25jYXQoImZmZjdiY2ZlYzQ0ZmQ5NWYwZSIsICJmZmZmZDRmZWQ5OGVmZTk5MjljYzRjMDIiLCAiZmZmZmQ0ZmVkOThlZmU5OTI5ZDk1ZjBlOTkzNDA0IiwgImZmZmZkNGZlZTM5MWZlYzQ0ZmZlOTkyOWQ5NWYwZTk5MzQwNCIsICJmZmZmZDRmZWUzOTFmZWM0NGZmZTk5MjllYzcwMTRjYzRjMDI4YzJkMDQiLCAiZmZmZmU1ZmZmN2JjZmVlMzkxZmVjNDRmZmU5OTI5ZWM3MDE0Y2M0YzAyOGMyZDA0IiwgImZmZmZlNWZmZjdiY2ZlZTM5MWZlYzQ0ZmZlOTkyOWVjNzAxNGNjNGMwMjk5MzQwNDY2MjUwNiIpLm1hcChOXyksIFNiID0gQl8oVGIpLCBFYiA9IG5ldyBBcnJheSgzKS5jb25jYXQoImZmZWRhMGZlYjI0Y2YwM2IyMCIsICJmZmZmYjJmZWNjNWNmZDhkM2NlMzFhMWMiLCAiZmZmZmIyZmVjYzVjZmQ4ZDNjZjAzYjIwYmQwMDI2IiwgImZmZmZiMmZlZDk3NmZlYjI0Y2ZkOGQzY2YwM2IyMGJkMDAyNiIsICJmZmZmYjJmZWQ5NzZmZWIyNGNmZDhkM2NmYzRlMmFlMzFhMWNiMTAwMjYiLCAiZmZmZmNjZmZlZGEwZmVkOTc2ZmViMjRjZmQ4ZDNjZmM0ZTJhZTMxYTFjYjEwMDI2IiwgImZmZmZjY2ZmZWRhMGZlZDk3NmZlYjI0Y2ZkOGQzY2ZjNGUyYWUzMWExY2JkMDAyNjgwMDAyNiIpLm1hcChOXyksIGtiID0gQl8oRWIpLCBOYiA9IG5ldyBBcnJheSgzKS5jb25jYXQoImRlZWJmNzllY2FlMTMxODJiZCIsICJlZmYzZmZiZGQ3ZTc2YmFlZDYyMTcxYjUiLCAiZWZmM2ZmYmRkN2U3NmJhZWQ2MzE4MmJkMDg1MTljIiwgImVmZjNmZmM2ZGJlZjllY2FlMTZiYWVkNjMxODJiZDA4NTE5YyIsICJlZmYzZmZjNmRiZWY5ZWNhZTE2YmFlZDY0MjkyYzYyMTcxYjUwODQ1OTQiLCAiZjdmYmZmZGVlYmY3YzZkYmVmOWVjYWUxNmJhZWQ2NDI5MmM2MjE3MWI1MDg0NTk0IiwgImY3ZmJmZmRlZWJmN2M2ZGJlZjllY2FlMTZiYWVkNjQyOTJjNjIxNzFiNTA4NTE5YzA4MzA2YiIpLm1hcChOXyksIENiID0gQl8oTmIpLCBQYiA9IG5ldyBBcnJheSgzKS5jb25jYXQoImU1ZjVlMGExZDk5YjMxYTM1NCIsICJlZGY4ZTliYWU0YjM3NGM0NzYyMzhiNDUiLCAiZWRmOGU5YmFlNGIzNzRjNDc2MzFhMzU0MDA2ZDJjIiwgImVkZjhlOWM3ZTljMGExZDk5Yjc0YzQ3NjMxYTM1NDAwNmQyYyIsICJlZGY4ZTljN2U5YzBhMWQ5OWI3NGM0NzY0MWFiNWQyMzhiNDUwMDVhMzIiLCAiZjdmY2Y1ZTVmNWUwYzdlOWMwYTFkOTliNzRjNDc2NDFhYjVkMjM4YjQ1MDA1YTMyIiwgImY3ZmNmNWU1ZjVlMGM3ZTljMGExZDk5Yjc0YzQ3NjQxYWI1ZDIzOGI0NTAwNmQyYzAwNDQxYiIpLm1hcChOXyksIHpiID0gQl8oUGIpLCBEYiA9IG5ldyBBcnJheSgzKS5jb25jYXQoImYwZjBmMGJkYmRiZDYzNjM2MyIsICJmN2Y3ZjdjY2NjY2M5Njk2OTY1MjUyNTIiLCAiZjdmN2Y3Y2NjY2NjOTY5Njk2NjM2MzYzMjUyNTI1IiwgImY3ZjdmN2Q5ZDlkOWJkYmRiZDk2OTY5NjYzNjM2MzI1MjUyNSIsICJmN2Y3ZjdkOWQ5ZDliZGJkYmQ5Njk2OTY3MzczNzM1MjUyNTIyNTI1MjUiLCAiZmZmZmZmZjBmMGYwZDlkOWQ5YmRiZGJkOTY5Njk2NzM3MzczNTI1MjUyMjUyNTI1IiwgImZmZmZmZmYwZjBmMGQ5ZDlkOWJkYmRiZDk2OTY5NjczNzM3MzUyNTI1MjI1MjUyNTAwMDAwMCIpLm1hcChOXyksIFJiID0gQl8oRGIpLCBGYiA9IG5ldyBBcnJheSgzKS5jb25jYXQoImVmZWRmNWJjYmRkYzc1NmJiMSIsICJmMmYwZjdjYmM5ZTI5ZTlhYzg2YTUxYTMiLCAiZjJmMGY3Y2JjOWUyOWU5YWM4NzU2YmIxNTQyNzhmIiwgImYyZjBmN2RhZGFlYmJjYmRkYzllOWFjODc1NmJiMTU0Mjc4ZiIsICJmMmYwZjdkYWRhZWJiY2JkZGM5ZTlhYzg4MDdkYmE2YTUxYTM0YTE0ODYiLCAiZmNmYmZkZWZlZGY1ZGFkYWViYmNiZGRjOWU5YWM4ODA3ZGJhNmE1MWEzNGExNDg2IiwgImZjZmJmZGVmZWRmNWRhZGFlYmJjYmRkYzllOWFjODgwN2RiYTZhNTFhMzU0Mjc4ZjNmMDA3ZCIpLm1hcChOXyksIHFiID0gQl8oRmIpLCBJYiA9IG5ldyBBcnJheSgzKS5jb25jYXQoImZlZTBkMmZjOTI3MmRlMmQyNiIsICJmZWU1ZDlmY2FlOTFmYjZhNGFjYjE4MWQiLCAiZmVlNWQ5ZmNhZTkxZmI2YTRhZGUyZDI2YTUwZjE1IiwgImZlZTVkOWZjYmJhMWZjOTI3MmZiNmE0YWRlMmQyNmE1MGYxNSIsICJmZWU1ZDlmY2JiYTFmYzkyNzJmYjZhNGFlZjNiMmNjYjE4MWQ5OTAwMGQiLCAiZmZmNWYwZmVlMGQyZmNiYmExZmM5MjcyZmI2YTRhZWYzYjJjY2IxODFkOTkwMDBkIiwgImZmZjVmMGZlZTBkMmZjYmJhMWZjOTI3MmZiNmE0YWVmM2IyY2NiMTgxZGE1MGYxNTY3MDAwZCIpLm1hcChOXyksIE9iID0gQl8oSWIpLCBVYiA9IG5ldyBBcnJheSgzKS5jb25jYXQoImZlZTZjZWZkYWU2YmU2NTUwZCIsICJmZWVkZGVmZGJlODVmZDhkM2NkOTQ3MDEiLCAiZmVlZGRlZmRiZTg1ZmQ4ZDNjZTY1NTBkYTYzNjAzIiwgImZlZWRkZWZkZDBhMmZkYWU2YmZkOGQzY2U2NTUwZGE2MzYwMyIsICJmZWVkZGVmZGQwYTJmZGFlNmJmZDhkM2NmMTY5MTNkOTQ4MDE4YzJkMDQiLCAiZmZmNWViZmVlNmNlZmRkMGEyZmRhZTZiZmQ4ZDNjZjE2OTEzZDk0ODAxOGMyZDA0IiwgImZmZjVlYmZlZTZjZWZkZDBhMmZkYWU2YmZkOGQzY2YxNjkxM2Q5NDgwMWE2MzYwMzdmMjcwNCIpLm1hcChOXyksIEJiID0gQl8oVWIpOyB2YXIgWWIgPSBzaSh3cigzMDAsIC41LCAwKSwgd3IoLTI0MCwgLjUsIDEpKSwgTGIgPSBzaSh3cigtMTAwLCAuNzUsIC4zNSksIHdyKDgwLCAxLjUsIC44KSksIGpiID0gc2kod3IoMjYwLCAuNzUsIC4zNSksIHdyKDgwLCAxLjUsIC44KSksICRiID0gd3IoKTsgdmFyIEhiID0gRmUoKSwgWGIgPSBNYXRoLlBJIC8gMywgR2IgPSAyICogTWF0aC5QSSAvIDM7IGZ1bmN0aW9uIFZiKHQpIHsgdmFyIG4gPSB0Lmxlbmd0aDsgcmV0dXJuIGZ1bmN0aW9uIChlKSB7IHJldHVybiB0W01hdGgubWF4KDAsIE1hdGgubWluKG4gLSAxLCBNYXRoLmZsb29yKGUgKiBuKSkpXSB9IH0gdmFyIFdiID0gVmIoTl8oIjQ0MDE1NDQ0MDI1NjQ1MDQ1NzQ1MDU1OTQ2MDc1YTQ2MDg1YzQ2MGE1ZDQ2MGI1ZTQ3MGQ2MDQ3MGU2MTQ3MTA2MzQ3MTE2NDQ3MTM2NTQ4MTQ2NzQ4MTY2ODQ4MTc2OTQ4MTg2YTQ4MWE2YzQ4MWI2ZDQ4MWM2ZTQ4MWQ2ZjQ4MWY3MDQ4MjA3MTQ4MjE3MzQ4MjM3NDQ4MjQ3NTQ4MjU3NjQ4MjY3NzQ4Mjg3ODQ4Mjk3OTQ3MmE3YTQ3MmM3YTQ3MmQ3YjQ3MmU3YzQ3MmY3ZDQ2MzA3ZTQ2MzI3ZTQ2MzM3ZjQ2MzQ4MDQ1MzU4MTQ1Mzc4MTQ1Mzg4MjQ0Mzk4MzQ0M2E4MzQ0M2I4NDQzM2Q4NDQzM2U4NTQyM2Y4NTQyNDA4NjQyNDE4NjQxNDI4NzQxNDQ4NzQwNDU4ODQwNDY4ODNmNDc4ODNmNDg4OTNlNDk4OTNlNGE4OTNlNGM4YTNkNGQ4YTNkNGU4YTNjNGY4YTNjNTA4YjNiNTE4YjNiNTI4YjNhNTM4YjNhNTQ4YzM5NTU4YzM5NTY4YzM4NTg4YzM4NTk4YzM3NWE4YzM3NWI4ZDM2NWM4ZDM2NWQ4ZDM1NWU4ZDM1NWY4ZDM0NjA4ZDM0NjE4ZDMzNjI4ZDMzNjM4ZDMyNjQ4ZTMyNjU4ZTMxNjY4ZTMxNjc4ZTMxNjg4ZTMwNjk4ZTMwNmE4ZTJmNmI4ZTJmNmM4ZTJlNmQ4ZTJlNmU4ZTJlNmY4ZTJkNzA4ZTJkNzE4ZTJjNzE4ZTJjNzI4ZTJjNzM4ZTJiNzQ4ZTJiNzU4ZTJhNzY4ZTJhNzc4ZTJhNzg4ZTI5Nzk4ZTI5N2E4ZTI5N2I4ZTI4N2M4ZTI4N2Q4ZTI3N2U4ZTI3N2Y4ZTI3ODA4ZTI2ODE4ZTI2ODI4ZTI2ODI4ZTI1ODM4ZTI1ODQ4ZTI1ODU4ZTI0ODY4ZTI0ODc4ZTIzODg4ZTIzODk4ZTIzOGE4ZDIyOGI4ZDIyOGM4ZDIyOGQ4ZDIxOGU4ZDIxOGY4ZDIxOTA4ZDIxOTE4YzIwOTI4YzIwOTI4YzIwOTM4YzFmOTQ4YzFmOTU4YjFmOTY4YjFmOTc4YjFmOTg4YjFmOTk4YTFmOWE4YTFlOWI4YTFlOWM4OTFlOWQ4OTFmOWU4OTFmOWY4ODFmYTA4ODFmYTE4ODFmYTE4NzFmYTI4NzIwYTM4NjIwYTQ4NjIxYTU4NTIxYTY4NTIyYTc4NTIyYTg4NDIzYTk4MzI0YWE4MzI1YWI4MjI1YWM4MjI2YWQ4MTI3YWQ4MTI4YWU4MDI5YWY3ZjJhYjA3ZjJjYjE3ZTJkYjI3ZDJlYjM3YzJmYjQ3YzMxYjU3YjMyYjY3YTM0YjY3OTM1Yjc3OTM3Yjg3ODM4Yjk3NzNhYmE3NjNiYmI3NTNkYmM3NDNmYmM3MzQwYmQ3MjQyYmU3MTQ0YmY3MDQ2YzA2ZjQ4YzE2ZTRhYzE2ZDRjYzI2YzRlYzM2YjUwYzQ2YTUyYzU2OTU0YzU2ODU2YzY2NzU4Yzc2NTVhYzg2NDVjYzg2MzVlYzk2MjYwY2E2MDYzY2I1ZjY1Y2I1ZTY3Y2M1YzY5Y2Q1YjZjY2Q1YTZlY2U1ODcwY2Y1NzczZDA1Njc1ZDA1NDc3ZDE1MzdhZDE1MTdjZDI1MDdmZDM0ZTgxZDM0ZDg0ZDQ0Yjg2ZDU0OTg5ZDU0ODhiZDY0NjhlZDY0NTkwZDc0MzkzZDc0MTk1ZDg0MDk4ZDgzZTliZDkzYzlkZDkzYmEwZGEzOWEyZGEzN2E1ZGIzNmE4ZGIzNGFhZGMzMmFkZGMzMGIwZGQyZmIyZGQyZGI1ZGUyYmI4ZGUyOWJhZGUyOGJkZGYyNmMwZGYyNWMyZGYyM2M1ZTAyMWM4ZTAyMGNhZTExZmNkZTExZGQwZTExY2QyZTIxYmQ1ZTIxYWQ4ZTIxOWRhZTMxOWRkZTMxOGRmZTMxOGUyZTQxOGU1ZTQxOWU3ZTQxOWVhZTUxYWVjZTUxYmVmZTUxY2YxZTUxZGY0ZTYxZWY2ZTYyMGY4ZTYyMWZiZTcyM2ZkZTcyNSIpKSwgWmIgPSBWYihOXygiMDAwMDA0MDEwMDA1MDEwMTA2MDEwMTA4MDIwMTA5MDIwMjBiMDIwMjBkMDMwMzBmMDMwMzEyMDQwNDE0MDUwNDE2MDYwNTE4MDYwNTFhMDcwNjFjMDgwNzFlMDkwNzIwMGEwODIyMGIwOTI0MGMwOTI2MGQwYTI5MGUwYjJiMTAwYjJkMTEwYzJmMTIwZDMxMTMwZDM0MTQwZTM2MTUwZTM4MTYwZjNiMTgwZjNkMTkxMDNmMWExMDQyMWMxMDQ0MWQxMTQ3MWUxMTQ5MjAxMTRiMjExMTRlMjIxMTUwMjQxMjUzMjUxMjU1MjcxMjU4MjkxMTVhMmExMTVjMmMxMTVmMmQxMTYxMmYxMTYzMzExMTY1MzMxMDY3MzQxMDY5MzYxMDZiMzgxMDZjMzkwZjZlM2IwZjcwM2QwZjcxM2YwZjcyNDAwZjc0NDIwZjc1NDQwZjc2NDUxMDc3NDcxMDc4NDkxMDc4NGExMDc5NGMxMTdhNGUxMTdiNGYxMjdiNTExMjdjNTIxMzdjNTQxMzdkNTYxNDdkNTcxNTdlNTkxNTdlNWExNjdlNWMxNjdmNWQxNzdmNWYxODdmNjAxODgwNjIxOTgwNjQxYTgwNjUxYTgwNjcxYjgwNjgxYzgxNmExYzgxNmIxZDgxNmQxZDgxNmUxZTgxNzAxZjgxNzIxZjgxNzMyMDgxNzUyMTgxNzYyMTgxNzgyMjgxNzkyMjgyN2IyMzgyN2MyMzgyN2UyNDgyODAyNTgyODEyNTgxODMyNjgxODQyNjgxODYyNzgxODgyNzgxODkyODgxOGIyOTgxOGMyOTgxOGUyYTgxOTAyYTgxOTEyYjgxOTMyYjgwOTQyYzgwOTYyYzgwOTgyZDgwOTkyZDgwOWIyZTdmOWMyZTdmOWUyZjdmYTAyZjdmYTEzMDdlYTMzMDdlYTUzMTdlYTYzMTdkYTgzMjdkYWEzMzdkYWIzMzdjYWQzNDdjYWUzNDdiYjAzNTdiYjIzNTdiYjMzNjdhYjUzNjdhYjczNzc5YjgzNzc5YmEzODc4YmMzOTc4YmQzOTc3YmYzYTc3YzAzYTc2YzIzYjc1YzQzYzc1YzUzYzc0YzczZDczYzgzZTczY2EzZTcyY2MzZjcxY2Q0MDcxY2Y0MDcwZDA0MTZmZDI0MjZmZDM0MzZlZDU0NDZkZDY0NTZjZDg0NTZjZDk0NjZiZGI0NzZhZGM0ODY5ZGU0OTY4ZGY0YTY4ZTA0YzY3ZTI0ZDY2ZTM0ZTY1ZTQ0ZjY0ZTU1MDY0ZTc1MjYzZTg1MzYyZTk1NDYyZWE1NjYxZWI1NzYwZWM1ODYwZWQ1YTVmZWU1YjVlZWY1ZDVlZjA1ZjVlZjE2MDVkZjI2MjVkZjI2NDVjZjM2NTVjZjQ2NzVjZjQ2OTVjZjU2YjVjZjY2YzVjZjY2ZTVjZjc3MDVjZjc3MjVjZjg3NDVjZjg3NjVjZjk3ODVkZjk3OTVkZjk3YjVkZmE3ZDVlZmE3ZjVlZmE4MTVmZmI4MzVmZmI4NTYwZmI4NzYxZmM4OTYxZmM4YTYyZmM4YzYzZmM4ZTY0ZmM5MDY1ZmQ5MjY2ZmQ5NDY3ZmQ5NjY4ZmQ5ODY5ZmQ5YTZhZmQ5YjZiZmU5ZDZjZmU5ZjZkZmVhMTZlZmVhMzZmZmVhNTcxZmVhNzcyZmVhOTczZmVhYTc0ZmVhYzc2ZmVhZTc3ZmViMDc4ZmViMjdhZmViNDdiZmViNjdjZmViNzdlZmViOTdmZmViYjgxZmViZDgyZmViZjg0ZmVjMTg1ZmVjMjg3ZmVjNDg4ZmVjNjhhZmVjODhjZmVjYThkZmVjYzhmZmVjZDkwZmVjZjkyZmVkMTk0ZmVkMzk1ZmVkNTk3ZmVkNzk5ZmVkODlhZmRkYTljZmRkYzllZmRkZWEwZmRlMGExZmRlMmEzZmRlM2E1ZmRlNWE3ZmRlN2E5ZmRlOWFhZmRlYmFjZmNlY2FlZmNlZWIwZmNmMGIyZmNmMmI0ZmNmNGI2ZmNmNmI4ZmNmN2I5ZmNmOWJiZmNmYmJkZmNmZGJmIikpLCBLYiA9IFZiKE5fKCIwMDAwMDQwMTAwMDUwMTAxMDYwMTAxMDgwMjAxMGEwMjAyMGMwMjAyMGUwMzAyMTAwNDAzMTIwNDAzMTQwNTA0MTcwNjA0MTkwNzA1MWIwODA1MWQwOTA2MWYwYTA3MjIwYjA3MjQwYzA4MjYwZDA4MjkwZTA5MmIxMDA5MmQxMTBhMzAxMjBhMzIxNDBiMzQxNTBiMzcxNjBiMzkxODBjM2MxOTBjM2UxYjBjNDExYzBjNDMxZTBjNDUxZjBjNDgyMTBjNGEyMzBjNGMyNDBjNGYyNjBjNTEyODBiNTMyOTBiNTUyYjBiNTcyZDBiNTkyZjBhNWIzMTBhNWMzMjBhNWUzNDBhNWYzNjA5NjEzODA5NjIzOTA5NjMzYjA5NjQzZDA5NjUzZTA5NjY0MDBhNjc0MjBhNjg0NDBhNjg0NTBhNjk0NzBiNmE0OTBiNmE0YTBjNmI0YzBjNmI0ZDBkNmM0ZjBkNmM1MTBlNmM1MjBlNmQ1NDBmNmQ1NTBmNmQ1NzEwNmU1OTEwNmU1YTExNmU1YzEyNmU1ZDEyNmU1ZjEzNmU2MTEzNmU2MjE0NmU2NDE1NmU2NTE1NmU2NzE2NmU2OTE2NmU2YTE3NmU2YzE4NmU2ZDE4NmU2ZjE5NmU3MTE5NmU3MjFhNmU3NDFhNmU3NTFiNmU3NzFjNmQ3ODFjNmQ3YTFkNmQ3YzFkNmQ3ZDFlNmQ3ZjFlNmM4MDFmNmM4MjIwNmM4NDIwNmI4NTIxNmI4NzIxNmI4ODIyNmE4YTIyNmE4YzIzNjk4ZDIzNjk4ZjI0Njk5MDI1Njg5MjI1Njg5MzI2Njc5NTI2Njc5NzI3NjY5ODI3NjY5YTI4NjU5YjI5NjQ5ZDI5NjQ5ZjJhNjNhMDJhNjNhMjJiNjJhMzJjNjFhNTJjNjBhNjJkNjBhODJlNWZhOTJlNWVhYjJmNWVhZDMwNWRhZTMwNWNiMDMxNWJiMTMyNWFiMzMyNWFiNDMzNTliNjM0NThiNzM1NTdiOTM1NTZiYTM2NTViYzM3NTRiZDM4NTNiZjM5NTJjMDNhNTFjMTNhNTBjMzNiNGZjNDNjNGVjNjNkNGRjNzNlNGNjODNmNGJjYTQwNGFjYjQxNDljYzQyNDhjZTQzNDdjZjQ0NDZkMDQ1NDVkMjQ2NDRkMzQ3NDNkNDQ4NDJkNTRhNDFkNzRiM2ZkODRjM2VkOTRkM2RkYTRlM2NkYjUwM2JkZDUxM2FkZTUyMzhkZjUzMzdlMDU1MzZlMTU2MzVlMjU3MzRlMzU5MzNlNDVhMzFlNTVjMzBlNjVkMmZlNzVlMmVlODYwMmRlOTYxMmJlYTYzMmFlYjY0MjllYjY2MjhlYzY3MjZlZDY5MjVlZTZhMjRlZjZjMjNlZjZlMjFmMDZmMjBmMTcxMWZmMTczMWRmMjc0MWNmMzc2MWJmMzc4MTlmNDc5MThmNTdiMTdmNTdkMTVmNjdlMTRmNjgwMTNmNzgyMTJmNzg0MTBmODg1MGZmODg3MGVmODg5MGNmOThiMGJmOThjMGFmOThlMDlmYTkwMDhmYTkyMDdmYTk0MDdmYjk2MDZmYjk3MDZmYjk5MDZmYjliMDZmYjlkMDdmYzlmMDdmY2ExMDhmY2EzMDlmY2E1MGFmY2E2MGNmY2E4MGRmY2FhMGZmY2FjMTFmY2FlMTJmY2IwMTRmY2IyMTZmY2I0MThmYmI2MWFmYmI4MWRmYmJhMWZmYmJjMjFmYmJlMjNmYWMwMjZmYWMyMjhmYWM0MmFmYWM2MmRmOWM3MmZmOWM5MzJmOWNiMzVmOGNkMzdmOGNmM2FmN2QxM2RmN2QzNDBmNmQ1NDNmNmQ3NDZmNWQ5NDlmNWRiNGNmNGRkNGZmNGRmNTNmNGUxNTZmM2UzNWFmM2U1NWRmMmU2NjFmMmU4NjVmMmVhNjlmMWVjNmRmMWVkNzFmMWVmNzVmMWYxNzlmMmYyN2RmMmY0ODJmM2Y1ODZmM2Y2OGFmNGY4OGVmNWY5OTJmNmZhOTZmOGZiOWFmOWZjOWRmYWZkYTFmY2ZmYTQiKSksIFFiID0gVmIoTl8oIjBkMDg4NzEwMDc4ODEzMDc4OTE2MDc4YTE5MDY4YzFiMDY4ZDFkMDY4ZTIwMDY4ZjIyMDY5MDI0MDY5MTI2MDU5MTI4MDU5MjJhMDU5MzJjMDU5NDJlMDU5NTJmMDU5NjMxMDU5NzMzMDU5NzM1MDQ5ODM3MDQ5OTM4MDQ5YTNhMDQ5YTNjMDQ5YjNlMDQ5YzNmMDQ5YzQxMDQ5ZDQzMDM5ZTQ0MDM5ZTQ2MDM5ZjQ4MDM5ZjQ5MDNhMDRiMDNhMTRjMDJhMTRlMDJhMjUwMDJhMjUxMDJhMzUzMDJhMzU1MDJhNDU2MDFhNDU4MDFhNDU5MDFhNTViMDFhNTVjMDFhNjVlMDFhNjYwMDFhNjYxMDBhNzYzMDBhNzY0MDBhNzY2MDBhNzY3MDBhODY5MDBhODZhMDBhODZjMDBhODZlMDBhODZmMDBhODcxMDBhODcyMDFhODc0MDFhODc1MDFhODc3MDFhODc4MDFhODdhMDJhODdiMDJhODdkMDNhODdlMDNhODgwMDRhODgxMDRhNzgzMDVhNzg0MDVhNzg2MDZhNjg3MDdhNjg4MDhhNjhhMDlhNThiMGFhNThkMGJhNThlMGNhNDhmMGRhNDkxMGVhMzkyMGZhMzk0MTBhMjk1MTFhMTk2MTNhMTk4MTRhMDk5MTU5ZjlhMTY5ZjljMTc5ZTlkMTg5ZDllMTk5ZGEwMWE5Y2ExMWI5YmEyMWQ5YWEzMWU5YWE1MWY5OWE2MjA5OGE3MjE5N2E4MjI5NmFhMjM5NWFiMjQ5NGFjMjY5NGFkMjc5M2FlMjg5MmIwMjk5MWIxMmE5MGIyMmI4ZmIzMmM4ZWI0MmU4ZGI1MmY4Y2I2MzA4YmI3MzE4YWI4MzI4OWJhMzM4OGJiMzQ4OGJjMzU4N2JkMzc4NmJlMzg4NWJmMzk4NGMwM2E4M2MxM2I4MmMyM2M4MWMzM2Q4MGM0M2U3ZmM1NDA3ZWM2NDE3ZGM3NDI3Y2M4NDM3YmM5NDQ3YWNhNDU3YWNiNDY3OWNjNDc3OGNjNDk3N2NkNGE3NmNlNGI3NWNmNGM3NGQwNGQ3M2QxNGU3MmQyNGY3MWQzNTE3MWQ0NTI3MGQ1NTM2ZmQ1NTQ2ZWQ2NTU2ZGQ3NTY2Y2Q4NTc2YmQ5NTg2YWRhNWE2YWRhNWI2OWRiNWM2OGRjNWQ2N2RkNWU2NmRlNWY2NWRlNjE2NGRmNjI2M2UwNjM2M2UxNjQ2MmUyNjU2MWUyNjY2MGUzNjg1ZmU0Njk1ZWU1NmE1ZGU1NmI1ZGU2NmM1Y2U3NmU1YmU3NmY1YWU4NzA1OWU5NzE1OGU5NzI1N2VhNzQ1N2ViNzU1NmViNzY1NWVjNzc1NGVkNzk1M2VkN2E1MmVlN2I1MWVmN2M1MWVmN2U1MGYwN2Y0ZmYwODA0ZWYxODE0ZGYxODM0Y2YyODQ0YmYzODU0YmYzODc0YWY0ODg0OWY0ODk0OGY1OGI0N2Y1OGM0NmY2OGQ0NWY2OGY0NGY3OTA0NGY3OTE0M2Y3OTM0MmY4OTQ0MWY4OTU0MGY5OTczZmY5OTgzZWY5OWEzZWZhOWIzZGZhOWMzY2ZhOWUzYmZiOWYzYWZiYTEzOWZiYTIzOGZjYTMzOGZjYTUzN2ZjYTYzNmZjYTgzNWZjYTkzNGZkYWIzM2ZkYWMzM2ZkYWUzMmZkYWYzMWZkYjEzMGZkYjIyZmZkYjQyZmZkYjUyZWZlYjcyZGZlYjgyY2ZlYmEyY2ZlYmIyYmZlYmQyYWZlYmUyYWZlYzAyOWZkYzIyOWZkYzMyOGZkYzUyN2ZkYzYyN2ZkYzgyN2ZkY2EyNmZkY2IyNmZjY2QyNWZjY2UyNWZjZDAyNWZjZDIyNWZiZDMyNGZiZDUyNGZiZDcyNGZhZDgyNGZhZGEyNGY5ZGMyNGY5ZGQyNWY4ZGYyNWY4ZTEyNWY3ZTIyNWY3ZTQyNWY2ZTYyNmY2ZTgyNmY1ZTkyNmY1ZWIyN2Y0ZWQyN2YzZWUyN2YzZjAyN2YyZjIyN2YxZjQyNmYxZjUyNWYwZjcyNGYwZjkyMSIpKTsgZnVuY3Rpb24gSmIodCkgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyByZXR1cm4gdCB9IH0gY29uc3QgdG0gPSBNYXRoLmFicywgbm0gPSBNYXRoLmF0YW4yLCBlbSA9IE1hdGguY29zLCBybSA9IE1hdGgubWF4LCBpbSA9IE1hdGgubWluLCBvbSA9IE1hdGguc2luLCBhbSA9IE1hdGguc3FydCwgdW0gPSAxZS0xMiwgY20gPSBNYXRoLlBJLCBmbSA9IGNtIC8gMiwgc20gPSAyICogY207IGZ1bmN0aW9uIGxtKHQpIHsgcmV0dXJuIHQgPiAxID8gMCA6IHQgPCAtMSA/IGNtIDogTWF0aC5hY29zKHQpIH0gZnVuY3Rpb24gaG0odCkgeyByZXR1cm4gdCA+PSAxID8gZm0gOiB0IDw9IC0xID8gLWZtIDogTWF0aC5hc2luKHQpIH0gZnVuY3Rpb24gZG0odCkgeyByZXR1cm4gdC5pbm5lclJhZGl1cyB9IGZ1bmN0aW9uIHBtKHQpIHsgcmV0dXJuIHQub3V0ZXJSYWRpdXMgfSBmdW5jdGlvbiBnbSh0KSB7IHJldHVybiB0LnN0YXJ0QW5nbGUgfSBmdW5jdGlvbiB5bSh0KSB7IHJldHVybiB0LmVuZEFuZ2xlIH0gZnVuY3Rpb24gdm0odCkgeyByZXR1cm4gdCAmJiB0LnBhZEFuZ2xlIH0gZnVuY3Rpb24gX20odCwgbiwgZSwgciwgaSwgbywgYSwgdSkgeyB2YXIgYyA9IGUgLSB0LCBmID0gciAtIG4sIHMgPSBhIC0gaSwgbCA9IHUgLSBvLCBoID0gbCAqIGMgLSBzICogZjsgaWYgKCEoaCAqIGggPCB1bSkpIHJldHVybiBbdCArIChoID0gKHMgKiAobiAtIG8pIC0gbCAqICh0IC0gaSkpIC8gaCkgKiBjLCBuICsgaCAqIGZdIH0gZnVuY3Rpb24gYm0odCwgbiwgZSwgciwgaSwgbywgYSkgeyB2YXIgdSA9IHQgLSBlLCBjID0gbiAtIHIsIGYgPSAoYSA/IG8gOiAtbykgLyBhbSh1ICogdSArIGMgKiBjKSwgcyA9IGYgKiBjLCBsID0gLWYgKiB1LCBoID0gdCArIHMsIGQgPSBuICsgbCwgcCA9IGUgKyBzLCBnID0gciArIGwsIHkgPSAoaCArIHApIC8gMiwgdiA9IChkICsgZykgLyAyLCBfID0gcCAtIGgsIGIgPSBnIC0gZCwgbSA9IF8gKiBfICsgYiAqIGIsIHggPSBpIC0gbywgdyA9IGggKiBnIC0gcCAqIGQsIE0gPSAoYiA8IDAgPyAtMSA6IDEpICogYW0ocm0oMCwgeCAqIHggKiBtIC0gdyAqIHcpKSwgQSA9ICh3ICogYiAtIF8gKiBNKSAvIG0sIFQgPSAoLXcgKiBfIC0gYiAqIE0pIC8gbSwgUyA9ICh3ICogYiArIF8gKiBNKSAvIG0sIEUgPSAoLXcgKiBfICsgYiAqIE0pIC8gbSwgayA9IEEgLSB5LCBOID0gVCAtIHYsIEMgPSBTIC0geSwgUCA9IEUgLSB2OyByZXR1cm4gayAqIGsgKyBOICogTiA+IEMgKiBDICsgUCAqIFAgJiYgKEEgPSBTLCBUID0gRSksIHsgY3g6IEEsIGN5OiBULCB4MDE6IC1zLCB5MDE6IC1sLCB4MTE6IEEgKiAoaSAvIHggLSAxKSwgeTExOiBUICogKGkgLyB4IC0gMSkgfSB9IHZhciBtbSA9IEFycmF5LnByb3RvdHlwZS5zbGljZTsgZnVuY3Rpb24geG0odCkgeyByZXR1cm4gIm9iamVjdCIgPT0gdHlwZW9mIHQgJiYgImxlbmd0aCIgaW4gdCA/IHQgOiBBcnJheS5mcm9tKHQpIH0gZnVuY3Rpb24gd20odCkgeyB0aGlzLl9jb250ZXh0ID0gdCB9IGZ1bmN0aW9uIE1tKHQpIHsgcmV0dXJuIG5ldyB3bSh0KSB9IGZ1bmN0aW9uIEFtKHQpIHsgcmV0dXJuIHRbMF0gfSBmdW5jdGlvbiBUbSh0KSB7IHJldHVybiB0WzFdIH0gZnVuY3Rpb24gU20odCwgbikgeyB2YXIgZSA9IEpiKCEwKSwgciA9IG51bGwsIGkgPSBNbSwgbyA9IG51bGw7IGZ1bmN0aW9uIGEoYSkgeyB2YXIgdSwgYywgZiwgcyA9IChhID0geG0oYSkpLmxlbmd0aCwgbCA9ICExOyBmb3IgKG51bGwgPT0gciAmJiAobyA9IGkoZiA9IFBhKCkpKSwgdSA9IDA7IHUgPD0gczsgKyt1KSEodSA8IHMgJiYgZShjID0gYVt1XSwgdSwgYSkpID09PSBsICYmICgobCA9ICFsKSA/IG8ubGluZVN0YXJ0KCkgOiBvLmxpbmVFbmQoKSksIGwgJiYgby5wb2ludCgrdChjLCB1LCBhKSwgK24oYywgdSwgYSkpOyBpZiAoZikgcmV0dXJuIG8gPSBudWxsLCBmICsgIiIgfHwgbnVsbCB9IHJldHVybiB0ID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiB2b2lkIDAgPT09IHQgPyBBbSA6IEpiKHQpLCBuID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgbiA/IG4gOiB2b2lkIDAgPT09IG4gPyBUbSA6IEpiKG4pLCBhLnggPSBmdW5jdGlvbiAobikgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0ID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgbiA/IG4gOiBKYigrbiksIGEpIDogdCB9LCBhLnkgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChuID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBKYigrdCksIGEpIDogbiB9LCBhLmRlZmluZWQgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChlID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBKYighIXQpLCBhKSA6IGUgfSwgYS5jdXJ2ZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGkgPSB0LCBudWxsICE9IHIgJiYgKG8gPSBpKHIpKSwgYSkgOiBpIH0sIGEuY29udGV4dCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG51bGwgPT0gdCA/IHIgPSBvID0gbnVsbCA6IG8gPSBpKHIgPSB0KSwgYSkgOiByIH0sIGEgfSBmdW5jdGlvbiBFbSh0LCBuLCBlKSB7IHZhciByID0gbnVsbCwgaSA9IEpiKCEwKSwgbyA9IG51bGwsIGEgPSBNbSwgdSA9IG51bGw7IGZ1bmN0aW9uIGMoYykgeyB2YXIgZiwgcywgbCwgaCwgZCwgcCA9IChjID0geG0oYykpLmxlbmd0aCwgZyA9ICExLCB5ID0gbmV3IEFycmF5KHApLCB2ID0gbmV3IEFycmF5KHApOyBmb3IgKG51bGwgPT0gbyAmJiAodSA9IGEoZCA9IFBhKCkpKSwgZiA9IDA7IGYgPD0gcDsgKytmKSB7IGlmICghKGYgPCBwICYmIGkoaCA9IGNbZl0sIGYsIGMpKSA9PT0gZykgaWYgKGcgPSAhZykgcyA9IGYsIHUuYXJlYVN0YXJ0KCksIHUubGluZVN0YXJ0KCk7IGVsc2UgeyBmb3IgKHUubGluZUVuZCgpLCB1LmxpbmVTdGFydCgpLCBsID0gZiAtIDE7IGwgPj0gczsgLS1sKXUucG9pbnQoeVtsXSwgdltsXSk7IHUubGluZUVuZCgpLCB1LmFyZWFFbmQoKSB9IGcgJiYgKHlbZl0gPSArdChoLCBmLCBjKSwgdltmXSA9ICtuKGgsIGYsIGMpLCB1LnBvaW50KHIgPyArcihoLCBmLCBjKSA6IHlbZl0sIGUgPyArZShoLCBmLCBjKSA6IHZbZl0pKSB9IGlmIChkKSByZXR1cm4gdSA9IG51bGwsIGQgKyAiIiB8fCBudWxsIH0gZnVuY3Rpb24gZigpIHsgcmV0dXJuIFNtKCkuZGVmaW5lZChpKS5jdXJ2ZShhKS5jb250ZXh0KG8pIH0gcmV0dXJuIHQgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IHZvaWQgMCA9PT0gdCA/IEFtIDogSmIoK3QpLCBuID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgbiA/IG4gOiBKYih2b2lkIDAgPT09IG4gPyAwIDogK24pLCBlID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgZSA/IGUgOiB2b2lkIDAgPT09IGUgPyBUbSA6IEpiKCtlKSwgYy54ID0gZnVuY3Rpb24gKG4pIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodCA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIG4gPyBuIDogSmIoK24pLCByID0gbnVsbCwgYykgOiB0IH0sIGMueDAgPSBmdW5jdGlvbiAobikgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0ID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgbiA/IG4gOiBKYigrbiksIGMpIDogdCB9LCBjLngxID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAociA9IG51bGwgPT0gdCA/IG51bGwgOiAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IEpiKCt0KSwgYykgOiByIH0sIGMueSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG4gPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IEpiKCt0KSwgZSA9IG51bGwsIGMpIDogbiB9LCBjLnkwID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobiA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogSmIoK3QpLCBjKSA6IG4gfSwgYy55MSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGUgPSBudWxsID09IHQgPyBudWxsIDogImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBKYigrdCksIGMpIDogZSB9LCBjLmxpbmVYMCA9IGMubGluZVkwID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gZigpLngodCkueShuKSB9LCBjLmxpbmVZMSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGYoKS54KHQpLnkoZSkgfSwgYy5saW5lWDEgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBmKCkueChyKS55KG4pIH0sIGMuZGVmaW5lZCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGkgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IEpiKCEhdCksIGMpIDogaSB9LCBjLmN1cnZlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYSA9IHQsIG51bGwgIT0gbyAmJiAodSA9IGEobykpLCBjKSA6IGEgfSwgYy5jb250ZXh0ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobnVsbCA9PSB0ID8gbyA9IHUgPSBudWxsIDogdSA9IGEobyA9IHQpLCBjKSA6IG8gfSwgYyB9IGZ1bmN0aW9uIGttKHQsIG4pIHsgcmV0dXJuIG4gPCB0ID8gLTEgOiBuID4gdCA/IDEgOiBuID49IHQgPyAwIDogTmFOIH0gZnVuY3Rpb24gTm0odCkgeyByZXR1cm4gdCB9IHdtLnByb3RvdHlwZSA9IHsgYXJlYVN0YXJ0OiBmdW5jdGlvbiAoKSB7IHRoaXMuX2xpbmUgPSAwIH0sIGFyZWFFbmQ6IGZ1bmN0aW9uICgpIHsgdGhpcy5fbGluZSA9IE5hTiB9LCBsaW5lU3RhcnQ6IGZ1bmN0aW9uICgpIHsgdGhpcy5fcG9pbnQgPSAwIH0sIGxpbmVFbmQ6IGZ1bmN0aW9uICgpIHsgKHRoaXMuX2xpbmUgfHwgMCAhPT0gdGhpcy5fbGluZSAmJiAxID09PSB0aGlzLl9wb2ludCkgJiYgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKSwgdGhpcy5fbGluZSA9IDEgLSB0aGlzLl9saW5lIH0sIHBvaW50OiBmdW5jdGlvbiAodCwgbikgeyBzd2l0Y2ggKHQgPSArdCwgbiA9ICtuLCB0aGlzLl9wb2ludCkgeyBjYXNlIDA6IHRoaXMuX3BvaW50ID0gMSwgdGhpcy5fbGluZSA/IHRoaXMuX2NvbnRleHQubGluZVRvKHQsIG4pIDogdGhpcy5fY29udGV4dC5tb3ZlVG8odCwgbik7IGJyZWFrOyBjYXNlIDE6IHRoaXMuX3BvaW50ID0gMjsgZGVmYXVsdDogdGhpcy5fY29udGV4dC5saW5lVG8odCwgbikgfSB9IH07IHZhciBDbSA9IHptKE1tKTsgZnVuY3Rpb24gUG0odCkgeyB0aGlzLl9jdXJ2ZSA9IHQgfSBmdW5jdGlvbiB6bSh0KSB7IGZ1bmN0aW9uIG4obikgeyByZXR1cm4gbmV3IFBtKHQobikpIH0gcmV0dXJuIG4uX2N1cnZlID0gdCwgbiB9IGZ1bmN0aW9uIERtKHQpIHsgdmFyIG4gPSB0LmN1cnZlOyByZXR1cm4gdC5hbmdsZSA9IHQueCwgZGVsZXRlIHQueCwgdC5yYWRpdXMgPSB0LnksIGRlbGV0ZSB0LnksIHQuY3VydmUgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IG4oem0odCkpIDogbigpLl9jdXJ2ZSB9LCB0IH0gZnVuY3Rpb24gUm0oKSB7IHJldHVybiBEbShTbSgpLmN1cnZlKENtKSkgfSBmdW5jdGlvbiBGbSgpIHsgdmFyIHQgPSBFbSgpLmN1cnZlKENtKSwgbiA9IHQuY3VydmUsIGUgPSB0LmxpbmVYMCwgciA9IHQubGluZVgxLCBpID0gdC5saW5lWTAsIG8gPSB0LmxpbmVZMTsgcmV0dXJuIHQuYW5nbGUgPSB0LngsIGRlbGV0ZSB0LngsIHQuc3RhcnRBbmdsZSA9IHQueDAsIGRlbGV0ZSB0LngwLCB0LmVuZEFuZ2xlID0gdC54MSwgZGVsZXRlIHQueDEsIHQucmFkaXVzID0gdC55LCBkZWxldGUgdC55LCB0LmlubmVyUmFkaXVzID0gdC55MCwgZGVsZXRlIHQueTAsIHQub3V0ZXJSYWRpdXMgPSB0LnkxLCBkZWxldGUgdC55MSwgdC5saW5lU3RhcnRBbmdsZSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIERtKGUoKSkgfSwgZGVsZXRlIHQubGluZVgwLCB0LmxpbmVFbmRBbmdsZSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIERtKHIoKSkgfSwgZGVsZXRlIHQubGluZVgxLCB0LmxpbmVJbm5lclJhZGl1cyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIERtKGkoKSkgfSwgZGVsZXRlIHQubGluZVkwLCB0LmxpbmVPdXRlclJhZGl1cyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIERtKG8oKSkgfSwgZGVsZXRlIHQubGluZVkxLCB0LmN1cnZlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyBuKHptKHQpKSA6IG4oKS5fY3VydmUgfSwgdCB9IGZ1bmN0aW9uIHFtKHQsIG4pIHsgcmV0dXJuIFsobiA9ICtuKSAqIE1hdGguY29zKHQgLT0gTWF0aC5QSSAvIDIpLCBuICogTWF0aC5zaW4odCldIH0gUG0ucHJvdG90eXBlID0geyBhcmVhU3RhcnQ6IGZ1bmN0aW9uICgpIHsgdGhpcy5fY3VydmUuYXJlYVN0YXJ0KCkgfSwgYXJlYUVuZDogZnVuY3Rpb24gKCkgeyB0aGlzLl9jdXJ2ZS5hcmVhRW5kKCkgfSwgbGluZVN0YXJ0OiBmdW5jdGlvbiAoKSB7IHRoaXMuX2N1cnZlLmxpbmVTdGFydCgpIH0sIGxpbmVFbmQ6IGZ1bmN0aW9uICgpIHsgdGhpcy5fY3VydmUubGluZUVuZCgpIH0sIHBvaW50OiBmdW5jdGlvbiAodCwgbikgeyB0aGlzLl9jdXJ2ZS5wb2ludChuICogTWF0aC5zaW4odCksIG4gKiAtTWF0aC5jb3ModCkpIH0gfTsgY2xhc3MgSW0geyBjb25zdHJ1Y3Rvcih0LCBuKSB7IHRoaXMuX2NvbnRleHQgPSB0LCB0aGlzLl94ID0gbiB9IGFyZWFTdGFydCgpIHsgdGhpcy5fbGluZSA9IDAgfSBhcmVhRW5kKCkgeyB0aGlzLl9saW5lID0gTmFOIH0gbGluZVN0YXJ0KCkgeyB0aGlzLl9wb2ludCA9IDAgfSBsaW5lRW5kKCkgeyAodGhpcy5fbGluZSB8fCAwICE9PSB0aGlzLl9saW5lICYmIDEgPT09IHRoaXMuX3BvaW50KSAmJiB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpLCB0aGlzLl9saW5lID0gMSAtIHRoaXMuX2xpbmUgfSBwb2ludCh0LCBuKSB7IHN3aXRjaCAodCA9ICt0LCBuID0gK24sIHRoaXMuX3BvaW50KSB7IGNhc2UgMDogdGhpcy5fcG9pbnQgPSAxLCB0aGlzLl9saW5lID8gdGhpcy5fY29udGV4dC5saW5lVG8odCwgbikgOiB0aGlzLl9jb250ZXh0Lm1vdmVUbyh0LCBuKTsgYnJlYWs7IGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyOyBkZWZhdWx0OiB0aGlzLl94ID8gdGhpcy5fY29udGV4dC5iZXppZXJDdXJ2ZVRvKHRoaXMuX3gwID0gKHRoaXMuX3gwICsgdCkgLyAyLCB0aGlzLl95MCwgdGhpcy5feDAsIG4sIHQsIG4pIDogdGhpcy5fY29udGV4dC5iZXppZXJDdXJ2ZVRvKHRoaXMuX3gwLCB0aGlzLl95MCA9ICh0aGlzLl95MCArIG4pIC8gMiwgdCwgdGhpcy5feTAsIHQsIG4pIH10aGlzLl94MCA9IHQsIHRoaXMuX3kwID0gbiB9IH0gY2xhc3MgT20geyBjb25zdHJ1Y3Rvcih0KSB7IHRoaXMuX2NvbnRleHQgPSB0IH0gbGluZVN0YXJ0KCkgeyB0aGlzLl9wb2ludCA9IDAgfSBsaW5lRW5kKCkgeyB9IHBvaW50KHQsIG4pIHsgaWYgKHQgPSArdCwgbiA9ICtuLCAwID09IHRoaXMuX3BvaW50KyspIHRoaXMuX3gwID0gdCwgdGhpcy5feTAgPSBuOyBlbHNlIHsgY29uc3QgZSA9IHFtKHRoaXMuX3gwLCB0aGlzLl95MCksIHIgPSBxbSh0aGlzLl94MCwgdGhpcy5feTAgPSAodGhpcy5feTAgKyBuKSAvIDIpLCBpID0gcW0odCwgdGhpcy5feTApLCBvID0gcW0odCwgbik7IHRoaXMuX2NvbnRleHQubW92ZVRvKC4uLmUpLCB0aGlzLl9jb250ZXh0LmJlemllckN1cnZlVG8oLi4uciwgLi4uaSwgLi4ubykgfSB9IH0gZnVuY3Rpb24gVW0odCkgeyByZXR1cm4gbmV3IEltKHQsICEwKSB9IGZ1bmN0aW9uIEJtKHQpIHsgcmV0dXJuIG5ldyBJbSh0LCAhMSkgfSBmdW5jdGlvbiBZbSh0KSB7IHJldHVybiBuZXcgT20odCkgfSBmdW5jdGlvbiBMbSh0KSB7IHJldHVybiB0LnNvdXJjZSB9IGZ1bmN0aW9uIGptKHQpIHsgcmV0dXJuIHQudGFyZ2V0IH0gZnVuY3Rpb24gJG0odCkgeyBsZXQgbiA9IExtLCBlID0gam0sIHIgPSBBbSwgaSA9IFRtLCBvID0gbnVsbCwgYSA9IG51bGw7IGZ1bmN0aW9uIHUoKSB7IGxldCB1OyBjb25zdCBjID0gbW0uY2FsbChhcmd1bWVudHMpLCBmID0gbi5hcHBseSh0aGlzLCBjKSwgcyA9IGUuYXBwbHkodGhpcywgYyk7IGlmIChudWxsID09IG8gJiYgKGEgPSB0KHUgPSBQYSgpKSksIGEubGluZVN0YXJ0KCksIGNbMF0gPSBmLCBhLnBvaW50KCtyLmFwcGx5KHRoaXMsIGMpLCAraS5hcHBseSh0aGlzLCBjKSksIGNbMF0gPSBzLCBhLnBvaW50KCtyLmFwcGx5KHRoaXMsIGMpLCAraS5hcHBseSh0aGlzLCBjKSksIGEubGluZUVuZCgpLCB1KSByZXR1cm4gYSA9IG51bGwsIHUgKyAiIiB8fCBudWxsIH0gcmV0dXJuIHUuc291cmNlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobiA9IHQsIHUpIDogbiB9LCB1LnRhcmdldCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGUgPSB0LCB1KSA6IGUgfSwgdS54ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAociA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogSmIoK3QpLCB1KSA6IHIgfSwgdS55ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoaSA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogSmIoK3QpLCB1KSA6IGkgfSwgdS5jb250ZXh0ID0gZnVuY3Rpb24gKG4pIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobnVsbCA9PSBuID8gbyA9IGEgPSBudWxsIDogYSA9IHQobyA9IG4pLCB1KSA6IG8gfSwgdSB9IGNvbnN0IEhtID0gYW0oMyk7IHZhciBYbSA9IHsgZHJhdyh0LCBuKSB7IGNvbnN0IGUgPSAuNTk0MzYgKiBhbShuICsgaW0obiAvIDI4LCAuNzUpKSwgciA9IGUgLyAyLCBpID0gciAqIEhtOyB0Lm1vdmVUbygwLCBlKSwgdC5saW5lVG8oMCwgLWUpLCB0Lm1vdmVUbygtaSwgLXIpLCB0LmxpbmVUbyhpLCByKSwgdC5tb3ZlVG8oLWksIHIpLCB0LmxpbmVUbyhpLCAtcikgfSB9LCBHbSA9IHsgZHJhdyh0LCBuKSB7IGNvbnN0IGUgPSBhbShuIC8gY20pOyB0Lm1vdmVUbyhlLCAwKSwgdC5hcmMoMCwgMCwgZSwgMCwgc20pIH0gfSwgVm0gPSB7IGRyYXcodCwgbikgeyBjb25zdCBlID0gYW0obiAvIDUpIC8gMjsgdC5tb3ZlVG8oLTMgKiBlLCAtZSksIHQubGluZVRvKC1lLCAtZSksIHQubGluZVRvKC1lLCAtMyAqIGUpLCB0LmxpbmVUbyhlLCAtMyAqIGUpLCB0LmxpbmVUbyhlLCAtZSksIHQubGluZVRvKDMgKiBlLCAtZSksIHQubGluZVRvKDMgKiBlLCBlKSwgdC5saW5lVG8oZSwgZSksIHQubGluZVRvKGUsIDMgKiBlKSwgdC5saW5lVG8oLWUsIDMgKiBlKSwgdC5saW5lVG8oLWUsIGUpLCB0LmxpbmVUbygtMyAqIGUsIGUpLCB0LmNsb3NlUGF0aCgpIH0gfTsgY29uc3QgV20gPSBhbSgxIC8gMyksIFptID0gMiAqIFdtOyB2YXIgS20gPSB7IGRyYXcodCwgbikgeyBjb25zdCBlID0gYW0obiAvIFptKSwgciA9IGUgKiBXbTsgdC5tb3ZlVG8oMCwgLWUpLCB0LmxpbmVUbyhyLCAwKSwgdC5saW5lVG8oMCwgZSksIHQubGluZVRvKC1yLCAwKSwgdC5jbG9zZVBhdGgoKSB9IH0sIFFtID0geyBkcmF3KHQsIG4pIHsgY29uc3QgZSA9IC42MjYyNSAqIGFtKG4pOyB0Lm1vdmVUbygwLCAtZSksIHQubGluZVRvKGUsIDApLCB0LmxpbmVUbygwLCBlKSwgdC5saW5lVG8oLWUsIDApLCB0LmNsb3NlUGF0aCgpIH0gfSwgSm0gPSB7IGRyYXcodCwgbikgeyBjb25zdCBlID0gLjg3NTU5ICogYW0obiAtIGltKG4gLyA3LCAyKSk7IHQubW92ZVRvKC1lLCAwKSwgdC5saW5lVG8oZSwgMCksIHQubW92ZVRvKDAsIGUpLCB0LmxpbmVUbygwLCAtZSkgfSB9LCB0eCA9IHsgZHJhdyh0LCBuKSB7IGNvbnN0IGUgPSBhbShuKSwgciA9IC1lIC8gMjsgdC5yZWN0KHIsIHIsIGUsIGUpIH0gfSwgbnggPSB7IGRyYXcodCwgbikgeyBjb25zdCBlID0gLjQ0MzEgKiBhbShuKTsgdC5tb3ZlVG8oZSwgZSksIHQubGluZVRvKGUsIC1lKSwgdC5saW5lVG8oLWUsIC1lKSwgdC5saW5lVG8oLWUsIGUpLCB0LmNsb3NlUGF0aCgpIH0gfTsgY29uc3QgZXggPSBvbShjbSAvIDEwKSAvIG9tKDcgKiBjbSAvIDEwKSwgcnggPSBvbShzbSAvIDEwKSAqIGV4LCBpeCA9IC1lbShzbSAvIDEwKSAqIGV4OyB2YXIgb3ggPSB7IGRyYXcodCwgbikgeyBjb25zdCBlID0gYW0oLjg5MDgxMzA5MTUyOTI4NTIgKiBuKSwgciA9IHJ4ICogZSwgaSA9IGl4ICogZTsgdC5tb3ZlVG8oMCwgLWUpLCB0LmxpbmVUbyhyLCBpKTsgZm9yIChsZXQgbiA9IDE7IG4gPCA1OyArK24pIHsgY29uc3QgbyA9IHNtICogbiAvIDUsIGEgPSBlbShvKSwgdSA9IG9tKG8pOyB0LmxpbmVUbyh1ICogZSwgLWEgKiBlKSwgdC5saW5lVG8oYSAqIHIgLSB1ICogaSwgdSAqIHIgKyBhICogaSkgfSB0LmNsb3NlUGF0aCgpIH0gfTsgY29uc3QgYXggPSBhbSgzKTsgdmFyIHV4ID0geyBkcmF3KHQsIG4pIHsgY29uc3QgZSA9IC1hbShuIC8gKDMgKiBheCkpOyB0Lm1vdmVUbygwLCAyICogZSksIHQubGluZVRvKC1heCAqIGUsIC1lKSwgdC5saW5lVG8oYXggKiBlLCAtZSksIHQuY2xvc2VQYXRoKCkgfSB9OyBjb25zdCBjeCA9IGFtKDMpOyB2YXIgZnggPSB7IGRyYXcodCwgbikgeyBjb25zdCBlID0gLjY4MjQgKiBhbShuKSwgciA9IGUgLyAyLCBpID0gZSAqIGN4IC8gMjsgdC5tb3ZlVG8oMCwgLWUpLCB0LmxpbmVUbyhpLCByKSwgdC5saW5lVG8oLWksIHIpLCB0LmNsb3NlUGF0aCgpIH0gfTsgY29uc3Qgc3ggPSAtLjUsIGx4ID0gYW0oMykgLyAyLCBoeCA9IDEgLyBhbSgxMiksIGR4ID0gMyAqIChoeCAvIDIgKyAxKTsgdmFyIHB4ID0geyBkcmF3KHQsIG4pIHsgY29uc3QgZSA9IGFtKG4gLyBkeCksIHIgPSBlIC8gMiwgaSA9IGUgKiBoeCwgbyA9IHIsIGEgPSBlICogaHggKyBlLCB1ID0gLW8sIGMgPSBhOyB0Lm1vdmVUbyhyLCBpKSwgdC5saW5lVG8obywgYSksIHQubGluZVRvKHUsIGMpLCB0LmxpbmVUbyhzeCAqIHIgLSBseCAqIGksIGx4ICogciArIHN4ICogaSksIHQubGluZVRvKHN4ICogbyAtIGx4ICogYSwgbHggKiBvICsgc3ggKiBhKSwgdC5saW5lVG8oc3ggKiB1IC0gbHggKiBjLCBseCAqIHUgKyBzeCAqIGMpLCB0LmxpbmVUbyhzeCAqIHIgKyBseCAqIGksIHN4ICogaSAtIGx4ICogciksIHQubGluZVRvKHN4ICogbyArIGx4ICogYSwgc3ggKiBhIC0gbHggKiBvKSwgdC5saW5lVG8oc3ggKiB1ICsgbHggKiBjLCBzeCAqIGMgLSBseCAqIHUpLCB0LmNsb3NlUGF0aCgpIH0gfSwgZ3ggPSB7IGRyYXcodCwgbikgeyBjb25zdCBlID0gLjYxODkgKiBhbShuIC0gaW0obiAvIDYsIDEuNykpOyB0Lm1vdmVUbygtZSwgLWUpLCB0LmxpbmVUbyhlLCBlKSwgdC5tb3ZlVG8oLWUsIGUpLCB0LmxpbmVUbyhlLCAtZSkgfSB9OyBjb25zdCB5eCA9IFtHbSwgVm0sIEttLCB0eCwgb3gsIHV4LCBweF0sIHZ4ID0gW0dtLCBKbSwgZ3gsIGZ4LCBYbSwgbngsIFFtXTsgZnVuY3Rpb24gX3goKSB7IH0gZnVuY3Rpb24gYngodCwgbiwgZSkgeyB0Ll9jb250ZXh0LmJlemllckN1cnZlVG8oKDIgKiB0Ll94MCArIHQuX3gxKSAvIDMsICgyICogdC5feTAgKyB0Ll95MSkgLyAzLCAodC5feDAgKyAyICogdC5feDEpIC8gMywgKHQuX3kwICsgMiAqIHQuX3kxKSAvIDMsICh0Ll94MCArIDQgKiB0Ll94MSArIG4pIC8gNiwgKHQuX3kwICsgNCAqIHQuX3kxICsgZSkgLyA2KSB9IGZ1bmN0aW9uIG14KHQpIHsgdGhpcy5fY29udGV4dCA9IHQgfSBmdW5jdGlvbiB4eCh0KSB7IHRoaXMuX2NvbnRleHQgPSB0IH0gZnVuY3Rpb24gd3godCkgeyB0aGlzLl9jb250ZXh0ID0gdCB9IGZ1bmN0aW9uIE14KHQsIG4pIHsgdGhpcy5fYmFzaXMgPSBuZXcgbXgodCksIHRoaXMuX2JldGEgPSBuIH0gbXgucHJvdG90eXBlID0geyBhcmVhU3RhcnQ6IGZ1bmN0aW9uICgpIHsgdGhpcy5fbGluZSA9IDAgfSwgYXJlYUVuZDogZnVuY3Rpb24gKCkgeyB0aGlzLl9saW5lID0gTmFOIH0sIGxpbmVTdGFydDogZnVuY3Rpb24gKCkgeyB0aGlzLl94MCA9IHRoaXMuX3gxID0gdGhpcy5feTAgPSB0aGlzLl95MSA9IE5hTiwgdGhpcy5fcG9pbnQgPSAwIH0sIGxpbmVFbmQ6IGZ1bmN0aW9uICgpIHsgc3dpdGNoICh0aGlzLl9wb2ludCkgeyBjYXNlIDM6IGJ4KHRoaXMsIHRoaXMuX3gxLCB0aGlzLl95MSk7IGNhc2UgMjogdGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feDEsIHRoaXMuX3kxKSB9KHRoaXMuX2xpbmUgfHwgMCAhPT0gdGhpcy5fbGluZSAmJiAxID09PSB0aGlzLl9wb2ludCkgJiYgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKSwgdGhpcy5fbGluZSA9IDEgLSB0aGlzLl9saW5lIH0sIHBvaW50OiBmdW5jdGlvbiAodCwgbikgeyBzd2l0Y2ggKHQgPSArdCwgbiA9ICtuLCB0aGlzLl9wb2ludCkgeyBjYXNlIDA6IHRoaXMuX3BvaW50ID0gMSwgdGhpcy5fbGluZSA/IHRoaXMuX2NvbnRleHQubGluZVRvKHQsIG4pIDogdGhpcy5fY29udGV4dC5tb3ZlVG8odCwgbik7IGJyZWFrOyBjYXNlIDE6IHRoaXMuX3BvaW50ID0gMjsgYnJlYWs7IGNhc2UgMjogdGhpcy5fcG9pbnQgPSAzLCB0aGlzLl9jb250ZXh0LmxpbmVUbygoNSAqIHRoaXMuX3gwICsgdGhpcy5feDEpIC8gNiwgKDUgKiB0aGlzLl95MCArIHRoaXMuX3kxKSAvIDYpOyBkZWZhdWx0OiBieCh0aGlzLCB0LCBuKSB9dGhpcy5feDAgPSB0aGlzLl94MSwgdGhpcy5feDEgPSB0LCB0aGlzLl95MCA9IHRoaXMuX3kxLCB0aGlzLl95MSA9IG4gfSB9LCB4eC5wcm90b3R5cGUgPSB7IGFyZWFTdGFydDogX3gsIGFyZWFFbmQ6IF94LCBsaW5lU3RhcnQ6IGZ1bmN0aW9uICgpIHsgdGhpcy5feDAgPSB0aGlzLl94MSA9IHRoaXMuX3gyID0gdGhpcy5feDMgPSB0aGlzLl94NCA9IHRoaXMuX3kwID0gdGhpcy5feTEgPSB0aGlzLl95MiA9IHRoaXMuX3kzID0gdGhpcy5feTQgPSBOYU4sIHRoaXMuX3BvaW50ID0gMCB9LCBsaW5lRW5kOiBmdW5jdGlvbiAoKSB7IHN3aXRjaCAodGhpcy5fcG9pbnQpIHsgY2FzZSAxOiB0aGlzLl9jb250ZXh0Lm1vdmVUbyh0aGlzLl94MiwgdGhpcy5feTIpLCB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpOyBicmVhazsgY2FzZSAyOiB0aGlzLl9jb250ZXh0Lm1vdmVUbygodGhpcy5feDIgKyAyICogdGhpcy5feDMpIC8gMywgKHRoaXMuX3kyICsgMiAqIHRoaXMuX3kzKSAvIDMpLCB0aGlzLl9jb250ZXh0LmxpbmVUbygodGhpcy5feDMgKyAyICogdGhpcy5feDIpIC8gMywgKHRoaXMuX3kzICsgMiAqIHRoaXMuX3kyKSAvIDMpLCB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpOyBicmVhazsgY2FzZSAzOiB0aGlzLnBvaW50KHRoaXMuX3gyLCB0aGlzLl95MiksIHRoaXMucG9pbnQodGhpcy5feDMsIHRoaXMuX3kzKSwgdGhpcy5wb2ludCh0aGlzLl94NCwgdGhpcy5feTQpIH0gfSwgcG9pbnQ6IGZ1bmN0aW9uICh0LCBuKSB7IHN3aXRjaCAodCA9ICt0LCBuID0gK24sIHRoaXMuX3BvaW50KSB7IGNhc2UgMDogdGhpcy5fcG9pbnQgPSAxLCB0aGlzLl94MiA9IHQsIHRoaXMuX3kyID0gbjsgYnJlYWs7IGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyLCB0aGlzLl94MyA9IHQsIHRoaXMuX3kzID0gbjsgYnJlYWs7IGNhc2UgMjogdGhpcy5fcG9pbnQgPSAzLCB0aGlzLl94NCA9IHQsIHRoaXMuX3k0ID0gbiwgdGhpcy5fY29udGV4dC5tb3ZlVG8oKHRoaXMuX3gwICsgNCAqIHRoaXMuX3gxICsgdCkgLyA2LCAodGhpcy5feTAgKyA0ICogdGhpcy5feTEgKyBuKSAvIDYpOyBicmVhazsgZGVmYXVsdDogYngodGhpcywgdCwgbikgfXRoaXMuX3gwID0gdGhpcy5feDEsIHRoaXMuX3gxID0gdCwgdGhpcy5feTAgPSB0aGlzLl95MSwgdGhpcy5feTEgPSBuIH0gfSwgd3gucHJvdG90eXBlID0geyBhcmVhU3RhcnQ6IGZ1bmN0aW9uICgpIHsgdGhpcy5fbGluZSA9IDAgfSwgYXJlYUVuZDogZnVuY3Rpb24gKCkgeyB0aGlzLl9saW5lID0gTmFOIH0sIGxpbmVTdGFydDogZnVuY3Rpb24gKCkgeyB0aGlzLl94MCA9IHRoaXMuX3gxID0gdGhpcy5feTAgPSB0aGlzLl95MSA9IE5hTiwgdGhpcy5fcG9pbnQgPSAwIH0sIGxpbmVFbmQ6IGZ1bmN0aW9uICgpIHsgKHRoaXMuX2xpbmUgfHwgMCAhPT0gdGhpcy5fbGluZSAmJiAzID09PSB0aGlzLl9wb2ludCkgJiYgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKSwgdGhpcy5fbGluZSA9IDEgLSB0aGlzLl9saW5lIH0sIHBvaW50OiBmdW5jdGlvbiAodCwgbikgeyBzd2l0Y2ggKHQgPSArdCwgbiA9ICtuLCB0aGlzLl9wb2ludCkgeyBjYXNlIDA6IHRoaXMuX3BvaW50ID0gMTsgYnJlYWs7IGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyOyBicmVhazsgY2FzZSAyOiB0aGlzLl9wb2ludCA9IDM7IHZhciBlID0gKHRoaXMuX3gwICsgNCAqIHRoaXMuX3gxICsgdCkgLyA2LCByID0gKHRoaXMuX3kwICsgNCAqIHRoaXMuX3kxICsgbikgLyA2OyB0aGlzLl9saW5lID8gdGhpcy5fY29udGV4dC5saW5lVG8oZSwgcikgOiB0aGlzLl9jb250ZXh0Lm1vdmVUbyhlLCByKTsgYnJlYWs7IGNhc2UgMzogdGhpcy5fcG9pbnQgPSA0OyBkZWZhdWx0OiBieCh0aGlzLCB0LCBuKSB9dGhpcy5feDAgPSB0aGlzLl94MSwgdGhpcy5feDEgPSB0LCB0aGlzLl95MCA9IHRoaXMuX3kxLCB0aGlzLl95MSA9IG4gfSB9LCBNeC5wcm90b3R5cGUgPSB7IGxpbmVTdGFydDogZnVuY3Rpb24gKCkgeyB0aGlzLl94ID0gW10sIHRoaXMuX3kgPSBbXSwgdGhpcy5fYmFzaXMubGluZVN0YXJ0KCkgfSwgbGluZUVuZDogZnVuY3Rpb24gKCkgeyB2YXIgdCA9IHRoaXMuX3gsIG4gPSB0aGlzLl95LCBlID0gdC5sZW5ndGggLSAxOyBpZiAoZSA+IDApIGZvciAodmFyIHIsIGkgPSB0WzBdLCBvID0gblswXSwgYSA9IHRbZV0gLSBpLCB1ID0gbltlXSAtIG8sIGMgPSAtMTsgKytjIDw9IGU7KXIgPSBjIC8gZSwgdGhpcy5fYmFzaXMucG9pbnQodGhpcy5fYmV0YSAqIHRbY10gKyAoMSAtIHRoaXMuX2JldGEpICogKGkgKyByICogYSksIHRoaXMuX2JldGEgKiBuW2NdICsgKDEgLSB0aGlzLl9iZXRhKSAqIChvICsgciAqIHUpKTsgdGhpcy5feCA9IHRoaXMuX3kgPSBudWxsLCB0aGlzLl9iYXNpcy5saW5lRW5kKCkgfSwgcG9pbnQ6IGZ1bmN0aW9uICh0LCBuKSB7IHRoaXMuX3gucHVzaCgrdCksIHRoaXMuX3kucHVzaCgrbikgfSB9OyB2YXIgQXggPSBmdW5jdGlvbiB0KG4pIHsgZnVuY3Rpb24gZSh0KSB7IHJldHVybiAxID09PSBuID8gbmV3IG14KHQpIDogbmV3IE14KHQsIG4pIH0gcmV0dXJuIGUuYmV0YSA9IGZ1bmN0aW9uIChuKSB7IHJldHVybiB0KCtuKSB9LCBlIH0oLjg1KTsgZnVuY3Rpb24gVHgodCwgbiwgZSkgeyB0Ll9jb250ZXh0LmJlemllckN1cnZlVG8odC5feDEgKyB0Ll9rICogKHQuX3gyIC0gdC5feDApLCB0Ll95MSArIHQuX2sgKiAodC5feTIgLSB0Ll95MCksIHQuX3gyICsgdC5fayAqICh0Ll94MSAtIG4pLCB0Ll95MiArIHQuX2sgKiAodC5feTEgLSBlKSwgdC5feDIsIHQuX3kyKSB9IGZ1bmN0aW9uIFN4KHQsIG4pIHsgdGhpcy5fY29udGV4dCA9IHQsIHRoaXMuX2sgPSAoMSAtIG4pIC8gNiB9IFN4LnByb3RvdHlwZSA9IHsgYXJlYVN0YXJ0OiBmdW5jdGlvbiAoKSB7IHRoaXMuX2xpbmUgPSAwIH0sIGFyZWFFbmQ6IGZ1bmN0aW9uICgpIHsgdGhpcy5fbGluZSA9IE5hTiB9LCBsaW5lU3RhcnQ6IGZ1bmN0aW9uICgpIHsgdGhpcy5feDAgPSB0aGlzLl94MSA9IHRoaXMuX3gyID0gdGhpcy5feTAgPSB0aGlzLl95MSA9IHRoaXMuX3kyID0gTmFOLCB0aGlzLl9wb2ludCA9IDAgfSwgbGluZUVuZDogZnVuY3Rpb24gKCkgeyBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7IGNhc2UgMjogdGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feDIsIHRoaXMuX3kyKTsgYnJlYWs7IGNhc2UgMzogVHgodGhpcywgdGhpcy5feDEsIHRoaXMuX3kxKSB9KHRoaXMuX2xpbmUgfHwgMCAhPT0gdGhpcy5fbGluZSAmJiAxID09PSB0aGlzLl9wb2ludCkgJiYgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKSwgdGhpcy5fbGluZSA9IDEgLSB0aGlzLl9saW5lIH0sIHBvaW50OiBmdW5jdGlvbiAodCwgbikgeyBzd2l0Y2ggKHQgPSArdCwgbiA9ICtuLCB0aGlzLl9wb2ludCkgeyBjYXNlIDA6IHRoaXMuX3BvaW50ID0gMSwgdGhpcy5fbGluZSA/IHRoaXMuX2NvbnRleHQubGluZVRvKHQsIG4pIDogdGhpcy5fY29udGV4dC5tb3ZlVG8odCwgbik7IGJyZWFrOyBjYXNlIDE6IHRoaXMuX3BvaW50ID0gMiwgdGhpcy5feDEgPSB0LCB0aGlzLl95MSA9IG47IGJyZWFrOyBjYXNlIDI6IHRoaXMuX3BvaW50ID0gMzsgZGVmYXVsdDogVHgodGhpcywgdCwgbikgfXRoaXMuX3gwID0gdGhpcy5feDEsIHRoaXMuX3gxID0gdGhpcy5feDIsIHRoaXMuX3gyID0gdCwgdGhpcy5feTAgPSB0aGlzLl95MSwgdGhpcy5feTEgPSB0aGlzLl95MiwgdGhpcy5feTIgPSBuIH0gfTsgdmFyIEV4ID0gZnVuY3Rpb24gdChuKSB7IGZ1bmN0aW9uIGUodCkgeyByZXR1cm4gbmV3IFN4KHQsIG4pIH0gcmV0dXJuIGUudGVuc2lvbiA9IGZ1bmN0aW9uIChuKSB7IHJldHVybiB0KCtuKSB9LCBlIH0oMCk7IGZ1bmN0aW9uIGt4KHQsIG4pIHsgdGhpcy5fY29udGV4dCA9IHQsIHRoaXMuX2sgPSAoMSAtIG4pIC8gNiB9IGt4LnByb3RvdHlwZSA9IHsgYXJlYVN0YXJ0OiBfeCwgYXJlYUVuZDogX3gsIGxpbmVTdGFydDogZnVuY3Rpb24gKCkgeyB0aGlzLl94MCA9IHRoaXMuX3gxID0gdGhpcy5feDIgPSB0aGlzLl94MyA9IHRoaXMuX3g0ID0gdGhpcy5feDUgPSB0aGlzLl95MCA9IHRoaXMuX3kxID0gdGhpcy5feTIgPSB0aGlzLl95MyA9IHRoaXMuX3k0ID0gdGhpcy5feTUgPSBOYU4sIHRoaXMuX3BvaW50ID0gMCB9LCBsaW5lRW5kOiBmdW5jdGlvbiAoKSB7IHN3aXRjaCAodGhpcy5fcG9pbnQpIHsgY2FzZSAxOiB0aGlzLl9jb250ZXh0Lm1vdmVUbyh0aGlzLl94MywgdGhpcy5feTMpLCB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpOyBicmVhazsgY2FzZSAyOiB0aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94MywgdGhpcy5feTMpLCB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpOyBicmVhazsgY2FzZSAzOiB0aGlzLnBvaW50KHRoaXMuX3gzLCB0aGlzLl95MyksIHRoaXMucG9pbnQodGhpcy5feDQsIHRoaXMuX3k0KSwgdGhpcy5wb2ludCh0aGlzLl94NSwgdGhpcy5feTUpIH0gfSwgcG9pbnQ6IGZ1bmN0aW9uICh0LCBuKSB7IHN3aXRjaCAodCA9ICt0LCBuID0gK24sIHRoaXMuX3BvaW50KSB7IGNhc2UgMDogdGhpcy5fcG9pbnQgPSAxLCB0aGlzLl94MyA9IHQsIHRoaXMuX3kzID0gbjsgYnJlYWs7IGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyLCB0aGlzLl9jb250ZXh0Lm1vdmVUbyh0aGlzLl94NCA9IHQsIHRoaXMuX3k0ID0gbik7IGJyZWFrOyBjYXNlIDI6IHRoaXMuX3BvaW50ID0gMywgdGhpcy5feDUgPSB0LCB0aGlzLl95NSA9IG47IGJyZWFrOyBkZWZhdWx0OiBUeCh0aGlzLCB0LCBuKSB9dGhpcy5feDAgPSB0aGlzLl94MSwgdGhpcy5feDEgPSB0aGlzLl94MiwgdGhpcy5feDIgPSB0LCB0aGlzLl95MCA9IHRoaXMuX3kxLCB0aGlzLl95MSA9IHRoaXMuX3kyLCB0aGlzLl95MiA9IG4gfSB9OyB2YXIgTnggPSBmdW5jdGlvbiB0KG4pIHsgZnVuY3Rpb24gZSh0KSB7IHJldHVybiBuZXcga3godCwgbikgfSByZXR1cm4gZS50ZW5zaW9uID0gZnVuY3Rpb24gKG4pIHsgcmV0dXJuIHQoK24pIH0sIGUgfSgwKTsgZnVuY3Rpb24gQ3godCwgbikgeyB0aGlzLl9jb250ZXh0ID0gdCwgdGhpcy5fayA9ICgxIC0gbikgLyA2IH0gQ3gucHJvdG90eXBlID0geyBhcmVhU3RhcnQ6IGZ1bmN0aW9uICgpIHsgdGhpcy5fbGluZSA9IDAgfSwgYXJlYUVuZDogZnVuY3Rpb24gKCkgeyB0aGlzLl9saW5lID0gTmFOIH0sIGxpbmVTdGFydDogZnVuY3Rpb24gKCkgeyB0aGlzLl94MCA9IHRoaXMuX3gxID0gdGhpcy5feDIgPSB0aGlzLl95MCA9IHRoaXMuX3kxID0gdGhpcy5feTIgPSBOYU4sIHRoaXMuX3BvaW50ID0gMCB9LCBsaW5lRW5kOiBmdW5jdGlvbiAoKSB7ICh0aGlzLl9saW5lIHx8IDAgIT09IHRoaXMuX2xpbmUgJiYgMyA9PT0gdGhpcy5fcG9pbnQpICYmIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCksIHRoaXMuX2xpbmUgPSAxIC0gdGhpcy5fbGluZSB9LCBwb2ludDogZnVuY3Rpb24gKHQsIG4pIHsgc3dpdGNoICh0ID0gK3QsIG4gPSArbiwgdGhpcy5fcG9pbnQpIHsgY2FzZSAwOiB0aGlzLl9wb2ludCA9IDE7IGJyZWFrOyBjYXNlIDE6IHRoaXMuX3BvaW50ID0gMjsgYnJlYWs7IGNhc2UgMjogdGhpcy5fcG9pbnQgPSAzLCB0aGlzLl9saW5lID8gdGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feDIsIHRoaXMuX3kyKSA6IHRoaXMuX2NvbnRleHQubW92ZVRvKHRoaXMuX3gyLCB0aGlzLl95Mik7IGJyZWFrOyBjYXNlIDM6IHRoaXMuX3BvaW50ID0gNDsgZGVmYXVsdDogVHgodGhpcywgdCwgbikgfXRoaXMuX3gwID0gdGhpcy5feDEsIHRoaXMuX3gxID0gdGhpcy5feDIsIHRoaXMuX3gyID0gdCwgdGhpcy5feTAgPSB0aGlzLl95MSwgdGhpcy5feTEgPSB0aGlzLl95MiwgdGhpcy5feTIgPSBuIH0gfTsgdmFyIFB4ID0gZnVuY3Rpb24gdChuKSB7IGZ1bmN0aW9uIGUodCkgeyByZXR1cm4gbmV3IEN4KHQsIG4pIH0gcmV0dXJuIGUudGVuc2lvbiA9IGZ1bmN0aW9uIChuKSB7IHJldHVybiB0KCtuKSB9LCBlIH0oMCk7IGZ1bmN0aW9uIHp4KHQsIG4sIGUpIHsgdmFyIHIgPSB0Ll94MSwgaSA9IHQuX3kxLCBvID0gdC5feDIsIGEgPSB0Ll95MjsgaWYgKHQuX2wwMV9hID4gdW0pIHsgdmFyIHUgPSAyICogdC5fbDAxXzJhICsgMyAqIHQuX2wwMV9hICogdC5fbDEyX2EgKyB0Ll9sMTJfMmEsIGMgPSAzICogdC5fbDAxX2EgKiAodC5fbDAxX2EgKyB0Ll9sMTJfYSk7IHIgPSAociAqIHUgLSB0Ll94MCAqIHQuX2wxMl8yYSArIHQuX3gyICogdC5fbDAxXzJhKSAvIGMsIGkgPSAoaSAqIHUgLSB0Ll95MCAqIHQuX2wxMl8yYSArIHQuX3kyICogdC5fbDAxXzJhKSAvIGMgfSBpZiAodC5fbDIzX2EgPiB1bSkgeyB2YXIgZiA9IDIgKiB0Ll9sMjNfMmEgKyAzICogdC5fbDIzX2EgKiB0Ll9sMTJfYSArIHQuX2wxMl8yYSwgcyA9IDMgKiB0Ll9sMjNfYSAqICh0Ll9sMjNfYSArIHQuX2wxMl9hKTsgbyA9IChvICogZiArIHQuX3gxICogdC5fbDIzXzJhIC0gbiAqIHQuX2wxMl8yYSkgLyBzLCBhID0gKGEgKiBmICsgdC5feTEgKiB0Ll9sMjNfMmEgLSBlICogdC5fbDEyXzJhKSAvIHMgfSB0Ll9jb250ZXh0LmJlemllckN1cnZlVG8ociwgaSwgbywgYSwgdC5feDIsIHQuX3kyKSB9IGZ1bmN0aW9uIER4KHQsIG4pIHsgdGhpcy5fY29udGV4dCA9IHQsIHRoaXMuX2FscGhhID0gbiB9IER4LnByb3RvdHlwZSA9IHsgYXJlYVN0YXJ0OiBmdW5jdGlvbiAoKSB7IHRoaXMuX2xpbmUgPSAwIH0sIGFyZWFFbmQ6IGZ1bmN0aW9uICgpIHsgdGhpcy5fbGluZSA9IE5hTiB9LCBsaW5lU3RhcnQ6IGZ1bmN0aW9uICgpIHsgdGhpcy5feDAgPSB0aGlzLl94MSA9IHRoaXMuX3gyID0gdGhpcy5feTAgPSB0aGlzLl95MSA9IHRoaXMuX3kyID0gTmFOLCB0aGlzLl9sMDFfYSA9IHRoaXMuX2wxMl9hID0gdGhpcy5fbDIzX2EgPSB0aGlzLl9sMDFfMmEgPSB0aGlzLl9sMTJfMmEgPSB0aGlzLl9sMjNfMmEgPSB0aGlzLl9wb2ludCA9IDAgfSwgbGluZUVuZDogZnVuY3Rpb24gKCkgeyBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7IGNhc2UgMjogdGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feDIsIHRoaXMuX3kyKTsgYnJlYWs7IGNhc2UgMzogdGhpcy5wb2ludCh0aGlzLl94MiwgdGhpcy5feTIpIH0odGhpcy5fbGluZSB8fCAwICE9PSB0aGlzLl9saW5lICYmIDEgPT09IHRoaXMuX3BvaW50KSAmJiB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpLCB0aGlzLl9saW5lID0gMSAtIHRoaXMuX2xpbmUgfSwgcG9pbnQ6IGZ1bmN0aW9uICh0LCBuKSB7IGlmICh0ID0gK3QsIG4gPSArbiwgdGhpcy5fcG9pbnQpIHsgdmFyIGUgPSB0aGlzLl94MiAtIHQsIHIgPSB0aGlzLl95MiAtIG47IHRoaXMuX2wyM19hID0gTWF0aC5zcXJ0KHRoaXMuX2wyM18yYSA9IE1hdGgucG93KGUgKiBlICsgciAqIHIsIHRoaXMuX2FscGhhKSkgfSBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7IGNhc2UgMDogdGhpcy5fcG9pbnQgPSAxLCB0aGlzLl9saW5lID8gdGhpcy5fY29udGV4dC5saW5lVG8odCwgbikgOiB0aGlzLl9jb250ZXh0Lm1vdmVUbyh0LCBuKTsgYnJlYWs7IGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyOyBicmVhazsgY2FzZSAyOiB0aGlzLl9wb2ludCA9IDM7IGRlZmF1bHQ6IHp4KHRoaXMsIHQsIG4pIH10aGlzLl9sMDFfYSA9IHRoaXMuX2wxMl9hLCB0aGlzLl9sMTJfYSA9IHRoaXMuX2wyM19hLCB0aGlzLl9sMDFfMmEgPSB0aGlzLl9sMTJfMmEsIHRoaXMuX2wxMl8yYSA9IHRoaXMuX2wyM18yYSwgdGhpcy5feDAgPSB0aGlzLl94MSwgdGhpcy5feDEgPSB0aGlzLl94MiwgdGhpcy5feDIgPSB0LCB0aGlzLl95MCA9IHRoaXMuX3kxLCB0aGlzLl95MSA9IHRoaXMuX3kyLCB0aGlzLl95MiA9IG4gfSB9OyB2YXIgUnggPSBmdW5jdGlvbiB0KG4pIHsgZnVuY3Rpb24gZSh0KSB7IHJldHVybiBuID8gbmV3IER4KHQsIG4pIDogbmV3IFN4KHQsIDApIH0gcmV0dXJuIGUuYWxwaGEgPSBmdW5jdGlvbiAobikgeyByZXR1cm4gdCgrbikgfSwgZSB9KC41KTsgZnVuY3Rpb24gRngodCwgbikgeyB0aGlzLl9jb250ZXh0ID0gdCwgdGhpcy5fYWxwaGEgPSBuIH0gRngucHJvdG90eXBlID0geyBhcmVhU3RhcnQ6IF94LCBhcmVhRW5kOiBfeCwgbGluZVN0YXJ0OiBmdW5jdGlvbiAoKSB7IHRoaXMuX3gwID0gdGhpcy5feDEgPSB0aGlzLl94MiA9IHRoaXMuX3gzID0gdGhpcy5feDQgPSB0aGlzLl94NSA9IHRoaXMuX3kwID0gdGhpcy5feTEgPSB0aGlzLl95MiA9IHRoaXMuX3kzID0gdGhpcy5feTQgPSB0aGlzLl95NSA9IE5hTiwgdGhpcy5fbDAxX2EgPSB0aGlzLl9sMTJfYSA9IHRoaXMuX2wyM19hID0gdGhpcy5fbDAxXzJhID0gdGhpcy5fbDEyXzJhID0gdGhpcy5fbDIzXzJhID0gdGhpcy5fcG9pbnQgPSAwIH0sIGxpbmVFbmQ6IGZ1bmN0aW9uICgpIHsgc3dpdGNoICh0aGlzLl9wb2ludCkgeyBjYXNlIDE6IHRoaXMuX2NvbnRleHQubW92ZVRvKHRoaXMuX3gzLCB0aGlzLl95MyksIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7IGJyZWFrOyBjYXNlIDI6IHRoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gzLCB0aGlzLl95MyksIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7IGJyZWFrOyBjYXNlIDM6IHRoaXMucG9pbnQodGhpcy5feDMsIHRoaXMuX3kzKSwgdGhpcy5wb2ludCh0aGlzLl94NCwgdGhpcy5feTQpLCB0aGlzLnBvaW50KHRoaXMuX3g1LCB0aGlzLl95NSkgfSB9LCBwb2ludDogZnVuY3Rpb24gKHQsIG4pIHsgaWYgKHQgPSArdCwgbiA9ICtuLCB0aGlzLl9wb2ludCkgeyB2YXIgZSA9IHRoaXMuX3gyIC0gdCwgciA9IHRoaXMuX3kyIC0gbjsgdGhpcy5fbDIzX2EgPSBNYXRoLnNxcnQodGhpcy5fbDIzXzJhID0gTWF0aC5wb3coZSAqIGUgKyByICogciwgdGhpcy5fYWxwaGEpKSB9IHN3aXRjaCAodGhpcy5fcG9pbnQpIHsgY2FzZSAwOiB0aGlzLl9wb2ludCA9IDEsIHRoaXMuX3gzID0gdCwgdGhpcy5feTMgPSBuOyBicmVhazsgY2FzZSAxOiB0aGlzLl9wb2ludCA9IDIsIHRoaXMuX2NvbnRleHQubW92ZVRvKHRoaXMuX3g0ID0gdCwgdGhpcy5feTQgPSBuKTsgYnJlYWs7IGNhc2UgMjogdGhpcy5fcG9pbnQgPSAzLCB0aGlzLl94NSA9IHQsIHRoaXMuX3k1ID0gbjsgYnJlYWs7IGRlZmF1bHQ6IHp4KHRoaXMsIHQsIG4pIH10aGlzLl9sMDFfYSA9IHRoaXMuX2wxMl9hLCB0aGlzLl9sMTJfYSA9IHRoaXMuX2wyM19hLCB0aGlzLl9sMDFfMmEgPSB0aGlzLl9sMTJfMmEsIHRoaXMuX2wxMl8yYSA9IHRoaXMuX2wyM18yYSwgdGhpcy5feDAgPSB0aGlzLl94MSwgdGhpcy5feDEgPSB0aGlzLl94MiwgdGhpcy5feDIgPSB0LCB0aGlzLl95MCA9IHRoaXMuX3kxLCB0aGlzLl95MSA9IHRoaXMuX3kyLCB0aGlzLl95MiA9IG4gfSB9OyB2YXIgcXggPSBmdW5jdGlvbiB0KG4pIHsgZnVuY3Rpb24gZSh0KSB7IHJldHVybiBuID8gbmV3IEZ4KHQsIG4pIDogbmV3IGt4KHQsIDApIH0gcmV0dXJuIGUuYWxwaGEgPSBmdW5jdGlvbiAobikgeyByZXR1cm4gdCgrbikgfSwgZSB9KC41KTsgZnVuY3Rpb24gSXgodCwgbikgeyB0aGlzLl9jb250ZXh0ID0gdCwgdGhpcy5fYWxwaGEgPSBuIH0gSXgucHJvdG90eXBlID0geyBhcmVhU3RhcnQ6IGZ1bmN0aW9uICgpIHsgdGhpcy5fbGluZSA9IDAgfSwgYXJlYUVuZDogZnVuY3Rpb24gKCkgeyB0aGlzLl9saW5lID0gTmFOIH0sIGxpbmVTdGFydDogZnVuY3Rpb24gKCkgeyB0aGlzLl94MCA9IHRoaXMuX3gxID0gdGhpcy5feDIgPSB0aGlzLl95MCA9IHRoaXMuX3kxID0gdGhpcy5feTIgPSBOYU4sIHRoaXMuX2wwMV9hID0gdGhpcy5fbDEyX2EgPSB0aGlzLl9sMjNfYSA9IHRoaXMuX2wwMV8yYSA9IHRoaXMuX2wxMl8yYSA9IHRoaXMuX2wyM18yYSA9IHRoaXMuX3BvaW50ID0gMCB9LCBsaW5lRW5kOiBmdW5jdGlvbiAoKSB7ICh0aGlzLl9saW5lIHx8IDAgIT09IHRoaXMuX2xpbmUgJiYgMyA9PT0gdGhpcy5fcG9pbnQpICYmIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCksIHRoaXMuX2xpbmUgPSAxIC0gdGhpcy5fbGluZSB9LCBwb2ludDogZnVuY3Rpb24gKHQsIG4pIHsgaWYgKHQgPSArdCwgbiA9ICtuLCB0aGlzLl9wb2ludCkgeyB2YXIgZSA9IHRoaXMuX3gyIC0gdCwgciA9IHRoaXMuX3kyIC0gbjsgdGhpcy5fbDIzX2EgPSBNYXRoLnNxcnQodGhpcy5fbDIzXzJhID0gTWF0aC5wb3coZSAqIGUgKyByICogciwgdGhpcy5fYWxwaGEpKSB9IHN3aXRjaCAodGhpcy5fcG9pbnQpIHsgY2FzZSAwOiB0aGlzLl9wb2ludCA9IDE7IGJyZWFrOyBjYXNlIDE6IHRoaXMuX3BvaW50ID0gMjsgYnJlYWs7IGNhc2UgMjogdGhpcy5fcG9pbnQgPSAzLCB0aGlzLl9saW5lID8gdGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feDIsIHRoaXMuX3kyKSA6IHRoaXMuX2NvbnRleHQubW92ZVRvKHRoaXMuX3gyLCB0aGlzLl95Mik7IGJyZWFrOyBjYXNlIDM6IHRoaXMuX3BvaW50ID0gNDsgZGVmYXVsdDogengodGhpcywgdCwgbikgfXRoaXMuX2wwMV9hID0gdGhpcy5fbDEyX2EsIHRoaXMuX2wxMl9hID0gdGhpcy5fbDIzX2EsIHRoaXMuX2wwMV8yYSA9IHRoaXMuX2wxMl8yYSwgdGhpcy5fbDEyXzJhID0gdGhpcy5fbDIzXzJhLCB0aGlzLl94MCA9IHRoaXMuX3gxLCB0aGlzLl94MSA9IHRoaXMuX3gyLCB0aGlzLl94MiA9IHQsIHRoaXMuX3kwID0gdGhpcy5feTEsIHRoaXMuX3kxID0gdGhpcy5feTIsIHRoaXMuX3kyID0gbiB9IH07IHZhciBPeCA9IGZ1bmN0aW9uIHQobikgeyBmdW5jdGlvbiBlKHQpIHsgcmV0dXJuIG4gPyBuZXcgSXgodCwgbikgOiBuZXcgQ3godCwgMCkgfSByZXR1cm4gZS5hbHBoYSA9IGZ1bmN0aW9uIChuKSB7IHJldHVybiB0KCtuKSB9LCBlIH0oLjUpOyBmdW5jdGlvbiBVeCh0KSB7IHRoaXMuX2NvbnRleHQgPSB0IH0gZnVuY3Rpb24gQngodCkgeyByZXR1cm4gdCA8IDAgPyAtMSA6IDEgfSBmdW5jdGlvbiBZeCh0LCBuLCBlKSB7IHZhciByID0gdC5feDEgLSB0Ll94MCwgaSA9IG4gLSB0Ll94MSwgbyA9ICh0Ll95MSAtIHQuX3kwKSAvIChyIHx8IGkgPCAwICYmIC0wKSwgYSA9IChlIC0gdC5feTEpIC8gKGkgfHwgciA8IDAgJiYgLTApLCB1ID0gKG8gKiBpICsgYSAqIHIpIC8gKHIgKyBpKTsgcmV0dXJuIChCeChvKSArIEJ4KGEpKSAqIE1hdGgubWluKE1hdGguYWJzKG8pLCBNYXRoLmFicyhhKSwgLjUgKiBNYXRoLmFicyh1KSkgfHwgMCB9IGZ1bmN0aW9uIEx4KHQsIG4pIHsgdmFyIGUgPSB0Ll94MSAtIHQuX3gwOyByZXR1cm4gZSA/ICgzICogKHQuX3kxIC0gdC5feTApIC8gZSAtIG4pIC8gMiA6IG4gfSBmdW5jdGlvbiBqeCh0LCBuLCBlKSB7IHZhciByID0gdC5feDAsIGkgPSB0Ll95MCwgbyA9IHQuX3gxLCBhID0gdC5feTEsIHUgPSAobyAtIHIpIC8gMzsgdC5fY29udGV4dC5iZXppZXJDdXJ2ZVRvKHIgKyB1LCBpICsgdSAqIG4sIG8gLSB1LCBhIC0gdSAqIGUsIG8sIGEpIH0gZnVuY3Rpb24gJHgodCkgeyB0aGlzLl9jb250ZXh0ID0gdCB9IGZ1bmN0aW9uIEh4KHQpIHsgdGhpcy5fY29udGV4dCA9IG5ldyBYeCh0KSB9IGZ1bmN0aW9uIFh4KHQpIHsgdGhpcy5fY29udGV4dCA9IHQgfSBmdW5jdGlvbiBHeCh0KSB7IHRoaXMuX2NvbnRleHQgPSB0IH0gZnVuY3Rpb24gVngodCkgeyB2YXIgbiwgZSwgciA9IHQubGVuZ3RoIC0gMSwgaSA9IG5ldyBBcnJheShyKSwgbyA9IG5ldyBBcnJheShyKSwgYSA9IG5ldyBBcnJheShyKTsgZm9yIChpWzBdID0gMCwgb1swXSA9IDIsIGFbMF0gPSB0WzBdICsgMiAqIHRbMV0sIG4gPSAxOyBuIDwgciAtIDE7ICsrbilpW25dID0gMSwgb1tuXSA9IDQsIGFbbl0gPSA0ICogdFtuXSArIDIgKiB0W24gKyAxXTsgZm9yIChpW3IgLSAxXSA9IDIsIG9bciAtIDFdID0gNywgYVtyIC0gMV0gPSA4ICogdFtyIC0gMV0gKyB0W3JdLCBuID0gMTsgbiA8IHI7ICsrbillID0gaVtuXSAvIG9bbiAtIDFdLCBvW25dIC09IGUsIGFbbl0gLT0gZSAqIGFbbiAtIDFdOyBmb3IgKGlbciAtIDFdID0gYVtyIC0gMV0gLyBvW3IgLSAxXSwgbiA9IHIgLSAyOyBuID49IDA7IC0tbilpW25dID0gKGFbbl0gLSBpW24gKyAxXSkgLyBvW25dOyBmb3IgKG9bciAtIDFdID0gKHRbcl0gKyBpW3IgLSAxXSkgLyAyLCBuID0gMDsgbiA8IHIgLSAxOyArK24pb1tuXSA9IDIgKiB0W24gKyAxXSAtIGlbbiArIDFdOyByZXR1cm4gW2ksIG9dIH0gZnVuY3Rpb24gV3godCwgbikgeyB0aGlzLl9jb250ZXh0ID0gdCwgdGhpcy5fdCA9IG4gfSBmdW5jdGlvbiBaeCh0LCBuKSB7IGlmICgoaSA9IHQubGVuZ3RoKSA+IDEpIGZvciAodmFyIGUsIHIsIGksIG8gPSAxLCBhID0gdFtuWzBdXSwgdSA9IGEubGVuZ3RoOyBvIDwgaTsgKytvKWZvciAociA9IGEsIGEgPSB0W25bb11dLCBlID0gMDsgZSA8IHU7ICsrZSlhW2VdWzFdICs9IGFbZV1bMF0gPSBpc05hTihyW2VdWzFdKSA/IHJbZV1bMF0gOiByW2VdWzFdIH0gZnVuY3Rpb24gS3godCkgeyBmb3IgKHZhciBuID0gdC5sZW5ndGgsIGUgPSBuZXcgQXJyYXkobik7IC0tbiA+PSAwOyllW25dID0gbjsgcmV0dXJuIGUgfSBmdW5jdGlvbiBReCh0LCBuKSB7IHJldHVybiB0W25dIH0gZnVuY3Rpb24gSngodCkgeyBjb25zdCBuID0gW107IHJldHVybiBuLmtleSA9IHQsIG4gfSBmdW5jdGlvbiB0dyh0KSB7IHZhciBuID0gdC5tYXAobncpOyByZXR1cm4gS3godCkuc29ydCgoZnVuY3Rpb24gKHQsIGUpIHsgcmV0dXJuIG5bdF0gLSBuW2VdIH0pKSB9IGZ1bmN0aW9uIG53KHQpIHsgZm9yICh2YXIgbiwgZSA9IC0xLCByID0gMCwgaSA9IHQubGVuZ3RoLCBvID0gLTEgLyAwOyArK2UgPCBpOykobiA9ICt0W2VdWzFdKSA+IG8gJiYgKG8gPSBuLCByID0gZSk7IHJldHVybiByIH0gZnVuY3Rpb24gZXcodCkgeyB2YXIgbiA9IHQubWFwKHJ3KTsgcmV0dXJuIEt4KHQpLnNvcnQoKGZ1bmN0aW9uICh0LCBlKSB7IHJldHVybiBuW3RdIC0gbltlXSB9KSkgfSBmdW5jdGlvbiBydyh0KSB7IGZvciAodmFyIG4sIGUgPSAwLCByID0gLTEsIGkgPSB0Lmxlbmd0aDsgKytyIDwgaTspKG4gPSArdFtyXVsxXSkgJiYgKGUgKz0gbik7IHJldHVybiBlIH0gVXgucHJvdG90eXBlID0geyBhcmVhU3RhcnQ6IF94LCBhcmVhRW5kOiBfeCwgbGluZVN0YXJ0OiBmdW5jdGlvbiAoKSB7IHRoaXMuX3BvaW50ID0gMCB9LCBsaW5lRW5kOiBmdW5jdGlvbiAoKSB7IHRoaXMuX3BvaW50ICYmIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCkgfSwgcG9pbnQ6IGZ1bmN0aW9uICh0LCBuKSB7IHQgPSArdCwgbiA9ICtuLCB0aGlzLl9wb2ludCA/IHRoaXMuX2NvbnRleHQubGluZVRvKHQsIG4pIDogKHRoaXMuX3BvaW50ID0gMSwgdGhpcy5fY29udGV4dC5tb3ZlVG8odCwgbikpIH0gfSwgJHgucHJvdG90eXBlID0geyBhcmVhU3RhcnQ6IGZ1bmN0aW9uICgpIHsgdGhpcy5fbGluZSA9IDAgfSwgYXJlYUVuZDogZnVuY3Rpb24gKCkgeyB0aGlzLl9saW5lID0gTmFOIH0sIGxpbmVTdGFydDogZnVuY3Rpb24gKCkgeyB0aGlzLl94MCA9IHRoaXMuX3gxID0gdGhpcy5feTAgPSB0aGlzLl95MSA9IHRoaXMuX3QwID0gTmFOLCB0aGlzLl9wb2ludCA9IDAgfSwgbGluZUVuZDogZnVuY3Rpb24gKCkgeyBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7IGNhc2UgMjogdGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feDEsIHRoaXMuX3kxKTsgYnJlYWs7IGNhc2UgMzogangodGhpcywgdGhpcy5fdDAsIEx4KHRoaXMsIHRoaXMuX3QwKSkgfSh0aGlzLl9saW5lIHx8IDAgIT09IHRoaXMuX2xpbmUgJiYgMSA9PT0gdGhpcy5fcG9pbnQpICYmIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCksIHRoaXMuX2xpbmUgPSAxIC0gdGhpcy5fbGluZSB9LCBwb2ludDogZnVuY3Rpb24gKHQsIG4pIHsgdmFyIGUgPSBOYU47IGlmIChuID0gK24sICh0ID0gK3QpICE9PSB0aGlzLl94MSB8fCBuICE9PSB0aGlzLl95MSkgeyBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7IGNhc2UgMDogdGhpcy5fcG9pbnQgPSAxLCB0aGlzLl9saW5lID8gdGhpcy5fY29udGV4dC5saW5lVG8odCwgbikgOiB0aGlzLl9jb250ZXh0Lm1vdmVUbyh0LCBuKTsgYnJlYWs7IGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyOyBicmVhazsgY2FzZSAyOiB0aGlzLl9wb2ludCA9IDMsIGp4KHRoaXMsIEx4KHRoaXMsIGUgPSBZeCh0aGlzLCB0LCBuKSksIGUpOyBicmVhazsgZGVmYXVsdDogangodGhpcywgdGhpcy5fdDAsIGUgPSBZeCh0aGlzLCB0LCBuKSkgfXRoaXMuX3gwID0gdGhpcy5feDEsIHRoaXMuX3gxID0gdCwgdGhpcy5feTAgPSB0aGlzLl95MSwgdGhpcy5feTEgPSBuLCB0aGlzLl90MCA9IGUgfSB9IH0sIChIeC5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKCR4LnByb3RvdHlwZSkpLnBvaW50ID0gZnVuY3Rpb24gKHQsIG4pIHsgJHgucHJvdG90eXBlLnBvaW50LmNhbGwodGhpcywgbiwgdCkgfSwgWHgucHJvdG90eXBlID0geyBtb3ZlVG86IGZ1bmN0aW9uICh0LCBuKSB7IHRoaXMuX2NvbnRleHQubW92ZVRvKG4sIHQpIH0sIGNsb3NlUGF0aDogZnVuY3Rpb24gKCkgeyB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpIH0sIGxpbmVUbzogZnVuY3Rpb24gKHQsIG4pIHsgdGhpcy5fY29udGV4dC5saW5lVG8obiwgdCkgfSwgYmV6aWVyQ3VydmVUbzogZnVuY3Rpb24gKHQsIG4sIGUsIHIsIGksIG8pIHsgdGhpcy5fY29udGV4dC5iZXppZXJDdXJ2ZVRvKG4sIHQsIHIsIGUsIG8sIGkpIH0gfSwgR3gucHJvdG90eXBlID0geyBhcmVhU3RhcnQ6IGZ1bmN0aW9uICgpIHsgdGhpcy5fbGluZSA9IDAgfSwgYXJlYUVuZDogZnVuY3Rpb24gKCkgeyB0aGlzLl9saW5lID0gTmFOIH0sIGxpbmVTdGFydDogZnVuY3Rpb24gKCkgeyB0aGlzLl94ID0gW10sIHRoaXMuX3kgPSBbXSB9LCBsaW5lRW5kOiBmdW5jdGlvbiAoKSB7IHZhciB0ID0gdGhpcy5feCwgbiA9IHRoaXMuX3ksIGUgPSB0Lmxlbmd0aDsgaWYgKGUpIGlmICh0aGlzLl9saW5lID8gdGhpcy5fY29udGV4dC5saW5lVG8odFswXSwgblswXSkgOiB0aGlzLl9jb250ZXh0Lm1vdmVUbyh0WzBdLCBuWzBdKSwgMiA9PT0gZSkgdGhpcy5fY29udGV4dC5saW5lVG8odFsxXSwgblsxXSk7IGVsc2UgZm9yICh2YXIgciA9IFZ4KHQpLCBpID0gVngobiksIG8gPSAwLCBhID0gMTsgYSA8IGU7ICsrbywgKythKXRoaXMuX2NvbnRleHQuYmV6aWVyQ3VydmVUbyhyWzBdW29dLCBpWzBdW29dLCByWzFdW29dLCBpWzFdW29dLCB0W2FdLCBuW2FdKTsgKHRoaXMuX2xpbmUgfHwgMCAhPT0gdGhpcy5fbGluZSAmJiAxID09PSBlKSAmJiB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpLCB0aGlzLl9saW5lID0gMSAtIHRoaXMuX2xpbmUsIHRoaXMuX3ggPSB0aGlzLl95ID0gbnVsbCB9LCBwb2ludDogZnVuY3Rpb24gKHQsIG4pIHsgdGhpcy5feC5wdXNoKCt0KSwgdGhpcy5feS5wdXNoKCtuKSB9IH0sIFd4LnByb3RvdHlwZSA9IHsgYXJlYVN0YXJ0OiBmdW5jdGlvbiAoKSB7IHRoaXMuX2xpbmUgPSAwIH0sIGFyZWFFbmQ6IGZ1bmN0aW9uICgpIHsgdGhpcy5fbGluZSA9IE5hTiB9LCBsaW5lU3RhcnQ6IGZ1bmN0aW9uICgpIHsgdGhpcy5feCA9IHRoaXMuX3kgPSBOYU4sIHRoaXMuX3BvaW50ID0gMCB9LCBsaW5lRW5kOiBmdW5jdGlvbiAoKSB7IDAgPCB0aGlzLl90ICYmIHRoaXMuX3QgPCAxICYmIDIgPT09IHRoaXMuX3BvaW50ICYmIHRoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gsIHRoaXMuX3kpLCAodGhpcy5fbGluZSB8fCAwICE9PSB0aGlzLl9saW5lICYmIDEgPT09IHRoaXMuX3BvaW50KSAmJiB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpLCB0aGlzLl9saW5lID49IDAgJiYgKHRoaXMuX3QgPSAxIC0gdGhpcy5fdCwgdGhpcy5fbGluZSA9IDEgLSB0aGlzLl9saW5lKSB9LCBwb2ludDogZnVuY3Rpb24gKHQsIG4pIHsgc3dpdGNoICh0ID0gK3QsIG4gPSArbiwgdGhpcy5fcG9pbnQpIHsgY2FzZSAwOiB0aGlzLl9wb2ludCA9IDEsIHRoaXMuX2xpbmUgPyB0aGlzLl9jb250ZXh0LmxpbmVUbyh0LCBuKSA6IHRoaXMuX2NvbnRleHQubW92ZVRvKHQsIG4pOyBicmVhazsgY2FzZSAxOiB0aGlzLl9wb2ludCA9IDI7IGRlZmF1bHQ6IGlmICh0aGlzLl90IDw9IDApIHRoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gsIG4pLCB0aGlzLl9jb250ZXh0LmxpbmVUbyh0LCBuKTsgZWxzZSB7IHZhciBlID0gdGhpcy5feCAqICgxIC0gdGhpcy5fdCkgKyB0ICogdGhpcy5fdDsgdGhpcy5fY29udGV4dC5saW5lVG8oZSwgdGhpcy5feSksIHRoaXMuX2NvbnRleHQubGluZVRvKGUsIG4pIH0gfXRoaXMuX3ggPSB0LCB0aGlzLl95ID0gbiB9IH07IHZhciBpdyA9IHQgPT4gKCkgPT4gdDsgZnVuY3Rpb24gb3codCwgeyBzb3VyY2VFdmVudDogbiwgdGFyZ2V0OiBlLCB0cmFuc2Zvcm06IHIsIGRpc3BhdGNoOiBpIH0pIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGhpcywgeyB0eXBlOiB7IHZhbHVlOiB0LCBlbnVtZXJhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCB9LCBzb3VyY2VFdmVudDogeyB2YWx1ZTogbiwgZW51bWVyYWJsZTogITAsIGNvbmZpZ3VyYWJsZTogITAgfSwgdGFyZ2V0OiB7IHZhbHVlOiBlLCBlbnVtZXJhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCB9LCB0cmFuc2Zvcm06IHsgdmFsdWU6IHIsIGVudW1lcmFibGU6ICEwLCBjb25maWd1cmFibGU6ICEwIH0sIF86IHsgdmFsdWU6IGkgfSB9KSB9IGZ1bmN0aW9uIGF3KHQsIG4sIGUpIHsgdGhpcy5rID0gdCwgdGhpcy54ID0gbiwgdGhpcy55ID0gZSB9IGF3LnByb3RvdHlwZSA9IHsgY29uc3RydWN0b3I6IGF3LCBzY2FsZTogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIDEgPT09IHQgPyB0aGlzIDogbmV3IGF3KHRoaXMuayAqIHQsIHRoaXMueCwgdGhpcy55KSB9LCB0cmFuc2xhdGU6IGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiAwID09PSB0ICYgMCA9PT0gbiA/IHRoaXMgOiBuZXcgYXcodGhpcy5rLCB0aGlzLnggKyB0aGlzLmsgKiB0LCB0aGlzLnkgKyB0aGlzLmsgKiBuKSB9LCBhcHBseTogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIFt0WzBdICogdGhpcy5rICsgdGhpcy54LCB0WzFdICogdGhpcy5rICsgdGhpcy55XSB9LCBhcHBseVg6IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0ICogdGhpcy5rICsgdGhpcy54IH0sIGFwcGx5WTogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQgKiB0aGlzLmsgKyB0aGlzLnkgfSwgaW52ZXJ0OiBmdW5jdGlvbiAodCkgeyByZXR1cm4gWyh0WzBdIC0gdGhpcy54KSAvIHRoaXMuaywgKHRbMV0gLSB0aGlzLnkpIC8gdGhpcy5rXSB9LCBpbnZlcnRYOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gKHQgLSB0aGlzLngpIC8gdGhpcy5rIH0sIGludmVydFk6IGZ1bmN0aW9uICh0KSB7IHJldHVybiAodCAtIHRoaXMueSkgLyB0aGlzLmsgfSwgcmVzY2FsZVg6IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0LmNvcHkoKS5kb21haW4odC5yYW5nZSgpLm1hcCh0aGlzLmludmVydFgsIHRoaXMpLm1hcCh0LmludmVydCwgdCkpIH0sIHJlc2NhbGVZOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gdC5jb3B5KCkuZG9tYWluKHQucmFuZ2UoKS5tYXAodGhpcy5pbnZlcnRZLCB0aGlzKS5tYXAodC5pbnZlcnQsIHQpKSB9LCB0b1N0cmluZzogZnVuY3Rpb24gKCkgeyByZXR1cm4gInRyYW5zbGF0ZSgiICsgdGhpcy54ICsgIiwiICsgdGhpcy55ICsgIikgc2NhbGUoIiArIHRoaXMuayArICIpIiB9IH07IHZhciB1dyA9IG5ldyBhdygxLCAwLCAwKTsgZnVuY3Rpb24gY3codCkgeyBmb3IgKDsgIXQuX196b29tOylpZiAoISh0ID0gdC5wYXJlbnROb2RlKSkgcmV0dXJuIHV3OyByZXR1cm4gdC5fX3pvb20gfSBmdW5jdGlvbiBmdyh0KSB7IHQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCkgfSBmdW5jdGlvbiBzdyh0KSB7IHQucHJldmVudERlZmF1bHQoKSwgdC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKSB9IGZ1bmN0aW9uIGx3KHQpIHsgcmV0dXJuICEodC5jdHJsS2V5ICYmICJ3aGVlbCIgIT09IHQudHlwZSB8fCB0LmJ1dHRvbikgfSBmdW5jdGlvbiBodygpIHsgdmFyIHQgPSB0aGlzOyByZXR1cm4gdCBpbnN0YW5jZW9mIFNWR0VsZW1lbnQgPyAodCA9IHQub3duZXJTVkdFbGVtZW50IHx8IHQpLmhhc0F0dHJpYnV0ZSgidmlld0JveCIpID8gW1sodCA9IHQudmlld0JveC5iYXNlVmFsKS54LCB0LnldLCBbdC54ICsgdC53aWR0aCwgdC55ICsgdC5oZWlnaHRdXSA6IFtbMCwgMF0sIFt0LndpZHRoLmJhc2VWYWwudmFsdWUsIHQuaGVpZ2h0LmJhc2VWYWwudmFsdWVdXSA6IFtbMCwgMF0sIFt0LmNsaWVudFdpZHRoLCB0LmNsaWVudEhlaWdodF1dIH0gZnVuY3Rpb24gZHcoKSB7IHJldHVybiB0aGlzLl9fem9vbSB8fCB1dyB9IGZ1bmN0aW9uIHB3KHQpIHsgcmV0dXJuIC10LmRlbHRhWSAqICgxID09PSB0LmRlbHRhTW9kZSA/IC4wNSA6IHQuZGVsdGFNb2RlID8gMSA6IC4wMDIpICogKHQuY3RybEtleSA/IDEwIDogMSkgfSBmdW5jdGlvbiBndygpIHsgcmV0dXJuIG5hdmlnYXRvci5tYXhUb3VjaFBvaW50cyB8fCAib250b3VjaHN0YXJ0IiBpbiB0aGlzIH0gZnVuY3Rpb24geXcodCwgbiwgZSkgeyB2YXIgciA9IHQuaW52ZXJ0WChuWzBdWzBdKSAtIGVbMF1bMF0sIGkgPSB0LmludmVydFgoblsxXVswXSkgLSBlWzFdWzBdLCBvID0gdC5pbnZlcnRZKG5bMF1bMV0pIC0gZVswXVsxXSwgYSA9IHQuaW52ZXJ0WShuWzFdWzFdKSAtIGVbMV1bMV07IHJldHVybiB0LnRyYW5zbGF0ZShpID4gciA/IChyICsgaSkgLyAyIDogTWF0aC5taW4oMCwgcikgfHwgTWF0aC5tYXgoMCwgaSksIGEgPiBvID8gKG8gKyBhKSAvIDIgOiBNYXRoLm1pbigwLCBvKSB8fCBNYXRoLm1heCgwLCBhKSkgfSBjdy5wcm90b3R5cGUgPSBhdy5wcm90b3R5cGUsIHQuQWRkZXIgPSBULCB0LkRlbGF1bmF5ID0ga3UsIHQuRm9ybWF0U3BlY2lmaWVyID0gUmMsIHQuSW50ZXJuTWFwID0gSW50ZXJuTWFwLCB0LkludGVyblNldCA9IEludGVyblNldCwgdC5Ob2RlID0gRWQsIHQuVm9yb25vaSA9IHd1LCB0Llpvb21UcmFuc2Zvcm0gPSBhdywgdC5hY3RpdmUgPSBmdW5jdGlvbiAodCwgbikgeyB2YXIgZSwgciwgaSA9IHQuX190cmFuc2l0aW9uOyBpZiAoaSkgZm9yIChyIGluIG4gPSBudWxsID09IG4gPyBudWxsIDogbiArICIiLCBpKSBpZiAoKGUgPSBpW3JdKS5zdGF0ZSA+IDEgJiYgZS5uYW1lID09PSBuKSByZXR1cm4gbmV3IGxvKFtbdF1dLCBCbywgbiwgK3IpOyByZXR1cm4gbnVsbCB9LCB0LmFyYyA9IGZ1bmN0aW9uICgpIHsgdmFyIHQgPSBkbSwgbiA9IHBtLCBlID0gSmIoMCksIHIgPSBudWxsLCBpID0gZ20sIG8gPSB5bSwgYSA9IHZtLCB1ID0gbnVsbDsgZnVuY3Rpb24gYygpIHsgdmFyIGMsIGYsIHMgPSArdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpLCBsID0gK24uYXBwbHkodGhpcywgYXJndW1lbnRzKSwgaCA9IGkuYXBwbHkodGhpcywgYXJndW1lbnRzKSAtIGZtLCBkID0gby5hcHBseSh0aGlzLCBhcmd1bWVudHMpIC0gZm0sIHAgPSB0bShkIC0gaCksIGcgPSBkID4gaDsgaWYgKHUgfHwgKHUgPSBjID0gUGEoKSksIGwgPCBzICYmIChmID0gbCwgbCA9IHMsIHMgPSBmKSwgbCA+IHVtKSBpZiAocCA+IHNtIC0gdW0pIHUubW92ZVRvKGwgKiBlbShoKSwgbCAqIG9tKGgpKSwgdS5hcmMoMCwgMCwgbCwgaCwgZCwgIWcpLCBzID4gdW0gJiYgKHUubW92ZVRvKHMgKiBlbShkKSwgcyAqIG9tKGQpKSwgdS5hcmMoMCwgMCwgcywgZCwgaCwgZykpOyBlbHNlIHsgdmFyIHksIHYsIF8gPSBoLCBiID0gZCwgbSA9IGgsIHggPSBkLCB3ID0gcCwgTSA9IHAsIEEgPSBhLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgLyAyLCBUID0gQSA+IHVtICYmIChyID8gK3IuYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IGFtKHMgKiBzICsgbCAqIGwpKSwgUyA9IGltKHRtKGwgLSBzKSAvIDIsICtlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpLCBFID0gUywgayA9IFM7IGlmIChUID4gdW0pIHsgdmFyIE4gPSBobShUIC8gcyAqIG9tKEEpKSwgQyA9IGhtKFQgLyBsICogb20oQSkpOyAodyAtPSAyICogTikgPiB1bSA/IChtICs9IE4gKj0gZyA/IDEgOiAtMSwgeCAtPSBOKSA6ICh3ID0gMCwgbSA9IHggPSAoaCArIGQpIC8gMiksIChNIC09IDIgKiBDKSA+IHVtID8gKF8gKz0gQyAqPSBnID8gMSA6IC0xLCBiIC09IEMpIDogKE0gPSAwLCBfID0gYiA9IChoICsgZCkgLyAyKSB9IHZhciBQID0gbCAqIGVtKF8pLCB6ID0gbCAqIG9tKF8pLCBEID0gcyAqIGVtKHgpLCBSID0gcyAqIG9tKHgpOyBpZiAoUyA+IHVtKSB7IHZhciBGLCBxID0gbCAqIGVtKGIpLCBJID0gbCAqIG9tKGIpLCBPID0gcyAqIGVtKG0pLCBVID0gcyAqIG9tKG0pOyBpZiAocCA8IGNtICYmIChGID0gX20oUCwgeiwgTywgVSwgcSwgSSwgRCwgUikpKSB7IHZhciBCID0gUCAtIEZbMF0sIFkgPSB6IC0gRlsxXSwgTCA9IHEgLSBGWzBdLCBqID0gSSAtIEZbMV0sICQgPSAxIC8gb20obG0oKEIgKiBMICsgWSAqIGopIC8gKGFtKEIgKiBCICsgWSAqIFkpICogYW0oTCAqIEwgKyBqICogaikpKSAvIDIpLCBIID0gYW0oRlswXSAqIEZbMF0gKyBGWzFdICogRlsxXSk7IEUgPSBpbShTLCAocyAtIEgpIC8gKCQgLSAxKSksIGsgPSBpbShTLCAobCAtIEgpIC8gKCQgKyAxKSkgfSB9IE0gPiB1bSA/IGsgPiB1bSA/ICh5ID0gYm0oTywgVSwgUCwgeiwgbCwgaywgZyksIHYgPSBibShxLCBJLCBELCBSLCBsLCBrLCBnKSwgdS5tb3ZlVG8oeS5jeCArIHkueDAxLCB5LmN5ICsgeS55MDEpLCBrIDwgUyA/IHUuYXJjKHkuY3gsIHkuY3ksIGssIG5tKHkueTAxLCB5LngwMSksIG5tKHYueTAxLCB2LngwMSksICFnKSA6ICh1LmFyYyh5LmN4LCB5LmN5LCBrLCBubSh5LnkwMSwgeS54MDEpLCBubSh5LnkxMSwgeS54MTEpLCAhZyksIHUuYXJjKDAsIDAsIGwsIG5tKHkuY3kgKyB5LnkxMSwgeS5jeCArIHkueDExKSwgbm0odi5jeSArIHYueTExLCB2LmN4ICsgdi54MTEpLCAhZyksIHUuYXJjKHYuY3gsIHYuY3ksIGssIG5tKHYueTExLCB2LngxMSksIG5tKHYueTAxLCB2LngwMSksICFnKSkpIDogKHUubW92ZVRvKFAsIHopLCB1LmFyYygwLCAwLCBsLCBfLCBiLCAhZykpIDogdS5tb3ZlVG8oUCwgeiksIHMgPiB1bSAmJiB3ID4gdW0gPyBFID4gdW0gPyAoeSA9IGJtKEQsIFIsIHEsIEksIHMsIC1FLCBnKSwgdiA9IGJtKFAsIHosIE8sIFUsIHMsIC1FLCBnKSwgdS5saW5lVG8oeS5jeCArIHkueDAxLCB5LmN5ICsgeS55MDEpLCBFIDwgUyA/IHUuYXJjKHkuY3gsIHkuY3ksIEUsIG5tKHkueTAxLCB5LngwMSksIG5tKHYueTAxLCB2LngwMSksICFnKSA6ICh1LmFyYyh5LmN4LCB5LmN5LCBFLCBubSh5LnkwMSwgeS54MDEpLCBubSh5LnkxMSwgeS54MTEpLCAhZyksIHUuYXJjKDAsIDAsIHMsIG5tKHkuY3kgKyB5LnkxMSwgeS5jeCArIHkueDExKSwgbm0odi5jeSArIHYueTExLCB2LmN4ICsgdi54MTEpLCBnKSwgdS5hcmModi5jeCwgdi5jeSwgRSwgbm0odi55MTEsIHYueDExKSwgbm0odi55MDEsIHYueDAxKSwgIWcpKSkgOiB1LmFyYygwLCAwLCBzLCB4LCBtLCBnKSA6IHUubGluZVRvKEQsIFIpIH0gZWxzZSB1Lm1vdmVUbygwLCAwKTsgaWYgKHUuY2xvc2VQYXRoKCksIGMpIHJldHVybiB1ID0gbnVsbCwgYyArICIiIHx8IG51bGwgfSByZXR1cm4gYy5jZW50cm9pZCA9IGZ1bmN0aW9uICgpIHsgdmFyIGUgPSAoK3QuYXBwbHkodGhpcywgYXJndW1lbnRzKSArICtuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIC8gMiwgciA9ICgraS5hcHBseSh0aGlzLCBhcmd1bWVudHMpICsgK28uYXBwbHkodGhpcywgYXJndW1lbnRzKSkgLyAyIC0gY20gLyAyOyByZXR1cm4gW2VtKHIpICogZSwgb20ocikgKiBlXSB9LCBjLmlubmVyUmFkaXVzID0gZnVuY3Rpb24gKG4pIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodCA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIG4gPyBuIDogSmIoK24pLCBjKSA6IHQgfSwgYy5vdXRlclJhZGl1cyA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG4gPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IEpiKCt0KSwgYykgOiBuIH0sIGMuY29ybmVyUmFkaXVzID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZSA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogSmIoK3QpLCBjKSA6IGUgfSwgYy5wYWRSYWRpdXMgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyID0gbnVsbCA9PSB0ID8gbnVsbCA6ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogSmIoK3QpLCBjKSA6IHIgfSwgYy5zdGFydEFuZ2xlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoaSA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogSmIoK3QpLCBjKSA6IGkgfSwgYy5lbmRBbmdsZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG8gPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IEpiKCt0KSwgYykgOiBvIH0sIGMucGFkQW5nbGUgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChhID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBKYigrdCksIGMpIDogYSB9LCBjLmNvbnRleHQgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh1ID0gbnVsbCA9PSB0ID8gbnVsbCA6IHQsIGMpIDogdSB9LCBjIH0sIHQuYXJlYSA9IEVtLCB0LmFyZWFSYWRpYWwgPSBGbSwgdC5hc2NlbmRpbmcgPSBuLCB0LmF1dG9UeXBlID0gZnVuY3Rpb24gKHQpIHsgZm9yICh2YXIgbiBpbiB0KSB7IHZhciBlLCByLCBpID0gdFtuXS50cmltKCk7IGlmIChpKSBpZiAoInRydWUiID09PSBpKSBpID0gITA7IGVsc2UgaWYgKCJmYWxzZSIgPT09IGkpIGkgPSAhMTsgZWxzZSBpZiAoIk5hTiIgPT09IGkpIGkgPSBOYU47IGVsc2UgaWYgKGlzTmFOKGUgPSAraSkpIHsgaWYgKCEociA9IGkubWF0Y2goL14oWy0rXVxkezJ9KT9cZHs0fSgtXGR7Mn0oLVxkezJ9KT8pPyhUXGR7Mn06XGR7Mn0oOlxkezJ9KFwuXGR7M30pPyk/KFp8Wy0rXVxkezJ9OlxkezJ9KT8pPyQvKSkpIGNvbnRpbnVlOyBRdSAmJiByWzRdICYmICFyWzddICYmIChpID0gaS5yZXBsYWNlKC8tL2csICIvIikucmVwbGFjZSgvVC8sICIgIikpLCBpID0gbmV3IERhdGUoaSkgfSBlbHNlIGkgPSBlOyBlbHNlIGkgPSBudWxsOyB0W25dID0gaSB9IHJldHVybiB0IH0sIHQuYXhpc0JvdHRvbSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBFdCgzLCB0KSB9LCB0LmF4aXNMZWZ0ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIEV0KDQsIHQpIH0sIHQuYXhpc1JpZ2h0ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIEV0KDIsIHQpIH0sIHQuYXhpc1RvcCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBFdCgxLCB0KSB9LCB0LmJpbiA9IFEsIHQuYmlzZWN0ID0gbCwgdC5iaXNlY3RDZW50ZXIgPSBzLCB0LmJpc2VjdExlZnQgPSBmLCB0LmJpc2VjdFJpZ2h0ID0gYywgdC5iaXNlY3RvciA9IHIsIHQuYmxvYiA9IGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiBmZXRjaCh0LCBuKS50aGVuKEp1KSB9LCB0LmJsdXIgPSBmdW5jdGlvbiAodCwgbikgeyBpZiAoISgobiA9ICtuKSA+PSAwKSkgdGhyb3cgbmV3IFJhbmdlRXJyb3IoImludmFsaWQgciIpOyBsZXQgZSA9IHQubGVuZ3RoOyBpZiAoISgoZSA9IE1hdGguZmxvb3IoZSkpID49IDApKSB0aHJvdyBuZXcgUmFuZ2VFcnJvcigiaW52YWxpZCBsZW5ndGgiKTsgaWYgKCFlIHx8ICFuKSByZXR1cm4gdDsgY29uc3QgciA9IHYobiksIGkgPSB0LnNsaWNlKCk7IHJldHVybiByKHQsIGksIDAsIGUsIDEpLCByKGksIHQsIDAsIGUsIDEpLCByKHQsIGksIDAsIGUsIDEpLCB0IH0sIHQuYmx1cjIgPSBoLCB0LmJsdXJJbWFnZSA9IGQsIHQuYnJ1c2ggPSBmdW5jdGlvbiAoKSB7IHJldHVybiBwYShlYSkgfSwgdC5icnVzaFNlbGVjdGlvbiA9IGZ1bmN0aW9uICh0KSB7IHZhciBuID0gdC5fX2JydXNoOyByZXR1cm4gbiA/IG4uZGltLm91dHB1dChuLnNlbGVjdGlvbikgOiBudWxsIH0sIHQuYnJ1c2hYID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gcGEodGEpIH0sIHQuYnJ1c2hZID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gcGEobmEpIH0sIHQuYnVmZmVyID0gZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIGZldGNoKHQsIG4pLnRoZW4odGMpIH0sIHQuY2hvcmQgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBUYSghMSwgITEpIH0sIHQuY2hvcmREaXJlY3RlZCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFRhKCEwLCAhMSkgfSwgdC5jaG9yZFRyYW5zcG9zZSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFRhKCExLCAhMCkgfSwgdC5jbHVzdGVyID0gZnVuY3Rpb24gKCkgeyB2YXIgdCA9IF9kLCBuID0gMSwgZSA9IDEsIHIgPSAhMTsgZnVuY3Rpb24gaShpKSB7IHZhciBvLCBhID0gMDsgaS5lYWNoQWZ0ZXIoKGZ1bmN0aW9uIChuKSB7IHZhciBlID0gbi5jaGlsZHJlbjsgZSA/IChuLnggPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gdC5yZWR1Y2UoYmQsIDApIC8gdC5sZW5ndGggfShlKSwgbi55ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIDEgKyB0LnJlZHVjZShtZCwgMCkgfShlKSkgOiAobi54ID0gbyA/IGEgKz0gdChuLCBvKSA6IDAsIG4ueSA9IDAsIG8gPSBuKSB9KSk7IHZhciB1ID0gZnVuY3Rpb24gKHQpIHsgZm9yICh2YXIgbjsgbiA9IHQuY2hpbGRyZW47KXQgPSBuWzBdOyByZXR1cm4gdCB9KGkpLCBjID0gZnVuY3Rpb24gKHQpIHsgZm9yICh2YXIgbjsgbiA9IHQuY2hpbGRyZW47KXQgPSBuW24ubGVuZ3RoIC0gMV07IHJldHVybiB0IH0oaSksIGYgPSB1LnggLSB0KHUsIGMpIC8gMiwgcyA9IGMueCArIHQoYywgdSkgLyAyOyByZXR1cm4gaS5lYWNoQWZ0ZXIociA/IGZ1bmN0aW9uICh0KSB7IHQueCA9ICh0LnggLSBpLngpICogbiwgdC55ID0gKGkueSAtIHQueSkgKiBlIH0gOiBmdW5jdGlvbiAodCkgeyB0LnggPSAodC54IC0gZikgLyAocyAtIGYpICogbiwgdC55ID0gKDEgLSAoaS55ID8gdC55IC8gaS55IDogMSkpICogZSB9KSB9IHJldHVybiBpLnNlcGFyYXRpb24gPSBmdW5jdGlvbiAobikgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0ID0gbiwgaSkgOiB0IH0sIGkuc2l6ZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHIgPSAhMSwgbiA9ICt0WzBdLCBlID0gK3RbMV0sIGkpIDogciA/IG51bGwgOiBbbiwgZV0gfSwgaS5ub2RlU2l6ZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHIgPSAhMCwgbiA9ICt0WzBdLCBlID0gK3RbMV0sIGkpIDogciA/IFtuLCBlXSA6IG51bGwgfSwgaSB9LCB0LmNvbG9yID0gUGUsIHQuY29udG91ckRlbnNpdHkgPSBmdW5jdGlvbiAoKSB7IHZhciB0ID0gS2EsIG4gPSBRYSwgZSA9IEphLCByID0gOTYwLCBpID0gNTAwLCBvID0gMjAsIGEgPSAyLCB1ID0gMyAqIG8sIGMgPSByICsgMiAqIHUgPj4gYSwgZiA9IGkgKyAyICogdSA+PiBhLCBzID0gJGEoMjApOyBmdW5jdGlvbiBsKHIpIHsgdmFyIGkgPSBuZXcgRmxvYXQzMkFycmF5KGMgKiBmKSwgcyA9IE1hdGgucG93KDIsIC1hKSwgbCA9IC0xOyBmb3IgKGNvbnN0IG8gb2YgcikgeyB2YXIgZCA9ICh0KG8sICsrbCwgcikgKyB1KSAqIHMsIHAgPSAobihvLCBsLCByKSArIHUpICogcywgZyA9ICtlKG8sIGwsIHIpOyBpZiAoZCA+PSAwICYmIGQgPCBjICYmIHAgPj0gMCAmJiBwIDwgZikgeyB2YXIgeSA9IE1hdGguZmxvb3IoZCksIHYgPSBNYXRoLmZsb29yKHApLCBfID0gZCAtIHkgLSAuNSwgYiA9IHAgLSB2IC0gLjU7IGlbeSArIHYgKiBjXSArPSAoMSAtIF8pICogKDEgLSBiKSAqIGcsIGlbeSArIDEgKyB2ICogY10gKz0gXyAqICgxIC0gYikgKiBnLCBpW3kgKyAxICsgKHYgKyAxKSAqIGNdICs9IF8gKiBiICogZywgaVt5ICsgKHYgKyAxKSAqIGNdICs9ICgxIC0gXykgKiBiICogZyB9IH0gcmV0dXJuIGgoeyBkYXRhOiBpLCB3aWR0aDogYywgaGVpZ2h0OiBmIH0sIG8gKiBzKSwgaSB9IGZ1bmN0aW9uIGQodCkgeyB2YXIgbiA9IGwodCksIGUgPSBzKG4pLCByID0gTWF0aC5wb3coMiwgMiAqIGEpOyByZXR1cm4gQXJyYXkuaXNBcnJheShlKSB8fCAoZSA9IEcoTnVtYmVyLk1JTl9WQUxVRSwgSihuKSAvIHIsIGUpKSwgWmEoKS5zaXplKFtjLCBmXSkudGhyZXNob2xkcyhlLm1hcCgodCA9PiB0ICogcikpKShuKS5tYXAoKCh0LCBuKSA9PiAodC52YWx1ZSA9ICtlW25dLCBwKHQpKSkpIH0gZnVuY3Rpb24gcCh0KSB7IHJldHVybiB0LmNvb3JkaW5hdGVzLmZvckVhY2goZyksIHQgfSBmdW5jdGlvbiBnKHQpIHsgdC5mb3JFYWNoKHkpIH0gZnVuY3Rpb24geSh0KSB7IHQuZm9yRWFjaCh2KSB9IGZ1bmN0aW9uIHYodCkgeyB0WzBdID0gdFswXSAqIE1hdGgucG93KDIsIGEpIC0gdSwgdFsxXSA9IHRbMV0gKiBNYXRoLnBvdygyLCBhKSAtIHUgfSBmdW5jdGlvbiBfKCkgeyByZXR1cm4gYyA9IHIgKyAyICogKHUgPSAzICogbykgPj4gYSwgZiA9IGkgKyAyICogdSA+PiBhLCBkIH0gcmV0dXJuIGQuY29udG91cnMgPSBmdW5jdGlvbiAodCkgeyB2YXIgbiA9IGwodCksIGUgPSBaYSgpLnNpemUoW2MsIGZdKSwgciA9IE1hdGgucG93KDIsIDIgKiBhKSwgaSA9IHQgPT4geyB0ID0gK3Q7IHZhciBpID0gcChlLmNvbnRvdXIobiwgdCAqIHIpKTsgcmV0dXJuIGkudmFsdWUgPSB0LCBpIH07IHJldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkoaSwgIm1heCIsIHsgZ2V0OiAoKSA9PiBKKG4pIC8gciB9KSwgaSB9LCBkLnggPSBmdW5jdGlvbiAobikgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0ID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgbiA/IG4gOiAkYSgrbiksIGQpIDogdCB9LCBkLnkgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChuID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiAkYSgrdCksIGQpIDogbiB9LCBkLndlaWdodCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGUgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6ICRhKCt0KSwgZCkgOiBlIH0sIGQuc2l6ZSA9IGZ1bmN0aW9uICh0KSB7IGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIFtyLCBpXTsgdmFyIG4gPSArdFswXSwgZSA9ICt0WzFdOyBpZiAoIShuID49IDAgJiYgZSA+PSAwKSkgdGhyb3cgbmV3IEVycm9yKCJpbnZhbGlkIHNpemUiKTsgcmV0dXJuIHIgPSBuLCBpID0gZSwgXygpIH0sIGQuY2VsbFNpemUgPSBmdW5jdGlvbiAodCkgeyBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiAxIDw8IGE7IGlmICghKCh0ID0gK3QpID49IDEpKSB0aHJvdyBuZXcgRXJyb3IoImludmFsaWQgY2VsbCBzaXplIik7IHJldHVybiBhID0gTWF0aC5mbG9vcihNYXRoLmxvZyh0KSAvIE1hdGguTE4yKSwgXygpIH0sIGQudGhyZXNob2xkcyA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHMgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IEFycmF5LmlzQXJyYXkodCkgPyAkYShMYS5jYWxsKHQpKSA6ICRhKHQpLCBkKSA6IHMgfSwgZC5iYW5kd2lkdGggPSBmdW5jdGlvbiAodCkgeyBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBNYXRoLnNxcnQobyAqIChvICsgMSkpOyBpZiAoISgodCA9ICt0KSA+PSAwKSkgdGhyb3cgbmV3IEVycm9yKCJpbnZhbGlkIGJhbmR3aWR0aCIpOyByZXR1cm4gbyA9IChNYXRoLnNxcnQoNCAqIHQgKiB0ICsgMSkgLSAxKSAvIDIsIF8oKSB9LCBkIH0sIHQuY29udG91cnMgPSBaYSwgdC5jb3VudCA9IF8sIHQuY3JlYXRlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIFduKFV0KHQpLmNhbGwoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KSkgfSwgdC5jcmVhdG9yID0gVXQsIHQuY3Jvc3MgPSBmdW5jdGlvbiAoLi4udCkgeyBjb25zdCBuID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdFt0Lmxlbmd0aCAtIDFdICYmIGZ1bmN0aW9uICh0KSB7IHJldHVybiBuID0+IHQoLi4ubikgfSh0LnBvcCgpKSwgZSA9ICh0ID0gdC5tYXAoeCkpLm1hcChiKSwgciA9IHQubGVuZ3RoIC0gMSwgaSA9IG5ldyBBcnJheShyICsgMSkuZmlsbCgwKSwgbyA9IFtdOyBpZiAociA8IDAgfHwgZS5zb21lKG0pKSByZXR1cm4gbzsgZm9yICg7IDspIHsgby5wdXNoKGkubWFwKCgobiwgZSkgPT4gdFtlXVtuXSkpKTsgbGV0IGEgPSByOyBmb3IgKDsgKytpW2FdID09PSBlW2FdOykgeyBpZiAoMCA9PT0gYSkgcmV0dXJuIG4gPyBvLm1hcChuKSA6IG87IGlbYS0tXSA9IDAgfSB9IH0sIHQuY3N2ID0gaWMsIHQuY3N2Rm9ybWF0ID0gVXUsIHQuY3N2Rm9ybWF0Qm9keSA9IEJ1LCB0LmNzdkZvcm1hdFJvdyA9IEx1LCB0LmNzdkZvcm1hdFJvd3MgPSBZdSwgdC5jc3ZGb3JtYXRWYWx1ZSA9IGp1LCB0LmNzdlBhcnNlID0gSXUsIHQuY3N2UGFyc2VSb3dzID0gT3UsIHQuY3ViZWhlbGl4ID0gd3IsIHQuY3Vtc3VtID0gZnVuY3Rpb24gKHQsIG4pIHsgdmFyIGUgPSAwLCByID0gMDsgcmV0dXJuIEZsb2F0NjRBcnJheS5mcm9tKHQsIHZvaWQgMCA9PT0gbiA/IHQgPT4gZSArPSArdCB8fCAwIDogaSA9PiBlICs9ICtuKGksIHIrKywgdCkgfHwgMCkgfSwgdC5jdXJ2ZUJhc2lzID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIG5ldyBteCh0KSB9LCB0LmN1cnZlQmFzaXNDbG9zZWQgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gbmV3IHh4KHQpIH0sIHQuY3VydmVCYXNpc09wZW4gPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gbmV3IHd4KHQpIH0sIHQuY3VydmVCdW1wWCA9IFVtLCB0LmN1cnZlQnVtcFkgPSBCbSwgdC5jdXJ2ZUJ1bmRsZSA9IEF4LCB0LmN1cnZlQ2FyZGluYWwgPSBFeCwgdC5jdXJ2ZUNhcmRpbmFsQ2xvc2VkID0gTngsIHQuY3VydmVDYXJkaW5hbE9wZW4gPSBQeCwgdC5jdXJ2ZUNhdG11bGxSb20gPSBSeCwgdC5jdXJ2ZUNhdG11bGxSb21DbG9zZWQgPSBxeCwgdC5jdXJ2ZUNhdG11bGxSb21PcGVuID0gT3gsIHQuY3VydmVMaW5lYXIgPSBNbSwgdC5jdXJ2ZUxpbmVhckNsb3NlZCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBuZXcgVXgodCkgfSwgdC5jdXJ2ZU1vbm90b25lWCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBuZXcgJHgodCkgfSwgdC5jdXJ2ZU1vbm90b25lWSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBuZXcgSHgodCkgfSwgdC5jdXJ2ZU5hdHVyYWwgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gbmV3IEd4KHQpIH0sIHQuY3VydmVTdGVwID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIG5ldyBXeCh0LCAuNSkgfSwgdC5jdXJ2ZVN0ZXBBZnRlciA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBuZXcgV3godCwgMSkgfSwgdC5jdXJ2ZVN0ZXBCZWZvcmUgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gbmV3IFd4KHQsIDApIH0sIHQuZGVzY2VuZGluZyA9IGUsIHQuZGV2aWF0aW9uID0gTSwgdC5kaWZmZXJlbmNlID0gZnVuY3Rpb24gKHQsIC4uLm4pIHsgdCA9IG5ldyBJbnRlcm5TZXQodCk7IGZvciAoY29uc3QgZSBvZiBuKSBmb3IgKGNvbnN0IG4gb2YgZSkgdC5kZWxldGUobik7IHJldHVybiB0IH0sIHQuZGlzam9pbnQgPSBmdW5jdGlvbiAodCwgbikgeyBjb25zdCBlID0gbltTeW1ib2wuaXRlcmF0b3JdKCksIHIgPSBuZXcgSW50ZXJuU2V0OyBmb3IgKGNvbnN0IG4gb2YgdCkgeyBpZiAoci5oYXMobikpIHJldHVybiAhMTsgbGV0IHQsIGk7IGZvciAoOyAoeyB2YWx1ZTogdCwgZG9uZTogaSB9ID0gZS5uZXh0KCkpICYmICFpOykgeyBpZiAoT2JqZWN0LmlzKG4sIHQpKSByZXR1cm4gITE7IHIuYWRkKHQpIH0gfSByZXR1cm4gITAgfSwgdC5kaXNwYXRjaCA9IE50LCB0LmRyYWcgPSBmdW5jdGlvbiAoKSB7IHZhciB0LCBuLCBlLCByLCBpID0gZmUsIG8gPSBzZSwgYSA9IGxlLCB1ID0gaGUsIGMgPSB7fSwgZiA9IE50KCJzdGFydCIsICJkcmFnIiwgImVuZCIpLCBzID0gMCwgbCA9IDA7IGZ1bmN0aW9uIGgodCkgeyB0Lm9uKCJtb3VzZWRvd24uZHJhZyIsIGQpLmZpbHRlcih1KS5vbigidG91Y2hzdGFydC5kcmFnIiwgeSkub24oInRvdWNobW92ZS5kcmFnIiwgdiwgbmUpLm9uKCJ0b3VjaGVuZC5kcmFnIHRvdWNoY2FuY2VsLmRyYWciLCBfKS5zdHlsZSgidG91Y2gtYWN0aW9uIiwgIm5vbmUiKS5zdHlsZSgiLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yIiwgInJnYmEoMCwwLDAsMCkiKSB9IGZ1bmN0aW9uIGQoYSwgdSkgeyBpZiAoIXIgJiYgaS5jYWxsKHRoaXMsIGEsIHUpKSB7IHZhciBjID0gYih0aGlzLCBvLmNhbGwodGhpcywgYSwgdSksIGEsIHUsICJtb3VzZSIpOyBjICYmIChXbihhLnZpZXcpLm9uKCJtb3VzZW1vdmUuZHJhZyIsIHAsIGVlKS5vbigibW91c2V1cC5kcmFnIiwgZywgZWUpLCBvZShhLnZpZXcpLCByZShhKSwgZSA9ICExLCB0ID0gYS5jbGllbnRYLCBuID0gYS5jbGllbnRZLCBjKCJzdGFydCIsIGEpKSB9IH0gZnVuY3Rpb24gcChyKSB7IGlmIChpZShyKSwgIWUpIHsgdmFyIGkgPSByLmNsaWVudFggLSB0LCBvID0gci5jbGllbnRZIC0gbjsgZSA9IGkgKiBpICsgbyAqIG8gPiBsIH0gYy5tb3VzZSgiZHJhZyIsIHIpIH0gZnVuY3Rpb24gZyh0KSB7IFduKHQudmlldykub24oIm1vdXNlbW92ZS5kcmFnIG1vdXNldXAuZHJhZyIsIG51bGwpLCBhZSh0LnZpZXcsIGUpLCBpZSh0KSwgYy5tb3VzZSgiZW5kIiwgdCkgfSBmdW5jdGlvbiB5KHQsIG4pIHsgaWYgKGkuY2FsbCh0aGlzLCB0LCBuKSkgeyB2YXIgZSwgciwgYSA9IHQuY2hhbmdlZFRvdWNoZXMsIHUgPSBvLmNhbGwodGhpcywgdCwgbiksIGMgPSBhLmxlbmd0aDsgZm9yIChlID0gMDsgZSA8IGM7ICsrZSkociA9IGIodGhpcywgdSwgdCwgbiwgYVtlXS5pZGVudGlmaWVyLCBhW2VdKSkgJiYgKHJlKHQpLCByKCJzdGFydCIsIHQsIGFbZV0pKSB9IH0gZnVuY3Rpb24gdih0KSB7IHZhciBuLCBlLCByID0gdC5jaGFuZ2VkVG91Y2hlcywgaSA9IHIubGVuZ3RoOyBmb3IgKG4gPSAwOyBuIDwgaTsgKytuKShlID0gY1tyW25dLmlkZW50aWZpZXJdKSAmJiAoaWUodCksIGUoImRyYWciLCB0LCByW25dKSkgfSBmdW5jdGlvbiBfKHQpIHsgdmFyIG4sIGUsIGkgPSB0LmNoYW5nZWRUb3VjaGVzLCBvID0gaS5sZW5ndGg7IGZvciAociAmJiBjbGVhclRpbWVvdXQociksIHIgPSBzZXRUaW1lb3V0KChmdW5jdGlvbiAoKSB7IHIgPSBudWxsIH0pLCA1MDApLCBuID0gMDsgbiA8IG87ICsrbikoZSA9IGNbaVtuXS5pZGVudGlmaWVyXSkgJiYgKHJlKHQpLCBlKCJlbmQiLCB0LCBpW25dKSkgfSBmdW5jdGlvbiBiKHQsIG4sIGUsIHIsIGksIG8pIHsgdmFyIHUsIGwsIGQsIHAgPSBmLmNvcHkoKSwgZyA9IHRlKG8gfHwgZSwgbik7IGlmIChudWxsICE9IChkID0gYS5jYWxsKHQsIG5ldyBjZSgiYmVmb3Jlc3RhcnQiLCB7IHNvdXJjZUV2ZW50OiBlLCB0YXJnZXQ6IGgsIGlkZW50aWZpZXI6IGksIGFjdGl2ZTogcywgeDogZ1swXSwgeTogZ1sxXSwgZHg6IDAsIGR5OiAwLCBkaXNwYXRjaDogcCB9KSwgcikpKSByZXR1cm4gdSA9IGQueCAtIGdbMF0gfHwgMCwgbCA9IGQueSAtIGdbMV0gfHwgMCwgZnVuY3Rpb24gZShvLCBhLCBmKSB7IHZhciB5LCB2ID0gZzsgc3dpdGNoIChvKSB7IGNhc2UgInN0YXJ0IjogY1tpXSA9IGUsIHkgPSBzKys7IGJyZWFrOyBjYXNlICJlbmQiOiBkZWxldGUgY1tpXSwgLS1zOyBjYXNlICJkcmFnIjogZyA9IHRlKGYgfHwgYSwgbiksIHkgPSBzIH1wLmNhbGwobywgdCwgbmV3IGNlKG8sIHsgc291cmNlRXZlbnQ6IGEsIHN1YmplY3Q6IGQsIHRhcmdldDogaCwgaWRlbnRpZmllcjogaSwgYWN0aXZlOiB5LCB4OiBnWzBdICsgdSwgeTogZ1sxXSArIGwsIGR4OiBnWzBdIC0gdlswXSwgZHk6IGdbMV0gLSB2WzFdLCBkaXNwYXRjaDogcCB9KSwgcikgfSB9IHJldHVybiBoLmZpbHRlciA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGkgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IHVlKCEhdCksIGgpIDogaSB9LCBoLmNvbnRhaW5lciA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG8gPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IHVlKHQpLCBoKSA6IG8gfSwgaC5zdWJqZWN0ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYSA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogdWUodCksIGgpIDogYSB9LCBoLnRvdWNoYWJsZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHUgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IHVlKCEhdCksIGgpIDogdSB9LCBoLm9uID0gZnVuY3Rpb24gKCkgeyB2YXIgdCA9IGYub24uYXBwbHkoZiwgYXJndW1lbnRzKTsgcmV0dXJuIHQgPT09IGYgPyBoIDogdCB9LCBoLmNsaWNrRGlzdGFuY2UgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChsID0gKHQgPSArdCkgKiB0LCBoKSA6IE1hdGguc3FydChsKSB9LCBoIH0sIHQuZHJhZ0Rpc2FibGUgPSBvZSwgdC5kcmFnRW5hYmxlID0gYWUsIHQuZHN2ID0gZnVuY3Rpb24gKHQsIG4sIGUsIHIpIHsgMyA9PT0gYXJndW1lbnRzLmxlbmd0aCAmJiAiZnVuY3Rpb24iID09IHR5cGVvZiBlICYmIChyID0gZSwgZSA9IHZvaWQgMCk7IHZhciBpID0gRnUodCk7IHJldHVybiBlYyhuLCBlKS50aGVuKChmdW5jdGlvbiAodCkgeyByZXR1cm4gaS5wYXJzZSh0LCByKSB9KSkgfSwgdC5kc3ZGb3JtYXQgPSBGdSwgdC5lYXNlQmFjayA9IERvLCB0LmVhc2VCYWNrSW4gPSBQbywgdC5lYXNlQmFja0luT3V0ID0gRG8sIHQuZWFzZUJhY2tPdXQgPSB6bywgdC5lYXNlQm91bmNlID0gTm8sIHQuZWFzZUJvdW5jZUluID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIDEgLSBObygxIC0gdCkgfSwgdC5lYXNlQm91bmNlSW5PdXQgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gKCh0ICo9IDIpIDw9IDEgPyAxIC0gTm8oMSAtIHQpIDogTm8odCAtIDEpICsgMSkgLyAyIH0sIHQuZWFzZUJvdW5jZU91dCA9IE5vLCB0LmVhc2VDaXJjbGUgPSBTbywgdC5lYXNlQ2lyY2xlSW4gPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gMSAtIE1hdGguc3FydCgxIC0gdCAqIHQpIH0sIHQuZWFzZUNpcmNsZUluT3V0ID0gU28sIHQuZWFzZUNpcmNsZU91dCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBNYXRoLnNxcnQoMSAtIC0tdCAqIHQpIH0sIHQuZWFzZUN1YmljID0gdm8sIHQuZWFzZUN1YmljSW4gPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gdCAqIHQgKiB0IH0sIHQuZWFzZUN1YmljSW5PdXQgPSB2bywgdC5lYXNlQ3ViaWNPdXQgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gLS10ICogdCAqIHQgKyAxIH0sIHQuZWFzZUVsYXN0aWMgPSBxbywgdC5lYXNlRWxhc3RpY0luID0gRm8sIHQuZWFzZUVsYXN0aWNJbk91dCA9IElvLCB0LmVhc2VFbGFzdGljT3V0ID0gcW8sIHQuZWFzZUV4cCA9IFRvLCB0LmVhc2VFeHBJbiA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBBbygxIC0gK3QpIH0sIHQuZWFzZUV4cEluT3V0ID0gVG8sIHQuZWFzZUV4cE91dCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiAxIC0gQW8odCkgfSwgdC5lYXNlTGluZWFyID0gdCA9PiArdCwgdC5lYXNlUG9seSA9IG1vLCB0LmVhc2VQb2x5SW4gPSBfbywgdC5lYXNlUG9seUluT3V0ID0gbW8sIHQuZWFzZVBvbHlPdXQgPSBibywgdC5lYXNlUXVhZCA9IHlvLCB0LmVhc2VRdWFkSW4gPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gdCAqIHQgfSwgdC5lYXNlUXVhZEluT3V0ID0geW8sIHQuZWFzZVF1YWRPdXQgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gdCAqICgyIC0gdCkgfSwgdC5lYXNlU2luID0gTW8sIHQuZWFzZVNpbkluID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIDEgPT0gK3QgPyAxIDogMSAtIE1hdGguY29zKHQgKiB3bykgfSwgdC5lYXNlU2luSW5PdXQgPSBNbywgdC5lYXNlU2luT3V0ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIE1hdGguc2luKHQgKiB3bykgfSwgdC5ldmVyeSA9IGZ1bmN0aW9uICh0LCBuKSB7IGlmICgiZnVuY3Rpb24iICE9IHR5cGVvZiBuKSB0aHJvdyBuZXcgVHlwZUVycm9yKCJ0ZXN0IGlzIG5vdCBhIGZ1bmN0aW9uIik7IGxldCBlID0gLTE7IGZvciAoY29uc3QgciBvZiB0KSBpZiAoIW4ociwgKytlLCB0KSkgcmV0dXJuICExOyByZXR1cm4gITAgfSwgdC5leHRlbnQgPSBBLCB0LmZjdW1zdW0gPSBmdW5jdGlvbiAodCwgbikgeyBjb25zdCBlID0gbmV3IFQ7IGxldCByID0gLTE7IHJldHVybiBGbG9hdDY0QXJyYXkuZnJvbSh0LCB2b2lkIDAgPT09IG4gPyB0ID0+IGUuYWRkKCt0IHx8IDApIDogaSA9PiBlLmFkZCgrbihpLCArK3IsIHQpIHx8IDApKSB9LCB0LmZpbHRlciA9IGZ1bmN0aW9uICh0LCBuKSB7IGlmICgiZnVuY3Rpb24iICE9IHR5cGVvZiBuKSB0aHJvdyBuZXcgVHlwZUVycm9yKCJ0ZXN0IGlzIG5vdCBhIGZ1bmN0aW9uIik7IGNvbnN0IGUgPSBbXTsgbGV0IHIgPSAtMTsgZm9yIChjb25zdCBpIG9mIHQpIG4oaSwgKytyLCB0KSAmJiBlLnB1c2goaSk7IHJldHVybiBlIH0sIHQuZmxhdEdyb3VwID0gZnVuY3Rpb24gKHQsIC4uLm4pIHsgcmV0dXJuIEQoeih0LCAuLi5uKSwgbikgfSwgdC5mbGF0Um9sbHVwID0gZnVuY3Rpb24gKHQsIG4sIC4uLmUpIHsgcmV0dXJuIEQoRih0LCBuLCAuLi5lKSwgZSkgfSwgdC5mb3JjZUNlbnRlciA9IGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlLCByID0gMTsgZnVuY3Rpb24gaSgpIHsgdmFyIGksIG8sIGEgPSBlLmxlbmd0aCwgdSA9IDAsIGMgPSAwOyBmb3IgKGkgPSAwOyBpIDwgYTsgKytpKXUgKz0gKG8gPSBlW2ldKS54LCBjICs9IG8ueTsgZm9yICh1ID0gKHUgLyBhIC0gdCkgKiByLCBjID0gKGMgLyBhIC0gbikgKiByLCBpID0gMDsgaSA8IGE7ICsraSkobyA9IGVbaV0pLnggLT0gdSwgby55IC09IGMgfSByZXR1cm4gbnVsbCA9PSB0ICYmICh0ID0gMCksIG51bGwgPT0gbiAmJiAobiA9IDApLCBpLmluaXRpYWxpemUgPSBmdW5jdGlvbiAodCkgeyBlID0gdCB9LCBpLnggPSBmdW5jdGlvbiAobikgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0ID0gK24sIGkpIDogdCB9LCBpLnkgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChuID0gK3QsIGkpIDogbiB9LCBpLnN0cmVuZ3RoID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAociA9ICt0LCBpKSA6IHIgfSwgaSB9LCB0LmZvcmNlQ29sbGlkZSA9IGZ1bmN0aW9uICh0KSB7IHZhciBuLCBlLCByLCBpID0gMSwgbyA9IDE7IGZ1bmN0aW9uIGEoKSB7IGZvciAodmFyIHQsIGEsIGMsIGYsIHMsIGwsIGgsIGQgPSBuLmxlbmd0aCwgcCA9IDA7IHAgPCBvOyArK3ApZm9yIChhID0gZ2MobiwgeGMsIHdjKS52aXNpdEFmdGVyKHUpLCB0ID0gMDsgdCA8IGQ7ICsrdCljID0gblt0XSwgbCA9IGVbYy5pbmRleF0sIGggPSBsICogbCwgZiA9IGMueCArIGMudngsIHMgPSBjLnkgKyBjLnZ5LCBhLnZpc2l0KGcpOyBmdW5jdGlvbiBnKHQsIG4sIGUsIG8sIGEpIHsgdmFyIHUgPSB0LmRhdGEsIGQgPSB0LnIsIHAgPSBsICsgZDsgaWYgKCF1KSByZXR1cm4gbiA+IGYgKyBwIHx8IG8gPCBmIC0gcCB8fCBlID4gcyArIHAgfHwgYSA8IHMgLSBwOyBpZiAodS5pbmRleCA+IGMuaW5kZXgpIHsgdmFyIGcgPSBmIC0gdS54IC0gdS52eCwgeSA9IHMgLSB1LnkgLSB1LnZ5LCB2ID0gZyAqIGcgKyB5ICogeTsgdiA8IHAgKiBwICYmICgwID09PSBnICYmICh2ICs9IChnID0gbWMocikpICogZyksIDAgPT09IHkgJiYgKHYgKz0gKHkgPSBtYyhyKSkgKiB5KSwgdiA9IChwIC0gKHYgPSBNYXRoLnNxcnQodikpKSAvIHYgKiBpLCBjLnZ4ICs9IChnICo9IHYpICogKHAgPSAoZCAqPSBkKSAvIChoICsgZCkpLCBjLnZ5ICs9ICh5ICo9IHYpICogcCwgdS52eCAtPSBnICogKHAgPSAxIC0gcCksIHUudnkgLT0geSAqIHApIH0gfSB9IGZ1bmN0aW9uIHUodCkgeyBpZiAodC5kYXRhKSByZXR1cm4gdC5yID0gZVt0LmRhdGEuaW5kZXhdOyBmb3IgKHZhciBuID0gdC5yID0gMDsgbiA8IDQ7ICsrbil0W25dICYmIHRbbl0uciA+IHQuciAmJiAodC5yID0gdFtuXS5yKSB9IGZ1bmN0aW9uIGMoKSB7IGlmIChuKSB7IHZhciByLCBpLCBvID0gbi5sZW5ndGg7IGZvciAoZSA9IG5ldyBBcnJheShvKSwgciA9IDA7IHIgPCBvOyArK3IpaSA9IG5bcl0sIGVbaS5pbmRleF0gPSArdChpLCByLCBuKSB9IH0gcmV0dXJuICJmdW5jdGlvbiIgIT0gdHlwZW9mIHQgJiYgKHQgPSBiYyhudWxsID09IHQgPyAxIDogK3QpKSwgYS5pbml0aWFsaXplID0gZnVuY3Rpb24gKHQsIGUpIHsgbiA9IHQsIHIgPSBlLCBjKCkgfSwgYS5pdGVyYXRpb25zID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobyA9ICt0LCBhKSA6IG8gfSwgYS5zdHJlbmd0aCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGkgPSArdCwgYSkgOiBpIH0sIGEucmFkaXVzID0gZnVuY3Rpb24gKG4pIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodCA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIG4gPyBuIDogYmMoK24pLCBjKCksIGEpIDogdCB9LCBhIH0sIHQuZm9yY2VMaW5rID0gZnVuY3Rpb24gKHQpIHsgdmFyIG4sIGUsIHIsIGksIG8sIGEsIHUgPSBNYywgYyA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiAxIC8gTWF0aC5taW4oaVt0LnNvdXJjZS5pbmRleF0sIGlbdC50YXJnZXQuaW5kZXhdKSB9LCBmID0gYmMoMzApLCBzID0gMTsgZnVuY3Rpb24gbChyKSB7IGZvciAodmFyIGkgPSAwLCB1ID0gdC5sZW5ndGg7IGkgPCBzOyArK2kpZm9yICh2YXIgYywgZiwgbCwgaCwgZCwgcCwgZywgeSA9IDA7IHkgPCB1OyArK3kpZiA9IChjID0gdFt5XSkuc291cmNlLCBoID0gKGwgPSBjLnRhcmdldCkueCArIGwudnggLSBmLnggLSBmLnZ4IHx8IG1jKGEpLCBkID0gbC55ICsgbC52eSAtIGYueSAtIGYudnkgfHwgbWMoYSksIGggKj0gcCA9ICgocCA9IE1hdGguc3FydChoICogaCArIGQgKiBkKSkgLSBlW3ldKSAvIHAgKiByICogblt5XSwgZCAqPSBwLCBsLnZ4IC09IGggKiAoZyA9IG9beV0pLCBsLnZ5IC09IGQgKiBnLCBmLnZ4ICs9IGggKiAoZyA9IDEgLSBnKSwgZi52eSArPSBkICogZyB9IGZ1bmN0aW9uIGgoKSB7IGlmIChyKSB7IHZhciBhLCBjLCBmID0gci5sZW5ndGgsIHMgPSB0Lmxlbmd0aCwgbCA9IG5ldyBNYXAoci5tYXAoKCh0LCBuKSA9PiBbdSh0LCBuLCByKSwgdF0pKSk7IGZvciAoYSA9IDAsIGkgPSBuZXcgQXJyYXkoZik7IGEgPCBzOyArK2EpKGMgPSB0W2FdKS5pbmRleCA9IGEsICJvYmplY3QiICE9IHR5cGVvZiBjLnNvdXJjZSAmJiAoYy5zb3VyY2UgPSBBYyhsLCBjLnNvdXJjZSkpLCAib2JqZWN0IiAhPSB0eXBlb2YgYy50YXJnZXQgJiYgKGMudGFyZ2V0ID0gQWMobCwgYy50YXJnZXQpKSwgaVtjLnNvdXJjZS5pbmRleF0gPSAoaVtjLnNvdXJjZS5pbmRleF0gfHwgMCkgKyAxLCBpW2MudGFyZ2V0LmluZGV4XSA9IChpW2MudGFyZ2V0LmluZGV4XSB8fCAwKSArIDE7IGZvciAoYSA9IDAsIG8gPSBuZXcgQXJyYXkocyk7IGEgPCBzOyArK2EpYyA9IHRbYV0sIG9bYV0gPSBpW2Muc291cmNlLmluZGV4XSAvIChpW2Muc291cmNlLmluZGV4XSArIGlbYy50YXJnZXQuaW5kZXhdKTsgbiA9IG5ldyBBcnJheShzKSwgZCgpLCBlID0gbmV3IEFycmF5KHMpLCBwKCkgfSB9IGZ1bmN0aW9uIGQoKSB7IGlmIChyKSBmb3IgKHZhciBlID0gMCwgaSA9IHQubGVuZ3RoOyBlIDwgaTsgKytlKW5bZV0gPSArYyh0W2VdLCBlLCB0KSB9IGZ1bmN0aW9uIHAoKSB7IGlmIChyKSBmb3IgKHZhciBuID0gMCwgaSA9IHQubGVuZ3RoOyBuIDwgaTsgKytuKWVbbl0gPSArZih0W25dLCBuLCB0KSB9IHJldHVybiBudWxsID09IHQgJiYgKHQgPSBbXSksIGwuaW5pdGlhbGl6ZSA9IGZ1bmN0aW9uICh0LCBuKSB7IHIgPSB0LCBhID0gbiwgaCgpIH0sIGwubGlua3MgPSBmdW5jdGlvbiAobikgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0ID0gbiwgaCgpLCBsKSA6IHQgfSwgbC5pZCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHUgPSB0LCBsKSA6IHUgfSwgbC5pdGVyYXRpb25zID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocyA9ICt0LCBsKSA6IHMgfSwgbC5zdHJlbmd0aCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGMgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IGJjKCt0KSwgZCgpLCBsKSA6IGMgfSwgbC5kaXN0YW5jZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGYgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IGJjKCt0KSwgcCgpLCBsKSA6IGYgfSwgbCB9LCB0LmZvcmNlTWFueUJvZHkgPSBmdW5jdGlvbiAoKSB7IHZhciB0LCBuLCBlLCByLCBpLCBvID0gYmMoLTMwKSwgYSA9IDEsIHUgPSAxIC8gMCwgYyA9IC44MTsgZnVuY3Rpb24gZihlKSB7IHZhciBpLCBvID0gdC5sZW5ndGgsIGEgPSBnYyh0LCBTYywgRWMpLnZpc2l0QWZ0ZXIobCk7IGZvciAociA9IGUsIGkgPSAwOyBpIDwgbzsgKytpKW4gPSB0W2ldLCBhLnZpc2l0KGgpIH0gZnVuY3Rpb24gcygpIHsgaWYgKHQpIHsgdmFyIG4sIGUsIHIgPSB0Lmxlbmd0aDsgZm9yIChpID0gbmV3IEFycmF5KHIpLCBuID0gMDsgbiA8IHI7ICsrbillID0gdFtuXSwgaVtlLmluZGV4XSA9ICtvKGUsIG4sIHQpIH0gfSBmdW5jdGlvbiBsKHQpIHsgdmFyIG4sIGUsIHIsIG8sIGEsIHUgPSAwLCBjID0gMDsgaWYgKHQubGVuZ3RoKSB7IGZvciAociA9IG8gPSBhID0gMDsgYSA8IDQ7ICsrYSkobiA9IHRbYV0pICYmIChlID0gTWF0aC5hYnMobi52YWx1ZSkpICYmICh1ICs9IG4udmFsdWUsIGMgKz0gZSwgciArPSBlICogbi54LCBvICs9IGUgKiBuLnkpOyB0LnggPSByIC8gYywgdC55ID0gbyAvIGMgfSBlbHNlIHsgKG4gPSB0KS54ID0gbi5kYXRhLngsIG4ueSA9IG4uZGF0YS55OyBkbyB7IHUgKz0gaVtuLmRhdGEuaW5kZXhdIH0gd2hpbGUgKG4gPSBuLm5leHQpIH0gdC52YWx1ZSA9IHUgfSBmdW5jdGlvbiBoKHQsIG8sIGYsIHMpIHsgaWYgKCF0LnZhbHVlKSByZXR1cm4gITA7IHZhciBsID0gdC54IC0gbi54LCBoID0gdC55IC0gbi55LCBkID0gcyAtIG8sIHAgPSBsICogbCArIGggKiBoOyBpZiAoZCAqIGQgLyBjIDwgcCkgcmV0dXJuIHAgPCB1ICYmICgwID09PSBsICYmIChwICs9IChsID0gbWMoZSkpICogbCksIDAgPT09IGggJiYgKHAgKz0gKGggPSBtYyhlKSkgKiBoKSwgcCA8IGEgJiYgKHAgPSBNYXRoLnNxcnQoYSAqIHApKSwgbi52eCArPSBsICogdC52YWx1ZSAqIHIgLyBwLCBuLnZ5ICs9IGggKiB0LnZhbHVlICogciAvIHApLCAhMDsgaWYgKCEodC5sZW5ndGggfHwgcCA+PSB1KSkgeyAodC5kYXRhICE9PSBuIHx8IHQubmV4dCkgJiYgKDAgPT09IGwgJiYgKHAgKz0gKGwgPSBtYyhlKSkgKiBsKSwgMCA9PT0gaCAmJiAocCArPSAoaCA9IG1jKGUpKSAqIGgpLCBwIDwgYSAmJiAocCA9IE1hdGguc3FydChhICogcCkpKTsgZG8geyB0LmRhdGEgIT09IG4gJiYgKGQgPSBpW3QuZGF0YS5pbmRleF0gKiByIC8gcCwgbi52eCArPSBsICogZCwgbi52eSArPSBoICogZCkgfSB3aGlsZSAodCA9IHQubmV4dCkgfSB9IHJldHVybiBmLmluaXRpYWxpemUgPSBmdW5jdGlvbiAobiwgcikgeyB0ID0gbiwgZSA9IHIsIHMoKSB9LCBmLnN0cmVuZ3RoID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobyA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogYmMoK3QpLCBzKCksIGYpIDogbyB9LCBmLmRpc3RhbmNlTWluID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYSA9IHQgKiB0LCBmKSA6IE1hdGguc3FydChhKSB9LCBmLmRpc3RhbmNlTWF4ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodSA9IHQgKiB0LCBmKSA6IE1hdGguc3FydCh1KSB9LCBmLnRoZXRhID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYyA9IHQgKiB0LCBmKSA6IE1hdGguc3FydChjKSB9LCBmIH0sIHQuZm9yY2VSYWRpYWwgPSBmdW5jdGlvbiAodCwgbiwgZSkgeyB2YXIgciwgaSwgbywgYSA9IGJjKC4xKTsgZnVuY3Rpb24gdSh0KSB7IGZvciAodmFyIGEgPSAwLCB1ID0gci5sZW5ndGg7IGEgPCB1OyArK2EpIHsgdmFyIGMgPSByW2FdLCBmID0gYy54IC0gbiB8fCAxZS02LCBzID0gYy55IC0gZSB8fCAxZS02LCBsID0gTWF0aC5zcXJ0KGYgKiBmICsgcyAqIHMpLCBoID0gKG9bYV0gLSBsKSAqIGlbYV0gKiB0IC8gbDsgYy52eCArPSBmICogaCwgYy52eSArPSBzICogaCB9IH0gZnVuY3Rpb24gYygpIHsgaWYgKHIpIHsgdmFyIG4sIGUgPSByLmxlbmd0aDsgZm9yIChpID0gbmV3IEFycmF5KGUpLCBvID0gbmV3IEFycmF5KGUpLCBuID0gMDsgbiA8IGU7ICsrbilvW25dID0gK3QocltuXSwgbiwgciksIGlbbl0gPSBpc05hTihvW25dKSA/IDAgOiArYShyW25dLCBuLCByKSB9IH0gcmV0dXJuICJmdW5jdGlvbiIgIT0gdHlwZW9mIHQgJiYgKHQgPSBiYygrdCkpLCBudWxsID09IG4gJiYgKG4gPSAwKSwgbnVsbCA9PSBlICYmIChlID0gMCksIHUuaW5pdGlhbGl6ZSA9IGZ1bmN0aW9uICh0KSB7IHIgPSB0LCBjKCkgfSwgdS5zdHJlbmd0aCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGEgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IGJjKCt0KSwgYygpLCB1KSA6IGEgfSwgdS5yYWRpdXMgPSBmdW5jdGlvbiAobikgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0ID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgbiA/IG4gOiBiYygrbiksIGMoKSwgdSkgOiB0IH0sIHUueCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG4gPSArdCwgdSkgOiBuIH0sIHUueSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGUgPSArdCwgdSkgOiBlIH0sIHUgfSwgdC5mb3JjZVNpbXVsYXRpb24gPSBmdW5jdGlvbiAodCkgeyB2YXIgbiwgZSA9IDEsIHIgPSAuMDAxLCBpID0gMSAtIE1hdGgucG93KHIsIDEgLyAzMDApLCBvID0gMCwgYSA9IC42LCB1ID0gbmV3IE1hcCwgYyA9IFRpKGwpLCBmID0gTnQoInRpY2siLCAiZW5kIiksIHMgPSBmdW5jdGlvbiAoKSB7IGxldCB0ID0gMTsgcmV0dXJuICgpID0+ICh0ID0gKDE2NjQ1MjUgKiB0ICsgMTAxMzkwNDIyMykgJSBUYykgLyBUYyB9KCk7IGZ1bmN0aW9uIGwoKSB7IGgoKSwgZi5jYWxsKCJ0aWNrIiwgbiksIGUgPCByICYmIChjLnN0b3AoKSwgZi5jYWxsKCJlbmQiLCBuKSkgfSBmdW5jdGlvbiBoKHIpIHsgdmFyIGMsIGYsIHMgPSB0Lmxlbmd0aDsgdm9pZCAwID09PSByICYmIChyID0gMSk7IGZvciAodmFyIGwgPSAwOyBsIDwgcjsgKytsKWZvciAoZSArPSAobyAtIGUpICogaSwgdS5mb3JFYWNoKChmdW5jdGlvbiAodCkgeyB0KGUpIH0pKSwgYyA9IDA7IGMgPCBzOyArK2MpbnVsbCA9PSAoZiA9IHRbY10pLmZ4ID8gZi54ICs9IGYudnggKj0gYSA6IChmLnggPSBmLmZ4LCBmLnZ4ID0gMCksIG51bGwgPT0gZi5meSA/IGYueSArPSBmLnZ5ICo9IGEgOiAoZi55ID0gZi5meSwgZi52eSA9IDApOyByZXR1cm4gbiB9IGZ1bmN0aW9uIGQoKSB7IGZvciAodmFyIG4sIGUgPSAwLCByID0gdC5sZW5ndGg7IGUgPCByOyArK2UpIHsgaWYgKChuID0gdFtlXSkuaW5kZXggPSBlLCBudWxsICE9IG4uZnggJiYgKG4ueCA9IG4uZngpLCBudWxsICE9IG4uZnkgJiYgKG4ueSA9IG4uZnkpLCBpc05hTihuLngpIHx8IGlzTmFOKG4ueSkpIHsgdmFyIGkgPSAxMCAqIE1hdGguc3FydCguNSArIGUpLCBvID0gZSAqIGtjOyBuLnggPSBpICogTWF0aC5jb3MobyksIG4ueSA9IGkgKiBNYXRoLnNpbihvKSB9IChpc05hTihuLnZ4KSB8fCBpc05hTihuLnZ5KSkgJiYgKG4udnggPSBuLnZ5ID0gMCkgfSB9IGZ1bmN0aW9uIHAobikgeyByZXR1cm4gbi5pbml0aWFsaXplICYmIG4uaW5pdGlhbGl6ZSh0LCBzKSwgbiB9IHJldHVybiBudWxsID09IHQgJiYgKHQgPSBbXSksIGQoKSwgbiA9IHsgdGljazogaCwgcmVzdGFydDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYy5yZXN0YXJ0KGwpLCBuIH0sIHN0b3A6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGMuc3RvcCgpLCBuIH0sIG5vZGVzOiBmdW5jdGlvbiAoZSkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0ID0gZSwgZCgpLCB1LmZvckVhY2gocCksIG4pIDogdCB9LCBhbHBoYTogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZSA9ICt0LCBuKSA6IGUgfSwgYWxwaGFNaW46IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHIgPSArdCwgbikgOiByIH0sIGFscGhhRGVjYXk6IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGkgPSArdCwgbikgOiAraSB9LCBhbHBoYVRhcmdldDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobyA9ICt0LCBuKSA6IG8gfSwgdmVsb2NpdHlEZWNheTogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYSA9IDEgLSB0LCBuKSA6IDEgLSBhIH0sIHJhbmRvbVNvdXJjZTogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocyA9IHQsIHUuZm9yRWFjaChwKSwgbikgOiBzIH0sIGZvcmNlOiBmdW5jdGlvbiAodCwgZSkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyAobnVsbCA9PSBlID8gdS5kZWxldGUodCkgOiB1LnNldCh0LCBwKGUpKSwgbikgOiB1LmdldCh0KSB9LCBmaW5kOiBmdW5jdGlvbiAobiwgZSwgcikgeyB2YXIgaSwgbywgYSwgdSwgYywgZiA9IDAsIHMgPSB0Lmxlbmd0aDsgZm9yIChudWxsID09IHIgPyByID0gMSAvIDAgOiByICo9IHIsIGYgPSAwOyBmIDwgczsgKytmKShhID0gKGkgPSBuIC0gKHUgPSB0W2ZdKS54KSAqIGkgKyAobyA9IGUgLSB1LnkpICogbykgPCByICYmIChjID0gdSwgciA9IGEpOyByZXR1cm4gYyB9LCBvbjogZnVuY3Rpb24gKHQsIGUpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gKGYub24odCwgZSksIG4pIDogZi5vbih0KSB9IH0gfSwgdC5mb3JjZVggPSBmdW5jdGlvbiAodCkgeyB2YXIgbiwgZSwgciwgaSA9IGJjKC4xKTsgZnVuY3Rpb24gbyh0KSB7IGZvciAodmFyIGksIG8gPSAwLCBhID0gbi5sZW5ndGg7IG8gPCBhOyArK28pKGkgPSBuW29dKS52eCArPSAocltvXSAtIGkueCkgKiBlW29dICogdCB9IGZ1bmN0aW9uIGEoKSB7IGlmIChuKSB7IHZhciBvLCBhID0gbi5sZW5ndGg7IGZvciAoZSA9IG5ldyBBcnJheShhKSwgciA9IG5ldyBBcnJheShhKSwgbyA9IDA7IG8gPCBhOyArK28pZVtvXSA9IGlzTmFOKHJbb10gPSArdChuW29dLCBvLCBuKSkgPyAwIDogK2kobltvXSwgbywgbikgfSB9IHJldHVybiAiZnVuY3Rpb24iICE9IHR5cGVvZiB0ICYmICh0ID0gYmMobnVsbCA9PSB0ID8gMCA6ICt0KSksIG8uaW5pdGlhbGl6ZSA9IGZ1bmN0aW9uICh0KSB7IG4gPSB0LCBhKCkgfSwgby5zdHJlbmd0aCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGkgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IGJjKCt0KSwgYSgpLCBvKSA6IGkgfSwgby54ID0gZnVuY3Rpb24gKG4pIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodCA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIG4gPyBuIDogYmMoK24pLCBhKCksIG8pIDogdCB9LCBvIH0sIHQuZm9yY2VZID0gZnVuY3Rpb24gKHQpIHsgdmFyIG4sIGUsIHIsIGkgPSBiYyguMSk7IGZ1bmN0aW9uIG8odCkgeyBmb3IgKHZhciBpLCBvID0gMCwgYSA9IG4ubGVuZ3RoOyBvIDwgYTsgKytvKShpID0gbltvXSkudnkgKz0gKHJbb10gLSBpLnkpICogZVtvXSAqIHQgfSBmdW5jdGlvbiBhKCkgeyBpZiAobikgeyB2YXIgbywgYSA9IG4ubGVuZ3RoOyBmb3IgKGUgPSBuZXcgQXJyYXkoYSksIHIgPSBuZXcgQXJyYXkoYSksIG8gPSAwOyBvIDwgYTsgKytvKWVbb10gPSBpc05hTihyW29dID0gK3QobltvXSwgbywgbikpID8gMCA6ICtpKG5bb10sIG8sIG4pIH0gfSByZXR1cm4gImZ1bmN0aW9uIiAhPSB0eXBlb2YgdCAmJiAodCA9IGJjKG51bGwgPT0gdCA/IDAgOiArdCkpLCBvLmluaXRpYWxpemUgPSBmdW5jdGlvbiAodCkgeyBuID0gdCwgYSgpIH0sIG8uc3RyZW5ndGggPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChpID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBiYygrdCksIGEoKSwgbykgOiBpIH0sIG8ueSA9IGZ1bmN0aW9uIChuKSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHQgPSAiZnVuY3Rpb24iID09IHR5cGVvZiBuID8gbiA6IGJjKCtuKSwgYSgpLCBvKSA6IHQgfSwgbyB9LCB0LmZvcm1hdERlZmF1bHRMb2NhbGUgPSBMYywgdC5mb3JtYXRMb2NhbGUgPSBZYywgdC5mb3JtYXRTcGVjaWZpZXIgPSBEYywgdC5mc3VtID0gZnVuY3Rpb24gKHQsIG4pIHsgY29uc3QgZSA9IG5ldyBUOyBpZiAodm9pZCAwID09PSBuKSBmb3IgKGxldCBuIG9mIHQpIChuID0gK24pICYmIGUuYWRkKG4pOyBlbHNlIHsgbGV0IHIgPSAtMTsgZm9yIChsZXQgaSBvZiB0KSAoaSA9ICtuKGksICsrciwgdCkpICYmIGUuYWRkKGkpIH0gcmV0dXJuICtlIH0sIHQuZ2VvQWxiZXJzID0gWmgsIHQuZ2VvQWxiZXJzVXNhID0gZnVuY3Rpb24gKCkgeyB2YXIgdCwgbiwgZSwgciwgaSwgbywgYSA9IFpoKCksIHUgPSBXaCgpLnJvdGF0ZShbMTU0LCAwXSkuY2VudGVyKFstMiwgNTguNV0pLnBhcmFsbGVscyhbNTUsIDY1XSksIGMgPSBXaCgpLnJvdGF0ZShbMTU3LCAwXSkuY2VudGVyKFstMywgMTkuOV0pLnBhcmFsbGVscyhbOCwgMThdKSwgZiA9IHsgcG9pbnQ6IGZ1bmN0aW9uICh0LCBuKSB7IG8gPSBbdCwgbl0gfSB9OyBmdW5jdGlvbiBzKHQpIHsgdmFyIG4gPSB0WzBdLCBhID0gdFsxXTsgcmV0dXJuIG8gPSBudWxsLCBlLnBvaW50KG4sIGEpLCBvIHx8IChyLnBvaW50KG4sIGEpLCBvKSB8fCAoaS5wb2ludChuLCBhKSwgbykgfSBmdW5jdGlvbiBsKCkgeyByZXR1cm4gdCA9IG4gPSBudWxsLCBzIH0gcmV0dXJuIHMuaW52ZXJ0ID0gZnVuY3Rpb24gKHQpIHsgdmFyIG4gPSBhLnNjYWxlKCksIGUgPSBhLnRyYW5zbGF0ZSgpLCByID0gKHRbMF0gLSBlWzBdKSAvIG4sIGkgPSAodFsxXSAtIGVbMV0pIC8gbjsgcmV0dXJuIChpID49IC4xMiAmJiBpIDwgLjIzNCAmJiByID49IC0uNDI1ICYmIHIgPCAtLjIxNCA/IHUgOiBpID49IC4xNjYgJiYgaSA8IC4yMzQgJiYgciA+PSAtLjIxNCAmJiByIDwgLS4xMTUgPyBjIDogYSkuaW52ZXJ0KHQpIH0sIHMuc3RyZWFtID0gZnVuY3Rpb24gKGUpIHsgcmV0dXJuIHQgJiYgbiA9PT0gZSA/IHQgOiAociA9IFthLnN0cmVhbShuID0gZSksIHUuc3RyZWFtKGUpLCBjLnN0cmVhbShlKV0sIGkgPSByLmxlbmd0aCwgdCA9IHsgcG9pbnQ6IGZ1bmN0aW9uICh0LCBuKSB7IGZvciAodmFyIGUgPSAtMTsgKytlIDwgaTspcltlXS5wb2ludCh0LCBuKSB9LCBzcGhlcmU6IGZ1bmN0aW9uICgpIHsgZm9yICh2YXIgdCA9IC0xOyArK3QgPCBpOylyW3RdLnNwaGVyZSgpIH0sIGxpbmVTdGFydDogZnVuY3Rpb24gKCkgeyBmb3IgKHZhciB0ID0gLTE7ICsrdCA8IGk7KXJbdF0ubGluZVN0YXJ0KCkgfSwgbGluZUVuZDogZnVuY3Rpb24gKCkgeyBmb3IgKHZhciB0ID0gLTE7ICsrdCA8IGk7KXJbdF0ubGluZUVuZCgpIH0sIHBvbHlnb25TdGFydDogZnVuY3Rpb24gKCkgeyBmb3IgKHZhciB0ID0gLTE7ICsrdCA8IGk7KXJbdF0ucG9seWdvblN0YXJ0KCkgfSwgcG9seWdvbkVuZDogZnVuY3Rpb24gKCkgeyBmb3IgKHZhciB0ID0gLTE7ICsrdCA8IGk7KXJbdF0ucG9seWdvbkVuZCgpIH0gfSk7IHZhciByLCBpIH0sIHMucHJlY2lzaW9uID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYS5wcmVjaXNpb24odCksIHUucHJlY2lzaW9uKHQpLCBjLnByZWNpc2lvbih0KSwgbCgpKSA6IGEucHJlY2lzaW9uKCkgfSwgcy5zY2FsZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGEuc2NhbGUodCksIHUuc2NhbGUoLjM1ICogdCksIGMuc2NhbGUodCksIHMudHJhbnNsYXRlKGEudHJhbnNsYXRlKCkpKSA6IGEuc2NhbGUoKSB9LCBzLnRyYW5zbGF0ZSA9IGZ1bmN0aW9uICh0KSB7IGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGEudHJhbnNsYXRlKCk7IHZhciBuID0gYS5zY2FsZSgpLCBvID0gK3RbMF0sIHMgPSArdFsxXTsgcmV0dXJuIGUgPSBhLnRyYW5zbGF0ZSh0KS5jbGlwRXh0ZW50KFtbbyAtIC40NTUgKiBuLCBzIC0gLjIzOCAqIG5dLCBbbyArIC40NTUgKiBuLCBzICsgLjIzOCAqIG5dXSkuc3RyZWFtKGYpLCByID0gdS50cmFuc2xhdGUoW28gLSAuMzA3ICogbiwgcyArIC4yMDEgKiBuXSkuY2xpcEV4dGVudChbW28gLSAuNDI1ICogbiArIFhjLCBzICsgLjEyICogbiArIFhjXSwgW28gLSAuMjE0ICogbiAtIFhjLCBzICsgLjIzNCAqIG4gLSBYY11dKS5zdHJlYW0oZiksIGkgPSBjLnRyYW5zbGF0ZShbbyAtIC4yMDUgKiBuLCBzICsgLjIxMiAqIG5dKS5jbGlwRXh0ZW50KFtbbyAtIC4yMTQgKiBuICsgWGMsIHMgKyAuMTY2ICogbiArIFhjXSwgW28gLSAuMTE1ICogbiAtIFhjLCBzICsgLjIzNCAqIG4gLSBYY11dKS5zdHJlYW0oZiksIGwoKSB9LCBzLmZpdEV4dGVudCA9IGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiBJaChzLCB0LCBuKSB9LCBzLmZpdFNpemUgPSBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gT2gocywgdCwgbikgfSwgcy5maXRXaWR0aCA9IGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiBVaChzLCB0LCBuKSB9LCBzLmZpdEhlaWdodCA9IGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiBCaChzLCB0LCBuKSB9LCBzLnNjYWxlKDEwNzApIH0sIHQuZ2VvQXJlYSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBZZiA9IG5ldyBULCBNZih0LCBMZiksIDIgKiBZZiB9LCB0Lmdlb0F6aW11dGhhbEVxdWFsQXJlYSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEhoKEpoKS5zY2FsZSgxMjQuNzUpLmNsaXBBbmdsZSgxNzkuOTk5KSB9LCB0Lmdlb0F6aW11dGhhbEVxdWFsQXJlYVJhdyA9IEpoLCB0Lmdlb0F6aW11dGhhbEVxdWlkaXN0YW50ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gSGgodGQpLnNjYWxlKDc5LjQxODgpLmNsaXBBbmdsZSgxNzkuOTk5KSB9LCB0Lmdlb0F6aW11dGhhbEVxdWlkaXN0YW50UmF3ID0gdGQsIHQuZ2VvQm91bmRzID0gZnVuY3Rpb24gKHQpIHsgdmFyIG4sIGUsIHIsIGksIG8sIGEsIHU7IGlmICh6ZiA9IFBmID0gLShOZiA9IENmID0gMSAvIDApLCBPZiA9IFtdLCBNZih0LCB5cyksIGUgPSBPZi5sZW5ndGgpIHsgZm9yIChPZi5zb3J0KFRzKSwgbiA9IDEsIG8gPSBbciA9IE9mWzBdXTsgbiA8IGU7ICsrbilTcyhyLCAoaSA9IE9mW25dKVswXSkgfHwgU3MociwgaVsxXSkgPyAoQXMoclswXSwgaVsxXSkgPiBBcyhyWzBdLCByWzFdKSAmJiAoclsxXSA9IGlbMV0pLCBBcyhpWzBdLCByWzFdKSA+IEFzKHJbMF0sIHJbMV0pICYmIChyWzBdID0gaVswXSkpIDogby5wdXNoKHIgPSBpKTsgZm9yIChhID0gLTEgLyAwLCBuID0gMCwgciA9IG9bZSA9IG8ubGVuZ3RoIC0gMV07IG4gPD0gZTsgciA9IGksICsrbilpID0gb1tuXSwgKHUgPSBBcyhyWzFdLCBpWzBdKSkgPiBhICYmIChhID0gdSwgTmYgPSBpWzBdLCBQZiA9IHJbMV0pIH0gcmV0dXJuIE9mID0gVWYgPSBudWxsLCBOZiA9PT0gMSAvIDAgfHwgQ2YgPT09IDEgLyAwID8gW1tOYU4sIE5hTl0sIFtOYU4sIE5hTl1dIDogW1tOZiwgQ2ZdLCBbUGYsIHpmXV0gfSwgdC5nZW9DZW50cm9pZCA9IGZ1bmN0aW9uICh0KSB7IHRzID0gbnMgPSBlcyA9IHJzID0gaXMgPSBvcyA9IGFzID0gdXMgPSAwLCBjcyA9IG5ldyBULCBmcyA9IG5ldyBULCBzcyA9IG5ldyBULCBNZih0LCBFcyk7IHZhciBuID0gK2NzLCBlID0gK2ZzLCByID0gK3NzLCBpID0gdWYobiwgZSwgcik7IHJldHVybiBpIDwgR2MgJiYgKG4gPSBvcywgZSA9IGFzLCByID0gdXMsIG5zIDwgWGMgJiYgKG4gPSBlcywgZSA9IHJzLCByID0gaXMpLCAoaSA9IHVmKG4sIGUsIHIpKSA8IEdjKSA/IFtOYU4sIE5hTl0gOiBbZWYoZSwgbikgKiBRYywgZ2YociAvIGkpICogUWNdIH0sIHQuZ2VvQ2lyY2xlID0gZnVuY3Rpb24gKCkgeyB2YXIgdCwgbiwgZSA9IE9zKFswLCAwXSksIHIgPSBPcyg5MCksIGkgPSBPcyg2KSwgbyA9IHsgcG9pbnQ6IGZ1bmN0aW9uIChlLCByKSB7IHQucHVzaChlID0gbihlLCByKSksIGVbMF0gKj0gUWMsIGVbMV0gKj0gUWMgfSB9OyBmdW5jdGlvbiBhKCkgeyB2YXIgYSA9IGUuYXBwbHkodGhpcywgYXJndW1lbnRzKSwgdSA9IHIuYXBwbHkodGhpcywgYXJndW1lbnRzKSAqIEpjLCBjID0gaS5hcHBseSh0aGlzLCBhcmd1bWVudHMpICogSmM7IHJldHVybiB0ID0gW10sIG4gPSBZcygtYVswXSAqIEpjLCAtYVsxXSAqIEpjLCAwKS5pbnZlcnQsIFhzKG8sIHUsIGMsIDEpLCBhID0geyB0eXBlOiAiUG9seWdvbiIsIGNvb3JkaW5hdGVzOiBbdF0gfSwgdCA9IG4gPSBudWxsLCBhIH0gcmV0dXJuIGEuY2VudGVyID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZSA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogT3MoWyt0WzBdLCArdFsxXV0pLCBhKSA6IGUgfSwgYS5yYWRpdXMgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBPcygrdCksIGEpIDogciB9LCBhLnByZWNpc2lvbiA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGkgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IE9zKCt0KSwgYSkgOiBpIH0sIGEgfSwgdC5nZW9DbGlwQW50aW1lcmlkaWFuID0gaWwsIHQuZ2VvQ2xpcENpcmNsZSA9IG9sLCB0Lmdlb0NsaXBFeHRlbnQgPSBmdW5jdGlvbiAoKSB7IHZhciB0LCBuLCBlLCByID0gMCwgaSA9IDAsIG8gPSA5NjAsIGEgPSA1MDA7IHJldHVybiBlID0geyBzdHJlYW06IGZ1bmN0aW9uIChlKSB7IHJldHVybiB0ICYmIG4gPT09IGUgPyB0IDogdCA9IGhsKHIsIGksIG8sIGEpKG4gPSBlKSB9LCBleHRlbnQ6IGZ1bmN0aW9uICh1KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHIgPSArdVswXVswXSwgaSA9ICt1WzBdWzFdLCBvID0gK3VbMV1bMF0sIGEgPSArdVsxXVsxXSwgdCA9IG4gPSBudWxsLCBlKSA6IFtbciwgaV0sIFtvLCBhXV0gfSB9IH0sIHQuZ2VvQ2xpcFJlY3RhbmdsZSA9IGhsLCB0Lmdlb0NvbmljQ29uZm9ybWFsID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gR2goaWQpLnNjYWxlKDEwOS41KS5wYXJhbGxlbHMoWzMwLCAzMF0pIH0sIHQuZ2VvQ29uaWNDb25mb3JtYWxSYXcgPSBpZCwgdC5nZW9Db25pY0VxdWFsQXJlYSA9IFdoLCB0Lmdlb0NvbmljRXF1YWxBcmVhUmF3ID0gVmgsIHQuZ2VvQ29uaWNFcXVpZGlzdGFudCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEdoKGFkKS5zY2FsZSgxMzEuMTU0KS5jZW50ZXIoWzAsIDEzLjkzODldKSB9LCB0Lmdlb0NvbmljRXF1aWRpc3RhbnRSYXcgPSBhZCwgdC5nZW9Db250YWlucyA9IGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiAodCAmJiB4bC5oYXNPd25Qcm9wZXJ0eSh0LnR5cGUpID8geGxbdC50eXBlXSA6IE1sKSh0LCBuKSB9LCB0Lmdlb0Rpc3RhbmNlID0gbWwsIHQuZ2VvRXF1YWxFYXJ0aCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEhoKGhkKS5zY2FsZSgxNzcuMTU4KSB9LCB0Lmdlb0VxdWFsRWFydGhSYXcgPSBoZCwgdC5nZW9FcXVpcmVjdGFuZ3VsYXIgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBIaChvZCkuc2NhbGUoMTUyLjYzKSB9LCB0Lmdlb0VxdWlyZWN0YW5ndWxhclJhdyA9IG9kLCB0Lmdlb0dub21vbmljID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gSGgoZGQpLnNjYWxlKDE0NC4wNDkpLmNsaXBBbmdsZSg2MCkgfSwgdC5nZW9Hbm9tb25pY1JhdyA9IGRkLCB0Lmdlb0dyYXRpY3VsZSA9IFBsLCB0Lmdlb0dyYXRpY3VsZTEwID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gUGwoKSgpIH0sIHQuZ2VvSWRlbnRpdHkgPSBmdW5jdGlvbiAoKSB7IHZhciB0LCBuLCBlLCByLCBpLCBvLCBhLCB1ID0gMSwgYyA9IDAsIGYgPSAwLCBzID0gMSwgbCA9IDEsIGggPSAwLCBkID0gbnVsbCwgcCA9IDEsIGcgPSAxLCB5ID0gUmgoeyBwb2ludDogZnVuY3Rpb24gKHQsIG4pIHsgdmFyIGUgPSBiKFt0LCBuXSk7IHRoaXMuc3RyZWFtLnBvaW50KGVbMF0sIGVbMV0pIH0gfSksIHYgPSBxbDsgZnVuY3Rpb24gXygpIHsgcmV0dXJuIHAgPSB1ICogcywgZyA9IHUgKiBsLCBvID0gYSA9IG51bGwsIGIgfSBmdW5jdGlvbiBiKGUpIHsgdmFyIHIgPSBlWzBdICogcCwgaSA9IGVbMV0gKiBnOyBpZiAoaCkgeyB2YXIgbyA9IGkgKiB0IC0gciAqIG47IHIgPSByICogdCArIGkgKiBuLCBpID0gbyB9IHJldHVybiBbciArIGMsIGkgKyBmXSB9IHJldHVybiBiLmludmVydCA9IGZ1bmN0aW9uIChlKSB7IHZhciByID0gZVswXSAtIGMsIGkgPSBlWzFdIC0gZjsgaWYgKGgpIHsgdmFyIG8gPSBpICogdCArIHIgKiBuOyByID0gciAqIHQgLSBpICogbiwgaSA9IG8gfSByZXR1cm4gW3IgLyBwLCBpIC8gZ10gfSwgYi5zdHJlYW0gPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gbyAmJiBhID09PSB0ID8gbyA6IG8gPSB5KHYoYSA9IHQpKSB9LCBiLnBvc3RjbGlwID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodiA9IHQsIGQgPSBlID0gciA9IGkgPSBudWxsLCBfKCkpIDogdiB9LCBiLmNsaXBFeHRlbnQgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh2ID0gbnVsbCA9PSB0ID8gKGQgPSBlID0gciA9IGkgPSBudWxsLCBxbCkgOiBobChkID0gK3RbMF1bMF0sIGUgPSArdFswXVsxXSwgciA9ICt0WzFdWzBdLCBpID0gK3RbMV1bMV0pLCBfKCkpIDogbnVsbCA9PSBkID8gbnVsbCA6IFtbZCwgZV0sIFtyLCBpXV0gfSwgYi5zY2FsZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHUgPSArdCwgXygpKSA6IHUgfSwgYi50cmFuc2xhdGUgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChjID0gK3RbMF0sIGYgPSArdFsxXSwgXygpKSA6IFtjLCBmXSB9LCBiLmFuZ2xlID0gZnVuY3Rpb24gKGUpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobiA9IHNmKGggPSBlICUgMzYwICogSmMpLCB0ID0gcmYoaCksIF8oKSkgOiBoICogUWMgfSwgYi5yZWZsZWN0WCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHMgPSB0ID8gLTEgOiAxLCBfKCkpIDogcyA8IDAgfSwgYi5yZWZsZWN0WSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGwgPSB0ID8gLTEgOiAxLCBfKCkpIDogbCA8IDAgfSwgYi5maXRFeHRlbnQgPSBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gSWgoYiwgdCwgbikgfSwgYi5maXRTaXplID0gZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIE9oKGIsIHQsIG4pIH0sIGIuZml0V2lkdGggPSBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gVWgoYiwgdCwgbikgfSwgYi5maXRIZWlnaHQgPSBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gQmgoYiwgdCwgbikgfSwgYiB9LCB0Lmdlb0ludGVycG9sYXRlID0gZnVuY3Rpb24gKHQsIG4pIHsgdmFyIGUgPSB0WzBdICogSmMsIHIgPSB0WzFdICogSmMsIGkgPSBuWzBdICogSmMsIG8gPSBuWzFdICogSmMsIGEgPSByZihyKSwgdSA9IHNmKHIpLCBjID0gcmYobyksIGYgPSBzZihvKSwgcyA9IGEgKiByZihlKSwgbCA9IGEgKiBzZihlKSwgaCA9IGMgKiByZihpKSwgZCA9IGMgKiBzZihpKSwgcCA9IDIgKiBnZihoZih5ZihvIC0gcikgKyBhICogYyAqIHlmKGkgLSBlKSkpLCBnID0gc2YocCksIHkgPSBwID8gZnVuY3Rpb24gKHQpIHsgdmFyIG4gPSBzZih0ICo9IHApIC8gZywgZSA9IHNmKHAgLSB0KSAvIGcsIHIgPSBlICogcyArIG4gKiBoLCBpID0gZSAqIGwgKyBuICogZCwgbyA9IGUgKiB1ICsgbiAqIGY7IHJldHVybiBbZWYoaSwgcikgKiBRYywgZWYobywgaGYociAqIHIgKyBpICogaSkpICogUWNdIH0gOiBmdW5jdGlvbiAoKSB7IHJldHVybiBbZSAqIFFjLCByICogUWNdIH07IHJldHVybiB5LmRpc3RhbmNlID0gcCwgeSB9LCB0Lmdlb0xlbmd0aCA9IHZsLCB0Lmdlb01lcmNhdG9yID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gZWQobmQpLnNjYWxlKDk2MSAvIEtjKSB9LCB0Lmdlb01lcmNhdG9yUmF3ID0gbmQsIHQuZ2VvTmF0dXJhbEVhcnRoMSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEhoKHBkKS5zY2FsZSgxNzUuMjk1KSB9LCB0Lmdlb05hdHVyYWxFYXJ0aDFSYXcgPSBwZCwgdC5nZW9PcnRob2dyYXBoaWMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBIaChnZCkuc2NhbGUoMjQ5LjUpLmNsaXBBbmdsZSg5MC4wMDAwMDEpIH0sIHQuZ2VvT3J0aG9ncmFwaGljUmF3ID0gZ2QsIHQuZ2VvUGF0aCA9IGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlLCByLCBpID0gNC41OyBmdW5jdGlvbiBvKHQpIHsgcmV0dXJuIHQgJiYgKCJmdW5jdGlvbiIgPT0gdHlwZW9mIGkgJiYgci5wb2ludFJhZGl1cygraS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSwgTWYodCwgZShyKSkpLCByLnJlc3VsdCgpIH0gcmV0dXJuIG8uYXJlYSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBNZih0LCBlKCRsKSksICRsLnJlc3VsdCgpIH0sIG8ubWVhc3VyZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBNZih0LCBlKFBoKSksIFBoLnJlc3VsdCgpIH0sIG8uYm91bmRzID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIE1mKHQsIGUodGgpKSwgdGgucmVzdWx0KCkgfSwgby5jZW50cm9pZCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBNZih0LCBlKG1oKSksIG1oLnJlc3VsdCgpIH0sIG8ucHJvamVjdGlvbiA9IGZ1bmN0aW9uIChuKSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGUgPSBudWxsID09IG4gPyAodCA9IG51bGwsIHFsKSA6ICh0ID0gbikuc3RyZWFtLCBvKSA6IHQgfSwgby5jb250ZXh0ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAociA9IG51bGwgPT0gdCA/IChuID0gbnVsbCwgbmV3IHpoKSA6IG5ldyB4aChuID0gdCksICJmdW5jdGlvbiIgIT0gdHlwZW9mIGkgJiYgci5wb2ludFJhZGl1cyhpKSwgbykgOiBuIH0sIG8ucG9pbnRSYWRpdXMgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChpID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiAoci5wb2ludFJhZGl1cygrdCksICt0KSwgbykgOiBpIH0sIG8ucHJvamVjdGlvbih0KS5jb250ZXh0KG4pIH0sIHQuZ2VvUHJvamVjdGlvbiA9IEhoLCB0Lmdlb1Byb2plY3Rpb25NdXRhdG9yID0gWGgsIHQuZ2VvUm90YXRpb24gPSBIcywgdC5nZW9TdGVyZW9ncmFwaGljID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gSGgoeWQpLnNjYWxlKDI1MCkuY2xpcEFuZ2xlKDE0MikgfSwgdC5nZW9TdGVyZW9ncmFwaGljUmF3ID0geWQsIHQuZ2VvU3RyZWFtID0gTWYsIHQuZ2VvVHJhbnNmb3JtID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHsgc3RyZWFtOiBSaCh0KSB9IH0sIHQuZ2VvVHJhbnN2ZXJzZU1lcmNhdG9yID0gZnVuY3Rpb24gKCkgeyB2YXIgdCA9IGVkKHZkKSwgbiA9IHQuY2VudGVyLCBlID0gdC5yb3RhdGU7IHJldHVybiB0LmNlbnRlciA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gbihbLXRbMV0sIHRbMF1dKSA6IFsodCA9IG4oKSlbMV0sIC10WzBdXSB9LCB0LnJvdGF0ZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gZShbdFswXSwgdFsxXSwgdC5sZW5ndGggPiAyID8gdFsyXSArIDkwIDogOTBdKSA6IFsodCA9IGUoKSlbMF0sIHRbMV0sIHRbMl0gLSA5MF0gfSwgZShbMCwgMCwgOTBdKS5zY2FsZSgxNTkuMTU1KSB9LCB0Lmdlb1RyYW5zdmVyc2VNZXJjYXRvclJhdyA9IHZkLCB0LmdyYXkgPSBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gbmV3IGlyKHQsIDAsIDAsIG51bGwgPT0gbiA/IDEgOiBuKSB9LCB0LmdyZWF0ZXN0ID0gb3QsIHQuZ3JlYXRlc3RJbmRleCA9IGZ1bmN0aW9uICh0LCBlID0gbikgeyBpZiAoMSA9PT0gZS5sZW5ndGgpIHJldHVybiB0dCh0LCBlKTsgbGV0IHIsIGkgPSAtMSwgbyA9IC0xOyBmb3IgKGNvbnN0IG4gb2YgdCkgKytvLCAoaSA8IDAgPyAwID09PSBlKG4sIG4pIDogZShuLCByKSA+IDApICYmIChyID0gbiwgaSA9IG8pOyByZXR1cm4gaSB9LCB0Lmdyb3VwID0gUCwgdC5ncm91cFNvcnQgPSBmdW5jdGlvbiAodCwgZSwgcikgeyByZXR1cm4gKDIgIT09IGUubGVuZ3RoID8gVShSKHQsIGUsIHIpLCAoKFt0LCBlXSwgW3IsIGldKSA9PiBuKGUsIGkpIHx8IG4odCwgcikpKSA6IFUoUCh0LCByKSwgKChbdCwgcl0sIFtpLCBvXSkgPT4gZShyLCBvKSB8fCBuKHQsIGkpKSkpLm1hcCgoKFt0XSkgPT4gdCkpIH0sIHQuZ3JvdXBzID0geiwgdC5oY2wgPSBzciwgdC5oaWVyYXJjaHkgPSB3ZCwgdC5oaXN0b2dyYW0gPSBRLCB0LmhzbCA9ICRlLCB0Lmh0bWwgPSBmYywgdC5pbWFnZSA9IGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiBuZXcgUHJvbWlzZSgoZnVuY3Rpb24gKGUsIHIpIHsgdmFyIGkgPSBuZXcgSW1hZ2U7IGZvciAodmFyIG8gaW4gbikgaVtvXSA9IG5bb107IGkub25lcnJvciA9IHIsIGkub25sb2FkID0gZnVuY3Rpb24gKCkgeyBlKGkpIH0sIGkuc3JjID0gdCB9KSkgfSwgdC5pbmRleCA9IGZ1bmN0aW9uICh0LCAuLi5uKSB7IHJldHVybiBJKHQsIEMsIHEsIG4pIH0sIHQuaW5kZXhlcyA9IGZ1bmN0aW9uICh0LCAuLi5uKSB7IHJldHVybiBJKHQsIEFycmF5LmZyb20sIHEsIG4pIH0sIHQuaW50ZXJwb2xhdGUgPSBIciwgdC5pbnRlcnBvbGF0ZUFycmF5ID0gZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIChJcihuKSA/IHFyIDogT3IpKHQsIG4pIH0sIHQuaW50ZXJwb2xhdGVCYXNpcyA9IFRyLCB0LmludGVycG9sYXRlQmFzaXNDbG9zZWQgPSBTciwgdC5pbnRlcnBvbGF0ZUJsdWVzID0gQ2IsIHQuaW50ZXJwb2xhdGVCckJHID0gTF8sIHQuaW50ZXJwb2xhdGVCdUduID0gYWIsIHQuaW50ZXJwb2xhdGVCdVB1ID0gY2IsIHQuaW50ZXJwb2xhdGVDaXZpZGlzID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQgPSBNYXRoLm1heCgwLCBNYXRoLm1pbigxLCB0KSksICJyZ2IoIiArIE1hdGgubWF4KDAsIE1hdGgubWluKDI1NSwgTWF0aC5yb3VuZCgtNC41NCAtIHQgKiAoMzUuMzQgLSB0ICogKDIzODEuNzMgLSB0ICogKDY0MDIuNyAtIHQgKiAoNzAyNC43MiAtIDI3MTAuNTcgKiB0KSkpKSkpKSArICIsICIgKyBNYXRoLm1heCgwLCBNYXRoLm1pbigyNTUsIE1hdGgucm91bmQoMzIuNDkgKyB0ICogKDE3MC43MyArIHQgKiAoNTIuODIgLSB0ICogKDEzMS40NiAtIHQgKiAoMTc2LjU4IC0gNjcuMzcgKiB0KSkpKSkpKSArICIsICIgKyBNYXRoLm1heCgwLCBNYXRoLm1pbigyNTUsIE1hdGgucm91bmQoODEuMjQgKyB0ICogKDQ0Mi4zNiAtIHQgKiAoMjQ4Mi40MyAtIHQgKiAoNjE2Ny4yNCAtIHQgKiAoNjYxNC45NCAtIDI0NzUuNjcgKiB0KSkpKSkpKSArICIpIiB9LCB0LmludGVycG9sYXRlQ29vbCA9IGpiLCB0LmludGVycG9sYXRlQ3ViZWhlbGl4ID0gZmksIHQuaW50ZXJwb2xhdGVDdWJlaGVsaXhEZWZhdWx0ID0gWWIsIHQuaW50ZXJwb2xhdGVDdWJlaGVsaXhMb25nID0gc2ksIHQuaW50ZXJwb2xhdGVEYXRlID0gVXIsIHQuaW50ZXJwb2xhdGVEaXNjcmV0ZSA9IGZ1bmN0aW9uICh0KSB7IHZhciBuID0gdC5sZW5ndGg7IHJldHVybiBmdW5jdGlvbiAoZSkgeyByZXR1cm4gdFtNYXRoLm1heCgwLCBNYXRoLm1pbihuIC0gMSwgTWF0aC5mbG9vcihlICogbikpKV0gfSB9LCB0LmludGVycG9sYXRlR25CdSA9IHNiLCB0LmludGVycG9sYXRlR3JlZW5zID0gemIsIHQuaW50ZXJwb2xhdGVHcmV5cyA9IFJiLCB0LmludGVycG9sYXRlSGNsID0gYWksIHQuaW50ZXJwb2xhdGVIY2xMb25nID0gdWksIHQuaW50ZXJwb2xhdGVIc2wgPSByaSwgdC5pbnRlcnBvbGF0ZUhzbExvbmcgPSBpaSwgdC5pbnRlcnBvbGF0ZUh1ZSA9IGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlID0gTnIoK3QsICtuKTsgcmV0dXJuIGZ1bmN0aW9uICh0KSB7IHZhciBuID0gZSh0KTsgcmV0dXJuIG4gLSAzNjAgKiBNYXRoLmZsb29yKG4gLyAzNjApIH0gfSwgdC5pbnRlcnBvbGF0ZUluZmVybm8gPSBLYiwgdC5pbnRlcnBvbGF0ZUxhYiA9IGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlID0gUHIoKHQgPSBycih0KSkubCwgKG4gPSBycihuKSkubCksIHIgPSBQcih0LmEsIG4uYSksIGkgPSBQcih0LmIsIG4uYiksIG8gPSBQcih0Lm9wYWNpdHksIG4ub3BhY2l0eSk7IHJldHVybiBmdW5jdGlvbiAobikgeyByZXR1cm4gdC5sID0gZShuKSwgdC5hID0gcihuKSwgdC5iID0gaShuKSwgdC5vcGFjaXR5ID0gbyhuKSwgdCArICIiIH0gfSwgdC5pbnRlcnBvbGF0ZU1hZ21hID0gWmIsIHQuaW50ZXJwb2xhdGVOdW1iZXIgPSBCciwgdC5pbnRlcnBvbGF0ZU51bWJlckFycmF5ID0gcXIsIHQuaW50ZXJwb2xhdGVPYmplY3QgPSBZciwgdC5pbnRlcnBvbGF0ZU9yUmQgPSBoYiwgdC5pbnRlcnBvbGF0ZU9yYW5nZXMgPSBCYiwgdC5pbnRlcnBvbGF0ZVBSR24gPSAkXywgdC5pbnRlcnBvbGF0ZVBpWUcgPSBYXywgdC5pbnRlcnBvbGF0ZVBsYXNtYSA9IFFiLCB0LmludGVycG9sYXRlUHVCdSA9IHliLCB0LmludGVycG9sYXRlUHVCdUduID0gcGIsIHQuaW50ZXJwb2xhdGVQdU9yID0gVl8sIHQuaW50ZXJwb2xhdGVQdVJkID0gX2IsIHQuaW50ZXJwb2xhdGVQdXJwbGVzID0gcWIsIHQuaW50ZXJwb2xhdGVSYWluYm93ID0gZnVuY3Rpb24gKHQpIHsgKHQgPCAwIHx8IHQgPiAxKSAmJiAodCAtPSBNYXRoLmZsb29yKHQpKTsgdmFyIG4gPSBNYXRoLmFicyh0IC0gLjUpOyByZXR1cm4gJGIuaCA9IDM2MCAqIHQgLSAxMDAsICRiLnMgPSAxLjUgLSAxLjUgKiBuLCAkYi5sID0gLjggLSAuOSAqIG4sICRiICsgIiIgfSwgdC5pbnRlcnBvbGF0ZVJkQnUgPSBaXywgdC5pbnRlcnBvbGF0ZVJkR3kgPSBRXywgdC5pbnRlcnBvbGF0ZVJkUHUgPSBtYiwgdC5pbnRlcnBvbGF0ZVJkWWxCdSA9IHRiLCB0LmludGVycG9sYXRlUmRZbEduID0gZWIsIHQuaW50ZXJwb2xhdGVSZWRzID0gT2IsIHQuaW50ZXJwb2xhdGVSZ2IgPSB6ciwgdC5pbnRlcnBvbGF0ZVJnYkJhc2lzID0gUnIsIHQuaW50ZXJwb2xhdGVSZ2JCYXNpc0Nsb3NlZCA9IEZyLCB0LmludGVycG9sYXRlUm91bmQgPSBYciwgdC5pbnRlcnBvbGF0ZVNpbmVib3cgPSBmdW5jdGlvbiAodCkgeyB2YXIgbjsgcmV0dXJuIHQgPSAoLjUgLSB0KSAqIE1hdGguUEksIEhiLnIgPSAyNTUgKiAobiA9IE1hdGguc2luKHQpKSAqIG4sIEhiLmcgPSAyNTUgKiAobiA9IE1hdGguc2luKHQgKyBYYikpICogbiwgSGIuYiA9IDI1NSAqIChuID0gTWF0aC5zaW4odCArIEdiKSkgKiBuLCBIYiArICIiIH0sIHQuaW50ZXJwb2xhdGVTcGVjdHJhbCA9IGliLCB0LmludGVycG9sYXRlU3RyaW5nID0gJHIsIHQuaW50ZXJwb2xhdGVUcmFuc2Zvcm1Dc3MgPSBRciwgdC5pbnRlcnBvbGF0ZVRyYW5zZm9ybVN2ZyA9IEpyLCB0LmludGVycG9sYXRlVHVyYm8gPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gdCA9IE1hdGgubWF4KDAsIE1hdGgubWluKDEsIHQpKSwgInJnYigiICsgTWF0aC5tYXgoMCwgTWF0aC5taW4oMjU1LCBNYXRoLnJvdW5kKDM0LjYxICsgdCAqICgxMTcyLjMzIC0gdCAqICgxMDc5My41NiAtIHQgKiAoMzMzMDAuMTIgLSB0ICogKDM4Mzk0LjQ5IC0gMTQ4MjUuMDUgKiB0KSkpKSkpKSArICIsICIgKyBNYXRoLm1heCgwLCBNYXRoLm1pbigyNTUsIE1hdGgucm91bmQoMjMuMzEgKyB0ICogKDU1Ny4zMyArIHQgKiAoMTIyNS4zMyAtIHQgKiAoMzU3NC45NiAtIHQgKiAoMTA3My43NyArIDcwNy41NiAqIHQpKSkpKSkpICsgIiwgIiArIE1hdGgubWF4KDAsIE1hdGgubWluKDI1NSwgTWF0aC5yb3VuZCgyNy4yICsgdCAqICgzMjExLjEgLSB0ICogKDE1MzI3Ljk3IC0gdCAqICgyNzgxNCAtIHQgKiAoMjI1NjkuMTggLSA2ODM4LjY2ICogdCkpKSkpKSkgKyAiKSIgfSwgdC5pbnRlcnBvbGF0ZVZpcmlkaXMgPSBXYiwgdC5pbnRlcnBvbGF0ZVdhcm0gPSBMYiwgdC5pbnRlcnBvbGF0ZVlsR24gPSBBYiwgdC5pbnRlcnBvbGF0ZVlsR25CdSA9IHdiLCB0LmludGVycG9sYXRlWWxPckJyID0gU2IsIHQuaW50ZXJwb2xhdGVZbE9yUmQgPSBrYiwgdC5pbnRlcnBvbGF0ZVpvb20gPSBuaSwgdC5pbnRlcnJ1cHQgPSBJaSwgdC5pbnRlcnNlY3Rpb24gPSBmdW5jdGlvbiAodCwgLi4ubikgeyB0ID0gbmV3IEludGVyblNldCh0KSwgbiA9IG4ubWFwKHZ0KTsgdDogZm9yIChjb25zdCBlIG9mIHQpIGZvciAoY29uc3QgciBvZiBuKSBpZiAoIXIuaGFzKGUpKSB7IHQuZGVsZXRlKGUpOyBjb250aW51ZSB0IH0gcmV0dXJuIHQgfSwgdC5pbnRlcnZhbCA9IGZ1bmN0aW9uICh0LCBuLCBlKSB7IHZhciByID0gbmV3IEFpLCBpID0gbjsgcmV0dXJuIG51bGwgPT0gbiA/IChyLnJlc3RhcnQodCwgbiwgZSksIHIpIDogKHIuX3Jlc3RhcnQgPSByLnJlc3RhcnQsIHIucmVzdGFydCA9IGZ1bmN0aW9uICh0LCBuLCBlKSB7IG4gPSArbiwgZSA9IG51bGwgPT0gZSA/IHdpKCkgOiArZSwgci5fcmVzdGFydCgoZnVuY3Rpb24gbyhhKSB7IGEgKz0gaSwgci5fcmVzdGFydChvLCBpICs9IG4sIGUpLCB0KGEpIH0pLCBuLCBlKSB9LCByLnJlc3RhcnQodCwgbiwgZSksIHIpIH0sIHQuaXNvRm9ybWF0ID0gX18sIHQuaXNvUGFyc2UgPSBtXywgdC5qc29uID0gZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIGZldGNoKHQsIG4pLnRoZW4oYWMpIH0sIHQubGFiID0gcnIsIHQubGNoID0gZnVuY3Rpb24gKHQsIG4sIGUsIHIpIHsgcmV0dXJuIDEgPT09IGFyZ3VtZW50cy5sZW5ndGggPyBmcih0KSA6IG5ldyBscihlLCBuLCB0LCBudWxsID09IHIgPyAxIDogcikgfSwgdC5sZWFzdCA9IGZ1bmN0aW9uICh0LCBlID0gbikgeyBsZXQgciwgaSA9ICExOyBpZiAoMSA9PT0gZS5sZW5ndGgpIHsgbGV0IG87IGZvciAoY29uc3QgYSBvZiB0KSB7IGNvbnN0IHQgPSBlKGEpOyAoaSA/IG4odCwgbykgPCAwIDogMCA9PT0gbih0LCB0KSkgJiYgKHIgPSBhLCBvID0gdCwgaSA9ICEwKSB9IH0gZWxzZSBmb3IgKGNvbnN0IG4gb2YgdCkgKGkgPyBlKG4sIHIpIDwgMCA6IDAgPT09IGUobiwgbikpICYmIChyID0gbiwgaSA9ICEwKTsgcmV0dXJuIHIgfSwgdC5sZWFzdEluZGV4ID0gaHQsIHQubGluZSA9IFNtLCB0LmxpbmVSYWRpYWwgPSBSbSwgdC5saW5rID0gJG0sIHQubGlua0hvcml6b250YWwgPSBmdW5jdGlvbiAoKSB7IHJldHVybiAkbShVbSkgfSwgdC5saW5rUmFkaWFsID0gZnVuY3Rpb24gKCkgeyBjb25zdCB0ID0gJG0oWW0pOyByZXR1cm4gdC5hbmdsZSA9IHQueCwgZGVsZXRlIHQueCwgdC5yYWRpdXMgPSB0LnksIGRlbGV0ZSB0LnksIHQgfSwgdC5saW5rVmVydGljYWwgPSBmdW5jdGlvbiAoKSB7IHJldHVybiAkbShCbSkgfSwgdC5sb2NhbCA9IEtuLCB0Lm1hcCA9IGZ1bmN0aW9uICh0LCBuKSB7IGlmICgiZnVuY3Rpb24iICE9IHR5cGVvZiB0W1N5bWJvbC5pdGVyYXRvcl0pIHRocm93IG5ldyBUeXBlRXJyb3IoInZhbHVlcyBpcyBub3QgaXRlcmFibGUiKTsgaWYgKCJmdW5jdGlvbiIgIT0gdHlwZW9mIG4pIHRocm93IG5ldyBUeXBlRXJyb3IoIm1hcHBlciBpcyBub3QgYSBmdW5jdGlvbiIpOyByZXR1cm4gQXJyYXkuZnJvbSh0LCAoKGUsIHIpID0+IG4oZSwgciwgdCkpKSB9LCB0Lm1hdGNoZXIgPSBIdCwgdC5tYXggPSBKLCB0Lm1heEluZGV4ID0gdHQsIHQubWVhbiA9IGZ1bmN0aW9uICh0LCBuKSB7IGxldCBlID0gMCwgciA9IDA7IGlmICh2b2lkIDAgPT09IG4pIGZvciAobGV0IG4gb2YgdCkgbnVsbCAhPSBuICYmIChuID0gK24pID49IG4gJiYgKCsrZSwgciArPSBuKTsgZWxzZSB7IGxldCBpID0gLTE7IGZvciAobGV0IG8gb2YgdCkgbnVsbCAhPSAobyA9IG4obywgKytpLCB0KSkgJiYgKG8gPSArbykgPj0gbyAmJiAoKytlLCByICs9IG8pIH0gaWYgKGUpIHJldHVybiByIC8gZSB9LCB0Lm1lZGlhbiA9IGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiBhdCh0LCAuNSwgbikgfSwgdC5tZWRpYW5JbmRleCA9IGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiBjdCh0LCAuNSwgbikgfSwgdC5tZXJnZSA9IGZ0LCB0Lm1pbiA9IG50LCB0Lm1pbkluZGV4ID0gZXQsIHQubW9kZSA9IGZ1bmN0aW9uICh0LCBuKSB7IGNvbnN0IGUgPSBuZXcgSW50ZXJuTWFwOyBpZiAodm9pZCAwID09PSBuKSBmb3IgKGxldCBuIG9mIHQpIG51bGwgIT0gbiAmJiBuID49IG4gJiYgZS5zZXQobiwgKGUuZ2V0KG4pIHx8IDApICsgMSk7IGVsc2UgeyBsZXQgciA9IC0xOyBmb3IgKGxldCBpIG9mIHQpIG51bGwgIT0gKGkgPSBuKGksICsrciwgdCkpICYmIGkgPj0gaSAmJiBlLnNldChpLCAoZS5nZXQoaSkgfHwgMCkgKyAxKSB9IGxldCByLCBpID0gMDsgZm9yIChjb25zdCBbdCwgbl0gb2YgZSkgbiA+IGkgJiYgKGkgPSBuLCByID0gdCk7IHJldHVybiByIH0sIHQubmFtZXNwYWNlID0gcXQsIHQubmFtZXNwYWNlcyA9IEZ0LCB0Lm5pY2UgPSBaLCB0Lm5vdyA9IHdpLCB0LnBhY2sgPSBmdW5jdGlvbiAoKSB7IHZhciB0ID0gbnVsbCwgbiA9IDEsIGUgPSAxLCByID0gQ2Q7IGZ1bmN0aW9uIGkoaSkgeyBjb25zdCBvID0gRGQoKTsgcmV0dXJuIGkueCA9IG4gLyAyLCBpLnkgPSBlIC8gMiwgdCA/IGkuZWFjaEJlZm9yZShWZCh0KSkuZWFjaEFmdGVyKFdkKHIsIC41LCBvKSkuZWFjaEJlZm9yZShaZCgxKSkgOiBpLmVhY2hCZWZvcmUoVmQoR2QpKS5lYWNoQWZ0ZXIoV2QoQ2QsIDEsIG8pKS5lYWNoQWZ0ZXIoV2QociwgaS5yIC8gTWF0aC5taW4obiwgZSksIG8pKS5lYWNoQmVmb3JlKFpkKE1hdGgubWluKG4sIGUpIC8gKDIgKiBpLnIpKSksIGkgfSByZXR1cm4gaS5yYWRpdXMgPSBmdW5jdGlvbiAobikgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0ID0ga2QobiksIGkpIDogdCB9LCBpLnNpemUgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChuID0gK3RbMF0sIGUgPSArdFsxXSwgaSkgOiBbbiwgZV0gfSwgaS5wYWRkaW5nID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAociA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogUGQoK3QpLCBpKSA6IHIgfSwgaSB9LCB0LnBhY2tFbmNsb3NlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIFJkKHQsIERkKCkpIH0sIHQucGFja1NpYmxpbmdzID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIFhkKHQsIERkKCkpLCB0IH0sIHQucGFpcnMgPSBmdW5jdGlvbiAodCwgbiA9IHN0KSB7IGNvbnN0IGUgPSBbXTsgbGV0IHIsIGkgPSAhMTsgZm9yIChjb25zdCBvIG9mIHQpIGkgJiYgZS5wdXNoKG4ociwgbykpLCByID0gbywgaSA9ICEwOyByZXR1cm4gZSB9LCB0LnBhcnRpdGlvbiA9IGZ1bmN0aW9uICgpIHsgdmFyIHQgPSAxLCBuID0gMSwgZSA9IDAsIHIgPSAhMTsgZnVuY3Rpb24gaShpKSB7IHZhciBvID0gaS5oZWlnaHQgKyAxOyByZXR1cm4gaS54MCA9IGkueTAgPSBlLCBpLngxID0gdCwgaS55MSA9IG4gLyBvLCBpLmVhY2hCZWZvcmUoZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIGZ1bmN0aW9uIChyKSB7IHIuY2hpbGRyZW4gJiYgUWQociwgci54MCwgdCAqIChyLmRlcHRoICsgMSkgLyBuLCByLngxLCB0ICogKHIuZGVwdGggKyAyKSAvIG4pOyB2YXIgaSA9IHIueDAsIG8gPSByLnkwLCBhID0gci54MSAtIGUsIHUgPSByLnkxIC0gZTsgYSA8IGkgJiYgKGkgPSBhID0gKGkgKyBhKSAvIDIpLCB1IDwgbyAmJiAobyA9IHUgPSAobyArIHUpIC8gMiksIHIueDAgPSBpLCByLnkwID0gbywgci54MSA9IGEsIHIueTEgPSB1IH0gfShuLCBvKSksIHIgJiYgaS5lYWNoQmVmb3JlKEtkKSwgaSB9IHJldHVybiBpLnJvdW5kID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAociA9ICEhdCwgaSkgOiByIH0sIGkuc2l6ZSA9IGZ1bmN0aW9uIChlKSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHQgPSArZVswXSwgbiA9ICtlWzFdLCBpKSA6IFt0LCBuXSB9LCBpLnBhZGRpbmcgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChlID0gK3QsIGkpIDogZSB9LCBpIH0sIHQucGF0aCA9IFBhLCB0LnBlcm11dGUgPSBPLCB0LnBpZSA9IGZ1bmN0aW9uICgpIHsgdmFyIHQgPSBObSwgbiA9IGttLCBlID0gbnVsbCwgciA9IEpiKDApLCBpID0gSmIoc20pLCBvID0gSmIoMCk7IGZ1bmN0aW9uIGEoYSkgeyB2YXIgdSwgYywgZiwgcywgbCwgaCA9IChhID0geG0oYSkpLmxlbmd0aCwgZCA9IDAsIHAgPSBuZXcgQXJyYXkoaCksIGcgPSBuZXcgQXJyYXkoaCksIHkgPSArci5hcHBseSh0aGlzLCBhcmd1bWVudHMpLCB2ID0gTWF0aC5taW4oc20sIE1hdGgubWF4KC1zbSwgaS5hcHBseSh0aGlzLCBhcmd1bWVudHMpIC0geSkpLCBfID0gTWF0aC5taW4oTWF0aC5hYnModikgLyBoLCBvLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpLCBiID0gXyAqICh2IDwgMCA/IC0xIDogMSk7IGZvciAodSA9IDA7IHUgPCBoOyArK3UpKGwgPSBnW3BbdV0gPSB1XSA9ICt0KGFbdV0sIHUsIGEpKSA+IDAgJiYgKGQgKz0gbCk7IGZvciAobnVsbCAhPSBuID8gcC5zb3J0KChmdW5jdGlvbiAodCwgZSkgeyByZXR1cm4gbihnW3RdLCBnW2VdKSB9KSkgOiBudWxsICE9IGUgJiYgcC5zb3J0KChmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gZShhW3RdLCBhW25dKSB9KSksIHUgPSAwLCBmID0gZCA/ICh2IC0gaCAqIGIpIC8gZCA6IDA7IHUgPCBoOyArK3UsIHkgPSBzKWMgPSBwW3VdLCBzID0geSArICgobCA9IGdbY10pID4gMCA/IGwgKiBmIDogMCkgKyBiLCBnW2NdID0geyBkYXRhOiBhW2NdLCBpbmRleDogdSwgdmFsdWU6IGwsIHN0YXJ0QW5nbGU6IHksIGVuZEFuZ2xlOiBzLCBwYWRBbmdsZTogXyB9OyByZXR1cm4gZyB9IHJldHVybiBhLnZhbHVlID0gZnVuY3Rpb24gKG4pIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodCA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIG4gPyBuIDogSmIoK24pLCBhKSA6IHQgfSwgYS5zb3J0VmFsdWVzID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobiA9IHQsIGUgPSBudWxsLCBhKSA6IG4gfSwgYS5zb3J0ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZSA9IHQsIG4gPSBudWxsLCBhKSA6IGUgfSwgYS5zdGFydEFuZ2xlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAociA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogSmIoK3QpLCBhKSA6IHIgfSwgYS5lbmRBbmdsZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGkgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IEpiKCt0KSwgYSkgOiBpIH0sIGEucGFkQW5nbGUgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChvID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBKYigrdCksIGEpIDogbyB9LCBhIH0sIHQucGllY2V3aXNlID0gbGksIHQucG9pbnRSYWRpYWwgPSBxbSwgdC5wb2ludGVyID0gdGUsIHQucG9pbnRlcnMgPSBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gdC50YXJnZXQgJiYgKHQgPSBKbih0KSwgdm9pZCAwID09PSBuICYmIChuID0gdC5jdXJyZW50VGFyZ2V0KSwgdCA9IHQudG91Y2hlcyB8fCBbdF0pLCBBcnJheS5mcm9tKHQsICh0ID0+IHRlKHQsIG4pKSkgfSwgdC5wb2x5Z29uQXJlYSA9IGZ1bmN0aW9uICh0KSB7IGZvciAodmFyIG4sIGUgPSAtMSwgciA9IHQubGVuZ3RoLCBpID0gdFtyIC0gMV0sIG8gPSAwOyArK2UgPCByOyluID0gaSwgaSA9IHRbZV0sIG8gKz0gblsxXSAqIGlbMF0gLSBuWzBdICogaVsxXTsgcmV0dXJuIG8gLyAyIH0sIHQucG9seWdvbkNlbnRyb2lkID0gZnVuY3Rpb24gKHQpIHsgZm9yICh2YXIgbiwgZSwgciA9IC0xLCBpID0gdC5sZW5ndGgsIG8gPSAwLCBhID0gMCwgdSA9IHRbaSAtIDFdLCBjID0gMDsgKytyIDwgaTspbiA9IHUsIHUgPSB0W3JdLCBjICs9IGUgPSBuWzBdICogdVsxXSAtIHVbMF0gKiBuWzFdLCBvICs9IChuWzBdICsgdVswXSkgKiBlLCBhICs9IChuWzFdICsgdVsxXSkgKiBlOyByZXR1cm4gW28gLyAoYyAqPSAzKSwgYSAvIGNdIH0sIHQucG9seWdvbkNvbnRhaW5zID0gZnVuY3Rpb24gKHQsIG4pIHsgZm9yICh2YXIgZSwgciwgaSA9IHQubGVuZ3RoLCBvID0gdFtpIC0gMV0sIGEgPSBuWzBdLCB1ID0gblsxXSwgYyA9IG9bMF0sIGYgPSBvWzFdLCBzID0gITEsIGwgPSAwOyBsIDwgaTsgKytsKWUgPSAobyA9IHRbbF0pWzBdLCAociA9IG9bMV0pID4gdSAhPSBmID4gdSAmJiBhIDwgKGMgLSBlKSAqICh1IC0gcikgLyAoZiAtIHIpICsgZSAmJiAocyA9ICFzKSwgYyA9IGUsIGYgPSByOyByZXR1cm4gcyB9LCB0LnBvbHlnb25IdWxsID0gZnVuY3Rpb24gKHQpIHsgaWYgKChlID0gdC5sZW5ndGgpIDwgMykgcmV0dXJuIG51bGw7IHZhciBuLCBlLCByID0gbmV3IEFycmF5KGUpLCBpID0gbmV3IEFycmF5KGUpOyBmb3IgKG4gPSAwOyBuIDwgZTsgKytuKXJbbl0gPSBbK3Rbbl1bMF0sICt0W25dWzFdLCBuXTsgZm9yIChyLnNvcnQoX3ApLCBuID0gMDsgbiA8IGU7ICsrbilpW25dID0gW3Jbbl1bMF0sIC1yW25dWzFdXTsgdmFyIG8gPSBicChyKSwgYSA9IGJwKGkpLCB1ID0gYVswXSA9PT0gb1swXSwgYyA9IGFbYS5sZW5ndGggLSAxXSA9PT0gb1tvLmxlbmd0aCAtIDFdLCBmID0gW107IGZvciAobiA9IG8ubGVuZ3RoIC0gMTsgbiA+PSAwOyAtLW4pZi5wdXNoKHRbcltvW25dXVsyXV0pOyBmb3IgKG4gPSArdTsgbiA8IGEubGVuZ3RoIC0gYzsgKytuKWYucHVzaCh0W3JbYVtuXV1bMl1dKTsgcmV0dXJuIGYgfSwgdC5wb2x5Z29uTGVuZ3RoID0gZnVuY3Rpb24gKHQpIHsgZm9yICh2YXIgbiwgZSwgciA9IC0xLCBpID0gdC5sZW5ndGgsIG8gPSB0W2kgLSAxXSwgYSA9IG9bMF0sIHUgPSBvWzFdLCBjID0gMDsgKytyIDwgaTspbiA9IGEsIGUgPSB1LCBuIC09IGEgPSAobyA9IHRbcl0pWzBdLCBlIC09IHUgPSBvWzFdLCBjICs9IE1hdGguaHlwb3QobiwgZSk7IHJldHVybiBjIH0sIHQucHJlY2lzaW9uRml4ZWQgPSBqYywgdC5wcmVjaXNpb25QcmVmaXggPSAkYywgdC5wcmVjaXNpb25Sb3VuZCA9IEhjLCB0LnF1YWR0cmVlID0gZ2MsIHQucXVhbnRpbGUgPSBhdCwgdC5xdWFudGlsZUluZGV4ID0gY3QsIHQucXVhbnRpbGVTb3J0ZWQgPSB1dCwgdC5xdWFudGl6ZSA9IGZ1bmN0aW9uICh0LCBuKSB7IGZvciAodmFyIGUgPSBuZXcgQXJyYXkobiksIHIgPSAwOyByIDwgbjsgKytyKWVbcl0gPSB0KHIgLyAobiAtIDEpKTsgcmV0dXJuIGUgfSwgdC5xdWlja3NlbGVjdCA9IHJ0LCB0LnJhZGlhbEFyZWEgPSBGbSwgdC5yYWRpYWxMaW5lID0gUm0sIHQucmFuZG9tQmF0ZXMgPSBTcCwgdC5yYW5kb21CZXJub3VsbGkgPSBOcCwgdC5yYW5kb21CZXRhID0genAsIHQucmFuZG9tQmlub21pYWwgPSBEcCwgdC5yYW5kb21DYXVjaHkgPSBGcCwgdC5yYW5kb21FeHBvbmVudGlhbCA9IEVwLCB0LnJhbmRvbUdhbW1hID0gUHAsIHQucmFuZG9tR2VvbWV0cmljID0gQ3AsIHQucmFuZG9tSW50ID0gd3AsIHQucmFuZG9tSXJ3aW5IYWxsID0gVHAsIHQucmFuZG9tTGNnID0gZnVuY3Rpb24gKHQgPSBNYXRoLnJhbmRvbSgpKSB7IGxldCBuID0gMCB8ICgwIDw9IHQgJiYgdCA8IDEgPyB0IC8gT3AgOiBNYXRoLmFicyh0KSk7IHJldHVybiAoKSA9PiAobiA9IDE2NjQ1MjUgKiBuICsgMTAxMzkwNDIyMyB8IDAsIE9wICogKG4gPj4+IDApKSB9LCB0LnJhbmRvbUxvZ05vcm1hbCA9IEFwLCB0LnJhbmRvbUxvZ2lzdGljID0gcXAsIHQucmFuZG9tTm9ybWFsID0gTXAsIHQucmFuZG9tUGFyZXRvID0ga3AsIHQucmFuZG9tUG9pc3NvbiA9IElwLCB0LnJhbmRvbVVuaWZvcm0gPSB4cCwgdC5yYW5kb21XZWlidWxsID0gUnAsIHQucmFuZ2UgPSBsdCwgdC5yYW5rID0gZnVuY3Rpb24gKHQsIGUgPSBuKSB7IGlmICgiZnVuY3Rpb24iICE9IHR5cGVvZiB0W1N5bWJvbC5pdGVyYXRvcl0pIHRocm93IG5ldyBUeXBlRXJyb3IoInZhbHVlcyBpcyBub3QgaXRlcmFibGUiKTsgbGV0IHIgPSBBcnJheS5mcm9tKHQpOyBjb25zdCBpID0gbmV3IEZsb2F0NjRBcnJheShyLmxlbmd0aCk7IDIgIT09IGUubGVuZ3RoICYmIChyID0gci5tYXAoZSksIGUgPSBuKTsgY29uc3QgbyA9ICh0LCBuKSA9PiBlKHJbdF0sIHJbbl0pOyBsZXQgYSwgdTsgcmV0dXJuIFVpbnQzMkFycmF5LmZyb20ociwgKCh0LCBuKSA9PiBuKSkuc29ydChlID09PSBuID8gKHQsIG4pID0+IFkoclt0XSwgcltuXSkgOiBCKG8pKS5mb3JFYWNoKCgodCwgbikgPT4geyBjb25zdCBlID0gbyh0LCB2b2lkIDAgPT09IGEgPyB0IDogYSk7IGUgPj0gMCA/ICgodm9pZCAwID09PSBhIHx8IGUgPiAwKSAmJiAoYSA9IHQsIHUgPSBuKSwgaVt0XSA9IHUpIDogaVt0XSA9IE5hTiB9KSksIGkgfSwgdC5yZWR1Y2UgPSBmdW5jdGlvbiAodCwgbiwgZSkgeyBpZiAoImZ1bmN0aW9uIiAhPSB0eXBlb2YgbikgdGhyb3cgbmV3IFR5cGVFcnJvcigicmVkdWNlciBpcyBub3QgYSBmdW5jdGlvbiIpOyBjb25zdCByID0gdFtTeW1ib2wuaXRlcmF0b3JdKCk7IGxldCBpLCBvLCBhID0gLTE7IGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMykgeyBpZiAoKHsgZG9uZTogaSwgdmFsdWU6IGUgfSA9IHIubmV4dCgpKSwgaSkgcmV0dXJuOyArK2EgfSBmb3IgKDsgKHsgZG9uZTogaSwgdmFsdWU6IG8gfSA9IHIubmV4dCgpKSwgIWk7KWUgPSBuKGUsIG8sICsrYSwgdCk7IHJldHVybiBlIH0sIHQucmV2ZXJzZSA9IGZ1bmN0aW9uICh0KSB7IGlmICgiZnVuY3Rpb24iICE9IHR5cGVvZiB0W1N5bWJvbC5pdGVyYXRvcl0pIHRocm93IG5ldyBUeXBlRXJyb3IoInZhbHVlcyBpcyBub3QgaXRlcmFibGUiKTsgcmV0dXJuIEFycmF5LmZyb20odCkucmV2ZXJzZSgpIH0sIHQucmdiID0gRmUsIHQucmliYm9uID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gWWEoKSB9LCB0LnJpYmJvbkFycm93ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gWWEoQmEpIH0sIHQucm9sbHVwID0gUiwgdC5yb2xsdXBzID0gRiwgdC5zY2FsZUJhbmQgPSBqcCwgdC5zY2FsZURpdmVyZ2luZyA9IGZ1bmN0aW9uIHQoKSB7IHZhciBuID0gbmcoRV8oKShHcCkpOyByZXR1cm4gbi5jb3B5ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gVF8obiwgdCgpKSB9LCBCcC5hcHBseShuLCBhcmd1bWVudHMpIH0sIHQuc2NhbGVEaXZlcmdpbmdMb2cgPSBmdW5jdGlvbiB0KCkgeyB2YXIgbiA9IGZnKEVfKCkpLmRvbWFpbihbLjEsIDEsIDEwXSk7IHJldHVybiBuLmNvcHkgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBUXyhuLCB0KCkpLmJhc2Uobi5iYXNlKCkpIH0sIEJwLmFwcGx5KG4sIGFyZ3VtZW50cykgfSwgdC5zY2FsZURpdmVyZ2luZ1BvdyA9IGtfLCB0LnNjYWxlRGl2ZXJnaW5nU3FydCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGtfLmFwcGx5KG51bGwsIGFyZ3VtZW50cykuZXhwb25lbnQoLjUpIH0sIHQuc2NhbGVEaXZlcmdpbmdTeW1sb2cgPSBmdW5jdGlvbiB0KCkgeyB2YXIgbiA9IGhnKEVfKCkpOyByZXR1cm4gbi5jb3B5ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gVF8obiwgdCgpKS5jb25zdGFudChuLmNvbnN0YW50KCkpIH0sIEJwLmFwcGx5KG4sIGFyZ3VtZW50cykgfSwgdC5zY2FsZUlkZW50aXR5ID0gZnVuY3Rpb24gdChuKSB7IHZhciBlOyBmdW5jdGlvbiByKHQpIHsgcmV0dXJuIG51bGwgPT0gdCB8fCBpc05hTih0ID0gK3QpID8gZSA6IHQgfSByZXR1cm4gci5pbnZlcnQgPSByLCByLmRvbWFpbiA9IHIucmFuZ2UgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChuID0gQXJyYXkuZnJvbSh0LCBIcCksIHIpIDogbi5zbGljZSgpIH0sIHIudW5rbm93biA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGUgPSB0LCByKSA6IGUgfSwgci5jb3B5ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdChuKS51bmtub3duKGUpIH0sIG4gPSBhcmd1bWVudHMubGVuZ3RoID8gQXJyYXkuZnJvbShuLCBIcCkgOiBbMCwgMV0sIG5nKHIpIH0sIHQuc2NhbGVJbXBsaWNpdCA9IFlwLCB0LnNjYWxlTGluZWFyID0gZnVuY3Rpb24gdCgpIHsgdmFyIG4gPSBKcCgpOyByZXR1cm4gbi5jb3B5ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gS3AobiwgdCgpKSB9LCBVcC5hcHBseShuLCBhcmd1bWVudHMpLCBuZyhuKSB9LCB0LnNjYWxlTG9nID0gZnVuY3Rpb24gdCgpIHsgY29uc3QgbiA9IGZnKFFwKCkpLmRvbWFpbihbMSwgMTBdKTsgcmV0dXJuIG4uY29weSA9ICgpID0+IEtwKG4sIHQoKSkuYmFzZShuLmJhc2UoKSksIFVwLmFwcGx5KG4sIGFyZ3VtZW50cyksIG4gfSwgdC5zY2FsZU9yZGluYWwgPSBMcCwgdC5zY2FsZVBvaW50ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gJHAoanAuYXBwbHkobnVsbCwgYXJndW1lbnRzKS5wYWRkaW5nSW5uZXIoMSkpIH0sIHQuc2NhbGVQb3cgPSB2ZywgdC5zY2FsZVF1YW50aWxlID0gZnVuY3Rpb24gdCgpIHsgdmFyIGUsIHIgPSBbXSwgaSA9IFtdLCBvID0gW107IGZ1bmN0aW9uIGEoKSB7IHZhciB0ID0gMCwgbiA9IE1hdGgubWF4KDEsIGkubGVuZ3RoKTsgZm9yIChvID0gbmV3IEFycmF5KG4gLSAxKTsgKyt0IDwgbjspb1t0IC0gMV0gPSB1dChyLCB0IC8gbik7IHJldHVybiB1IH0gZnVuY3Rpb24gdSh0KSB7IHJldHVybiBudWxsID09IHQgfHwgaXNOYU4odCA9ICt0KSA/IGUgOiBpW2wobywgdCldIH0gcmV0dXJuIHUuaW52ZXJ0RXh0ZW50ID0gZnVuY3Rpb24gKHQpIHsgdmFyIG4gPSBpLmluZGV4T2YodCk7IHJldHVybiBuIDwgMCA/IFtOYU4sIE5hTl0gOiBbbiA+IDAgPyBvW24gLSAxXSA6IHJbMF0sIG4gPCBvLmxlbmd0aCA/IG9bbl0gOiByW3IubGVuZ3RoIC0gMV1dIH0sIHUuZG9tYWluID0gZnVuY3Rpb24gKHQpIHsgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gci5zbGljZSgpOyByID0gW107IGZvciAobGV0IG4gb2YgdCkgbnVsbCA9PSBuIHx8IGlzTmFOKG4gPSArbikgfHwgci5wdXNoKG4pOyByZXR1cm4gci5zb3J0KG4pLCBhKCkgfSwgdS5yYW5nZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGkgPSBBcnJheS5mcm9tKHQpLCBhKCkpIDogaS5zbGljZSgpIH0sIHUudW5rbm93biA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGUgPSB0LCB1KSA6IGUgfSwgdS5xdWFudGlsZXMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBvLnNsaWNlKCkgfSwgdS5jb3B5ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdCgpLmRvbWFpbihyKS5yYW5nZShpKS51bmtub3duKGUpIH0sIFVwLmFwcGx5KHUsIGFyZ3VtZW50cykgfSwgdC5zY2FsZVF1YW50aXplID0gZnVuY3Rpb24gdCgpIHsgdmFyIG4sIGUgPSAwLCByID0gMSwgaSA9IDEsIG8gPSBbLjVdLCBhID0gWzAsIDFdOyBmdW5jdGlvbiB1KHQpIHsgcmV0dXJuIG51bGwgIT0gdCAmJiB0IDw9IHQgPyBhW2wobywgdCwgMCwgaSldIDogbiB9IGZ1bmN0aW9uIGMoKSB7IHZhciB0ID0gLTE7IGZvciAobyA9IG5ldyBBcnJheShpKTsgKyt0IDwgaTspb1t0XSA9ICgodCArIDEpICogciAtICh0IC0gaSkgKiBlKSAvIChpICsgMSk7IHJldHVybiB1IH0gcmV0dXJuIHUuZG9tYWluID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoW2UsIHJdID0gdCwgZSA9ICtlLCByID0gK3IsIGMoKSkgOiBbZSwgcl0gfSwgdS5yYW5nZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGkgPSAoYSA9IEFycmF5LmZyb20odCkpLmxlbmd0aCAtIDEsIGMoKSkgOiBhLnNsaWNlKCkgfSwgdS5pbnZlcnRFeHRlbnQgPSBmdW5jdGlvbiAodCkgeyB2YXIgbiA9IGEuaW5kZXhPZih0KTsgcmV0dXJuIG4gPCAwID8gW05hTiwgTmFOXSA6IG4gPCAxID8gW2UsIG9bMF1dIDogbiA+PSBpID8gW29baSAtIDFdLCByXSA6IFtvW24gLSAxXSwgb1tuXV0gfSwgdS51bmtub3duID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobiA9IHQsIHUpIDogdSB9LCB1LnRocmVzaG9sZHMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBvLnNsaWNlKCkgfSwgdS5jb3B5ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdCgpLmRvbWFpbihbZSwgcl0pLnJhbmdlKGEpLnVua25vd24obikgfSwgVXAuYXBwbHkobmcodSksIGFyZ3VtZW50cykgfSwgdC5zY2FsZVJhZGlhbCA9IGZ1bmN0aW9uIHQoKSB7IHZhciBuLCBlID0gSnAoKSwgciA9IFswLCAxXSwgaSA9ICExOyBmdW5jdGlvbiBvKHQpIHsgdmFyIHIgPSBiZyhlKHQpKTsgcmV0dXJuIGlzTmFOKHIpID8gbiA6IGkgPyBNYXRoLnJvdW5kKHIpIDogciB9IHJldHVybiBvLmludmVydCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBlLmludmVydChfZyh0KSkgfSwgby5kb21haW4gPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChlLmRvbWFpbih0KSwgbykgOiBlLmRvbWFpbigpIH0sIG8ucmFuZ2UgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChlLnJhbmdlKChyID0gQXJyYXkuZnJvbSh0LCBIcCkpLm1hcChfZykpLCBvKSA6IHIuc2xpY2UoKSB9LCBvLnJhbmdlUm91bmQgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gby5yYW5nZSh0KS5yb3VuZCghMCkgfSwgby5yb3VuZCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGkgPSAhIXQsIG8pIDogaSB9LCBvLmNsYW1wID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZS5jbGFtcCh0KSwgbykgOiBlLmNsYW1wKCkgfSwgby51bmtub3duID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobiA9IHQsIG8pIDogbiB9LCBvLmNvcHkgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB0KGUuZG9tYWluKCksIHIpLnJvdW5kKGkpLmNsYW1wKGUuY2xhbXAoKSkudW5rbm93bihuKSB9LCBVcC5hcHBseShvLCBhcmd1bWVudHMpLCBuZyhvKSB9LCB0LnNjYWxlU2VxdWVudGlhbCA9IGZ1bmN0aW9uIHQoKSB7IHZhciBuID0gbmcoQV8oKShHcCkpOyByZXR1cm4gbi5jb3B5ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gVF8obiwgdCgpKSB9LCBCcC5hcHBseShuLCBhcmd1bWVudHMpIH0sIHQuc2NhbGVTZXF1ZW50aWFsTG9nID0gZnVuY3Rpb24gdCgpIHsgdmFyIG4gPSBmZyhBXygpKS5kb21haW4oWzEsIDEwXSk7IHJldHVybiBuLmNvcHkgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBUXyhuLCB0KCkpLmJhc2Uobi5iYXNlKCkpIH0sIEJwLmFwcGx5KG4sIGFyZ3VtZW50cykgfSwgdC5zY2FsZVNlcXVlbnRpYWxQb3cgPSBTXywgdC5zY2FsZVNlcXVlbnRpYWxRdWFudGlsZSA9IGZ1bmN0aW9uIHQoKSB7IHZhciBlID0gW10sIHIgPSBHcDsgZnVuY3Rpb24gaSh0KSB7IGlmIChudWxsICE9IHQgJiYgIWlzTmFOKHQgPSArdCkpIHJldHVybiByKChsKGUsIHQsIDEpIC0gMSkgLyAoZS5sZW5ndGggLSAxKSkgfSByZXR1cm4gaS5kb21haW4gPSBmdW5jdGlvbiAodCkgeyBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBlLnNsaWNlKCk7IGUgPSBbXTsgZm9yIChsZXQgbiBvZiB0KSBudWxsID09IG4gfHwgaXNOYU4obiA9ICtuKSB8fCBlLnB1c2gobik7IHJldHVybiBlLnNvcnQobiksIGkgfSwgaS5pbnRlcnBvbGF0b3IgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyID0gdCwgaSkgOiByIH0sIGkucmFuZ2UgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBlLm1hcCgoKHQsIG4pID0+IHIobiAvIChlLmxlbmd0aCAtIDEpKSkpIH0sIGkucXVhbnRpbGVzID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIEFycmF5LmZyb20oeyBsZW5ndGg6IHQgKyAxIH0sICgobiwgcikgPT4gYXQoZSwgciAvIHQpKSkgfSwgaS5jb3B5ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdChyKS5kb21haW4oZSkgfSwgQnAuYXBwbHkoaSwgYXJndW1lbnRzKSB9LCB0LnNjYWxlU2VxdWVudGlhbFNxcnQgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBTXy5hcHBseShudWxsLCBhcmd1bWVudHMpLmV4cG9uZW50KC41KSB9LCB0LnNjYWxlU2VxdWVudGlhbFN5bWxvZyA9IGZ1bmN0aW9uIHQoKSB7IHZhciBuID0gaGcoQV8oKSk7IHJldHVybiBuLmNvcHkgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBUXyhuLCB0KCkpLmNvbnN0YW50KG4uY29uc3RhbnQoKSkgfSwgQnAuYXBwbHkobiwgYXJndW1lbnRzKSB9LCB0LnNjYWxlU3FydCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHZnLmFwcGx5KG51bGwsIGFyZ3VtZW50cykuZXhwb25lbnQoLjUpIH0sIHQuc2NhbGVTeW1sb2cgPSBmdW5jdGlvbiB0KCkgeyB2YXIgbiA9IGhnKFFwKCkpOyByZXR1cm4gbi5jb3B5ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gS3AobiwgdCgpKS5jb25zdGFudChuLmNvbnN0YW50KCkpIH0sIFVwLmFwcGx5KG4sIGFyZ3VtZW50cykgfSwgdC5zY2FsZVRocmVzaG9sZCA9IGZ1bmN0aW9uIHQoKSB7IHZhciBuLCBlID0gWy41XSwgciA9IFswLCAxXSwgaSA9IDE7IGZ1bmN0aW9uIG8odCkgeyByZXR1cm4gbnVsbCAhPSB0ICYmIHQgPD0gdCA/IHJbbChlLCB0LCAwLCBpKV0gOiBuIH0gcmV0dXJuIG8uZG9tYWluID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZSA9IEFycmF5LmZyb20odCksIGkgPSBNYXRoLm1pbihlLmxlbmd0aCwgci5sZW5ndGggLSAxKSwgbykgOiBlLnNsaWNlKCkgfSwgby5yYW5nZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHIgPSBBcnJheS5mcm9tKHQpLCBpID0gTWF0aC5taW4oZS5sZW5ndGgsIHIubGVuZ3RoIC0gMSksIG8pIDogci5zbGljZSgpIH0sIG8uaW52ZXJ0RXh0ZW50ID0gZnVuY3Rpb24gKHQpIHsgdmFyIG4gPSByLmluZGV4T2YodCk7IHJldHVybiBbZVtuIC0gMV0sIGVbbl1dIH0sIG8udW5rbm93biA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG4gPSB0LCBvKSA6IG4gfSwgby5jb3B5ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdCgpLmRvbWFpbihlKS5yYW5nZShyKS51bmtub3duKG4pIH0sIFVwLmFwcGx5KG8sIGFyZ3VtZW50cykgfSwgdC5zY2FsZVRpbWUgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBVcC5hcHBseShNXyhIeSwgWHksIHN5LCB1eSwgWGcsIGpnLCBCZywgSWcsIFJnLCB0LnRpbWVGb3JtYXQpLmRvbWFpbihbbmV3IERhdGUoMmUzLCAwLCAxKSwgbmV3IERhdGUoMmUzLCAwLCAyKV0pLCBhcmd1bWVudHMpIH0sIHQuc2NhbGVVdGMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBVcC5hcHBseShNXyhqeSwgJHksIEJ5LCBJeSwgd3ksIGJ5LCB5eSwgZHksIFJnLCB0LnV0Y0Zvcm1hdCkuZG9tYWluKFtEYXRlLlVUQygyZTMsIDAsIDEpLCBEYXRlLlVUQygyZTMsIDAsIDIpXSksIGFyZ3VtZW50cykgfSwgdC5zY2FuID0gZnVuY3Rpb24gKHQsIG4pIHsgY29uc3QgZSA9IGh0KHQsIG4pOyByZXR1cm4gZSA8IDAgPyB2b2lkIDAgOiBlIH0sIHQuc2NoZW1lQWNjZW50ID0gUF8sIHQuc2NoZW1lQmx1ZXMgPSBOYiwgdC5zY2hlbWVCckJHID0gWV8sIHQuc2NoZW1lQnVHbiA9IG9iLCB0LnNjaGVtZUJ1UHUgPSB1YiwgdC5zY2hlbWVDYXRlZ29yeTEwID0gQ18sIHQuc2NoZW1lRGFyazIgPSB6XywgdC5zY2hlbWVHbkJ1ID0gZmIsIHQuc2NoZW1lR3JlZW5zID0gUGIsIHQuc2NoZW1lR3JleXMgPSBEYiwgdC5zY2hlbWVPclJkID0gbGIsIHQuc2NoZW1lT3JhbmdlcyA9IFViLCB0LnNjaGVtZVBSR24gPSBqXywgdC5zY2hlbWVQYWlyZWQgPSBEXywgdC5zY2hlbWVQYXN0ZWwxID0gUl8sIHQuc2NoZW1lUGFzdGVsMiA9IEZfLCB0LnNjaGVtZVBpWUcgPSBIXywgdC5zY2hlbWVQdUJ1ID0gZ2IsIHQuc2NoZW1lUHVCdUduID0gZGIsIHQuc2NoZW1lUHVPciA9IEdfLCB0LnNjaGVtZVB1UmQgPSB2YiwgdC5zY2hlbWVQdXJwbGVzID0gRmIsIHQuc2NoZW1lUmRCdSA9IFdfLCB0LnNjaGVtZVJkR3kgPSBLXywgdC5zY2hlbWVSZFB1ID0gYmIsIHQuc2NoZW1lUmRZbEJ1ID0gSl8sIHQuc2NoZW1lUmRZbEduID0gbmIsIHQuc2NoZW1lUmVkcyA9IEliLCB0LnNjaGVtZVNldDEgPSBxXywgdC5zY2hlbWVTZXQyID0gSV8sIHQuc2NoZW1lU2V0MyA9IE9fLCB0LnNjaGVtZVNwZWN0cmFsID0gcmIsIHQuc2NoZW1lVGFibGVhdTEwID0gVV8sIHQuc2NoZW1lWWxHbiA9IE1iLCB0LnNjaGVtZVlsR25CdSA9IHhiLCB0LnNjaGVtZVlsT3JCciA9IFRiLCB0LnNjaGVtZVlsT3JSZCA9IEViLCB0LnNlbGVjdCA9IFduLCB0LnNlbGVjdEFsbCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiAic3RyaW5nIiA9PSB0eXBlb2YgdCA/IG5ldyBHbihbZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCh0KV0sIFtkb2N1bWVudC5kb2N1bWVudEVsZW1lbnRdKSA6IG5ldyBHbihbTHQodCldLCBYbikgfSwgdC5zZWxlY3Rpb24gPSBWbiwgdC5zZWxlY3RvciA9IFl0LCB0LnNlbGVjdG9yQWxsID0gJHQsIHQuc2h1ZmZsZSA9IGR0LCB0LnNodWZmbGVyID0gcHQsIHQuc29tZSA9IGZ1bmN0aW9uICh0LCBuKSB7IGlmICgiZnVuY3Rpb24iICE9IHR5cGVvZiBuKSB0aHJvdyBuZXcgVHlwZUVycm9yKCJ0ZXN0IGlzIG5vdCBhIGZ1bmN0aW9uIik7IGxldCBlID0gLTE7IGZvciAoY29uc3QgciBvZiB0KSBpZiAobihyLCArK2UsIHQpKSByZXR1cm4gITA7IHJldHVybiAhMSB9LCB0LnNvcnQgPSBVLCB0LnN0YWNrID0gZnVuY3Rpb24gKCkgeyB2YXIgdCA9IEpiKFtdKSwgbiA9IEt4LCBlID0gWngsIHIgPSBReDsgZnVuY3Rpb24gaShpKSB7IHZhciBvLCBhLCB1ID0gQXJyYXkuZnJvbSh0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksIEp4KSwgYyA9IHUubGVuZ3RoLCBmID0gLTE7IGZvciAoY29uc3QgdCBvZiBpKSBmb3IgKG8gPSAwLCArK2Y7IG8gPCBjOyArK28pKHVbb11bZl0gPSBbMCwgK3IodCwgdVtvXS5rZXksIGYsIGkpXSkuZGF0YSA9IHQ7IGZvciAobyA9IDAsIGEgPSB4bShuKHUpKTsgbyA8IGM7ICsrbyl1W2Fbb11dLmluZGV4ID0gbzsgcmV0dXJuIGUodSwgYSksIHUgfSByZXR1cm4gaS5rZXlzID0gZnVuY3Rpb24gKG4pIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodCA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIG4gPyBuIDogSmIoQXJyYXkuZnJvbShuKSksIGkpIDogdCB9LCBpLnZhbHVlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAociA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogSmIoK3QpLCBpKSA6IHIgfSwgaS5vcmRlciA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG4gPSBudWxsID09IHQgPyBLeCA6ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogSmIoQXJyYXkuZnJvbSh0KSksIGkpIDogbiB9LCBpLm9mZnNldCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGUgPSBudWxsID09IHQgPyBaeCA6IHQsIGkpIDogZSB9LCBpIH0sIHQuc3RhY2tPZmZzZXREaXZlcmdpbmcgPSBmdW5jdGlvbiAodCwgbikgeyBpZiAoKHUgPSB0Lmxlbmd0aCkgPiAwKSBmb3IgKHZhciBlLCByLCBpLCBvLCBhLCB1LCBjID0gMCwgZiA9IHRbblswXV0ubGVuZ3RoOyBjIDwgZjsgKytjKWZvciAobyA9IGEgPSAwLCBlID0gMDsgZSA8IHU7ICsrZSkoaSA9IChyID0gdFtuW2VdXVtjXSlbMV0gLSByWzBdKSA+IDAgPyAoclswXSA9IG8sIHJbMV0gPSBvICs9IGkpIDogaSA8IDAgPyAoclsxXSA9IGEsIHJbMF0gPSBhICs9IGkpIDogKHJbMF0gPSAwLCByWzFdID0gaSkgfSwgdC5zdGFja09mZnNldEV4cGFuZCA9IGZ1bmN0aW9uICh0LCBuKSB7IGlmICgociA9IHQubGVuZ3RoKSA+IDApIHsgZm9yICh2YXIgZSwgciwgaSwgbyA9IDAsIGEgPSB0WzBdLmxlbmd0aDsgbyA8IGE7ICsrbykgeyBmb3IgKGkgPSBlID0gMDsgZSA8IHI7ICsrZSlpICs9IHRbZV1bb11bMV0gfHwgMDsgaWYgKGkpIGZvciAoZSA9IDA7IGUgPCByOyArK2UpdFtlXVtvXVsxXSAvPSBpIH0gWngodCwgbikgfSB9LCB0LnN0YWNrT2Zmc2V0Tm9uZSA9IFp4LCB0LnN0YWNrT2Zmc2V0U2lsaG91ZXR0ZSA9IGZ1bmN0aW9uICh0LCBuKSB7IGlmICgoZSA9IHQubGVuZ3RoKSA+IDApIHsgZm9yICh2YXIgZSwgciA9IDAsIGkgPSB0W25bMF1dLCBvID0gaS5sZW5ndGg7IHIgPCBvOyArK3IpIHsgZm9yICh2YXIgYSA9IDAsIHUgPSAwOyBhIDwgZTsgKythKXUgKz0gdFthXVtyXVsxXSB8fCAwOyBpW3JdWzFdICs9IGlbcl1bMF0gPSAtdSAvIDIgfSBaeCh0LCBuKSB9IH0sIHQuc3RhY2tPZmZzZXRXaWdnbGUgPSBmdW5jdGlvbiAodCwgbikgeyBpZiAoKGkgPSB0Lmxlbmd0aCkgPiAwICYmIChyID0gKGUgPSB0W25bMF1dKS5sZW5ndGgpID4gMCkgeyBmb3IgKHZhciBlLCByLCBpLCBvID0gMCwgYSA9IDE7IGEgPCByOyArK2EpIHsgZm9yICh2YXIgdSA9IDAsIGMgPSAwLCBmID0gMDsgdSA8IGk7ICsrdSkgeyBmb3IgKHZhciBzID0gdFtuW3VdXSwgbCA9IHNbYV1bMV0gfHwgMCwgaCA9IChsIC0gKHNbYSAtIDFdWzFdIHx8IDApKSAvIDIsIGQgPSAwOyBkIDwgdTsgKytkKSB7IHZhciBwID0gdFtuW2RdXTsgaCArPSAocFthXVsxXSB8fCAwKSAtIChwW2EgLSAxXVsxXSB8fCAwKSB9IGMgKz0gbCwgZiArPSBoICogbCB9IGVbYSAtIDFdWzFdICs9IGVbYSAtIDFdWzBdID0gbywgYyAmJiAobyAtPSBmIC8gYykgfSBlW2EgLSAxXVsxXSArPSBlW2EgLSAxXVswXSA9IG8sIFp4KHQsIG4pIH0gfSwgdC5zdGFja09yZGVyQXBwZWFyYW5jZSA9IHR3LCB0LnN0YWNrT3JkZXJBc2NlbmRpbmcgPSBldywgdC5zdGFja09yZGVyRGVzY2VuZGluZyA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBldyh0KS5yZXZlcnNlKCkgfSwgdC5zdGFja09yZGVySW5zaWRlT3V0ID0gZnVuY3Rpb24gKHQpIHsgdmFyIG4sIGUsIHIgPSB0Lmxlbmd0aCwgaSA9IHQubWFwKHJ3KSwgbyA9IHR3KHQpLCBhID0gMCwgdSA9IDAsIGMgPSBbXSwgZiA9IFtdOyBmb3IgKG4gPSAwOyBuIDwgcjsgKytuKWUgPSBvW25dLCBhIDwgdSA/IChhICs9IGlbZV0sIGMucHVzaChlKSkgOiAodSArPSBpW2VdLCBmLnB1c2goZSkpOyByZXR1cm4gZi5yZXZlcnNlKCkuY29uY2F0KGMpIH0sIHQuc3RhY2tPcmRlck5vbmUgPSBLeCwgdC5zdGFja09yZGVyUmV2ZXJzZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBLeCh0KS5yZXZlcnNlKCkgfSwgdC5zdHJhdGlmeSA9IGZ1bmN0aW9uICgpIHsgdmFyIHQsIG4gPSBlcCwgZSA9IHJwOyBmdW5jdGlvbiByKHIpIHsgdmFyIGksIG8sIGEsIHUsIGMsIGYsIHMsIGwsIGggPSBBcnJheS5mcm9tKHIpLCBkID0gbiwgcCA9IGUsIGcgPSBuZXcgTWFwOyBpZiAobnVsbCAhPSB0KSB7IGNvbnN0IG4gPSBoLm1hcCgoKG4sIGUpID0+IGZ1bmN0aW9uICh0KSB7IGxldCBuID0gKHQgPSBgJHt0fWApLmxlbmd0aDsgb3AodCwgbiAtIDEpICYmICFvcCh0LCBuIC0gMikgJiYgKHQgPSB0LnNsaWNlKDAsIC0xKSk7IHJldHVybiAiLyIgPT09IHRbMF0gPyB0IDogYC8ke3R9YCB9KHQobiwgZSwgcikpKSksIGUgPSBuLm1hcChpcCksIGkgPSBuZXcgU2V0KG4pLmFkZCgiIik7IGZvciAoY29uc3QgdCBvZiBlKSBpLmhhcyh0KSB8fCAoaS5hZGQodCksIG4ucHVzaCh0KSwgZS5wdXNoKGlwKHQpKSwgaC5wdXNoKG5wKSk7IGQgPSAodCwgZSkgPT4gbltlXSwgcCA9ICh0LCBuKSA9PiBlW25dIH0gZm9yIChhID0gMCwgaSA9IGgubGVuZ3RoOyBhIDwgaTsgKythKW8gPSBoW2FdLCBmID0gaFthXSA9IG5ldyBFZChvKSwgbnVsbCAhPSAocyA9IGQobywgYSwgcikpICYmIChzICs9ICIiKSAmJiAobCA9IGYuaWQgPSBzLCBnLnNldChsLCBnLmhhcyhsKSA/IHRwIDogZikpLCBudWxsICE9IChzID0gcChvLCBhLCByKSkgJiYgKHMgKz0gIiIpICYmIChmLnBhcmVudCA9IHMpOyBmb3IgKGEgPSAwOyBhIDwgaTsgKythKWlmIChzID0gKGYgPSBoW2FdKS5wYXJlbnQpIHsgaWYgKCEoYyA9IGcuZ2V0KHMpKSkgdGhyb3cgbmV3IEVycm9yKCJtaXNzaW5nOiAiICsgcyk7IGlmIChjID09PSB0cCkgdGhyb3cgbmV3IEVycm9yKCJhbWJpZ3VvdXM6ICIgKyBzKTsgYy5jaGlsZHJlbiA/IGMuY2hpbGRyZW4ucHVzaChmKSA6IGMuY2hpbGRyZW4gPSBbZl0sIGYucGFyZW50ID0gYyB9IGVsc2UgeyBpZiAodSkgdGhyb3cgbmV3IEVycm9yKCJtdWx0aXBsZSByb290cyIpOyB1ID0gZiB9IGlmICghdSkgdGhyb3cgbmV3IEVycm9yKCJubyByb290Iik7IGlmIChudWxsICE9IHQpIHsgZm9yICg7IHUuZGF0YSA9PT0gbnAgJiYgMSA9PT0gdS5jaGlsZHJlbi5sZW5ndGg7KXUgPSB1LmNoaWxkcmVuWzBdLCAtLWk7IGZvciAobGV0IHQgPSBoLmxlbmd0aCAtIDE7IHQgPj0gMCAmJiAoZiA9IGhbdF0sIGYuZGF0YSA9PT0gbnApOyAtLXQpZi5kYXRhID0gbnVsbCB9IGlmICh1LnBhcmVudCA9IEpkLCB1LmVhY2hCZWZvcmUoKGZ1bmN0aW9uICh0KSB7IHQuZGVwdGggPSB0LnBhcmVudC5kZXB0aCArIDEsIC0taSB9KSkuZWFjaEJlZm9yZShTZCksIHUucGFyZW50ID0gbnVsbCwgaSA+IDApIHRocm93IG5ldyBFcnJvcigiY3ljbGUiKTsgcmV0dXJuIHUgfSByZXR1cm4gci5pZCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG4gPSBrZCh0KSwgcikgOiBuIH0sIHIucGFyZW50SWQgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChlID0ga2QodCksIHIpIDogZSB9LCByLnBhdGggPSBmdW5jdGlvbiAobikgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0ID0ga2QobiksIHIpIDogdCB9LCByIH0sIHQuc3R5bGUgPSB5biwgdC5zdWJzZXQgPSBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gX3QobiwgdCkgfSwgdC5zdW0gPSBmdW5jdGlvbiAodCwgbikgeyBsZXQgZSA9IDA7IGlmICh2b2lkIDAgPT09IG4pIGZvciAobGV0IG4gb2YgdCkgKG4gPSArbikgJiYgKGUgKz0gbik7IGVsc2UgeyBsZXQgciA9IC0xOyBmb3IgKGxldCBpIG9mIHQpIChpID0gK24oaSwgKytyLCB0KSkgJiYgKGUgKz0gaSkgfSByZXR1cm4gZSB9LCB0LnN1cGVyc2V0ID0gX3QsIHQuc3ZnID0gc2MsIHQuc3ltYm9sID0gZnVuY3Rpb24gKHQsIG4pIHsgbGV0IGUgPSBudWxsOyBmdW5jdGlvbiByKCkgeyBsZXQgcjsgaWYgKGUgfHwgKGUgPSByID0gUGEoKSksIHQuYXBwbHkodGhpcywgYXJndW1lbnRzKS5kcmF3KGUsICtuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpLCByKSByZXR1cm4gZSA9IG51bGwsIHIgKyAiIiB8fCBudWxsIH0gcmV0dXJuIHQgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IEpiKHQgfHwgR20pLCBuID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgbiA/IG4gOiBKYih2b2lkIDAgPT09IG4gPyA2NCA6ICtuKSwgci50eXBlID0gZnVuY3Rpb24gKG4pIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodCA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIG4gPyBuIDogSmIobiksIHIpIDogdCB9LCByLnNpemUgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChuID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBKYigrdCksIHIpIDogbiB9LCByLmNvbnRleHQgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChlID0gbnVsbCA9PSB0ID8gbnVsbCA6IHQsIHIpIDogZSB9LCByIH0sIHQuc3ltYm9sQXN0ZXJpc2sgPSBYbSwgdC5zeW1ib2xDaXJjbGUgPSBHbSwgdC5zeW1ib2xDcm9zcyA9IFZtLCB0LnN5bWJvbERpYW1vbmQgPSBLbSwgdC5zeW1ib2xEaWFtb25kMiA9IFFtLCB0LnN5bWJvbFBsdXMgPSBKbSwgdC5zeW1ib2xTcXVhcmUgPSB0eCwgdC5zeW1ib2xTcXVhcmUyID0gbngsIHQuc3ltYm9sU3RhciA9IG94LCB0LnN5bWJvbFRyaWFuZ2xlID0gdXgsIHQuc3ltYm9sVHJpYW5nbGUyID0gZngsIHQuc3ltYm9sV3llID0gcHgsIHQuc3ltYm9sWCA9IGd4LCB0LnN5bWJvbHMgPSB5eCwgdC5zeW1ib2xzRmlsbCA9IHl4LCB0LnN5bWJvbHNTdHJva2UgPSB2eCwgdC50ZXh0ID0gZWMsIHQudGhyZXNob2xkRnJlZWRtYW5EaWFjb25pcyA9IGZ1bmN0aW9uICh0LCBuLCBlKSB7IHJldHVybiBNYXRoLmNlaWwoKGUgLSBuKSAvICgyICogKGF0KHQsIC43NSkgLSBhdCh0LCAuMjUpKSAqIE1hdGgucG93KF8odCksIC0xIC8gMykpKSB9LCB0LnRocmVzaG9sZFNjb3R0ID0gZnVuY3Rpb24gKHQsIG4sIGUpIHsgcmV0dXJuIE1hdGguY2VpbCgoZSAtIG4pICogTWF0aC5jYnJ0KF8odCkpIC8gKDMuNDkgKiBNKHQpKSkgfSwgdC50aHJlc2hvbGRTdHVyZ2VzID0gSywgdC50aWNrRm9ybWF0ID0gdGcsIHQudGlja0luY3JlbWVudCA9IFYsIHQudGlja1N0ZXAgPSBXLCB0LnRpY2tzID0gRywgdC50aW1lRGF5ID0gamcsIHQudGltZURheXMgPSAkZywgdC50aW1lRm9ybWF0RGVmYXVsdExvY2FsZSA9IGdfLCB0LnRpbWVGb3JtYXRMb2NhbGUgPSBaeSwgdC50aW1lRnJpZGF5ID0gS2csIHQudGltZUZyaWRheXMgPSBpeSwgdC50aW1lSG91ciA9IEJnLCB0LnRpbWVIb3VycyA9IFlnLCB0LnRpbWVJbnRlcnZhbCA9IHdnLCB0LnRpbWVNaWxsaXNlY29uZCA9IEFnLCB0LnRpbWVNaWxsaXNlY29uZHMgPSBUZywgdC50aW1lTWludXRlID0gSWcsIHQudGltZU1pbnV0ZXMgPSBPZywgdC50aW1lTW9uZGF5ID0gR2csIHQudGltZU1vbmRheXMgPSB0eSwgdC50aW1lTW9udGggPSB1eSwgdC50aW1lTW9udGhzID0gY3ksIHQudGltZVNhdHVyZGF5ID0gUWcsIHQudGltZVNhdHVyZGF5cyA9IG95LCB0LnRpbWVTZWNvbmQgPSBSZywgdC50aW1lU2Vjb25kcyA9IEZnLCB0LnRpbWVTdW5kYXkgPSBYZywgdC50aW1lU3VuZGF5cyA9IEpnLCB0LnRpbWVUaHVyc2RheSA9IFpnLCB0LnRpbWVUaHVyc2RheXMgPSByeSwgdC50aW1lVGlja0ludGVydmFsID0gWHksIHQudGltZVRpY2tzID0gSHksIHQudGltZVR1ZXNkYXkgPSBWZywgdC50aW1lVHVlc2RheXMgPSBueSwgdC50aW1lV2VkbmVzZGF5ID0gV2csIHQudGltZVdlZG5lc2RheXMgPSBleSwgdC50aW1lV2VlayA9IFhnLCB0LnRpbWVXZWVrcyA9IEpnLCB0LnRpbWVZZWFyID0gc3ksIHQudGltZVllYXJzID0gbHksIHQudGltZW91dCA9IENpLCB0LnRpbWVyID0gVGksIHQudGltZXJGbHVzaCA9IFNpLCB0LnRyYW5zaXRpb24gPSBobywgdC50cmFuc3Bvc2UgPSBndCwgdC50cmVlID0gZnVuY3Rpb24gKCkgeyB2YXIgdCA9IGFwLCBuID0gMSwgZSA9IDEsIHIgPSBudWxsOyBmdW5jdGlvbiBpKGkpIHsgdmFyIGMgPSBmdW5jdGlvbiAodCkgeyBmb3IgKHZhciBuLCBlLCByLCBpLCBvLCBhID0gbmV3IGxwKHQsIDApLCB1ID0gW2FdOyBuID0gdS5wb3AoKTspaWYgKHIgPSBuLl8uY2hpbGRyZW4pIGZvciAobi5jaGlsZHJlbiA9IG5ldyBBcnJheShvID0gci5sZW5ndGgpLCBpID0gbyAtIDE7IGkgPj0gMDsgLS1pKXUucHVzaChlID0gbi5jaGlsZHJlbltpXSA9IG5ldyBscChyW2ldLCBpKSksIGUucGFyZW50ID0gbjsgcmV0dXJuIChhLnBhcmVudCA9IG5ldyBscChudWxsLCAwKSkuY2hpbGRyZW4gPSBbYV0sIGEgfShpKTsgaWYgKGMuZWFjaEFmdGVyKG8pLCBjLnBhcmVudC5tID0gLWMueiwgYy5lYWNoQmVmb3JlKGEpLCByKSBpLmVhY2hCZWZvcmUodSk7IGVsc2UgeyB2YXIgZiA9IGksIHMgPSBpLCBsID0gaTsgaS5lYWNoQmVmb3JlKChmdW5jdGlvbiAodCkgeyB0LnggPCBmLnggJiYgKGYgPSB0KSwgdC54ID4gcy54ICYmIChzID0gdCksIHQuZGVwdGggPiBsLmRlcHRoICYmIChsID0gdCkgfSkpOyB2YXIgaCA9IGYgPT09IHMgPyAxIDogdChmLCBzKSAvIDIsIGQgPSBoIC0gZi54LCBwID0gbiAvIChzLnggKyBoICsgZCksIGcgPSBlIC8gKGwuZGVwdGggfHwgMSk7IGkuZWFjaEJlZm9yZSgoZnVuY3Rpb24gKHQpIHsgdC54ID0gKHQueCArIGQpICogcCwgdC55ID0gdC5kZXB0aCAqIGcgfSkpIH0gcmV0dXJuIGkgfSBmdW5jdGlvbiBvKG4pIHsgdmFyIGUgPSBuLmNoaWxkcmVuLCByID0gbi5wYXJlbnQuY2hpbGRyZW4sIGkgPSBuLmkgPyByW24uaSAtIDFdIDogbnVsbDsgaWYgKGUpIHsgIWZ1bmN0aW9uICh0KSB7IGZvciAodmFyIG4sIGUgPSAwLCByID0gMCwgaSA9IHQuY2hpbGRyZW4sIG8gPSBpLmxlbmd0aDsgLS1vID49IDA7KShuID0gaVtvXSkueiArPSBlLCBuLm0gKz0gZSwgZSArPSBuLnMgKyAociArPSBuLmMpIH0obik7IHZhciBvID0gKGVbMF0ueiArIGVbZS5sZW5ndGggLSAxXS56KSAvIDI7IGkgPyAobi56ID0gaS56ICsgdChuLl8sIGkuXyksIG4ubSA9IG4ueiAtIG8pIDogbi56ID0gbyB9IGVsc2UgaSAmJiAobi56ID0gaS56ICsgdChuLl8sIGkuXykpOyBuLnBhcmVudC5BID0gZnVuY3Rpb24gKG4sIGUsIHIpIHsgaWYgKGUpIHsgZm9yICh2YXIgaSwgbyA9IG4sIGEgPSBuLCB1ID0gZSwgYyA9IG8ucGFyZW50LmNoaWxkcmVuWzBdLCBmID0gby5tLCBzID0gYS5tLCBsID0gdS5tLCBoID0gYy5tOyB1ID0gY3AodSksIG8gPSB1cChvKSwgdSAmJiBvOyljID0gdXAoYyksIChhID0gY3AoYSkpLmEgPSBuLCAoaSA9IHUueiArIGwgLSBvLnogLSBmICsgdCh1Ll8sIG8uXykpID4gMCAmJiAoZnAoc3AodSwgbiwgciksIG4sIGkpLCBmICs9IGksIHMgKz0gaSksIGwgKz0gdS5tLCBmICs9IG8ubSwgaCArPSBjLm0sIHMgKz0gYS5tOyB1ICYmICFjcChhKSAmJiAoYS50ID0gdSwgYS5tICs9IGwgLSBzKSwgbyAmJiAhdXAoYykgJiYgKGMudCA9IG8sIGMubSArPSBmIC0gaCwgciA9IG4pIH0gcmV0dXJuIHIgfShuLCBpLCBuLnBhcmVudC5BIHx8IHJbMF0pIH0gZnVuY3Rpb24gYSh0KSB7IHQuXy54ID0gdC56ICsgdC5wYXJlbnQubSwgdC5tICs9IHQucGFyZW50Lm0gfSBmdW5jdGlvbiB1KHQpIHsgdC54ICo9IG4sIHQueSA9IHQuZGVwdGggKiBlIH0gcmV0dXJuIGkuc2VwYXJhdGlvbiA9IGZ1bmN0aW9uIChuKSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHQgPSBuLCBpKSA6IHQgfSwgaS5zaXplID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAociA9ICExLCBuID0gK3RbMF0sIGUgPSArdFsxXSwgaSkgOiByID8gbnVsbCA6IFtuLCBlXSB9LCBpLm5vZGVTaXplID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAociA9ICEwLCBuID0gK3RbMF0sIGUgPSArdFsxXSwgaSkgOiByID8gW24sIGVdIDogbnVsbCB9LCBpIH0sIHQudHJlZW1hcCA9IGZ1bmN0aW9uICgpIHsgdmFyIHQgPSBncCwgbiA9ICExLCBlID0gMSwgciA9IDEsIGkgPSBbMF0sIG8gPSBDZCwgYSA9IENkLCB1ID0gQ2QsIGMgPSBDZCwgZiA9IENkOyBmdW5jdGlvbiBzKHQpIHsgcmV0dXJuIHQueDAgPSB0LnkwID0gMCwgdC54MSA9IGUsIHQueTEgPSByLCB0LmVhY2hCZWZvcmUobCksIGkgPSBbMF0sIG4gJiYgdC5lYWNoQmVmb3JlKEtkKSwgdCB9IGZ1bmN0aW9uIGwobikgeyB2YXIgZSA9IGlbbi5kZXB0aF0sIHIgPSBuLngwICsgZSwgcyA9IG4ueTAgKyBlLCBsID0gbi54MSAtIGUsIGggPSBuLnkxIC0gZTsgbCA8IHIgJiYgKHIgPSBsID0gKHIgKyBsKSAvIDIpLCBoIDwgcyAmJiAocyA9IGggPSAocyArIGgpIC8gMiksIG4ueDAgPSByLCBuLnkwID0gcywgbi54MSA9IGwsIG4ueTEgPSBoLCBuLmNoaWxkcmVuICYmIChlID0gaVtuLmRlcHRoICsgMV0gPSBvKG4pIC8gMiwgciArPSBmKG4pIC0gZSwgcyArPSBhKG4pIC0gZSwgKGwgLT0gdShuKSAtIGUpIDwgciAmJiAociA9IGwgPSAociArIGwpIC8gMiksIChoIC09IGMobikgLSBlKSA8IHMgJiYgKHMgPSBoID0gKHMgKyBoKSAvIDIpLCB0KG4sIHIsIHMsIGwsIGgpKSB9IHJldHVybiBzLnJvdW5kID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobiA9ICEhdCwgcykgOiBuIH0sIHMuc2l6ZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGUgPSArdFswXSwgciA9ICt0WzFdLCBzKSA6IFtlLCByXSB9LCBzLnRpbGUgPSBmdW5jdGlvbiAobikgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0ID0gTmQobiksIHMpIDogdCB9LCBzLnBhZGRpbmcgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IHMucGFkZGluZ0lubmVyKHQpLnBhZGRpbmdPdXRlcih0KSA6IHMucGFkZGluZ0lubmVyKCkgfSwgcy5wYWRkaW5nSW5uZXIgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChvID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBQZCgrdCksIHMpIDogbyB9LCBzLnBhZGRpbmdPdXRlciA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gcy5wYWRkaW5nVG9wKHQpLnBhZGRpbmdSaWdodCh0KS5wYWRkaW5nQm90dG9tKHQpLnBhZGRpbmdMZWZ0KHQpIDogcy5wYWRkaW5nVG9wKCkgfSwgcy5wYWRkaW5nVG9wID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYSA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogUGQoK3QpLCBzKSA6IGEgfSwgcy5wYWRkaW5nUmlnaHQgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh1ID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBQZCgrdCksIHMpIDogdSB9LCBzLnBhZGRpbmdCb3R0b20gPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChjID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBQZCgrdCksIHMpIDogYyB9LCBzLnBhZGRpbmdMZWZ0ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZiA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogUGQoK3QpLCBzKSA6IGYgfSwgcyB9LCB0LnRyZWVtYXBCaW5hcnkgPSBmdW5jdGlvbiAodCwgbiwgZSwgciwgaSkgeyB2YXIgbywgYSwgdSA9IHQuY2hpbGRyZW4sIGMgPSB1Lmxlbmd0aCwgZiA9IG5ldyBBcnJheShjICsgMSk7IGZvciAoZlswXSA9IGEgPSBvID0gMDsgbyA8IGM7ICsrbylmW28gKyAxXSA9IGEgKz0gdVtvXS52YWx1ZTsgIWZ1bmN0aW9uIHQobiwgZSwgciwgaSwgbywgYSwgYykgeyBpZiAobiA+PSBlIC0gMSkgeyB2YXIgcyA9IHVbbl07IHJldHVybiBzLngwID0gaSwgcy55MCA9IG8sIHMueDEgPSBhLCB2b2lkIChzLnkxID0gYykgfSB2YXIgbCA9IGZbbl0sIGggPSByIC8gMiArIGwsIGQgPSBuICsgMSwgcCA9IGUgLSAxOyBmb3IgKDsgZCA8IHA7KSB7IHZhciBnID0gZCArIHAgPj4+IDE7IGZbZ10gPCBoID8gZCA9IGcgKyAxIDogcCA9IGcgfSBoIC0gZltkIC0gMV0gPCBmW2RdIC0gaCAmJiBuICsgMSA8IGQgJiYgLS1kOyB2YXIgeSA9IGZbZF0gLSBsLCB2ID0gciAtIHk7IGlmIChhIC0gaSA+IGMgLSBvKSB7IHZhciBfID0gciA/IChpICogdiArIGEgKiB5KSAvIHIgOiBhOyB0KG4sIGQsIHksIGksIG8sIF8sIGMpLCB0KGQsIGUsIHYsIF8sIG8sIGEsIGMpIH0gZWxzZSB7IHZhciBiID0gciA/IChvICogdiArIGMgKiB5KSAvIHIgOiBjOyB0KG4sIGQsIHksIGksIG8sIGEsIGIpLCB0KGQsIGUsIHYsIGksIGIsIGEsIGMpIH0gfSgwLCBjLCB0LnZhbHVlLCBuLCBlLCByLCBpKSB9LCB0LnRyZWVtYXBEaWNlID0gUWQsIHQudHJlZW1hcFJlc3F1YXJpZnkgPSB5cCwgdC50cmVlbWFwU2xpY2UgPSBocCwgdC50cmVlbWFwU2xpY2VEaWNlID0gZnVuY3Rpb24gKHQsIG4sIGUsIHIsIGkpIHsgKDEgJiB0LmRlcHRoID8gaHAgOiBRZCkodCwgbiwgZSwgciwgaSkgfSwgdC50cmVlbWFwU3F1YXJpZnkgPSBncCwgdC50c3YgPSBvYywgdC50c3ZGb3JtYXQgPSBHdSwgdC50c3ZGb3JtYXRCb2R5ID0gVnUsIHQudHN2Rm9ybWF0Um93ID0gWnUsIHQudHN2Rm9ybWF0Um93cyA9IFd1LCB0LnRzdkZvcm1hdFZhbHVlID0gS3UsIHQudHN2UGFyc2UgPSBIdSwgdC50c3ZQYXJzZVJvd3MgPSBYdSwgdC51bmlvbiA9IGZ1bmN0aW9uICguLi50KSB7IGNvbnN0IG4gPSBuZXcgSW50ZXJuU2V0OyBmb3IgKGNvbnN0IGUgb2YgdCkgZm9yIChjb25zdCB0IG9mIGUpIG4uYWRkKHQpOyByZXR1cm4gbiB9LCB0LnV0Y0RheSA9IGJ5LCB0LnV0Y0RheXMgPSBteSwgdC51dGNGcmlkYXkgPSBFeSwgdC51dGNGcmlkYXlzID0gUnksIHQudXRjSG91ciA9IHl5LCB0LnV0Y0hvdXJzID0gdnksIHQudXRjTWlsbGlzZWNvbmQgPSBBZywgdC51dGNNaWxsaXNlY29uZHMgPSBUZywgdC51dGNNaW51dGUgPSBkeSwgdC51dGNNaW51dGVzID0gcHksIHQudXRjTW9uZGF5ID0gTXksIHQudXRjTW9uZGF5cyA9IEN5LCB0LnV0Y01vbnRoID0gSXksIHQudXRjTW9udGhzID0gT3ksIHQudXRjU2F0dXJkYXkgPSBreSwgdC51dGNTYXR1cmRheXMgPSBGeSwgdC51dGNTZWNvbmQgPSBSZywgdC51dGNTZWNvbmRzID0gRmcsIHQudXRjU3VuZGF5ID0gd3ksIHQudXRjU3VuZGF5cyA9IE55LCB0LnV0Y1RodXJzZGF5ID0gU3ksIHQudXRjVGh1cnNkYXlzID0gRHksIHQudXRjVGlja0ludGVydmFsID0gJHksIHQudXRjVGlja3MgPSBqeSwgdC51dGNUdWVzZGF5ID0gQXksIHQudXRjVHVlc2RheXMgPSBQeSwgdC51dGNXZWRuZXNkYXkgPSBUeSwgdC51dGNXZWRuZXNkYXlzID0genksIHQudXRjV2VlayA9IHd5LCB0LnV0Y1dlZWtzID0gTnksIHQudXRjWWVhciA9IEJ5LCB0LnV0Y1llYXJzID0gWXksIHQudmFyaWFuY2UgPSB3LCB0LnZlcnNpb24gPSAiNy42LjEiLCB0LndpbmRvdyA9IGhuLCB0LnhtbCA9IGNjLCB0LnppcCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGd0KGFyZ3VtZW50cykgfSwgdC56b29tID0gZnVuY3Rpb24gKCkgeyB2YXIgdCwgbiwgZSwgciA9IGx3LCBpID0gaHcsIG8gPSB5dywgYSA9IHB3LCB1ID0gZ3csIGMgPSBbMCwgMSAvIDBdLCBmID0gW1stMSAvIDAsIC0xIC8gMF0sIFsxIC8gMCwgMSAvIDBdXSwgcyA9IDI1MCwgbCA9IG5pLCBoID0gTnQoInN0YXJ0IiwgInpvb20iLCAiZW5kIiksIGQgPSA1MDAsIHAgPSAwLCBnID0gMTA7IGZ1bmN0aW9uIHkodCkgeyB0LnByb3BlcnR5KCJfX3pvb20iLCBkdykub24oIndoZWVsLnpvb20iLCBNLCB7IHBhc3NpdmU6ICExIH0pLm9uKCJtb3VzZWRvd24uem9vbSIsIEEpLm9uKCJkYmxjbGljay56b29tIiwgVCkuZmlsdGVyKHUpLm9uKCJ0b3VjaHN0YXJ0Lnpvb20iLCBTKS5vbigidG91Y2htb3ZlLnpvb20iLCBFKS5vbigidG91Y2hlbmQuem9vbSB0b3VjaGNhbmNlbC56b29tIiwgaykuc3R5bGUoIi13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvciIsICJyZ2JhKDAsMCwwLDApIikgfSBmdW5jdGlvbiB2KHQsIG4pIHsgcmV0dXJuIChuID0gTWF0aC5tYXgoY1swXSwgTWF0aC5taW4oY1sxXSwgbikpKSA9PT0gdC5rID8gdCA6IG5ldyBhdyhuLCB0LngsIHQueSkgfSBmdW5jdGlvbiBfKHQsIG4sIGUpIHsgdmFyIHIgPSBuWzBdIC0gZVswXSAqIHQuaywgaSA9IG5bMV0gLSBlWzFdICogdC5rOyByZXR1cm4gciA9PT0gdC54ICYmIGkgPT09IHQueSA/IHQgOiBuZXcgYXcodC5rLCByLCBpKSB9IGZ1bmN0aW9uIGIodCkgeyByZXR1cm4gWygrdFswXVswXSArICt0WzFdWzBdKSAvIDIsICgrdFswXVsxXSArICt0WzFdWzFdKSAvIDJdIH0gZnVuY3Rpb24gbSh0LCBuLCBlLCByKSB7IHQub24oInN0YXJ0Lnpvb20iLCAoZnVuY3Rpb24gKCkgeyB4KHRoaXMsIGFyZ3VtZW50cykuZXZlbnQocikuc3RhcnQoKSB9KSkub24oImludGVycnVwdC56b29tIGVuZC56b29tIiwgKGZ1bmN0aW9uICgpIHsgeCh0aGlzLCBhcmd1bWVudHMpLmV2ZW50KHIpLmVuZCgpIH0pKS50d2Vlbigiem9vbSIsIChmdW5jdGlvbiAoKSB7IHZhciB0ID0gdGhpcywgbyA9IGFyZ3VtZW50cywgYSA9IHgodCwgbykuZXZlbnQociksIHUgPSBpLmFwcGx5KHQsIG8pLCBjID0gbnVsbCA9PSBlID8gYih1KSA6ICJmdW5jdGlvbiIgPT0gdHlwZW9mIGUgPyBlLmFwcGx5KHQsIG8pIDogZSwgZiA9IE1hdGgubWF4KHVbMV1bMF0gLSB1WzBdWzBdLCB1WzFdWzFdIC0gdVswXVsxXSksIHMgPSB0Ll9fem9vbSwgaCA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIG4gPyBuLmFwcGx5KHQsIG8pIDogbiwgZCA9IGwocy5pbnZlcnQoYykuY29uY2F0KGYgLyBzLmspLCBoLmludmVydChjKS5jb25jYXQoZiAvIGguaykpOyByZXR1cm4gZnVuY3Rpb24gKHQpIHsgaWYgKDEgPT09IHQpIHQgPSBoOyBlbHNlIHsgdmFyIG4gPSBkKHQpLCBlID0gZiAvIG5bMl07IHQgPSBuZXcgYXcoZSwgY1swXSAtIG5bMF0gKiBlLCBjWzFdIC0gblsxXSAqIGUpIH0gYS56b29tKG51bGwsIHQpIH0gfSkpIH0gZnVuY3Rpb24geCh0LCBuLCBlKSB7IHJldHVybiAhZSAmJiB0Ll9fem9vbWluZyB8fCBuZXcgdyh0LCBuKSB9IGZ1bmN0aW9uIHcodCwgbikgeyB0aGlzLnRoYXQgPSB0LCB0aGlzLmFyZ3MgPSBuLCB0aGlzLmFjdGl2ZSA9IDAsIHRoaXMuc291cmNlRXZlbnQgPSBudWxsLCB0aGlzLmV4dGVudCA9IGkuYXBwbHkodCwgbiksIHRoaXMudGFwcyA9IDAgfSBmdW5jdGlvbiBNKHQsIC4uLm4pIHsgaWYgKHIuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgeyB2YXIgZSA9IHgodGhpcywgbikuZXZlbnQodCksIGkgPSB0aGlzLl9fem9vbSwgdSA9IE1hdGgubWF4KGNbMF0sIE1hdGgubWluKGNbMV0sIGkuayAqIE1hdGgucG93KDIsIGEuYXBwbHkodGhpcywgYXJndW1lbnRzKSkpKSwgcyA9IHRlKHQpOyBpZiAoZS53aGVlbCkgZS5tb3VzZVswXVswXSA9PT0gc1swXSAmJiBlLm1vdXNlWzBdWzFdID09PSBzWzFdIHx8IChlLm1vdXNlWzFdID0gaS5pbnZlcnQoZS5tb3VzZVswXSA9IHMpKSwgY2xlYXJUaW1lb3V0KGUud2hlZWwpOyBlbHNlIHsgaWYgKGkuayA9PT0gdSkgcmV0dXJuOyBlLm1vdXNlID0gW3MsIGkuaW52ZXJ0KHMpXSwgSWkodGhpcyksIGUuc3RhcnQoKSB9IHN3KHQpLCBlLndoZWVsID0gc2V0VGltZW91dChsLCAxNTApLCBlLnpvb20oIm1vdXNlIiwgbyhfKHYoaSwgdSksIGUubW91c2VbMF0sIGUubW91c2VbMV0pLCBlLmV4dGVudCwgZikpIH0gZnVuY3Rpb24gbCgpIHsgZS53aGVlbCA9IG51bGwsIGUuZW5kKCkgfSB9IGZ1bmN0aW9uIEEodCwgLi4ubikgeyBpZiAoIWUgJiYgci5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSB7IHZhciBpID0gdC5jdXJyZW50VGFyZ2V0LCBhID0geCh0aGlzLCBuLCAhMCkuZXZlbnQodCksIHUgPSBXbih0LnZpZXcpLm9uKCJtb3VzZW1vdmUuem9vbSIsIGgsICEwKS5vbigibW91c2V1cC56b29tIiwgZCwgITApLCBjID0gdGUodCwgaSksIHMgPSB0LmNsaWVudFgsIGwgPSB0LmNsaWVudFk7IG9lKHQudmlldyksIGZ3KHQpLCBhLm1vdXNlID0gW2MsIHRoaXMuX196b29tLmludmVydChjKV0sIElpKHRoaXMpLCBhLnN0YXJ0KCkgfSBmdW5jdGlvbiBoKHQpIHsgaWYgKHN3KHQpLCAhYS5tb3ZlZCkgeyB2YXIgbiA9IHQuY2xpZW50WCAtIHMsIGUgPSB0LmNsaWVudFkgLSBsOyBhLm1vdmVkID0gbiAqIG4gKyBlICogZSA+IHAgfSBhLmV2ZW50KHQpLnpvb20oIm1vdXNlIiwgbyhfKGEudGhhdC5fX3pvb20sIGEubW91c2VbMF0gPSB0ZSh0LCBpKSwgYS5tb3VzZVsxXSksIGEuZXh0ZW50LCBmKSkgfSBmdW5jdGlvbiBkKHQpIHsgdS5vbigibW91c2Vtb3ZlLnpvb20gbW91c2V1cC56b29tIiwgbnVsbCksIGFlKHQudmlldywgYS5tb3ZlZCksIHN3KHQpLCBhLmV2ZW50KHQpLmVuZCgpIH0gfSBmdW5jdGlvbiBUKHQsIC4uLm4pIHsgaWYgKHIuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgeyB2YXIgZSA9IHRoaXMuX196b29tLCBhID0gdGUodC5jaGFuZ2VkVG91Y2hlcyA/IHQuY2hhbmdlZFRvdWNoZXNbMF0gOiB0LCB0aGlzKSwgdSA9IGUuaW52ZXJ0KGEpLCBjID0gZS5rICogKHQuc2hpZnRLZXkgPyAuNSA6IDIpLCBsID0gbyhfKHYoZSwgYyksIGEsIHUpLCBpLmFwcGx5KHRoaXMsIG4pLCBmKTsgc3codCksIHMgPiAwID8gV24odGhpcykudHJhbnNpdGlvbigpLmR1cmF0aW9uKHMpLmNhbGwobSwgbCwgYSwgdCkgOiBXbih0aGlzKS5jYWxsKHkudHJhbnNmb3JtLCBsLCBhLCB0KSB9IH0gZnVuY3Rpb24gUyhlLCAuLi5pKSB7IGlmIChyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIHsgdmFyIG8sIGEsIHUsIGMsIGYgPSBlLnRvdWNoZXMsIHMgPSBmLmxlbmd0aCwgbCA9IHgodGhpcywgaSwgZS5jaGFuZ2VkVG91Y2hlcy5sZW5ndGggPT09IHMpLmV2ZW50KGUpOyBmb3IgKGZ3KGUpLCBhID0gMDsgYSA8IHM7ICsrYSljID0gW2MgPSB0ZSh1ID0gZlthXSwgdGhpcyksIHRoaXMuX196b29tLmludmVydChjKSwgdS5pZGVudGlmaWVyXSwgbC50b3VjaDAgPyBsLnRvdWNoMSB8fCBsLnRvdWNoMFsyXSA9PT0gY1syXSB8fCAobC50b3VjaDEgPSBjLCBsLnRhcHMgPSAwKSA6IChsLnRvdWNoMCA9IGMsIG8gPSAhMCwgbC50YXBzID0gMSArICEhdCk7IHQgJiYgKHQgPSBjbGVhclRpbWVvdXQodCkpLCBvICYmIChsLnRhcHMgPCAyICYmIChuID0gY1swXSwgdCA9IHNldFRpbWVvdXQoKGZ1bmN0aW9uICgpIHsgdCA9IG51bGwgfSksIGQpKSwgSWkodGhpcyksIGwuc3RhcnQoKSkgfSB9IGZ1bmN0aW9uIEUodCwgLi4ubikgeyBpZiAodGhpcy5fX3pvb21pbmcpIHsgdmFyIGUsIHIsIGksIGEsIHUgPSB4KHRoaXMsIG4pLmV2ZW50KHQpLCBjID0gdC5jaGFuZ2VkVG91Y2hlcywgcyA9IGMubGVuZ3RoOyBmb3IgKHN3KHQpLCBlID0gMDsgZSA8IHM7ICsrZSlpID0gdGUociA9IGNbZV0sIHRoaXMpLCB1LnRvdWNoMCAmJiB1LnRvdWNoMFsyXSA9PT0gci5pZGVudGlmaWVyID8gdS50b3VjaDBbMF0gPSBpIDogdS50b3VjaDEgJiYgdS50b3VjaDFbMl0gPT09IHIuaWRlbnRpZmllciAmJiAodS50b3VjaDFbMF0gPSBpKTsgaWYgKHIgPSB1LnRoYXQuX196b29tLCB1LnRvdWNoMSkgeyB2YXIgbCA9IHUudG91Y2gwWzBdLCBoID0gdS50b3VjaDBbMV0sIGQgPSB1LnRvdWNoMVswXSwgcCA9IHUudG91Y2gxWzFdLCBnID0gKGcgPSBkWzBdIC0gbFswXSkgKiBnICsgKGcgPSBkWzFdIC0gbFsxXSkgKiBnLCB5ID0gKHkgPSBwWzBdIC0gaFswXSkgKiB5ICsgKHkgPSBwWzFdIC0gaFsxXSkgKiB5OyByID0gdihyLCBNYXRoLnNxcnQoZyAvIHkpKSwgaSA9IFsobFswXSArIGRbMF0pIC8gMiwgKGxbMV0gKyBkWzFdKSAvIDJdLCBhID0gWyhoWzBdICsgcFswXSkgLyAyLCAoaFsxXSArIHBbMV0pIC8gMl0gfSBlbHNlIHsgaWYgKCF1LnRvdWNoMCkgcmV0dXJuOyBpID0gdS50b3VjaDBbMF0sIGEgPSB1LnRvdWNoMFsxXSB9IHUuem9vbSgidG91Y2giLCBvKF8ociwgaSwgYSksIHUuZXh0ZW50LCBmKSkgfSB9IGZ1bmN0aW9uIGsodCwgLi4ucikgeyBpZiAodGhpcy5fX3pvb21pbmcpIHsgdmFyIGksIG8sIGEgPSB4KHRoaXMsIHIpLmV2ZW50KHQpLCB1ID0gdC5jaGFuZ2VkVG91Y2hlcywgYyA9IHUubGVuZ3RoOyBmb3IgKGZ3KHQpLCBlICYmIGNsZWFyVGltZW91dChlKSwgZSA9IHNldFRpbWVvdXQoKGZ1bmN0aW9uICgpIHsgZSA9IG51bGwgfSksIGQpLCBpID0gMDsgaSA8IGM7ICsraSlvID0gdVtpXSwgYS50b3VjaDAgJiYgYS50b3VjaDBbMl0gPT09IG8uaWRlbnRpZmllciA/IGRlbGV0ZSBhLnRvdWNoMCA6IGEudG91Y2gxICYmIGEudG91Y2gxWzJdID09PSBvLmlkZW50aWZpZXIgJiYgZGVsZXRlIGEudG91Y2gxOyBpZiAoYS50b3VjaDEgJiYgIWEudG91Y2gwICYmIChhLnRvdWNoMCA9IGEudG91Y2gxLCBkZWxldGUgYS50b3VjaDEpLCBhLnRvdWNoMCkgYS50b3VjaDBbMV0gPSB0aGlzLl9fem9vbS5pbnZlcnQoYS50b3VjaDBbMF0pOyBlbHNlIGlmIChhLmVuZCgpLCAyID09PSBhLnRhcHMgJiYgKG8gPSB0ZShvLCB0aGlzKSwgTWF0aC5oeXBvdChuWzBdIC0gb1swXSwgblsxXSAtIG9bMV0pIDwgZykpIHsgdmFyIGYgPSBXbih0aGlzKS5vbigiZGJsY2xpY2suem9vbSIpOyBmICYmIGYuYXBwbHkodGhpcywgYXJndW1lbnRzKSB9IH0gfSByZXR1cm4geS50cmFuc2Zvcm0gPSBmdW5jdGlvbiAodCwgbiwgZSwgcikgeyB2YXIgaSA9IHQuc2VsZWN0aW9uID8gdC5zZWxlY3Rpb24oKSA6IHQ7IGkucHJvcGVydHkoIl9fem9vbSIsIGR3KSwgdCAhPT0gaSA/IG0odCwgbiwgZSwgcikgOiBpLmludGVycnVwdCgpLmVhY2goKGZ1bmN0aW9uICgpIHsgeCh0aGlzLCBhcmd1bWVudHMpLmV2ZW50KHIpLnN0YXJ0KCkuem9vbShudWxsLCAiZnVuY3Rpb24iID09IHR5cGVvZiBuID8gbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpIDogbikuZW5kKCkgfSkpIH0sIHkuc2NhbGVCeSA9IGZ1bmN0aW9uICh0LCBuLCBlLCByKSB7IHkuc2NhbGVUbyh0LCAoZnVuY3Rpb24gKCkgeyB2YXIgdCA9IHRoaXMuX196b29tLmssIGUgPSAiZnVuY3Rpb24iID09IHR5cGVvZiBuID8gbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpIDogbjsgcmV0dXJuIHQgKiBlIH0pLCBlLCByKSB9LCB5LnNjYWxlVG8gPSBmdW5jdGlvbiAodCwgbiwgZSwgcikgeyB5LnRyYW5zZm9ybSh0LCAoZnVuY3Rpb24gKCkgeyB2YXIgdCA9IGkuYXBwbHkodGhpcywgYXJndW1lbnRzKSwgciA9IHRoaXMuX196b29tLCBhID0gbnVsbCA9PSBlID8gYih0KSA6ICJmdW5jdGlvbiIgPT0gdHlwZW9mIGUgPyBlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgOiBlLCB1ID0gci5pbnZlcnQoYSksIGMgPSAiZnVuY3Rpb24iID09IHR5cGVvZiBuID8gbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpIDogbjsgcmV0dXJuIG8oXyh2KHIsIGMpLCBhLCB1KSwgdCwgZikgfSksIGUsIHIpIH0sIHkudHJhbnNsYXRlQnkgPSBmdW5jdGlvbiAodCwgbiwgZSwgcikgeyB5LnRyYW5zZm9ybSh0LCAoZnVuY3Rpb24gKCkgeyByZXR1cm4gbyh0aGlzLl9fem9vbS50cmFuc2xhdGUoImZ1bmN0aW9uIiA9PSB0eXBlb2YgbiA/IG4uYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IG4sICJmdW5jdGlvbiIgPT0gdHlwZW9mIGUgPyBlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgOiBlKSwgaS5hcHBseSh0aGlzLCBhcmd1bWVudHMpLCBmKSB9KSwgbnVsbCwgcikgfSwgeS50cmFuc2xhdGVUbyA9IGZ1bmN0aW9uICh0LCBuLCBlLCByLCBhKSB7IHkudHJhbnNmb3JtKHQsIChmdW5jdGlvbiAoKSB7IHZhciB0ID0gaS5hcHBseSh0aGlzLCBhcmd1bWVudHMpLCBhID0gdGhpcy5fX3pvb20sIHUgPSBudWxsID09IHIgPyBiKHQpIDogImZ1bmN0aW9uIiA9PSB0eXBlb2YgciA/IHIuYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IHI7IHJldHVybiBvKHV3LnRyYW5zbGF0ZSh1WzBdLCB1WzFdKS5zY2FsZShhLmspLnRyYW5zbGF0ZSgiZnVuY3Rpb24iID09IHR5cGVvZiBuID8gLW4uYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IC1uLCAiZnVuY3Rpb24iID09IHR5cGVvZiBlID8gLWUuYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IC1lKSwgdCwgZikgfSksIHIsIGEpIH0sIHcucHJvdG90eXBlID0geyBldmVudDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQgJiYgKHRoaXMuc291cmNlRXZlbnQgPSB0KSwgdGhpcyB9LCBzdGFydDogZnVuY3Rpb24gKCkgeyByZXR1cm4gMSA9PSArK3RoaXMuYWN0aXZlICYmICh0aGlzLnRoYXQuX196b29taW5nID0gdGhpcywgdGhpcy5lbWl0KCJzdGFydCIpKSwgdGhpcyB9LCB6b29tOiBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gdGhpcy5tb3VzZSAmJiAibW91c2UiICE9PSB0ICYmICh0aGlzLm1vdXNlWzFdID0gbi5pbnZlcnQodGhpcy5tb3VzZVswXSkpLCB0aGlzLnRvdWNoMCAmJiAidG91Y2giICE9PSB0ICYmICh0aGlzLnRvdWNoMFsxXSA9IG4uaW52ZXJ0KHRoaXMudG91Y2gwWzBdKSksIHRoaXMudG91Y2gxICYmICJ0b3VjaCIgIT09IHQgJiYgKHRoaXMudG91Y2gxWzFdID0gbi5pbnZlcnQodGhpcy50b3VjaDFbMF0pKSwgdGhpcy50aGF0Ll9fem9vbSA9IG4sIHRoaXMuZW1pdCgiem9vbSIpLCB0aGlzIH0sIGVuZDogZnVuY3Rpb24gKCkgeyByZXR1cm4gMCA9PSAtLXRoaXMuYWN0aXZlICYmIChkZWxldGUgdGhpcy50aGF0Ll9fem9vbWluZywgdGhpcy5lbWl0KCJlbmQiKSksIHRoaXMgfSwgZW1pdDogZnVuY3Rpb24gKHQpIHsgdmFyIG4gPSBXbih0aGlzLnRoYXQpLmRhdHVtKCk7IGguY2FsbCh0LCB0aGlzLnRoYXQsIG5ldyBvdyh0LCB7IHNvdXJjZUV2ZW50OiB0aGlzLnNvdXJjZUV2ZW50LCB0YXJnZXQ6IHksIHR5cGU6IHQsIHRyYW5zZm9ybTogdGhpcy50aGF0Ll9fem9vbSwgZGlzcGF0Y2g6IGggfSksIG4pIH0gfSwgeS53aGVlbERlbHRhID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYSA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogaXcoK3QpLCB5KSA6IGEgfSwgeS5maWx0ZXIgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBpdyghIXQpLCB5KSA6IHIgfSwgeS50b3VjaGFibGUgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh1ID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBpdyghIXQpLCB5KSA6IHUgfSwgeS5leHRlbnQgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChpID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBpdyhbWyt0WzBdWzBdLCArdFswXVsxXV0sIFsrdFsxXVswXSwgK3RbMV1bMV1dXSksIHkpIDogaSB9LCB5LnNjYWxlRXh0ZW50ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoY1swXSA9ICt0WzBdLCBjWzFdID0gK3RbMV0sIHkpIDogW2NbMF0sIGNbMV1dIH0sIHkudHJhbnNsYXRlRXh0ZW50ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZlswXVswXSA9ICt0WzBdWzBdLCBmWzFdWzBdID0gK3RbMV1bMF0sIGZbMF1bMV0gPSArdFswXVsxXSwgZlsxXVsxXSA9ICt0WzFdWzFdLCB5KSA6IFtbZlswXVswXSwgZlswXVsxXV0sIFtmWzFdWzBdLCBmWzFdWzFdXV0gfSwgeS5jb25zdHJhaW4gPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChvID0gdCwgeSkgOiBvIH0sIHkuZHVyYXRpb24gPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzID0gK3QsIHkpIDogcyB9LCB5LmludGVycG9sYXRlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobCA9IHQsIHkpIDogbCB9LCB5Lm9uID0gZnVuY3Rpb24gKCkgeyB2YXIgdCA9IGgub24uYXBwbHkoaCwgYXJndW1lbnRzKTsgcmV0dXJuIHQgPT09IGggPyB5IDogdCB9LCB5LmNsaWNrRGlzdGFuY2UgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwID0gKHQgPSArdCkgKiB0LCB5KSA6IE1hdGguc3FydChwKSB9LCB5LnRhcERpc3RhbmNlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZyA9ICt0LCB5KSA6IGcgfSwgeSB9LCB0Lnpvb21JZGVudGl0eSA9IHV3LCB0Lnpvb21UcmFuc2Zvcm0gPSBjdywgT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsICJfX2VzTW9kdWxlIiwgeyB2YWx1ZTogITAgfSkgfSkpOw==","assets/d3-filetree.js":"data:application/javascript;base64,ZnVuY3Rpb24gRmlsZVRyZWUoZGF0YSkgewogIGxldCBtYXJnaW4gPSB7IHRvcDogMTAsIHJpZ2h0OiAyMCwgYm90dG9tOiAzMCwgbGVmdDogMjAgfSwKICAgIHdpZHRoID0gOTYwLAogICAgaGVpZ2h0ID0gMTAwMCwKICAgIGJhckhlaWdodCA9IDIwOwoKICBsZXQgaSA9IDAsCiAgICBkdXJhdGlvbiA9IDUwMCwKICAgIHJvb3Q7CgogIGxldCBub2RlRW50ZXJUcmFuc2l0aW9uID0gZDMudHJhbnNpdGlvbigpCiAgICAuZHVyYXRpb24oNzUwKQogICAgLmVhc2UoZDMuZWFzZUxpbmVhcik7CgoKCgogIC8vIGxldCBzdmcgPSBkMy5zZWxlY3QoIi5zdGFydCIpLmFwcGVuZCgic3ZnIikKICBsZXQgc3ZnID0gZDMuY3JlYXRlKCJzdmciKQogICAgLmF0dHIoIndpZHRoIiwgd2lkdGgpIC8vICsgbWFyZ2luLmxlZnQgKyBtYXJnaW4ucmlnaHQpCiAgICAuYXR0cigiaGVpZ2h0IiwgaGVpZ2h0KQogICAgLmFwcGVuZCgiZyIpCiAgICAuYXR0cigidHJhbnNmb3JtIiwgInRyYW5zbGF0ZSgiICsgbWFyZ2luLmxlZnQgKyAiLCIgKyBtYXJnaW4udG9wICsgIikiKTsKCgogIHJvb3QgPSBkMy5oaWVyYXJjaHkoZGF0YSk7CiAgcm9vdC54MCA9IDA7CiAgcm9vdC55MCA9IDA7CiAgdXBkYXRlKHJvb3QpOwoKCgogIGZ1bmN0aW9uIHVwZGF0ZShzb3VyY2UpIHsKCiAgICAvLyBDb21wdXRlIHRoZSBmbGF0dGVuZWQgbm9kZSBsaXN0LgogICAgdmFyIG5vZGVzID0gcm9vdC5kZXNjZW5kYW50cygpOwoKICAgIHZhciBoZWlnaHQgPSBNYXRoLm1heCg1MDAsIG5vZGVzLmxlbmd0aCAqIGJhckhlaWdodCArIG1hcmdpbi50b3AgKyBtYXJnaW4uYm90dG9tKTsKCiAgICBzdmcudHJhbnNpdGlvbigpCiAgICAgIC5hdHRyKCJoZWlnaHQiLCBoZWlnaHQpOwoKICAgIHZhciBpbmRleCA9IC0xOwogICAgcm9vdC5lYWNoQmVmb3JlKChuKSA9PiB7CiAgICAgIG4ueCA9ICsraW5kZXggKiBiYXJIZWlnaHQ7CiAgICAgIG4ueSA9IG4uZGVwdGggKiAyMDsKICAgIH0pOwoKICAgIC8vIFVwZGF0ZSB0aGUgbm9kZXPigKYKICAgIHZhciBub2RlID0gc3ZnLnNlbGVjdEFsbCgiLm5vZGUiKQogICAgICAuZGF0YShub2RlcywgKGQpID0+IGQuaWQgfHwgKGQuaWQgPSArK2kpKTsKCiAgICB2YXIgbm9kZUVudGVyID0gbm9kZS5lbnRlcigpLmFwcGVuZCgiZyIpCiAgICAgIC5hdHRyKCJjbGFzcyIsICJub2RlIikKICAgICAgLmF0dHIoInRyYW5zZm9ybSIsICgpID0+ICJ0cmFuc2xhdGUoIiArIHNvdXJjZS55MCArICIsIiArIHNvdXJjZS54MCArICIpIikKICAgICAgLm9uKCJjbGljayIsIGNsaWNrKQogICAgICA7CgogICAgLy8gYWRkaW5nIGFycm93cwogICAgbm9kZUVudGVyLmFwcGVuZCgndGV4dCcpCiAgICAgIC5hdHRyKCd4JywgLTIwKQogICAgICAuYXR0cigneScsIDIpCiAgICAgIC5hdHRyKCdmaWxsJywgJ2dyZXknKQogICAgICAuYXR0cignY2xhc3MnLCAnYXJyb3cnKQogICAgICAuYXR0cignY2xhc3MnLCAnZmFzJykKICAgICAgLmF0dHIoJ2ZvbnQtc2l6ZScsICcxMnB4JykKICAgICAgLnRleHQoKGQpID0+IGQuY2hpbGRyZW4gPyAnXHVmMTA3JyA6IGQuX2NoaWxkcmVuID8gJ1x1ZjEwNScgOiAiIik7CgogICAgLy8gYWRkaW5nIGZpbGUgb3IgZm9sZGVyCiAgICBub2RlRW50ZXIuYXBwZW5kKCd0ZXh0JykKICAgICAgLmF0dHIoJ3gnLCAtMTApCiAgICAgIC5hdHRyKCd5JywgMikKICAgICAgLmF0dHIoJ2ZpbGwnLCAoZCkgPT4gZC5jaGlsZHJlbiB8fCBkLl9jaGlsZHJlbiA/ICcjZTYwMDAwJyA6ICcjZmY0ZDRkJykKICAgICAgLmF0dHIoJ2NsYXNzJywgJ2ZhcycpCiAgICAgIC5hdHRyKCdmb250LXNpemUnLCAnMTJweCcpCiAgICAgIC50ZXh0KChkKSA9PiBkLmNoaWxkcmVuIHx8IGQuX2NoaWxkcmVuID8gJ1x1ZjA3YicgOiAnXHVmMTViJyk7CgogICAgLy8gYWRkaW5nIGZpbGUgb3IgZm9sZGVyIG5hbWVzCiAgICBub2RlRW50ZXIuYXBwZW5kKCJ0ZXh0IikKICAgICAgLmF0dHIoImR5IiwgMy41KQogICAgICAuYXR0cigiZHgiLCA1LjUpCiAgICAgIC50ZXh0KChkKSA9PiBkLmRhdGEubmFtZSkKICAgICAgLm9uKCJtb3VzZW92ZXIiLCBmdW5jdGlvbiAoZCkgewogICAgICAgIGQzLnNlbGVjdCh0aGlzKS5jbGFzc2VkKCJzZWxlY3RlZCIsIHRydWUpOwogICAgICB9KQogICAgICAub24oIm1vdXNlb3V0IiwgZnVuY3Rpb24gKGQpIHsKICAgICAgICBkMy5zZWxlY3RBbGwoIi5zZWxlY3RlZCIpLmNsYXNzZWQoInNlbGVjdGVkIiwgZmFsc2UpOwogICAgICB9KTsKCgogICAgLy8gVHJhbnNpdGlvbiBub2RlcyB0byB0aGVpciBuZXcgcG9zaXRpb24uCiAgICBub2RlRW50ZXIudHJhbnNpdGlvbihub2RlRW50ZXJUcmFuc2l0aW9uKQogICAgICAuYXR0cigidHJhbnNmb3JtIiwgKGQpID0+ICJ0cmFuc2xhdGUoIiArIGQueSArICIsIiArIGQueCArICIpIikKICAgICAgLnN0eWxlKCJvcGFjaXR5IiwgMSk7CgogICAgbm9kZS50cmFuc2l0aW9uKCkKICAgICAgLmR1cmF0aW9uKGR1cmF0aW9uKQogICAgICAuYXR0cigidHJhbnNmb3JtIiwgKGQpID0+ICJ0cmFuc2xhdGUoIiArIGQueSArICIsIiArIGQueCArICIpIikKICAgICAgLnN0eWxlKCJvcGFjaXR5IiwgMSk7CgoKICAgIC8vIFRyYW5zaXRpb24gZXhpdGluZyBub2RlcyB0byB0aGUgcGFyZW50J3MgbmV3IHBvc2l0aW9uLgogICAgbm9kZS5leGl0KCkudHJhbnNpdGlvbigpCiAgICAgIC5kdXJhdGlvbihkdXJhdGlvbikKICAgICAgLmF0dHIoInRyYW5zZm9ybSIsICgpID0+ICJ0cmFuc2xhdGUoIiArIHNvdXJjZS55ICsgIiwiICsgc291cmNlLnggKyAiKSIpCiAgICAgIC5zdHlsZSgib3BhY2l0eSIsIDApCiAgICAgIC5yZW1vdmUoKTsKCgogICAgLy8gU3Rhc2ggdGhlIG9sZCBwb3NpdGlvbnMgZm9yIHRyYW5zaXRpb24uCiAgICByb290LmVhY2goKGQpID0+IHsKICAgICAgZC54MCA9IGQueDsKICAgICAgZC55MCA9IGQueTsKICAgIH0pOwogIH0KCiAgLy8gVG9nZ2xlIGNoaWxkcmVuIG9uIGNsaWNrLgogIGZ1bmN0aW9uIGNsaWNrKGQpIHsKICAgIGlmIChkLmNoaWxkcmVuKSB7CiAgICAgIGQuX2NoaWxkcmVuID0gZC5jaGlsZHJlbjsKICAgICAgZC5jaGlsZHJlbiA9IG51bGw7CiAgICB9IGVsc2UgewogICAgICBkLmNoaWxkcmVuID0gZC5fY2hpbGRyZW47CiAgICAgIGQuX2NoaWxkcmVuID0gbnVsbDsKICAgIH0KICAgIGQzLnNlbGVjdCh0aGlzKS5yZW1vdmUoKQogICAgdXBkYXRlKGQpOwogIH0KCiAgcmV0dXJuIE9iamVjdC5hc3NpZ24oc3ZnLm5vZGUoKSkKfQ=="},"functions":{"toggleTreeView":{"command":{"name":"Toggle File Tree","key":"ctrl-shift-e","mac":"Cmd-shift-e"},"code":"(() => { var mod=(()=>{var z=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var S=Object.prototype.hasOwnProperty;var o=(e,t)=>{for(var r in t)z(e,r,{get:t[r],enumerable:!0})},w=(e,t,r,a)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let i of b(t))!S.call(e,i)&&i!==r&&z(e,i,{get:()=>t[i],enumerable:!(a=v(t,i))||a.enumerable});return e};var C=e=>w(z({},\"__esModule\",{value:!0}),e);var Me={};o(Me,{default:()=>De});var c={};o(c,{del:()=>L,get:()=>F,set:()=>A});typeof self>\"u\"&&(self={syscall:()=>{throw new Error(\"Not implemented here\")}});var n=self.syscall;function A(e,t){return n(\"clientStore.set\",e,t)}function F(e){return n(\"clientStore.get\",e)}function L(e){return n(\"clientStore.delete\",e)}var m={};o(m,{dispatch:()=>$,enableReadOnlyMode:()=>X,filterBox:()=>N,flashNotification:()=>B,getCurrentPage:()=>T,getCursor:()=>I,getSelection:()=>E,getText:()=>M,hidePanel:()=>j,insertAtCursor:()=>H,insertAtPos:()=>Q,matchBefore:()=>_,moveCursor:()=>K,navigate:()=>O,openUrl:()=>q,prompt:()=>J,reloadPage:()=>R,replaceRange:()=>G,save:()=>V,setPage:()=>D,setSelection:()=>k,showPanel:()=>U});function T(){return n(\"editor.getCurrentPage\")}function D(e){return n(\"editor.setPage\",e)}function M(){return n(\"editor.getText\")}function I(){return n(\"editor.getCursor\")}function E(){return n(\"editor.getSelection\")}function k(e,t){return n(\"editor.setSelection\",e,t)}function V(){return n(\"editor.save\")}function O(e,t,r=!1){return n(\"editor.navigate\",e,t,r)}function R(){return n(\"editor.reloadPage\")}function q(e){return n(\"editor.openUrl\",e)}function B(e,t=\"info\"){return n(\"editor.flashNotification\",e,t)}function N(e,t,r=\"\",a=\"\"){return n(\"editor.filterBox\",e,t,r,a)}function U(e,t,r,a=\"\"){return n(\"editor.showPanel\",e,t,r,a)}function j(e){return n(\"editor.hidePanel\",e)}function Q(e,t){return n(\"editor.insertAtPos\",e,t)}function G(e,t,r){return n(\"editor.replaceRange\",e,t,r)}function K(e){return n(\"editor.moveCursor\",e)}function H(e){return n(\"editor.insertAtCursor\",e)}function _(e){return n(\"editor.matchBefore\",e)}function $(e){return n(\"editor.dispatch\",e)}function J(e,t=\"\"){return n(\"editor.prompt\",e,t)}function X(e){return n(\"editor.enableReadOnlyMode\",e)}var d={};o(d,{batchSet:()=>W,clearPageIndex:()=>ae,clearPageIndexForPage:()=>re,del:()=>ee,deletePrefixForPage:()=>ie,get:()=>Y,query:()=>ne,queryPrefix:()=>te,set:()=>Z});function Z(e,t,r){return n(\"index.set\",e,t,r)}function W(e,t){return n(\"index.batchSet\",e,t)}function Y(e,t){return n(\"index.get\",e,t)}function ee(e,t){return n(\"index.delete\",e,t)}function te(e){return n(\"index.queryPrefix\",e)}function ne(e){return n(\"index.query\",e)}function re(e){return n(\"index.clearPageIndexForPage\",e)}function ie(e,t){return n(\"index.deletePrefixForPage\",e,t)}function ae(){return n(\"index.clearPageIndex\")}var p={};o(p,{deleteAttachment:()=>ye,deletePage:()=>de,getAttachmentMeta:()=>ze,getPageMeta:()=>le,listAttachments:()=>ge,listPages:()=>me,listPlugs:()=>pe,readAttachment:()=>fe,readPage:()=>ce,writeAttachment:()=>xe,writePage:()=>ue});function me(e=!1){return n(\"space.listPages\",e)}function le(e){return n(\"space.getPageMeta\",e)}function ce(e){return n(\"space.readPage\",e)}function ue(e,t){return n(\"space.writePage\",e,t)}function de(e){return n(\"space.deletePage\",e)}function pe(){return n(\"space.listPlugs\")}function ge(){return n(\"space.listAttachments\")}function ze(e){return n(\"space.getAttachmentMeta\",e)}function fe(e){return n(\"space.readAttachment\",e)}function xe(e,t,r){return n(\"space.writeAttachment\",e,t,r)}function ye(e){return n(\"space.deleteAttachment\",e)}var u={};o(u,{readAsset:()=>he});function f(e){let t=atob(e),r=t.length,a=new Uint8Array(r);for(let i=0;i<r;i++)a[i]=t.charCodeAt(i);return a}var s=self.syscall;async function he(e,t=\"utf8\"){let r=await s(\"asset.readAsset\",e);switch(t){case\"utf8\":return new TextDecoder().decode(f(r.split(\",\")[1]));case\"dataurl\":return r}}var x=\"showTreeView\";async function y(){let e=await P();if(await c.set(x,!e),e)await m.hidePanel(\"lhs\");else{let t=await m.getCurrentPage();await Le(t)}}async function P(){return!!await c.get(x)}async function Fe(e){let t=await u.readAsset(\"assets/d3.js\",\"utf8\"),r=await u.readAsset(\"assets/d3-filetree.js\",\"utf8\");return`\n    ${t}\n    ${r}\n    \n    const tree = ${e};\n    console.log(tree);\n    const chart = FileTree(tree);\n    const tree_div = document.querySelector('#tree');\n    tree_div.appendChild(chart);\n    \n  `}async function Le(e){let t=await Te(e),r=JSON.stringify(t);await P()&&await m.showPanel(\"lhs\",1,`<html>\n        <head>\n        <style>\n\n        .node text {\n          cursor: pointer;\n        }\n\n        .selected {\n          fill: #ff751a;\n          font-weight: bold;\n        }\n\n        .start {\n          overflow:scroll;\n          height:1000px\n        }\n\n      </style>\n        <script type=\"text/javascript\" src=\"assets/treelist.js\"><\\/script>\n        <script src=\"https://gist.github.com/thehogfather/0e48ec486abbd5be17d7.js\"><\\/script>\n        </head>\n        <body>\n          <div id=\"tree\">\n          </div>\n        </body>\n      </html>`,await Fe(r))}async function Te(e){let r=(await p.listPages()).map(({name:l})=>l);console.log(r);let i=(await d.queryPrefix(\"pl:\")).map(({key:l,page:h})=>{let[,g]=l.split(\":\");return r.includes(g)||r.push(g),{source:h,target:g}}),Ie=r.map(l=>({id:l}));return{name:\"flare\",children:[{name:\"analytics\",children:[{name:\"cluster\",children:[{name:\"AgglomerativeCluster\",size:3938},{name:\"CommunityStructure\",size:3812},{name:\"HierarchicalCluster\",size:6714},{name:\"MergeEdge\",size:743}]},{name:\"graph\",children:[{name:\"BetweennessCentrality\",size:3534},{name:\"LinkDistance\",size:5731},{name:\"MaxFlowMinCut\",size:7840},{name:\"ShortestPaths\",size:5914},{name:\"SpanningTree\",size:3416}]},{name:\"optimization\",children:[{name:\"AspectRatioBanker\",size:7074}]}]},{name:\"animate\",children:[{name:\"Easing\",size:17010},{name:\"FunctionSequence\",size:5842},{name:\"interpolate\",children:[{name:\"ArrayInterpolator\",size:1983},{name:\"ColorInterpolator\",size:2047},{name:\"DateInterpolator\",size:1375},{name:\"Interpolator\",size:8746},{name:\"MatrixInterpolator\",size:2202},{name:\"NumberInterpolator\",size:1382},{name:\"ObjectInterpolator\",size:1629},{name:\"PointInterpolator\",size:1675},{name:\"RectangleInterpolator\",size:2042}]},{name:\"ISchedulable\",size:1041},{name:\"Parallel\",size:5176},{name:\"Pause\",size:449},{name:\"Scheduler\",size:5593},{name:\"Sequence\",size:5534},{name:\"Transition\",size:9201},{name:\"Transitioner\",size:19975},{name:\"TransitionEvent\",size:1116},{name:\"Tween\",size:6006}]},{name:\"data\",children:[{name:\"converters\",children:[{name:\"Converters\",size:721},{name:\"DelimitedTextConverter\",size:4294},{name:\"GraphMLConverter\",size:9800},{name:\"IDataConverter\",size:1314},{name:\"JSONConverter\",size:2220}]},{name:\"DataField\",size:1759},{name:\"DataSchema\",size:2165},{name:\"DataSet\",size:586},{name:\"DataSource\",size:3331},{name:\"DataTable\",size:772},{name:\"DataUtil\",size:3322}]},{name:\"display\",children:[{name:\"DirtySprite\",size:8833},{name:\"LineSprite\",size:1732},{name:\"RectSprite\",size:3623},{name:\"TextSprite\",size:10066}]},{name:\"flex\",children:[{name:\"FlareVis\",size:4116}]},{name:\"physics\",children:[{name:\"DragForce\",size:1082},{name:\"GravityForce\",size:1336},{name:\"IForce\",size:319},{name:\"NBodyForce\",size:10498},{name:\"Particle\",size:2822},{name:\"Simulation\",size:9983},{name:\"Spring\",size:2213},{name:\"SpringForce\",size:1681}]},{name:\"query\",children:[{name:\"AggregateExpression\",size:1616},{name:\"And\",size:1027},{name:\"Arithmetic\",size:3891},{name:\"Average\",size:891},{name:\"BinaryExpression\",size:2893},{name:\"Comparison\",size:5103},{name:\"CompositeExpression\",size:3677},{name:\"Count\",size:781},{name:\"DateUtil\",size:4141},{name:\"Distinct\",size:933},{name:\"Expression\",size:5130},{name:\"ExpressionIterator\",size:3617},{name:\"Fn\",size:3240},{name:\"If\",size:2732},{name:\"IsA\",size:2039},{name:\"Literal\",size:1214},{name:\"Match\",size:3748},{name:\"Maximum\",size:843},{name:\"methods\",children:[{name:\"add\",size:593},{name:\"and\",size:330},{name:\"average\",size:287},{name:\"count\",size:277},{name:\"distinct\",size:292},{name:\"div\",size:595},{name:\"eq\",size:594},{name:\"fn\",size:460},{name:\"gt\",size:603},{name:\"gte\",size:625},{name:\"iff\",size:748},{name:\"isa\",size:461},{name:\"lt\",size:597},{name:\"lte\",size:619},{name:\"max\",size:283},{name:\"min\",size:283},{name:\"mod\",size:591},{name:\"mul\",size:603},{name:\"neq\",size:599},{name:\"not\",size:386},{name:\"or\",size:323},{name:\"orderby\",size:307},{name:\"range\",size:772},{name:\"select\",size:296},{name:\"stddev\",size:363},{name:\"sub\",size:600},{name:\"sum\",size:280},{name:\"update\",size:307},{name:\"variance\",size:335},{name:\"where\",size:299},{name:\"xor\",size:354},{name:\"_\",size:264}]},{name:\"Minimum\",size:843},{name:\"Not\",size:1554},{name:\"Or\",size:970},{name:\"Query\",size:13896},{name:\"Range\",size:1594},{name:\"StringUtil\",size:4130},{name:\"Sum\",size:791},{name:\"Variable\",size:1124},{name:\"Variance\",size:1876},{name:\"Xor\",size:1101}]},{name:\"scale\",children:[{name:\"IScaleMap\",size:2105},{name:\"LinearScale\",size:1316},{name:\"LogScale\",size:3151},{name:\"OrdinalScale\",size:3770},{name:\"QuantileScale\",size:2435},{name:\"QuantitativeScale\",size:4839},{name:\"RootScale\",size:1756},{name:\"Scale\",size:4268},{name:\"ScaleType\",size:1821},{name:\"TimeScale\",size:5833}]},{name:\"util\",children:[{name:\"Arrays\",size:8258},{name:\"Colors\",size:10001},{name:\"Dates\",size:8217},{name:\"Displays\",size:12555},{name:\"Filter\",size:2324},{name:\"Geometry\",size:10993},{name:\"heap\",children:[{name:\"FibonacciHeap\",size:9354},{name:\"HeapNode\",size:1233}]},{name:\"IEvaluable\",size:335},{name:\"IPredicate\",size:383},{name:\"IValueProxy\",size:874},{name:\"math\",children:[{name:\"DenseMatrix\",size:3165},{name:\"IMatrix\",size:2815},{name:\"SparseMatrix\",size:3366}]},{name:\"Maths\",size:17705},{name:\"Orientation\",size:1486},{name:\"palette\",children:[{name:\"ColorPalette\",size:6367},{name:\"Palette\",size:1229},{name:\"ShapePalette\",size:2059},{name:\"SizePalette\",size:2291}]},{name:\"Property\",size:5559},{name:\"Shapes\",size:19118},{name:\"Sort\",size:6887},{name:\"Stats\",size:6557},{name:\"Strings\",size:22026}]},{name:\"vis\",children:[{name:\"axis\",children:[{name:\"Axes\",size:1302},{name:\"Axis\",size:24593},{name:\"AxisGridLine\",size:652},{name:\"AxisLabel\",size:636},{name:\"CartesianAxes\",size:6703}]},{name:\"controls\",children:[{name:\"AnchorControl\",size:2138},{name:\"ClickControl\",size:3824},{name:\"Control\",size:1353},{name:\"ControlList\",size:4665},{name:\"DragControl\",size:2649},{name:\"ExpandControl\",size:2832},{name:\"HoverControl\",size:4896},{name:\"IControl\",size:763},{name:\"PanZoomControl\",size:5222},{name:\"SelectionControl\",size:7862},{name:\"TooltipControl\",size:8435}]},{name:\"data\",children:[{name:\"Data\",size:20544},{name:\"DataList\",size:19788},{name:\"DataSprite\",size:10349},{name:\"EdgeSprite\",size:3301},{name:\"NodeSprite\",size:19382},{name:\"render\",children:[{name:\"ArrowType\",size:698},{name:\"EdgeRenderer\",size:5569},{name:\"IRenderer\",size:353},{name:\"ShapeRenderer\",size:2247}]},{name:\"ScaleBinding\",size:11275},{name:\"Tree\",size:7147},{name:\"TreeBuilder\",size:9930}]},{name:\"events\",children:[{name:\"DataEvent\",size:2313},{name:\"SelectionEvent\",size:1880},{name:\"TooltipEvent\",size:1701},{name:\"VisualizationEvent\",size:1117}]},{name:\"legend\",children:[{name:\"Legend\",size:20859},{name:\"LegendItem\",size:4614},{name:\"LegendRange\",size:10530}]},{name:\"operator\",children:[{name:\"distortion\",children:[{name:\"BifocalDistortion\",size:4461},{name:\"Distortion\",size:6314},{name:\"FisheyeDistortion\",size:3444}]},{name:\"encoder\",children:[{name:\"ColorEncoder\",size:3179},{name:\"Encoder\",size:4060},{name:\"PropertyEncoder\",size:4138},{name:\"ShapeEncoder\",size:1690},{name:\"SizeEncoder\",size:1830}]},{name:\"filter\",children:[{name:\"FisheyeTreeFilter\",size:5219},{name:\"GraphDistanceFilter\",size:3165},{name:\"VisibilityFilter\",size:3509}]},{name:\"IOperator\",size:1286},{name:\"label\",children:[{name:\"Labeler\",size:9956},{name:\"RadialLabeler\",size:3899},{name:\"StackedAreaLabeler\",size:3202}]},{name:\"layout\",children:[{name:\"AxisLayout\",size:6725},{name:\"BundledEdgeRouter\",size:3727},{name:\"CircleLayout\",size:9317},{name:\"CirclePackingLayout\",size:12003},{name:\"DendrogramLayout\",size:4853},{name:\"ForceDirectedLayout\",size:8411},{name:\"IcicleTreeLayout\",size:4864},{name:\"IndentedTreeLayout\",size:3174},{name:\"Layout\",size:7881},{name:\"NodeLinkTreeLayout\",size:12870},{name:\"PieLayout\",size:2728},{name:\"RadialTreeLayout\",size:12348},{name:\"RandomLayout\",size:870},{name:\"StackedAreaLayout\",size:9121},{name:\"TreeMapLayout\",size:9191}]},{name:\"Operator\",size:2490},{name:\"OperatorList\",size:5248},{name:\"OperatorSequence\",size:4190},{name:\"OperatorSwitch\",size:2581},{name:\"SortOperator\",size:2023}]},{name:\"Visualization\",size:16540}]}]}}var De=y;return C(Me);})();\n return mod;})()"}}}