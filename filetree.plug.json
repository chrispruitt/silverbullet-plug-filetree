{
  "name": "filetree",
  "version": 0.1,
  "imports": [
    "https://get.silverbullet.md/global.plug.json"
  ],
  "assets": {
    "assets/d3.js": "data:application/javascript;base64,Ly8gaHR0cHM6Ly9kM2pzLm9yZyB2NS4xNi4wIENvcHlyaWdodCAyMDIwIE1pa2UgQm9zdG9jawohZnVuY3Rpb24gKHQsIG4pIHsgIm9iamVjdCIgPT0gdHlwZW9mIGV4cG9ydHMgJiYgInVuZGVmaW5lZCIgIT0gdHlwZW9mIG1vZHVsZSA/IG4oZXhwb3J0cykgOiAiZnVuY3Rpb24iID09IHR5cGVvZiBkZWZpbmUgJiYgZGVmaW5lLmFtZCA/IGRlZmluZShbImV4cG9ydHMiXSwgbikgOiBuKCh0ID0gdCB8fCBzZWxmKS5kMyA9IHQuZDMgfHwge30pIH0odGhpcywgZnVuY3Rpb24gKHQpIHsgInVzZSBzdHJpY3QiOyBmdW5jdGlvbiBuKHQsIG4pIHsgcmV0dXJuIHQgPCBuID8gLTEgOiB0ID4gbiA/IDEgOiB0ID49IG4gPyAwIDogTmFOIH0gZnVuY3Rpb24gZSh0KSB7IHZhciBlOyByZXR1cm4gMSA9PT0gdC5sZW5ndGggJiYgKGUgPSB0LCB0ID0gZnVuY3Rpb24gKHQsIHIpIHsgcmV0dXJuIG4oZSh0KSwgcikgfSksIHsgbGVmdDogZnVuY3Rpb24gKG4sIGUsIHIsIGkpIHsgZm9yIChudWxsID09IHIgJiYgKHIgPSAwKSwgbnVsbCA9PSBpICYmIChpID0gbi5sZW5ndGgpOyByIDwgaTspIHsgdmFyIG8gPSByICsgaSA+Pj4gMTsgdChuW29dLCBlKSA8IDAgPyByID0gbyArIDEgOiBpID0gbyB9IHJldHVybiByIH0sIHJpZ2h0OiBmdW5jdGlvbiAobiwgZSwgciwgaSkgeyBmb3IgKG51bGwgPT0gciAmJiAociA9IDApLCBudWxsID09IGkgJiYgKGkgPSBuLmxlbmd0aCk7IHIgPCBpOykgeyB2YXIgbyA9IHIgKyBpID4+PiAxOyB0KG5bb10sIGUpID4gMCA/IGkgPSBvIDogciA9IG8gKyAxIH0gcmV0dXJuIHIgfSB9IH0gdmFyIHIgPSBlKG4pLCBpID0gci5yaWdodCwgbyA9IHIubGVmdDsgZnVuY3Rpb24gYSh0LCBuKSB7IHJldHVybiBbdCwgbl0gfSBmdW5jdGlvbiB1KHQpIHsgcmV0dXJuIG51bGwgPT09IHQgPyBOYU4gOiArdCB9IGZ1bmN0aW9uIGModCwgbikgeyB2YXIgZSwgciwgaSA9IHQubGVuZ3RoLCBvID0gMCwgYSA9IC0xLCBjID0gMCwgZiA9IDA7IGlmIChudWxsID09IG4pIGZvciAoOyArK2EgPCBpOylpc05hTihlID0gdSh0W2FdKSkgfHwgKGYgKz0gKHIgPSBlIC0gYykgKiAoZSAtIChjICs9IHIgLyArK28pKSk7IGVsc2UgZm9yICg7ICsrYSA8IGk7KWlzTmFOKGUgPSB1KG4odFthXSwgYSwgdCkpKSB8fCAoZiArPSAociA9IGUgLSBjKSAqIChlIC0gKGMgKz0gciAvICsrbykpKTsgaWYgKG8gPiAxKSByZXR1cm4gZiAvIChvIC0gMSkgfSBmdW5jdGlvbiBmKHQsIG4pIHsgdmFyIGUgPSBjKHQsIG4pOyByZXR1cm4gZSA/IE1hdGguc3FydChlKSA6IGUgfSBmdW5jdGlvbiBzKHQsIG4pIHsgdmFyIGUsIHIsIGksIG8gPSB0Lmxlbmd0aCwgYSA9IC0xOyBpZiAobnVsbCA9PSBuKSB7IGZvciAoOyArK2EgPCBvOylpZiAobnVsbCAhPSAoZSA9IHRbYV0pICYmIGUgPj0gZSkgZm9yIChyID0gaSA9IGU7ICsrYSA8IG87KW51bGwgIT0gKGUgPSB0W2FdKSAmJiAociA+IGUgJiYgKHIgPSBlKSwgaSA8IGUgJiYgKGkgPSBlKSkgfSBlbHNlIGZvciAoOyArK2EgPCBvOylpZiAobnVsbCAhPSAoZSA9IG4odFthXSwgYSwgdCkpICYmIGUgPj0gZSkgZm9yIChyID0gaSA9IGU7ICsrYSA8IG87KW51bGwgIT0gKGUgPSBuKHRbYV0sIGEsIHQpKSAmJiAociA+IGUgJiYgKHIgPSBlKSwgaSA8IGUgJiYgKGkgPSBlKSk7IHJldHVybiBbciwgaV0gfSB2YXIgbCA9IEFycmF5LnByb3RvdHlwZSwgaCA9IGwuc2xpY2UsIGQgPSBsLm1hcDsgZnVuY3Rpb24gcCh0KSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiB0IH0gfSBmdW5jdGlvbiB2KHQpIHsgcmV0dXJuIHQgfSBmdW5jdGlvbiBnKHQsIG4sIGUpIHsgdCA9ICt0LCBuID0gK24sIGUgPSAoaSA9IGFyZ3VtZW50cy5sZW5ndGgpIDwgMiA/IChuID0gdCwgdCA9IDAsIDEpIDogaSA8IDMgPyAxIDogK2U7IGZvciAodmFyIHIgPSAtMSwgaSA9IDAgfCBNYXRoLm1heCgwLCBNYXRoLmNlaWwoKG4gLSB0KSAvIGUpKSwgbyA9IG5ldyBBcnJheShpKTsgKytyIDwgaTspb1tyXSA9IHQgKyByICogZTsgcmV0dXJuIG8gfSB2YXIgeSA9IE1hdGguc3FydCg1MCksIF8gPSBNYXRoLnNxcnQoMTApLCBiID0gTWF0aC5zcXJ0KDIpOyBmdW5jdGlvbiBtKHQsIG4sIGUpIHsgdmFyIHIsIGksIG8sIGEsIHUgPSAtMTsgaWYgKGUgPSArZSwgKHQgPSArdCkgPT09IChuID0gK24pICYmIGUgPiAwKSByZXR1cm4gW3RdOyBpZiAoKHIgPSBuIDwgdCkgJiYgKGkgPSB0LCB0ID0gbiwgbiA9IGkpLCAwID09PSAoYSA9IHgodCwgbiwgZSkpIHx8ICFpc0Zpbml0ZShhKSkgcmV0dXJuIFtdOyBpZiAoYSA+IDApIGZvciAodCA9IE1hdGguY2VpbCh0IC8gYSksIG4gPSBNYXRoLmZsb29yKG4gLyBhKSwgbyA9IG5ldyBBcnJheShpID0gTWF0aC5jZWlsKG4gLSB0ICsgMSkpOyArK3UgPCBpOylvW3VdID0gKHQgKyB1KSAqIGE7IGVsc2UgZm9yICh0ID0gTWF0aC5mbG9vcih0ICogYSksIG4gPSBNYXRoLmNlaWwobiAqIGEpLCBvID0gbmV3IEFycmF5KGkgPSBNYXRoLmNlaWwodCAtIG4gKyAxKSk7ICsrdSA8IGk7KW9bdV0gPSAodCAtIHUpIC8gYTsgcmV0dXJuIHIgJiYgby5yZXZlcnNlKCksIG8gfSBmdW5jdGlvbiB4KHQsIG4sIGUpIHsgdmFyIHIgPSAobiAtIHQpIC8gTWF0aC5tYXgoMCwgZSksIGkgPSBNYXRoLmZsb29yKE1hdGgubG9nKHIpIC8gTWF0aC5MTjEwKSwgbyA9IHIgLyBNYXRoLnBvdygxMCwgaSk7IHJldHVybiBpID49IDAgPyAobyA+PSB5ID8gMTAgOiBvID49IF8gPyA1IDogbyA+PSBiID8gMiA6IDEpICogTWF0aC5wb3coMTAsIGkpIDogLU1hdGgucG93KDEwLCAtaSkgLyAobyA+PSB5ID8gMTAgOiBvID49IF8gPyA1IDogbyA+PSBiID8gMiA6IDEpIH0gZnVuY3Rpb24gdyh0LCBuLCBlKSB7IHZhciByID0gTWF0aC5hYnMobiAtIHQpIC8gTWF0aC5tYXgoMCwgZSksIGkgPSBNYXRoLnBvdygxMCwgTWF0aC5mbG9vcihNYXRoLmxvZyhyKSAvIE1hdGguTE4xMCkpLCBvID0gciAvIGk7IHJldHVybiBvID49IHkgPyBpICo9IDEwIDogbyA+PSBfID8gaSAqPSA1IDogbyA+PSBiICYmIChpICo9IDIpLCBuIDwgdCA/IC1pIDogaSB9IGZ1bmN0aW9uIE0odCkgeyByZXR1cm4gTWF0aC5jZWlsKE1hdGgubG9nKHQubGVuZ3RoKSAvIE1hdGguTE4yKSArIDEgfSBmdW5jdGlvbiBOKHQsIG4sIGUpIHsgaWYgKG51bGwgPT0gZSAmJiAoZSA9IHUpLCByID0gdC5sZW5ndGgpIHsgaWYgKChuID0gK24pIDw9IDAgfHwgciA8IDIpIHJldHVybiArZSh0WzBdLCAwLCB0KTsgaWYgKG4gPj0gMSkgcmV0dXJuICtlKHRbciAtIDFdLCByIC0gMSwgdCk7IHZhciByLCBpID0gKHIgLSAxKSAqIG4sIG8gPSBNYXRoLmZsb29yKGkpLCBhID0gK2UodFtvXSwgbywgdCk7IHJldHVybiBhICsgKCtlKHRbbyArIDFdLCBvICsgMSwgdCkgLSBhKSAqIChpIC0gbykgfSB9IGZ1bmN0aW9uIFQodCwgbikgeyB2YXIgZSwgciwgaSA9IHQubGVuZ3RoLCBvID0gLTE7IGlmIChudWxsID09IG4pIHsgZm9yICg7ICsrbyA8IGk7KWlmIChudWxsICE9IChlID0gdFtvXSkgJiYgZSA+PSBlKSBmb3IgKHIgPSBlOyArK28gPCBpOyludWxsICE9IChlID0gdFtvXSkgJiYgZSA+IHIgJiYgKHIgPSBlKSB9IGVsc2UgZm9yICg7ICsrbyA8IGk7KWlmIChudWxsICE9IChlID0gbih0W29dLCBvLCB0KSkgJiYgZSA+PSBlKSBmb3IgKHIgPSBlOyArK28gPCBpOyludWxsICE9IChlID0gbih0W29dLCBvLCB0KSkgJiYgZSA+IHIgJiYgKHIgPSBlKTsgcmV0dXJuIHIgfSBmdW5jdGlvbiBBKHQpIHsgZm9yICh2YXIgbiwgZSwgciwgaSA9IHQubGVuZ3RoLCBvID0gLTEsIGEgPSAwOyArK28gPCBpOylhICs9IHRbb10ubGVuZ3RoOyBmb3IgKGUgPSBuZXcgQXJyYXkoYSk7IC0taSA+PSAwOylmb3IgKG4gPSAociA9IHRbaV0pLmxlbmd0aDsgLS1uID49IDA7KWVbLS1hXSA9IHJbbl07IHJldHVybiBlIH0gZnVuY3Rpb24gUyh0LCBuKSB7IHZhciBlLCByLCBpID0gdC5sZW5ndGgsIG8gPSAtMTsgaWYgKG51bGwgPT0gbikgeyBmb3IgKDsgKytvIDwgaTspaWYgKG51bGwgIT0gKGUgPSB0W29dKSAmJiBlID49IGUpIGZvciAociA9IGU7ICsrbyA8IGk7KW51bGwgIT0gKGUgPSB0W29dKSAmJiByID4gZSAmJiAociA9IGUpIH0gZWxzZSBmb3IgKDsgKytvIDwgaTspaWYgKG51bGwgIT0gKGUgPSBuKHRbb10sIG8sIHQpKSAmJiBlID49IGUpIGZvciAociA9IGU7ICsrbyA8IGk7KW51bGwgIT0gKGUgPSBuKHRbb10sIG8sIHQpKSAmJiByID4gZSAmJiAociA9IGUpOyByZXR1cm4gciB9IGZ1bmN0aW9uIGsodCkgeyBpZiAoIShpID0gdC5sZW5ndGgpKSByZXR1cm4gW107IGZvciAodmFyIG4gPSAtMSwgZSA9IFModCwgRSksIHIgPSBuZXcgQXJyYXkoZSk7ICsrbiA8IGU7KWZvciAodmFyIGksIG8gPSAtMSwgYSA9IHJbbl0gPSBuZXcgQXJyYXkoaSk7ICsrbyA8IGk7KWFbb10gPSB0W29dW25dOyByZXR1cm4gciB9IGZ1bmN0aW9uIEUodCkgeyByZXR1cm4gdC5sZW5ndGggfSB2YXIgQyA9IEFycmF5LnByb3RvdHlwZS5zbGljZTsgZnVuY3Rpb24gUCh0KSB7IHJldHVybiB0IH0gdmFyIHogPSAxLCBSID0gMiwgRCA9IDMsIHEgPSA0LCBMID0gMWUtNjsgZnVuY3Rpb24gVSh0KSB7IHJldHVybiAidHJhbnNsYXRlKCIgKyAodCArIC41KSArICIsMCkiIH0gZnVuY3Rpb24gTyh0KSB7IHJldHVybiAidHJhbnNsYXRlKDAsIiArICh0ICsgLjUpICsgIikiIH0gZnVuY3Rpb24gQigpIHsgcmV0dXJuICF0aGlzLl9fYXhpcyB9IGZ1bmN0aW9uIEYodCwgbikgeyB2YXIgZSA9IFtdLCByID0gbnVsbCwgaSA9IG51bGwsIG8gPSA2LCBhID0gNiwgdSA9IDMsIGMgPSB0ID09PSB6IHx8IHQgPT09IHEgPyAtMSA6IDEsIGYgPSB0ID09PSBxIHx8IHQgPT09IFIgPyAieCIgOiAieSIsIHMgPSB0ID09PSB6IHx8IHQgPT09IEQgPyBVIDogTzsgZnVuY3Rpb24gbChsKSB7IHZhciBoID0gbnVsbCA9PSByID8gbi50aWNrcyA/IG4udGlja3MuYXBwbHkobiwgZSkgOiBuLmRvbWFpbigpIDogciwgZCA9IG51bGwgPT0gaSA/IG4udGlja0Zvcm1hdCA/IG4udGlja0Zvcm1hdC5hcHBseShuLCBlKSA6IFAgOiBpLCBwID0gTWF0aC5tYXgobywgMCkgKyB1LCB2ID0gbi5yYW5nZSgpLCBnID0gK3ZbMF0gKyAuNSwgeSA9ICt2W3YubGVuZ3RoIC0gMV0gKyAuNSwgXyA9IChuLmJhbmR3aWR0aCA/IGZ1bmN0aW9uICh0KSB7IHZhciBuID0gTWF0aC5tYXgoMCwgdC5iYW5kd2lkdGgoKSAtIDEpIC8gMjsgcmV0dXJuIHQucm91bmQoKSAmJiAobiA9IE1hdGgucm91bmQobikpLCBmdW5jdGlvbiAoZSkgeyByZXR1cm4gK3QoZSkgKyBuIH0gfSA6IGZ1bmN0aW9uICh0KSB7IHJldHVybiBmdW5jdGlvbiAobikgeyByZXR1cm4gK3QobikgfSB9KShuLmNvcHkoKSksIGIgPSBsLnNlbGVjdGlvbiA/IGwuc2VsZWN0aW9uKCkgOiBsLCBtID0gYi5zZWxlY3RBbGwoIi5kb21haW4iKS5kYXRhKFtudWxsXSksIHggPSBiLnNlbGVjdEFsbCgiLnRpY2siKS5kYXRhKGgsIG4pLm9yZGVyKCksIHcgPSB4LmV4aXQoKSwgTSA9IHguZW50ZXIoKS5hcHBlbmQoImciKS5hdHRyKCJjbGFzcyIsICJ0aWNrIiksIE4gPSB4LnNlbGVjdCgibGluZSIpLCBUID0geC5zZWxlY3QoInRleHQiKTsgbSA9IG0ubWVyZ2UobS5lbnRlcigpLmluc2VydCgicGF0aCIsICIudGljayIpLmF0dHIoImNsYXNzIiwgImRvbWFpbiIpLmF0dHIoInN0cm9rZSIsICJjdXJyZW50Q29sb3IiKSksIHggPSB4Lm1lcmdlKE0pLCBOID0gTi5tZXJnZShNLmFwcGVuZCgibGluZSIpLmF0dHIoInN0cm9rZSIsICJjdXJyZW50Q29sb3IiKS5hdHRyKGYgKyAiMiIsIGMgKiBvKSksIFQgPSBULm1lcmdlKE0uYXBwZW5kKCJ0ZXh0IikuYXR0cigiZmlsbCIsICJjdXJyZW50Q29sb3IiKS5hdHRyKGYsIGMgKiBwKS5hdHRyKCJkeSIsIHQgPT09IHogPyAiMGVtIiA6IHQgPT09IEQgPyAiMC43MWVtIiA6ICIwLjMyZW0iKSksIGwgIT09IGIgJiYgKG0gPSBtLnRyYW5zaXRpb24obCksIHggPSB4LnRyYW5zaXRpb24obCksIE4gPSBOLnRyYW5zaXRpb24obCksIFQgPSBULnRyYW5zaXRpb24obCksIHcgPSB3LnRyYW5zaXRpb24obCkuYXR0cigib3BhY2l0eSIsIEwpLmF0dHIoInRyYW5zZm9ybSIsIGZ1bmN0aW9uICh0KSB7IHJldHVybiBpc0Zpbml0ZSh0ID0gXyh0KSkgPyBzKHQpIDogdGhpcy5nZXRBdHRyaWJ1dGUoInRyYW5zZm9ybSIpIH0pLCBNLmF0dHIoIm9wYWNpdHkiLCBMKS5hdHRyKCJ0cmFuc2Zvcm0iLCBmdW5jdGlvbiAodCkgeyB2YXIgbiA9IHRoaXMucGFyZW50Tm9kZS5fX2F4aXM7IHJldHVybiBzKG4gJiYgaXNGaW5pdGUobiA9IG4odCkpID8gbiA6IF8odCkpIH0pKSwgdy5yZW1vdmUoKSwgbS5hdHRyKCJkIiwgdCA9PT0gcSB8fCB0ID09IFIgPyBhID8gIk0iICsgYyAqIGEgKyAiLCIgKyBnICsgIkgwLjVWIiArIHkgKyAiSCIgKyBjICogYSA6ICJNMC41LCIgKyBnICsgIlYiICsgeSA6IGEgPyAiTSIgKyBnICsgIiwiICsgYyAqIGEgKyAiVjAuNUgiICsgeSArICJWIiArIGMgKiBhIDogIk0iICsgZyArICIsMC41SCIgKyB5KSwgeC5hdHRyKCJvcGFjaXR5IiwgMSkuYXR0cigidHJhbnNmb3JtIiwgZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHMoXyh0KSkgfSksIE4uYXR0cihmICsgIjIiLCBjICogbyksIFQuYXR0cihmLCBjICogcCkudGV4dChkKSwgYi5maWx0ZXIoQikuYXR0cigiZmlsbCIsICJub25lIikuYXR0cigiZm9udC1zaXplIiwgMTApLmF0dHIoImZvbnQtZmFtaWx5IiwgInNhbnMtc2VyaWYiKS5hdHRyKCJ0ZXh0LWFuY2hvciIsIHQgPT09IFIgPyAic3RhcnQiIDogdCA9PT0gcSA/ICJlbmQiIDogIm1pZGRsZSIpLCBiLmVhY2goZnVuY3Rpb24gKCkgeyB0aGlzLl9fYXhpcyA9IF8gfSkgfSByZXR1cm4gbC5zY2FsZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG4gPSB0LCBsKSA6IG4gfSwgbC50aWNrcyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGUgPSBDLmNhbGwoYXJndW1lbnRzKSwgbCB9LCBsLnRpY2tBcmd1bWVudHMgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChlID0gbnVsbCA9PSB0ID8gW10gOiBDLmNhbGwodCksIGwpIDogZS5zbGljZSgpIH0sIGwudGlja1ZhbHVlcyA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHIgPSBudWxsID09IHQgPyBudWxsIDogQy5jYWxsKHQpLCBsKSA6IHIgJiYgci5zbGljZSgpIH0sIGwudGlja0Zvcm1hdCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGkgPSB0LCBsKSA6IGkgfSwgbC50aWNrU2l6ZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG8gPSBhID0gK3QsIGwpIDogbyB9LCBsLnRpY2tTaXplSW5uZXIgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChvID0gK3QsIGwpIDogbyB9LCBsLnRpY2tTaXplT3V0ZXIgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChhID0gK3QsIGwpIDogYSB9LCBsLnRpY2tQYWRkaW5nID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodSA9ICt0LCBsKSA6IHUgfSwgbCB9IHZhciBZID0geyB2YWx1ZTogZnVuY3Rpb24gKCkgeyB9IH07IGZ1bmN0aW9uIEkoKSB7IGZvciAodmFyIHQsIG4gPSAwLCBlID0gYXJndW1lbnRzLmxlbmd0aCwgciA9IHt9OyBuIDwgZTsgKytuKSB7IGlmICghKHQgPSBhcmd1bWVudHNbbl0gKyAiIikgfHwgdCBpbiByIHx8IC9bXHMuXS8udGVzdCh0KSkgdGhyb3cgbmV3IEVycm9yKCJpbGxlZ2FsIHR5cGU6ICIgKyB0KTsgclt0XSA9IFtdIH0gcmV0dXJuIG5ldyBIKHIpIH0gZnVuY3Rpb24gSCh0KSB7IHRoaXMuXyA9IHQgfSBmdW5jdGlvbiBqKHQsIG4pIHsgcmV0dXJuIHQudHJpbSgpLnNwbGl0KC9efFxzKy8pLm1hcChmdW5jdGlvbiAodCkgeyB2YXIgZSA9ICIiLCByID0gdC5pbmRleE9mKCIuIik7IGlmIChyID49IDAgJiYgKGUgPSB0LnNsaWNlKHIgKyAxKSwgdCA9IHQuc2xpY2UoMCwgcikpLCB0ICYmICFuLmhhc093blByb3BlcnR5KHQpKSB0aHJvdyBuZXcgRXJyb3IoInVua25vd24gdHlwZTogIiArIHQpOyByZXR1cm4geyB0eXBlOiB0LCBuYW1lOiBlIH0gfSkgfSBmdW5jdGlvbiBYKHQsIG4pIHsgZm9yICh2YXIgZSwgciA9IDAsIGkgPSB0Lmxlbmd0aDsgciA8IGk7ICsrcilpZiAoKGUgPSB0W3JdKS5uYW1lID09PSBuKSByZXR1cm4gZS52YWx1ZSB9IGZ1bmN0aW9uIFYodCwgbiwgZSkgeyBmb3IgKHZhciByID0gMCwgaSA9IHQubGVuZ3RoOyByIDwgaTsgKytyKWlmICh0W3JdLm5hbWUgPT09IG4pIHsgdFtyXSA9IFksIHQgPSB0LnNsaWNlKDAsIHIpLmNvbmNhdCh0LnNsaWNlKHIgKyAxKSk7IGJyZWFrIH0gcmV0dXJuIG51bGwgIT0gZSAmJiB0LnB1c2goeyBuYW1lOiBuLCB2YWx1ZTogZSB9KSwgdCB9IEgucHJvdG90eXBlID0gSS5wcm90b3R5cGUgPSB7IGNvbnN0cnVjdG9yOiBILCBvbjogZnVuY3Rpb24gKHQsIG4pIHsgdmFyIGUsIHIgPSB0aGlzLl8sIGkgPSBqKHQgKyAiIiwgciksIG8gPSAtMSwgYSA9IGkubGVuZ3RoOyBpZiAoIShhcmd1bWVudHMubGVuZ3RoIDwgMikpIHsgaWYgKG51bGwgIT0gbiAmJiAiZnVuY3Rpb24iICE9IHR5cGVvZiBuKSB0aHJvdyBuZXcgRXJyb3IoImludmFsaWQgY2FsbGJhY2s6ICIgKyBuKTsgZm9yICg7ICsrbyA8IGE7KWlmIChlID0gKHQgPSBpW29dKS50eXBlKSByW2VdID0gVihyW2VdLCB0Lm5hbWUsIG4pOyBlbHNlIGlmIChudWxsID09IG4pIGZvciAoZSBpbiByKSByW2VdID0gVihyW2VdLCB0Lm5hbWUsIG51bGwpOyByZXR1cm4gdGhpcyB9IGZvciAoOyArK28gPCBhOylpZiAoKGUgPSAodCA9IGlbb10pLnR5cGUpICYmIChlID0gWChyW2VdLCB0Lm5hbWUpKSkgcmV0dXJuIGUgfSwgY29weTogZnVuY3Rpb24gKCkgeyB2YXIgdCA9IHt9LCBuID0gdGhpcy5fOyBmb3IgKHZhciBlIGluIG4pIHRbZV0gPSBuW2VdLnNsaWNlKCk7IHJldHVybiBuZXcgSCh0KSB9LCBjYWxsOiBmdW5jdGlvbiAodCwgbikgeyBpZiAoKGUgPSBhcmd1bWVudHMubGVuZ3RoIC0gMikgPiAwKSBmb3IgKHZhciBlLCByLCBpID0gbmV3IEFycmF5KGUpLCBvID0gMDsgbyA8IGU7ICsrbylpW29dID0gYXJndW1lbnRzW28gKyAyXTsgaWYgKCF0aGlzLl8uaGFzT3duUHJvcGVydHkodCkpIHRocm93IG5ldyBFcnJvcigidW5rbm93biB0eXBlOiAiICsgdCk7IGZvciAobyA9IDAsIGUgPSAociA9IHRoaXMuX1t0XSkubGVuZ3RoOyBvIDwgZTsgKytvKXJbb10udmFsdWUuYXBwbHkobiwgaSkgfSwgYXBwbHk6IGZ1bmN0aW9uICh0LCBuLCBlKSB7IGlmICghdGhpcy5fLmhhc093blByb3BlcnR5KHQpKSB0aHJvdyBuZXcgRXJyb3IoInVua25vd24gdHlwZTogIiArIHQpOyBmb3IgKHZhciByID0gdGhpcy5fW3RdLCBpID0gMCwgbyA9IHIubGVuZ3RoOyBpIDwgbzsgKytpKXJbaV0udmFsdWUuYXBwbHkobiwgZSkgfSB9OyB2YXIgRyA9ICJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIiwgJCA9IHsgc3ZnOiAiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciLCB4aHRtbDogRywgeGxpbms6ICJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiwgeG1sOiAiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlIiwgeG1sbnM6ICJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3htbG5zLyIgfTsgZnVuY3Rpb24gVyh0KSB7IHZhciBuID0gdCArPSAiIiwgZSA9IG4uaW5kZXhPZigiOiIpOyByZXR1cm4gZSA+PSAwICYmICJ4bWxucyIgIT09IChuID0gdC5zbGljZSgwLCBlKSkgJiYgKHQgPSB0LnNsaWNlKGUgKyAxKSksICQuaGFzT3duUHJvcGVydHkobikgPyB7IHNwYWNlOiAkW25dLCBsb2NhbDogdCB9IDogdCB9IGZ1bmN0aW9uIFoodCkgeyB2YXIgbiA9IFcodCk7IHJldHVybiAobi5sb2NhbCA/IGZ1bmN0aW9uICh0KSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHQuc3BhY2UsIHQubG9jYWwpIH0gfSA6IGZ1bmN0aW9uICh0KSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHZhciBuID0gdGhpcy5vd25lckRvY3VtZW50LCBlID0gdGhpcy5uYW1lc3BhY2VVUkk7IHJldHVybiBlID09PSBHICYmIG4uZG9jdW1lbnRFbGVtZW50Lm5hbWVzcGFjZVVSSSA9PT0gRyA/IG4uY3JlYXRlRWxlbWVudCh0KSA6IG4uY3JlYXRlRWxlbWVudE5TKGUsIHQpIH0gfSkobikgfSBmdW5jdGlvbiBRKCkgeyB9IGZ1bmN0aW9uIEsodCkgeyByZXR1cm4gbnVsbCA9PSB0ID8gUSA6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMucXVlcnlTZWxlY3Rvcih0KSB9IH0gZnVuY3Rpb24gSigpIHsgcmV0dXJuIFtdIH0gZnVuY3Rpb24gdHQodCkgeyByZXR1cm4gbnVsbCA9PSB0ID8gSiA6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMucXVlcnlTZWxlY3RvckFsbCh0KSB9IH0gZnVuY3Rpb24gbnQodCkgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpcy5tYXRjaGVzKHQpIH0gfSBmdW5jdGlvbiBldCh0KSB7IHJldHVybiBuZXcgQXJyYXkodC5sZW5ndGgpIH0gZnVuY3Rpb24gcnQodCwgbikgeyB0aGlzLm93bmVyRG9jdW1lbnQgPSB0Lm93bmVyRG9jdW1lbnQsIHRoaXMubmFtZXNwYWNlVVJJID0gdC5uYW1lc3BhY2VVUkksIHRoaXMuX25leHQgPSBudWxsLCB0aGlzLl9wYXJlbnQgPSB0LCB0aGlzLl9fZGF0YV9fID0gbiB9IHJ0LnByb3RvdHlwZSA9IHsgY29uc3RydWN0b3I6IHJ0LCBhcHBlbmRDaGlsZDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHRoaXMuX3BhcmVudC5pbnNlcnRCZWZvcmUodCwgdGhpcy5fbmV4dCkgfSwgaW5zZXJ0QmVmb3JlOiBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gdGhpcy5fcGFyZW50Lmluc2VydEJlZm9yZSh0LCBuKSB9LCBxdWVyeVNlbGVjdG9yOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gdGhpcy5fcGFyZW50LnF1ZXJ5U2VsZWN0b3IodCkgfSwgcXVlcnlTZWxlY3RvckFsbDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHRoaXMuX3BhcmVudC5xdWVyeVNlbGVjdG9yQWxsKHQpIH0gfTsgdmFyIGl0ID0gIiQiOyBmdW5jdGlvbiBvdCh0LCBuLCBlLCByLCBpLCBvKSB7IGZvciAodmFyIGEsIHUgPSAwLCBjID0gbi5sZW5ndGgsIGYgPSBvLmxlbmd0aDsgdSA8IGY7ICsrdSkoYSA9IG5bdV0pID8gKGEuX19kYXRhX18gPSBvW3VdLCByW3VdID0gYSkgOiBlW3VdID0gbmV3IHJ0KHQsIG9bdV0pOyBmb3IgKDsgdSA8IGM7ICsrdSkoYSA9IG5bdV0pICYmIChpW3VdID0gYSkgfSBmdW5jdGlvbiBhdCh0LCBuLCBlLCByLCBpLCBvLCBhKSB7IHZhciB1LCBjLCBmLCBzID0ge30sIGwgPSBuLmxlbmd0aCwgaCA9IG8ubGVuZ3RoLCBkID0gbmV3IEFycmF5KGwpOyBmb3IgKHUgPSAwOyB1IDwgbDsgKyt1KShjID0gblt1XSkgJiYgKGRbdV0gPSBmID0gaXQgKyBhLmNhbGwoYywgYy5fX2RhdGFfXywgdSwgbiksIGYgaW4gcyA/IGlbdV0gPSBjIDogc1tmXSA9IGMpOyBmb3IgKHUgPSAwOyB1IDwgaDsgKyt1KShjID0gc1tmID0gaXQgKyBhLmNhbGwodCwgb1t1XSwgdSwgbyldKSA/IChyW3VdID0gYywgYy5fX2RhdGFfXyA9IG9bdV0sIHNbZl0gPSBudWxsKSA6IGVbdV0gPSBuZXcgcnQodCwgb1t1XSk7IGZvciAodSA9IDA7IHUgPCBsOyArK3UpKGMgPSBuW3VdKSAmJiBzW2RbdV1dID09PSBjICYmIChpW3VdID0gYykgfSBmdW5jdGlvbiB1dCh0LCBuKSB7IHJldHVybiB0IDwgbiA/IC0xIDogdCA+IG4gPyAxIDogdCA+PSBuID8gMCA6IE5hTiB9IGZ1bmN0aW9uIGN0KHQpIHsgcmV0dXJuIHQub3duZXJEb2N1bWVudCAmJiB0Lm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcgfHwgdC5kb2N1bWVudCAmJiB0IHx8IHQuZGVmYXVsdFZpZXcgfSBmdW5jdGlvbiBmdCh0LCBuKSB7IHJldHVybiB0LnN0eWxlLmdldFByb3BlcnR5VmFsdWUobikgfHwgY3QodCkuZ2V0Q29tcHV0ZWRTdHlsZSh0LCBudWxsKS5nZXRQcm9wZXJ0eVZhbHVlKG4pIH0gZnVuY3Rpb24gc3QodCkgeyByZXR1cm4gdC50cmltKCkuc3BsaXQoL158XHMrLykgfSBmdW5jdGlvbiBsdCh0KSB7IHJldHVybiB0LmNsYXNzTGlzdCB8fCBuZXcgaHQodCkgfSBmdW5jdGlvbiBodCh0KSB7IHRoaXMuX25vZGUgPSB0LCB0aGlzLl9uYW1lcyA9IHN0KHQuZ2V0QXR0cmlidXRlKCJjbGFzcyIpIHx8ICIiKSB9IGZ1bmN0aW9uIGR0KHQsIG4pIHsgZm9yICh2YXIgZSA9IGx0KHQpLCByID0gLTEsIGkgPSBuLmxlbmd0aDsgKytyIDwgaTspZS5hZGQobltyXSkgfSBmdW5jdGlvbiBwdCh0LCBuKSB7IGZvciAodmFyIGUgPSBsdCh0KSwgciA9IC0xLCBpID0gbi5sZW5ndGg7ICsrciA8IGk7KWUucmVtb3ZlKG5bcl0pIH0gZnVuY3Rpb24gdnQoKSB7IHRoaXMudGV4dENvbnRlbnQgPSAiIiB9IGZ1bmN0aW9uIGd0KCkgeyB0aGlzLmlubmVySFRNTCA9ICIiIH0gZnVuY3Rpb24geXQoKSB7IHRoaXMubmV4dFNpYmxpbmcgJiYgdGhpcy5wYXJlbnROb2RlLmFwcGVuZENoaWxkKHRoaXMpIH0gZnVuY3Rpb24gX3QoKSB7IHRoaXMucHJldmlvdXNTaWJsaW5nICYmIHRoaXMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodGhpcywgdGhpcy5wYXJlbnROb2RlLmZpcnN0Q2hpbGQpIH0gZnVuY3Rpb24gYnQoKSB7IHJldHVybiBudWxsIH0gZnVuY3Rpb24gbXQoKSB7IHZhciB0ID0gdGhpcy5wYXJlbnROb2RlOyB0ICYmIHQucmVtb3ZlQ2hpbGQodGhpcykgfSBmdW5jdGlvbiB4dCgpIHsgdmFyIHQgPSB0aGlzLmNsb25lTm9kZSghMSksIG4gPSB0aGlzLnBhcmVudE5vZGU7IHJldHVybiBuID8gbi5pbnNlcnRCZWZvcmUodCwgdGhpcy5uZXh0U2libGluZykgOiB0IH0gZnVuY3Rpb24gd3QoKSB7IHZhciB0ID0gdGhpcy5jbG9uZU5vZGUoITApLCBuID0gdGhpcy5wYXJlbnROb2RlOyByZXR1cm4gbiA/IG4uaW5zZXJ0QmVmb3JlKHQsIHRoaXMubmV4dFNpYmxpbmcpIDogdCB9IGh0LnByb3RvdHlwZSA9IHsgYWRkOiBmdW5jdGlvbiAodCkgeyB0aGlzLl9uYW1lcy5pbmRleE9mKHQpIDwgMCAmJiAodGhpcy5fbmFtZXMucHVzaCh0KSwgdGhpcy5fbm9kZS5zZXRBdHRyaWJ1dGUoImNsYXNzIiwgdGhpcy5fbmFtZXMuam9pbigiICIpKSkgfSwgcmVtb3ZlOiBmdW5jdGlvbiAodCkgeyB2YXIgbiA9IHRoaXMuX25hbWVzLmluZGV4T2YodCk7IG4gPj0gMCAmJiAodGhpcy5fbmFtZXMuc3BsaWNlKG4sIDEpLCB0aGlzLl9ub2RlLnNldEF0dHJpYnV0ZSgiY2xhc3MiLCB0aGlzLl9uYW1lcy5qb2luKCIgIikpKSB9LCBjb250YWluczogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHRoaXMuX25hbWVzLmluZGV4T2YodCkgPj0gMCB9IH07IHZhciBNdCA9IHt9OyAodC5ldmVudCA9IG51bGwsICJ1bmRlZmluZWQiICE9IHR5cGVvZiBkb2N1bWVudCkgJiYgKCJvbm1vdXNlZW50ZXIiIGluIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCB8fCAoTXQgPSB7IG1vdXNlZW50ZXI6ICJtb3VzZW92ZXIiLCBtb3VzZWxlYXZlOiAibW91c2VvdXQiIH0pKTsgZnVuY3Rpb24gTnQodCwgbiwgZSkgeyByZXR1cm4gdCA9IFR0KHQsIG4sIGUpLCBmdW5jdGlvbiAobikgeyB2YXIgZSA9IG4ucmVsYXRlZFRhcmdldDsgZSAmJiAoZSA9PT0gdGhpcyB8fCA4ICYgZS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbih0aGlzKSkgfHwgdC5jYWxsKHRoaXMsIG4pIH0gfSBmdW5jdGlvbiBUdChuLCBlLCByKSB7IHJldHVybiBmdW5jdGlvbiAoaSkgeyB2YXIgbyA9IHQuZXZlbnQ7IHQuZXZlbnQgPSBpOyB0cnkgeyBuLmNhbGwodGhpcywgdGhpcy5fX2RhdGFfXywgZSwgcikgfSBmaW5hbGx5IHsgdC5ldmVudCA9IG8gfSB9IH0gZnVuY3Rpb24gQXQodCkgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyB2YXIgbiA9IHRoaXMuX19vbjsgaWYgKG4pIHsgZm9yICh2YXIgZSwgciA9IDAsIGkgPSAtMSwgbyA9IG4ubGVuZ3RoOyByIDwgbzsgKytyKWUgPSBuW3JdLCB0LnR5cGUgJiYgZS50eXBlICE9PSB0LnR5cGUgfHwgZS5uYW1lICE9PSB0Lm5hbWUgPyBuWysraV0gPSBlIDogdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKGUudHlwZSwgZS5saXN0ZW5lciwgZS5jYXB0dXJlKTsgKytpID8gbi5sZW5ndGggPSBpIDogZGVsZXRlIHRoaXMuX19vbiB9IH0gfSBmdW5jdGlvbiBTdCh0LCBuLCBlKSB7IHZhciByID0gTXQuaGFzT3duUHJvcGVydHkodC50eXBlKSA/IE50IDogVHQ7IHJldHVybiBmdW5jdGlvbiAoaSwgbywgYSkgeyB2YXIgdSwgYyA9IHRoaXMuX19vbiwgZiA9IHIobiwgbywgYSk7IGlmIChjKSBmb3IgKHZhciBzID0gMCwgbCA9IGMubGVuZ3RoOyBzIDwgbDsgKytzKWlmICgodSA9IGNbc10pLnR5cGUgPT09IHQudHlwZSAmJiB1Lm5hbWUgPT09IHQubmFtZSkgcmV0dXJuIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcih1LnR5cGUsIHUubGlzdGVuZXIsIHUuY2FwdHVyZSksIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcih1LnR5cGUsIHUubGlzdGVuZXIgPSBmLCB1LmNhcHR1cmUgPSBlKSwgdm9pZCAodS52YWx1ZSA9IG4pOyB0aGlzLmFkZEV2ZW50TGlzdGVuZXIodC50eXBlLCBmLCBlKSwgdSA9IHsgdHlwZTogdC50eXBlLCBuYW1lOiB0Lm5hbWUsIHZhbHVlOiBuLCBsaXN0ZW5lcjogZiwgY2FwdHVyZTogZSB9LCBjID8gYy5wdXNoKHUpIDogdGhpcy5fX29uID0gW3VdIH0gfSBmdW5jdGlvbiBrdChuLCBlLCByLCBpKSB7IHZhciBvID0gdC5ldmVudDsgbi5zb3VyY2VFdmVudCA9IHQuZXZlbnQsIHQuZXZlbnQgPSBuOyB0cnkgeyByZXR1cm4gZS5hcHBseShyLCBpKSB9IGZpbmFsbHkgeyB0LmV2ZW50ID0gbyB9IH0gZnVuY3Rpb24gRXQodCwgbiwgZSkgeyB2YXIgciA9IGN0KHQpLCBpID0gci5DdXN0b21FdmVudDsgImZ1bmN0aW9uIiA9PSB0eXBlb2YgaSA/IGkgPSBuZXcgaShuLCBlKSA6IChpID0gci5kb2N1bWVudC5jcmVhdGVFdmVudCgiRXZlbnQiKSwgZSA/IChpLmluaXRFdmVudChuLCBlLmJ1YmJsZXMsIGUuY2FuY2VsYWJsZSksIGkuZGV0YWlsID0gZS5kZXRhaWwpIDogaS5pbml0RXZlbnQobiwgITEsICExKSksIHQuZGlzcGF0Y2hFdmVudChpKSB9IHZhciBDdCA9IFtudWxsXTsgZnVuY3Rpb24gUHQodCwgbikgeyB0aGlzLl9ncm91cHMgPSB0LCB0aGlzLl9wYXJlbnRzID0gbiB9IGZ1bmN0aW9uIHp0KCkgeyByZXR1cm4gbmV3IFB0KFtbZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50XV0sIEN0KSB9IGZ1bmN0aW9uIFJ0KHQpIHsgcmV0dXJuICJzdHJpbmciID09IHR5cGVvZiB0ID8gbmV3IFB0KFtbZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0KV1dLCBbZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50XSkgOiBuZXcgUHQoW1t0XV0sIEN0KSB9IFB0LnByb3RvdHlwZSA9IHp0LnByb3RvdHlwZSA9IHsgY29uc3RydWN0b3I6IFB0LCBzZWxlY3Q6IGZ1bmN0aW9uICh0KSB7ICJmdW5jdGlvbiIgIT0gdHlwZW9mIHQgJiYgKHQgPSBLKHQpKTsgZm9yICh2YXIgbiA9IHRoaXMuX2dyb3VwcywgZSA9IG4ubGVuZ3RoLCByID0gbmV3IEFycmF5KGUpLCBpID0gMDsgaSA8IGU7ICsraSlmb3IgKHZhciBvLCBhLCB1ID0gbltpXSwgYyA9IHUubGVuZ3RoLCBmID0gcltpXSA9IG5ldyBBcnJheShjKSwgcyA9IDA7IHMgPCBjOyArK3MpKG8gPSB1W3NdKSAmJiAoYSA9IHQuY2FsbChvLCBvLl9fZGF0YV9fLCBzLCB1KSkgJiYgKCJfX2RhdGFfXyIgaW4gbyAmJiAoYS5fX2RhdGFfXyA9IG8uX19kYXRhX18pLCBmW3NdID0gYSk7IHJldHVybiBuZXcgUHQociwgdGhpcy5fcGFyZW50cykgfSwgc2VsZWN0QWxsOiBmdW5jdGlvbiAodCkgeyAiZnVuY3Rpb24iICE9IHR5cGVvZiB0ICYmICh0ID0gdHQodCkpOyBmb3IgKHZhciBuID0gdGhpcy5fZ3JvdXBzLCBlID0gbi5sZW5ndGgsIHIgPSBbXSwgaSA9IFtdLCBvID0gMDsgbyA8IGU7ICsrbylmb3IgKHZhciBhLCB1ID0gbltvXSwgYyA9IHUubGVuZ3RoLCBmID0gMDsgZiA8IGM7ICsrZikoYSA9IHVbZl0pICYmIChyLnB1c2godC5jYWxsKGEsIGEuX19kYXRhX18sIGYsIHUpKSwgaS5wdXNoKGEpKTsgcmV0dXJuIG5ldyBQdChyLCBpKSB9LCBmaWx0ZXI6IGZ1bmN0aW9uICh0KSB7ICJmdW5jdGlvbiIgIT0gdHlwZW9mIHQgJiYgKHQgPSBudCh0KSk7IGZvciAodmFyIG4gPSB0aGlzLl9ncm91cHMsIGUgPSBuLmxlbmd0aCwgciA9IG5ldyBBcnJheShlKSwgaSA9IDA7IGkgPCBlOyArK2kpZm9yICh2YXIgbywgYSA9IG5baV0sIHUgPSBhLmxlbmd0aCwgYyA9IHJbaV0gPSBbXSwgZiA9IDA7IGYgPCB1OyArK2YpKG8gPSBhW2ZdKSAmJiB0LmNhbGwobywgby5fX2RhdGFfXywgZiwgYSkgJiYgYy5wdXNoKG8pOyByZXR1cm4gbmV3IFB0KHIsIHRoaXMuX3BhcmVudHMpIH0sIGRhdGE6IGZ1bmN0aW9uICh0LCBuKSB7IGlmICghdCkgcmV0dXJuIGQgPSBuZXcgQXJyYXkodGhpcy5zaXplKCkpLCBmID0gLTEsIHRoaXMuZWFjaChmdW5jdGlvbiAodCkgeyBkWysrZl0gPSB0IH0pLCBkOyB2YXIgZSA9IG4gPyBhdCA6IG90LCByID0gdGhpcy5fcGFyZW50cywgaSA9IHRoaXMuX2dyb3VwczsgImZ1bmN0aW9uIiAhPSB0eXBlb2YgdCAmJiAodCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiB0IH0gfSh0KSk7IGZvciAodmFyIG8gPSBpLmxlbmd0aCwgYSA9IG5ldyBBcnJheShvKSwgdSA9IG5ldyBBcnJheShvKSwgYyA9IG5ldyBBcnJheShvKSwgZiA9IDA7IGYgPCBvOyArK2YpIHsgdmFyIHMgPSByW2ZdLCBsID0gaVtmXSwgaCA9IGwubGVuZ3RoLCBkID0gdC5jYWxsKHMsIHMgJiYgcy5fX2RhdGFfXywgZiwgciksIHAgPSBkLmxlbmd0aCwgdiA9IHVbZl0gPSBuZXcgQXJyYXkocCksIGcgPSBhW2ZdID0gbmV3IEFycmF5KHApOyBlKHMsIGwsIHYsIGcsIGNbZl0gPSBuZXcgQXJyYXkoaCksIGQsIG4pOyBmb3IgKHZhciB5LCBfLCBiID0gMCwgbSA9IDA7IGIgPCBwOyArK2IpaWYgKHkgPSB2W2JdKSB7IGZvciAoYiA+PSBtICYmIChtID0gYiArIDEpOyAhKF8gPSBnW21dKSAmJiArK20gPCBwOyk7IHkuX25leHQgPSBfIHx8IG51bGwgfSB9IHJldHVybiAoYSA9IG5ldyBQdChhLCByKSkuX2VudGVyID0gdSwgYS5fZXhpdCA9IGMsIGEgfSwgZW50ZXI6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG5ldyBQdCh0aGlzLl9lbnRlciB8fCB0aGlzLl9ncm91cHMubWFwKGV0KSwgdGhpcy5fcGFyZW50cykgfSwgZXhpdDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbmV3IFB0KHRoaXMuX2V4aXQgfHwgdGhpcy5fZ3JvdXBzLm1hcChldCksIHRoaXMuX3BhcmVudHMpIH0sIGpvaW46IGZ1bmN0aW9uICh0LCBuLCBlKSB7IHZhciByID0gdGhpcy5lbnRlcigpLCBpID0gdGhpcywgbyA9IHRoaXMuZXhpdCgpOyByZXR1cm4gciA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0KHIpIDogci5hcHBlbmQodCArICIiKSwgbnVsbCAhPSBuICYmIChpID0gbihpKSksIG51bGwgPT0gZSA/IG8ucmVtb3ZlKCkgOiBlKG8pLCByICYmIGkgPyByLm1lcmdlKGkpLm9yZGVyKCkgOiBpIH0sIG1lcmdlOiBmdW5jdGlvbiAodCkgeyBmb3IgKHZhciBuID0gdGhpcy5fZ3JvdXBzLCBlID0gdC5fZ3JvdXBzLCByID0gbi5sZW5ndGgsIGkgPSBlLmxlbmd0aCwgbyA9IE1hdGgubWluKHIsIGkpLCBhID0gbmV3IEFycmF5KHIpLCB1ID0gMDsgdSA8IG87ICsrdSlmb3IgKHZhciBjLCBmID0gblt1XSwgcyA9IGVbdV0sIGwgPSBmLmxlbmd0aCwgaCA9IGFbdV0gPSBuZXcgQXJyYXkobCksIGQgPSAwOyBkIDwgbDsgKytkKShjID0gZltkXSB8fCBzW2RdKSAmJiAoaFtkXSA9IGMpOyBmb3IgKDsgdSA8IHI7ICsrdSlhW3VdID0gblt1XTsgcmV0dXJuIG5ldyBQdChhLCB0aGlzLl9wYXJlbnRzKSB9LCBvcmRlcjogZnVuY3Rpb24gKCkgeyBmb3IgKHZhciB0ID0gdGhpcy5fZ3JvdXBzLCBuID0gLTEsIGUgPSB0Lmxlbmd0aDsgKytuIDwgZTspZm9yICh2YXIgciwgaSA9IHRbbl0sIG8gPSBpLmxlbmd0aCAtIDEsIGEgPSBpW29dOyAtLW8gPj0gMDspKHIgPSBpW29dKSAmJiAoYSAmJiA0IF4gci5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihhKSAmJiBhLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHIsIGEpLCBhID0gcik7IHJldHVybiB0aGlzIH0sIHNvcnQ6IGZ1bmN0aW9uICh0KSB7IGZ1bmN0aW9uIG4obiwgZSkgeyByZXR1cm4gbiAmJiBlID8gdChuLl9fZGF0YV9fLCBlLl9fZGF0YV9fKSA6ICFuIC0gIWUgfSB0IHx8ICh0ID0gdXQpOyBmb3IgKHZhciBlID0gdGhpcy5fZ3JvdXBzLCByID0gZS5sZW5ndGgsIGkgPSBuZXcgQXJyYXkociksIG8gPSAwOyBvIDwgcjsgKytvKSB7IGZvciAodmFyIGEsIHUgPSBlW29dLCBjID0gdS5sZW5ndGgsIGYgPSBpW29dID0gbmV3IEFycmF5KGMpLCBzID0gMDsgcyA8IGM7ICsrcykoYSA9IHVbc10pICYmIChmW3NdID0gYSk7IGYuc29ydChuKSB9IHJldHVybiBuZXcgUHQoaSwgdGhpcy5fcGFyZW50cykub3JkZXIoKSB9LCBjYWxsOiBmdW5jdGlvbiAoKSB7IHZhciB0ID0gYXJndW1lbnRzWzBdOyByZXR1cm4gYXJndW1lbnRzWzBdID0gdGhpcywgdC5hcHBseShudWxsLCBhcmd1bWVudHMpLCB0aGlzIH0sIG5vZGVzOiBmdW5jdGlvbiAoKSB7IHZhciB0ID0gbmV3IEFycmF5KHRoaXMuc2l6ZSgpKSwgbiA9IC0xOyByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHsgdFsrK25dID0gdGhpcyB9KSwgdCB9LCBub2RlOiBmdW5jdGlvbiAoKSB7IGZvciAodmFyIHQgPSB0aGlzLl9ncm91cHMsIG4gPSAwLCBlID0gdC5sZW5ndGg7IG4gPCBlOyArK24pZm9yICh2YXIgciA9IHRbbl0sIGkgPSAwLCBvID0gci5sZW5ndGg7IGkgPCBvOyArK2kpIHsgdmFyIGEgPSByW2ldOyBpZiAoYSkgcmV0dXJuIGEgfSByZXR1cm4gbnVsbCB9LCBzaXplOiBmdW5jdGlvbiAoKSB7IHZhciB0ID0gMDsgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7ICsrdCB9KSwgdCB9LCBlbXB0eTogZnVuY3Rpb24gKCkgeyByZXR1cm4gIXRoaXMubm9kZSgpIH0sIGVhY2g6IGZ1bmN0aW9uICh0KSB7IGZvciAodmFyIG4gPSB0aGlzLl9ncm91cHMsIGUgPSAwLCByID0gbi5sZW5ndGg7IGUgPCByOyArK2UpZm9yICh2YXIgaSwgbyA9IG5bZV0sIGEgPSAwLCB1ID0gby5sZW5ndGg7IGEgPCB1OyArK2EpKGkgPSBvW2FdKSAmJiB0LmNhbGwoaSwgaS5fX2RhdGFfXywgYSwgbyk7IHJldHVybiB0aGlzIH0sIGF0dHI6IGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlID0gVyh0KTsgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSB7IHZhciByID0gdGhpcy5ub2RlKCk7IHJldHVybiBlLmxvY2FsID8gci5nZXRBdHRyaWJ1dGVOUyhlLnNwYWNlLCBlLmxvY2FsKSA6IHIuZ2V0QXR0cmlidXRlKGUpIH0gcmV0dXJuIHRoaXMuZWFjaCgobnVsbCA9PSBuID8gZS5sb2NhbCA/IGZ1bmN0aW9uICh0KSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHRoaXMucmVtb3ZlQXR0cmlidXRlTlModC5zcGFjZSwgdC5sb2NhbCkgfSB9IDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdGhpcy5yZW1vdmVBdHRyaWJ1dGUodCkgfSB9IDogImZ1bmN0aW9uIiA9PSB0eXBlb2YgbiA/IGUubG9jYWwgPyBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyB2YXIgZSA9IG4uYXBwbHkodGhpcywgYXJndW1lbnRzKTsgbnVsbCA9PSBlID8gdGhpcy5yZW1vdmVBdHRyaWJ1dGVOUyh0LnNwYWNlLCB0LmxvY2FsKSA6IHRoaXMuc2V0QXR0cmlidXRlTlModC5zcGFjZSwgdC5sb2NhbCwgZSkgfSB9IDogZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIGUgPSBuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IG51bGwgPT0gZSA/IHRoaXMucmVtb3ZlQXR0cmlidXRlKHQpIDogdGhpcy5zZXRBdHRyaWJ1dGUodCwgZSkgfSB9IDogZS5sb2NhbCA/IGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHRoaXMuc2V0QXR0cmlidXRlTlModC5zcGFjZSwgdC5sb2NhbCwgbikgfSB9IDogZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdGhpcy5zZXRBdHRyaWJ1dGUodCwgbikgfSB9KShlLCBuKSkgfSwgc3R5bGU6IGZ1bmN0aW9uICh0LCBuLCBlKSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID4gMSA/IHRoaXMuZWFjaCgobnVsbCA9PSBuID8gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdGhpcy5zdHlsZS5yZW1vdmVQcm9wZXJ0eSh0KSB9IH0gOiAiZnVuY3Rpb24iID09IHR5cGVvZiBuID8gZnVuY3Rpb24gKHQsIG4sIGUpIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIHIgPSBuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IG51bGwgPT0gciA/IHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkodCkgOiB0aGlzLnN0eWxlLnNldFByb3BlcnR5KHQsIHIsIGUpIH0gfSA6IGZ1bmN0aW9uICh0LCBuLCBlKSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHRoaXMuc3R5bGUuc2V0UHJvcGVydHkodCwgbiwgZSkgfSB9KSh0LCBuLCBudWxsID09IGUgPyAiIiA6IGUpKSA6IGZ0KHRoaXMubm9kZSgpLCB0KSB9LCBwcm9wZXJ0eTogZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gdGhpcy5lYWNoKChudWxsID09IG4gPyBmdW5jdGlvbiAodCkgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyBkZWxldGUgdGhpc1t0XSB9IH0gOiAiZnVuY3Rpb24iID09IHR5cGVvZiBuID8gZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIGUgPSBuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IG51bGwgPT0gZSA/IGRlbGV0ZSB0aGlzW3RdIDogdGhpc1t0XSA9IGUgfSB9IDogZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdGhpc1t0XSA9IG4gfSB9KSh0LCBuKSkgOiB0aGlzLm5vZGUoKVt0XSB9LCBjbGFzc2VkOiBmdW5jdGlvbiAodCwgbikgeyB2YXIgZSA9IHN0KHQgKyAiIik7IGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikgeyBmb3IgKHZhciByID0gbHQodGhpcy5ub2RlKCkpLCBpID0gLTEsIG8gPSBlLmxlbmd0aDsgKytpIDwgbzspaWYgKCFyLmNvbnRhaW5zKGVbaV0pKSByZXR1cm4gITE7IHJldHVybiAhMCB9IHJldHVybiB0aGlzLmVhY2goKCJmdW5jdGlvbiIgPT0gdHlwZW9mIG4gPyBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyAobi5hcHBseSh0aGlzLCBhcmd1bWVudHMpID8gZHQgOiBwdCkodGhpcywgdCkgfSB9IDogbiA/IGZ1bmN0aW9uICh0KSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IGR0KHRoaXMsIHQpIH0gfSA6IGZ1bmN0aW9uICh0KSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHB0KHRoaXMsIHQpIH0gfSkoZSwgbikpIH0sIHRleHQ6IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gdGhpcy5lYWNoKG51bGwgPT0gdCA/IHZ0IDogKCJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyBmdW5jdGlvbiAodCkgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyB2YXIgbiA9IHQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgdGhpcy50ZXh0Q29udGVudCA9IG51bGwgPT0gbiA/ICIiIDogbiB9IH0gOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyB0aGlzLnRleHRDb250ZW50ID0gdCB9IH0pKHQpKSA6IHRoaXMubm9kZSgpLnRleHRDb250ZW50IH0sIGh0bWw6IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gdGhpcy5lYWNoKG51bGwgPT0gdCA/IGd0IDogKCJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyBmdW5jdGlvbiAodCkgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyB2YXIgbiA9IHQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgdGhpcy5pbm5lckhUTUwgPSBudWxsID09IG4gPyAiIiA6IG4gfSB9IDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdGhpcy5pbm5lckhUTUwgPSB0IH0gfSkodCkpIDogdGhpcy5ub2RlKCkuaW5uZXJIVE1MIH0sIHJhaXNlOiBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzLmVhY2goeXQpIH0sIGxvd2VyOiBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzLmVhY2goX3QpIH0sIGFwcGVuZDogZnVuY3Rpb24gKHQpIHsgdmFyIG4gPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IFoodCk7IHJldHVybiB0aGlzLnNlbGVjdChmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzLmFwcGVuZENoaWxkKG4uYXBwbHkodGhpcywgYXJndW1lbnRzKSkgfSkgfSwgaW5zZXJ0OiBmdW5jdGlvbiAodCwgbikgeyB2YXIgZSA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogWih0KSwgciA9IG51bGwgPT0gbiA/IGJ0IDogImZ1bmN0aW9uIiA9PSB0eXBlb2YgbiA/IG4gOiBLKG4pOyByZXR1cm4gdGhpcy5zZWxlY3QoZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpcy5pbnNlcnRCZWZvcmUoZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpLCByLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgbnVsbCkgfSkgfSwgcmVtb3ZlOiBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzLmVhY2gobXQpIH0sIGNsb25lOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gdGhpcy5zZWxlY3QodCA/IHd0IDogeHQpIH0sIGRhdHVtOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IHRoaXMucHJvcGVydHkoIl9fZGF0YV9fIiwgdCkgOiB0aGlzLm5vZGUoKS5fX2RhdGFfXyB9LCBvbjogZnVuY3Rpb24gKHQsIG4sIGUpIHsgdmFyIHIsIGksIG8gPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gdC50cmltKCkuc3BsaXQoL158XHMrLykubWFwKGZ1bmN0aW9uICh0KSB7IHZhciBuID0gIiIsIGUgPSB0LmluZGV4T2YoIi4iKTsgcmV0dXJuIGUgPj0gMCAmJiAobiA9IHQuc2xpY2UoZSArIDEpLCB0ID0gdC5zbGljZSgwLCBlKSksIHsgdHlwZTogdCwgbmFtZTogbiB9IH0pIH0odCArICIiKSwgYSA9IG8ubGVuZ3RoOyBpZiAoIShhcmd1bWVudHMubGVuZ3RoIDwgMikpIHsgZm9yICh1ID0gbiA/IFN0IDogQXQsIG51bGwgPT0gZSAmJiAoZSA9ICExKSwgciA9IDA7IHIgPCBhOyArK3IpdGhpcy5lYWNoKHUob1tyXSwgbiwgZSkpOyByZXR1cm4gdGhpcyB9IHZhciB1ID0gdGhpcy5ub2RlKCkuX19vbjsgaWYgKHUpIGZvciAodmFyIGMsIGYgPSAwLCBzID0gdS5sZW5ndGg7IGYgPCBzOyArK2YpZm9yIChyID0gMCwgYyA9IHVbZl07IHIgPCBhOyArK3IpaWYgKChpID0gb1tyXSkudHlwZSA9PT0gYy50eXBlICYmIGkubmFtZSA9PT0gYy5uYW1lKSByZXR1cm4gYy52YWx1ZSB9LCBkaXNwYXRjaDogZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIHRoaXMuZWFjaCgoImZ1bmN0aW9uIiA9PSB0eXBlb2YgbiA/IGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiBFdCh0aGlzLCB0LCBuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIH0gfSA6IGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiBFdCh0aGlzLCB0LCBuKSB9IH0pKHQsIG4pKSB9IH07IHZhciBEdCA9IDA7IGZ1bmN0aW9uIHF0KCkgeyByZXR1cm4gbmV3IEx0IH0gZnVuY3Rpb24gTHQoKSB7IHRoaXMuXyA9ICJAIiArICgrK0R0KS50b1N0cmluZygzNikgfSBmdW5jdGlvbiBVdCgpIHsgZm9yICh2YXIgbiwgZSA9IHQuZXZlbnQ7IG4gPSBlLnNvdXJjZUV2ZW50OyllID0gbjsgcmV0dXJuIGUgfSBmdW5jdGlvbiBPdCh0LCBuKSB7IHZhciBlID0gdC5vd25lclNWR0VsZW1lbnQgfHwgdDsgaWYgKGUuY3JlYXRlU1ZHUG9pbnQpIHsgdmFyIHIgPSBlLmNyZWF0ZVNWR1BvaW50KCk7IHJldHVybiByLnggPSBuLmNsaWVudFgsIHIueSA9IG4uY2xpZW50WSwgWyhyID0gci5tYXRyaXhUcmFuc2Zvcm0odC5nZXRTY3JlZW5DVE0oKS5pbnZlcnNlKCkpKS54LCByLnldIH0gdmFyIGkgPSB0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpOyByZXR1cm4gW24uY2xpZW50WCAtIGkubGVmdCAtIHQuY2xpZW50TGVmdCwgbi5jbGllbnRZIC0gaS50b3AgLSB0LmNsaWVudFRvcF0gfSBmdW5jdGlvbiBCdCh0KSB7IHZhciBuID0gVXQoKTsgcmV0dXJuIG4uY2hhbmdlZFRvdWNoZXMgJiYgKG4gPSBuLmNoYW5nZWRUb3VjaGVzWzBdKSwgT3QodCwgbikgfSBmdW5jdGlvbiBGdCh0LCBuLCBlKSB7IGFyZ3VtZW50cy5sZW5ndGggPCAzICYmIChlID0gbiwgbiA9IFV0KCkuY2hhbmdlZFRvdWNoZXMpOyBmb3IgKHZhciByLCBpID0gMCwgbyA9IG4gPyBuLmxlbmd0aCA6IDA7IGkgPCBvOyArK2kpaWYgKChyID0gbltpXSkuaWRlbnRpZmllciA9PT0gZSkgcmV0dXJuIE90KHQsIHIpOyByZXR1cm4gbnVsbCB9IGZ1bmN0aW9uIFl0KCkgeyB0LmV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpIH0gZnVuY3Rpb24gSXQoKSB7IHQuZXZlbnQucHJldmVudERlZmF1bHQoKSwgdC5ldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKSB9IGZ1bmN0aW9uIEh0KHQpIHsgdmFyIG4gPSB0LmRvY3VtZW50LmRvY3VtZW50RWxlbWVudCwgZSA9IFJ0KHQpLm9uKCJkcmFnc3RhcnQuZHJhZyIsIEl0LCAhMCk7ICJvbnNlbGVjdHN0YXJ0IiBpbiBuID8gZS5vbigic2VsZWN0c3RhcnQuZHJhZyIsIEl0LCAhMCkgOiAobi5fX25vc2VsZWN0ID0gbi5zdHlsZS5Nb3pVc2VyU2VsZWN0LCBuLnN0eWxlLk1velVzZXJTZWxlY3QgPSAibm9uZSIpIH0gZnVuY3Rpb24ganQodCwgbikgeyB2YXIgZSA9IHQuZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LCByID0gUnQodCkub24oImRyYWdzdGFydC5kcmFnIiwgbnVsbCk7IG4gJiYgKHIub24oImNsaWNrLmRyYWciLCBJdCwgITApLCBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsgci5vbigiY2xpY2suZHJhZyIsIG51bGwpIH0sIDApKSwgIm9uc2VsZWN0c3RhcnQiIGluIGUgPyByLm9uKCJzZWxlY3RzdGFydC5kcmFnIiwgbnVsbCkgOiAoZS5zdHlsZS5Nb3pVc2VyU2VsZWN0ID0gZS5fX25vc2VsZWN0LCBkZWxldGUgZS5fX25vc2VsZWN0KSB9IGZ1bmN0aW9uIFh0KHQpIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHQgfSB9IGZ1bmN0aW9uIFZ0KHQsIG4sIGUsIHIsIGksIG8sIGEsIHUsIGMsIGYpIHsgdGhpcy50YXJnZXQgPSB0LCB0aGlzLnR5cGUgPSBuLCB0aGlzLnN1YmplY3QgPSBlLCB0aGlzLmlkZW50aWZpZXIgPSByLCB0aGlzLmFjdGl2ZSA9IGksIHRoaXMueCA9IG8sIHRoaXMueSA9IGEsIHRoaXMuZHggPSB1LCB0aGlzLmR5ID0gYywgdGhpcy5fID0gZiB9IGZ1bmN0aW9uIEd0KCkgeyByZXR1cm4gIXQuZXZlbnQuY3RybEtleSAmJiAhdC5ldmVudC5idXR0b24gfSBmdW5jdGlvbiAkdCgpIHsgcmV0dXJuIHRoaXMucGFyZW50Tm9kZSB9IGZ1bmN0aW9uIFd0KG4pIHsgcmV0dXJuIG51bGwgPT0gbiA/IHsgeDogdC5ldmVudC54LCB5OiB0LmV2ZW50LnkgfSA6IG4gfSBmdW5jdGlvbiBadCgpIHsgcmV0dXJuIG5hdmlnYXRvci5tYXhUb3VjaFBvaW50cyB8fCAib250b3VjaHN0YXJ0IiBpbiB0aGlzIH0gZnVuY3Rpb24gUXQodCwgbiwgZSkgeyB0LnByb3RvdHlwZSA9IG4ucHJvdG90eXBlID0gZSwgZS5jb25zdHJ1Y3RvciA9IHQgfSBmdW5jdGlvbiBLdCh0LCBuKSB7IHZhciBlID0gT2JqZWN0LmNyZWF0ZSh0LnByb3RvdHlwZSk7IGZvciAodmFyIHIgaW4gbikgZVtyXSA9IG5bcl07IHJldHVybiBlIH0gZnVuY3Rpb24gSnQoKSB7IH0gTHQucHJvdG90eXBlID0gcXQucHJvdG90eXBlID0geyBjb25zdHJ1Y3RvcjogTHQsIGdldDogZnVuY3Rpb24gKHQpIHsgZm9yICh2YXIgbiA9IHRoaXMuXzsgIShuIGluIHQpOylpZiAoISh0ID0gdC5wYXJlbnROb2RlKSkgcmV0dXJuOyByZXR1cm4gdFtuXSB9LCBzZXQ6IGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiB0W3RoaXMuX10gPSBuIH0sIHJlbW92ZTogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHRoaXMuXyBpbiB0ICYmIGRlbGV0ZSB0W3RoaXMuX10gfSwgdG9TdHJpbmc6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMuXyB9IH0sIFZ0LnByb3RvdHlwZS5vbiA9IGZ1bmN0aW9uICgpIHsgdmFyIHQgPSB0aGlzLl8ub24uYXBwbHkodGhpcy5fLCBhcmd1bWVudHMpOyByZXR1cm4gdCA9PT0gdGhpcy5fID8gdGhpcyA6IHQgfTsgdmFyIHRuID0gIlxccyooWystXT9cXGQrKVxccyoiLCBubiA9ICJcXHMqKFsrLV0/XFxkKlxcLj9cXGQrKD86W2VFXVsrLV0/XFxkKyk/KVxccyoiLCBlbiA9ICJcXHMqKFsrLV0/XFxkKlxcLj9cXGQrKD86W2VFXVsrLV0/XFxkKyk/KSVcXHMqIiwgcm4gPSAvXiMoWzAtOWEtZl17Myw4fSkkLywgb24gPSBuZXcgUmVnRXhwKCJecmdiXFwoIiArIFt0biwgdG4sIHRuXSArICJcXCkkIiksIGFuID0gbmV3IFJlZ0V4cCgiXnJnYlxcKCIgKyBbZW4sIGVuLCBlbl0gKyAiXFwpJCIpLCB1biA9IG5ldyBSZWdFeHAoIl5yZ2JhXFwoIiArIFt0biwgdG4sIHRuLCBubl0gKyAiXFwpJCIpLCBjbiA9IG5ldyBSZWdFeHAoIl5yZ2JhXFwoIiArIFtlbiwgZW4sIGVuLCBubl0gKyAiXFwpJCIpLCBmbiA9IG5ldyBSZWdFeHAoIl5oc2xcXCgiICsgW25uLCBlbiwgZW5dICsgIlxcKSQiKSwgc24gPSBuZXcgUmVnRXhwKCJeaHNsYVxcKCIgKyBbbm4sIGVuLCBlbiwgbm5dICsgIlxcKSQiKSwgbG4gPSB7IGFsaWNlYmx1ZTogMTU3OTIzODMsIGFudGlxdWV3aGl0ZTogMTY0NDQzNzUsIGFxdWE6IDY1NTM1LCBhcXVhbWFyaW5lOiA4Mzg4NTY0LCBhenVyZTogMTU3OTQxNzUsIGJlaWdlOiAxNjExOTI2MCwgYmlzcXVlOiAxNjc3MDI0NCwgYmxhY2s6IDAsIGJsYW5jaGVkYWxtb25kOiAxNjc3MjA0NSwgYmx1ZTogMjU1LCBibHVldmlvbGV0OiA5MDU1MjAyLCBicm93bjogMTA4MjQyMzQsIGJ1cmx5d29vZDogMTQ1OTYyMzEsIGNhZGV0Ymx1ZTogNjI2NjUyOCwgY2hhcnRyZXVzZTogODM4ODM1MiwgY2hvY29sYXRlOiAxMzc4OTQ3MCwgY29yYWw6IDE2NzQ0MjcyLCBjb3JuZmxvd2VyYmx1ZTogNjU5MTk4MSwgY29ybnNpbGs6IDE2Nzc1Mzg4LCBjcmltc29uOiAxNDQyMzEwMCwgY3lhbjogNjU1MzUsIGRhcmtibHVlOiAxMzksIGRhcmtjeWFuOiAzNTcyMywgZGFya2dvbGRlbnJvZDogMTIwOTI5MzksIGRhcmtncmF5OiAxMTExOTAxNywgZGFya2dyZWVuOiAyNTYwMCwgZGFya2dyZXk6IDExMTE5MDE3LCBkYXJra2hha2k6IDEyNDMzMjU5LCBkYXJrbWFnZW50YTogOTEwOTY0MywgZGFya29saXZlZ3JlZW46IDU1OTc5OTksIGRhcmtvcmFuZ2U6IDE2NzQ3NTIwLCBkYXJrb3JjaGlkOiAxMDA0MDAxMiwgZGFya3JlZDogOTEwOTUwNCwgZGFya3NhbG1vbjogMTUzMDg0MTAsIGRhcmtzZWFncmVlbjogOTQxOTkxOSwgZGFya3NsYXRlYmx1ZTogNDczNDM0NywgZGFya3NsYXRlZ3JheTogMzEwMDQ5NSwgZGFya3NsYXRlZ3JleTogMzEwMDQ5NSwgZGFya3R1cnF1b2lzZTogNTI5NDUsIGRhcmt2aW9sZXQ6IDk2OTk1MzksIGRlZXBwaW5rOiAxNjcxNjk0NywgZGVlcHNreWJsdWU6IDQ5MTUxLCBkaW1ncmF5OiA2OTA4MjY1LCBkaW1ncmV5OiA2OTA4MjY1LCBkb2RnZXJibHVlOiAyMDAzMTk5LCBmaXJlYnJpY2s6IDExNjc0MTQ2LCBmbG9yYWx3aGl0ZTogMTY3NzU5MjAsIGZvcmVzdGdyZWVuOiAyMjYzODQyLCBmdWNoc2lhOiAxNjcxMTkzNSwgZ2FpbnNib3JvOiAxNDQ3NDQ2MCwgZ2hvc3R3aGl0ZTogMTYzMTY2NzEsIGdvbGQ6IDE2NzY2NzIwLCBnb2xkZW5yb2Q6IDE0MzI5MTIwLCBncmF5OiA4NDIxNTA0LCBncmVlbjogMzI3NjgsIGdyZWVueWVsbG93OiAxMTQwMzA1NSwgZ3JleTogODQyMTUwNCwgaG9uZXlkZXc6IDE1Nzk0MTYwLCBob3RwaW5rOiAxNjczODc0MCwgaW5kaWFucmVkOiAxMzQ1ODUyNCwgaW5kaWdvOiA0OTE1MzMwLCBpdm9yeTogMTY3NzcyMDAsIGtoYWtpOiAxNTc4NzY2MCwgbGF2ZW5kZXI6IDE1MTMyNDEwLCBsYXZlbmRlcmJsdXNoOiAxNjc3MzM2NSwgbGF3bmdyZWVuOiA4MTkwOTc2LCBsZW1vbmNoaWZmb246IDE2Nzc1ODg1LCBsaWdodGJsdWU6IDExMzkzMjU0LCBsaWdodGNvcmFsOiAxNTc2MTUzNiwgbGlnaHRjeWFuOiAxNDc0NTU5OSwgbGlnaHRnb2xkZW5yb2R5ZWxsb3c6IDE2NDQ4MjEwLCBsaWdodGdyYXk6IDEzODgyMzIzLCBsaWdodGdyZWVuOiA5NDk4MjU2LCBsaWdodGdyZXk6IDEzODgyMzIzLCBsaWdodHBpbms6IDE2NzU4NDY1LCBsaWdodHNhbG1vbjogMTY3NTI3NjIsIGxpZ2h0c2VhZ3JlZW46IDIxNDI4OTAsIGxpZ2h0c2t5Ymx1ZTogODkwMDM0NiwgbGlnaHRzbGF0ZWdyYXk6IDc4MzM3NTMsIGxpZ2h0c2xhdGVncmV5OiA3ODMzNzUzLCBsaWdodHN0ZWVsYmx1ZTogMTE1ODQ3MzQsIGxpZ2h0eWVsbG93OiAxNjc3NzE4NCwgbGltZTogNjUyODAsIGxpbWVncmVlbjogMzMyOTMzMCwgbGluZW46IDE2NDQ1NjcwLCBtYWdlbnRhOiAxNjcxMTkzNSwgbWFyb29uOiA4Mzg4NjA4LCBtZWRpdW1hcXVhbWFyaW5lOiA2NzM3MzIyLCBtZWRpdW1ibHVlOiAyMDUsIG1lZGl1bW9yY2hpZDogMTIyMTE2NjcsIG1lZGl1bXB1cnBsZTogOTY2MjY4MywgbWVkaXVtc2VhZ3JlZW46IDM5NzgwOTcsIG1lZGl1bXNsYXRlYmx1ZTogODA4Nzc5MCwgbWVkaXVtc3ByaW5nZ3JlZW46IDY0MTU0LCBtZWRpdW10dXJxdW9pc2U6IDQ3NzIzMDAsIG1lZGl1bXZpb2xldHJlZDogMTMwNDcxNzMsIG1pZG5pZ2h0Ymx1ZTogMTY0NDkxMiwgbWludGNyZWFtOiAxNjEyMTg1MCwgbWlzdHlyb3NlOiAxNjc3MDI3MywgbW9jY2FzaW46IDE2NzcwMjI5LCBuYXZham93aGl0ZTogMTY3Njg2ODUsIG5hdnk6IDEyOCwgb2xkbGFjZTogMTY2NDM1NTgsIG9saXZlOiA4NDIxMzc2LCBvbGl2ZWRyYWI6IDcwNDg3MzksIG9yYW5nZTogMTY3NTM5MjAsIG9yYW5nZXJlZDogMTY3MjkzNDQsIG9yY2hpZDogMTQzMTU3MzQsIHBhbGVnb2xkZW5yb2Q6IDE1NjU3MTMwLCBwYWxlZ3JlZW46IDEwMDI1ODgwLCBwYWxldHVycXVvaXNlOiAxMTUyOTk2NiwgcGFsZXZpb2xldHJlZDogMTQzODEyMDMsIHBhcGF5YXdoaXA6IDE2NzczMDc3LCBwZWFjaHB1ZmY6IDE2NzY3NjczLCBwZXJ1OiAxMzQ2ODk5MSwgcGluazogMTY3NjEwMzUsIHBsdW06IDE0NTI0NjM3LCBwb3dkZXJibHVlOiAxMTU5MTkxMCwgcHVycGxlOiA4Mzg4NzM2LCByZWJlY2NhcHVycGxlOiA2Njk3ODgxLCByZWQ6IDE2NzExNjgwLCByb3N5YnJvd246IDEyMzU3NTE5LCByb3lhbGJsdWU6IDQyODY5NDUsIHNhZGRsZWJyb3duOiA5MTI3MTg3LCBzYWxtb246IDE2NDE2ODgyLCBzYW5keWJyb3duOiAxNjAzMjg2NCwgc2VhZ3JlZW46IDMwNTAzMjcsIHNlYXNoZWxsOiAxNjc3NDYzOCwgc2llbm5hOiAxMDUwNjc5Nywgc2lsdmVyOiAxMjYzMjI1Niwgc2t5Ymx1ZTogODkwMDMzMSwgc2xhdGVibHVlOiA2OTcwMDYxLCBzbGF0ZWdyYXk6IDczNzI5NDQsIHNsYXRlZ3JleTogNzM3Mjk0NCwgc25vdzogMTY3NzU5MzAsIHNwcmluZ2dyZWVuOiA2NTQwNywgc3RlZWxibHVlOiA0NjIwOTgwLCB0YW46IDEzODA4NzgwLCB0ZWFsOiAzMjg5NiwgdGhpc3RsZTogMTQyMDQ4ODgsIHRvbWF0bzogMTY3MzcwOTUsIHR1cnF1b2lzZTogNDI1MTg1NiwgdmlvbGV0OiAxNTYzMTA4Niwgd2hlYXQ6IDE2MTEzMzMxLCB3aGl0ZTogMTY3NzcyMTUsIHdoaXRlc21va2U6IDE2MTE5Mjg1LCB5ZWxsb3c6IDE2Nzc2OTYwLCB5ZWxsb3dncmVlbjogMTAxNDUwNzQgfTsgZnVuY3Rpb24gaG4oKSB7IHJldHVybiB0aGlzLnJnYigpLmZvcm1hdEhleCgpIH0gZnVuY3Rpb24gZG4oKSB7IHJldHVybiB0aGlzLnJnYigpLmZvcm1hdFJnYigpIH0gZnVuY3Rpb24gcG4odCkgeyB2YXIgbiwgZTsgcmV0dXJuIHQgPSAodCArICIiKS50cmltKCkudG9Mb3dlckNhc2UoKSwgKG4gPSBybi5leGVjKHQpKSA/IChlID0gblsxXS5sZW5ndGgsIG4gPSBwYXJzZUludChuWzFdLCAxNiksIDYgPT09IGUgPyB2bihuKSA6IDMgPT09IGUgPyBuZXcgYm4obiA+PiA4ICYgMTUgfCBuID4+IDQgJiAyNDAsIG4gPj4gNCAmIDE1IHwgMjQwICYgbiwgKDE1ICYgbikgPDwgNCB8IDE1ICYgbiwgMSkgOiA4ID09PSBlID8gZ24obiA+PiAyNCAmIDI1NSwgbiA+PiAxNiAmIDI1NSwgbiA+PiA4ICYgMjU1LCAoMjU1ICYgbikgLyAyNTUpIDogNCA9PT0gZSA/IGduKG4gPj4gMTIgJiAxNSB8IG4gPj4gOCAmIDI0MCwgbiA+PiA4ICYgMTUgfCBuID4+IDQgJiAyNDAsIG4gPj4gNCAmIDE1IHwgMjQwICYgbiwgKCgxNSAmIG4pIDw8IDQgfCAxNSAmIG4pIC8gMjU1KSA6IG51bGwpIDogKG4gPSBvbi5leGVjKHQpKSA/IG5ldyBibihuWzFdLCBuWzJdLCBuWzNdLCAxKSA6IChuID0gYW4uZXhlYyh0KSkgPyBuZXcgYm4oMjU1ICogblsxXSAvIDEwMCwgMjU1ICogblsyXSAvIDEwMCwgMjU1ICogblszXSAvIDEwMCwgMSkgOiAobiA9IHVuLmV4ZWModCkpID8gZ24oblsxXSwgblsyXSwgblszXSwgbls0XSkgOiAobiA9IGNuLmV4ZWModCkpID8gZ24oMjU1ICogblsxXSAvIDEwMCwgMjU1ICogblsyXSAvIDEwMCwgMjU1ICogblszXSAvIDEwMCwgbls0XSkgOiAobiA9IGZuLmV4ZWModCkpID8gTW4oblsxXSwgblsyXSAvIDEwMCwgblszXSAvIDEwMCwgMSkgOiAobiA9IHNuLmV4ZWModCkpID8gTW4oblsxXSwgblsyXSAvIDEwMCwgblszXSAvIDEwMCwgbls0XSkgOiBsbi5oYXNPd25Qcm9wZXJ0eSh0KSA/IHZuKGxuW3RdKSA6ICJ0cmFuc3BhcmVudCIgPT09IHQgPyBuZXcgYm4oTmFOLCBOYU4sIE5hTiwgMCkgOiBudWxsIH0gZnVuY3Rpb24gdm4odCkgeyByZXR1cm4gbmV3IGJuKHQgPj4gMTYgJiAyNTUsIHQgPj4gOCAmIDI1NSwgMjU1ICYgdCwgMSkgfSBmdW5jdGlvbiBnbih0LCBuLCBlLCByKSB7IHJldHVybiByIDw9IDAgJiYgKHQgPSBuID0gZSA9IE5hTiksIG5ldyBibih0LCBuLCBlLCByKSB9IGZ1bmN0aW9uIHluKHQpIHsgcmV0dXJuIHQgaW5zdGFuY2VvZiBKdCB8fCAodCA9IHBuKHQpKSwgdCA/IG5ldyBibigodCA9IHQucmdiKCkpLnIsIHQuZywgdC5iLCB0Lm9wYWNpdHkpIDogbmV3IGJuIH0gZnVuY3Rpb24gX24odCwgbiwgZSwgcikgeyByZXR1cm4gMSA9PT0gYXJndW1lbnRzLmxlbmd0aCA/IHluKHQpIDogbmV3IGJuKHQsIG4sIGUsIG51bGwgPT0gciA/IDEgOiByKSB9IGZ1bmN0aW9uIGJuKHQsIG4sIGUsIHIpIHsgdGhpcy5yID0gK3QsIHRoaXMuZyA9ICtuLCB0aGlzLmIgPSArZSwgdGhpcy5vcGFjaXR5ID0gK3IgfSBmdW5jdGlvbiBtbigpIHsgcmV0dXJuICIjIiArIHduKHRoaXMucikgKyB3bih0aGlzLmcpICsgd24odGhpcy5iKSB9IGZ1bmN0aW9uIHhuKCkgeyB2YXIgdCA9IHRoaXMub3BhY2l0eTsgcmV0dXJuICgxID09PSAodCA9IGlzTmFOKHQpID8gMSA6IE1hdGgubWF4KDAsIE1hdGgubWluKDEsIHQpKSkgPyAicmdiKCIgOiAicmdiYSgiKSArIE1hdGgubWF4KDAsIE1hdGgubWluKDI1NSwgTWF0aC5yb3VuZCh0aGlzLnIpIHx8IDApKSArICIsICIgKyBNYXRoLm1heCgwLCBNYXRoLm1pbigyNTUsIE1hdGgucm91bmQodGhpcy5nKSB8fCAwKSkgKyAiLCAiICsgTWF0aC5tYXgoMCwgTWF0aC5taW4oMjU1LCBNYXRoLnJvdW5kKHRoaXMuYikgfHwgMCkpICsgKDEgPT09IHQgPyAiKSIgOiAiLCAiICsgdCArICIpIikgfSBmdW5jdGlvbiB3bih0KSB7IHJldHVybiAoKHQgPSBNYXRoLm1heCgwLCBNYXRoLm1pbigyNTUsIE1hdGgucm91bmQodCkgfHwgMCkpKSA8IDE2ID8gIjAiIDogIiIpICsgdC50b1N0cmluZygxNikgfSBmdW5jdGlvbiBNbih0LCBuLCBlLCByKSB7IHJldHVybiByIDw9IDAgPyB0ID0gbiA9IGUgPSBOYU4gOiBlIDw9IDAgfHwgZSA+PSAxID8gdCA9IG4gPSBOYU4gOiBuIDw9IDAgJiYgKHQgPSBOYU4pLCBuZXcgQW4odCwgbiwgZSwgcikgfSBmdW5jdGlvbiBObih0KSB7IGlmICh0IGluc3RhbmNlb2YgQW4pIHJldHVybiBuZXcgQW4odC5oLCB0LnMsIHQubCwgdC5vcGFjaXR5KTsgaWYgKHQgaW5zdGFuY2VvZiBKdCB8fCAodCA9IHBuKHQpKSwgIXQpIHJldHVybiBuZXcgQW47IGlmICh0IGluc3RhbmNlb2YgQW4pIHJldHVybiB0OyB2YXIgbiA9ICh0ID0gdC5yZ2IoKSkuciAvIDI1NSwgZSA9IHQuZyAvIDI1NSwgciA9IHQuYiAvIDI1NSwgaSA9IE1hdGgubWluKG4sIGUsIHIpLCBvID0gTWF0aC5tYXgobiwgZSwgciksIGEgPSBOYU4sIHUgPSBvIC0gaSwgYyA9IChvICsgaSkgLyAyOyByZXR1cm4gdSA/IChhID0gbiA9PT0gbyA/IChlIC0gcikgLyB1ICsgNiAqIChlIDwgcikgOiBlID09PSBvID8gKHIgLSBuKSAvIHUgKyAyIDogKG4gLSBlKSAvIHUgKyA0LCB1IC89IGMgPCAuNSA/IG8gKyBpIDogMiAtIG8gLSBpLCBhICo9IDYwKSA6IHUgPSBjID4gMCAmJiBjIDwgMSA/IDAgOiBhLCBuZXcgQW4oYSwgdSwgYywgdC5vcGFjaXR5KSB9IGZ1bmN0aW9uIFRuKHQsIG4sIGUsIHIpIHsgcmV0dXJuIDEgPT09IGFyZ3VtZW50cy5sZW5ndGggPyBObih0KSA6IG5ldyBBbih0LCBuLCBlLCBudWxsID09IHIgPyAxIDogcikgfSBmdW5jdGlvbiBBbih0LCBuLCBlLCByKSB7IHRoaXMuaCA9ICt0LCB0aGlzLnMgPSArbiwgdGhpcy5sID0gK2UsIHRoaXMub3BhY2l0eSA9ICtyIH0gZnVuY3Rpb24gU24odCwgbiwgZSkgeyByZXR1cm4gMjU1ICogKHQgPCA2MCA/IG4gKyAoZSAtIG4pICogdCAvIDYwIDogdCA8IDE4MCA/IGUgOiB0IDwgMjQwID8gbiArIChlIC0gbikgKiAoMjQwIC0gdCkgLyA2MCA6IG4pIH0gUXQoSnQsIHBuLCB7IGNvcHk6IGZ1bmN0aW9uICh0KSB7IHJldHVybiBPYmplY3QuYXNzaWduKG5ldyB0aGlzLmNvbnN0cnVjdG9yLCB0aGlzLCB0KSB9LCBkaXNwbGF5YWJsZTogZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpcy5yZ2IoKS5kaXNwbGF5YWJsZSgpIH0sIGhleDogaG4sIGZvcm1hdEhleDogaG4sIGZvcm1hdEhzbDogZnVuY3Rpb24gKCkgeyByZXR1cm4gTm4odGhpcykuZm9ybWF0SHNsKCkgfSwgZm9ybWF0UmdiOiBkbiwgdG9TdHJpbmc6IGRuIH0pLCBRdChibiwgX24sIEt0KEp0LCB7IGJyaWdodGVyOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gdCA9IG51bGwgPT0gdCA/IDEgLyAuNyA6IE1hdGgucG93KDEgLyAuNywgdCksIG5ldyBibih0aGlzLnIgKiB0LCB0aGlzLmcgKiB0LCB0aGlzLmIgKiB0LCB0aGlzLm9wYWNpdHkpIH0sIGRhcmtlcjogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQgPSBudWxsID09IHQgPyAuNyA6IE1hdGgucG93KC43LCB0KSwgbmV3IGJuKHRoaXMuciAqIHQsIHRoaXMuZyAqIHQsIHRoaXMuYiAqIHQsIHRoaXMub3BhY2l0eSkgfSwgcmdiOiBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzIH0sIGRpc3BsYXlhYmxlOiBmdW5jdGlvbiAoKSB7IHJldHVybiAtLjUgPD0gdGhpcy5yICYmIHRoaXMuciA8IDI1NS41ICYmIC0uNSA8PSB0aGlzLmcgJiYgdGhpcy5nIDwgMjU1LjUgJiYgLS41IDw9IHRoaXMuYiAmJiB0aGlzLmIgPCAyNTUuNSAmJiAwIDw9IHRoaXMub3BhY2l0eSAmJiB0aGlzLm9wYWNpdHkgPD0gMSB9LCBoZXg6IG1uLCBmb3JtYXRIZXg6IG1uLCBmb3JtYXRSZ2I6IHhuLCB0b1N0cmluZzogeG4gfSkpLCBRdChBbiwgVG4sIEt0KEp0LCB7IGJyaWdodGVyOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gdCA9IG51bGwgPT0gdCA/IDEgLyAuNyA6IE1hdGgucG93KDEgLyAuNywgdCksIG5ldyBBbih0aGlzLmgsIHRoaXMucywgdGhpcy5sICogdCwgdGhpcy5vcGFjaXR5KSB9LCBkYXJrZXI6IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0ID0gbnVsbCA9PSB0ID8gLjcgOiBNYXRoLnBvdyguNywgdCksIG5ldyBBbih0aGlzLmgsIHRoaXMucywgdGhpcy5sICogdCwgdGhpcy5vcGFjaXR5KSB9LCByZ2I6IGZ1bmN0aW9uICgpIHsgdmFyIHQgPSB0aGlzLmggJSAzNjAgKyAzNjAgKiAodGhpcy5oIDwgMCksIG4gPSBpc05hTih0KSB8fCBpc05hTih0aGlzLnMpID8gMCA6IHRoaXMucywgZSA9IHRoaXMubCwgciA9IGUgKyAoZSA8IC41ID8gZSA6IDEgLSBlKSAqIG4sIGkgPSAyICogZSAtIHI7IHJldHVybiBuZXcgYm4oU24odCA+PSAyNDAgPyB0IC0gMjQwIDogdCArIDEyMCwgaSwgciksIFNuKHQsIGksIHIpLCBTbih0IDwgMTIwID8gdCArIDI0MCA6IHQgLSAxMjAsIGksIHIpLCB0aGlzLm9wYWNpdHkpIH0sIGRpc3BsYXlhYmxlOiBmdW5jdGlvbiAoKSB7IHJldHVybiAoMCA8PSB0aGlzLnMgJiYgdGhpcy5zIDw9IDEgfHwgaXNOYU4odGhpcy5zKSkgJiYgMCA8PSB0aGlzLmwgJiYgdGhpcy5sIDw9IDEgJiYgMCA8PSB0aGlzLm9wYWNpdHkgJiYgdGhpcy5vcGFjaXR5IDw9IDEgfSwgZm9ybWF0SHNsOiBmdW5jdGlvbiAoKSB7IHZhciB0ID0gdGhpcy5vcGFjaXR5OyByZXR1cm4gKDEgPT09ICh0ID0gaXNOYU4odCkgPyAxIDogTWF0aC5tYXgoMCwgTWF0aC5taW4oMSwgdCkpKSA/ICJoc2woIiA6ICJoc2xhKCIpICsgKHRoaXMuaCB8fCAwKSArICIsICIgKyAxMDAgKiAodGhpcy5zIHx8IDApICsgIiUsICIgKyAxMDAgKiAodGhpcy5sIHx8IDApICsgIiUiICsgKDEgPT09IHQgPyAiKSIgOiAiLCAiICsgdCArICIpIikgfSB9KSk7IHZhciBrbiA9IE1hdGguUEkgLyAxODAsIEVuID0gMTgwIC8gTWF0aC5QSSwgQ24gPSAuOTY0MjIsIFBuID0gMSwgem4gPSAuODI1MjEsIFJuID0gNCAvIDI5LCBEbiA9IDYgLyAyOSwgcW4gPSAzICogRG4gKiBEbiwgTG4gPSBEbiAqIERuICogRG47IGZ1bmN0aW9uIFVuKHQpIHsgaWYgKHQgaW5zdGFuY2VvZiBCbikgcmV0dXJuIG5ldyBCbih0LmwsIHQuYSwgdC5iLCB0Lm9wYWNpdHkpOyBpZiAodCBpbnN0YW5jZW9mIFZuKSByZXR1cm4gR24odCk7IHQgaW5zdGFuY2VvZiBibiB8fCAodCA9IHluKHQpKTsgdmFyIG4sIGUsIHIgPSBIbih0LnIpLCBpID0gSG4odC5nKSwgbyA9IEhuKHQuYiksIGEgPSBGbigoLjIyMjUwNDUgKiByICsgLjcxNjg3ODYgKiBpICsgLjA2MDYxNjkgKiBvKSAvIFBuKTsgcmV0dXJuIHIgPT09IGkgJiYgaSA9PT0gbyA/IG4gPSBlID0gYSA6IChuID0gRm4oKC40MzYwNzQ3ICogciArIC4zODUwNjQ5ICogaSArIC4xNDMwODA0ICogbykgLyBDbiksIGUgPSBGbigoLjAxMzkzMjIgKiByICsgLjA5NzEwNDUgKiBpICsgLjcxNDE3MzMgKiBvKSAvIHpuKSksIG5ldyBCbigxMTYgKiBhIC0gMTYsIDUwMCAqIChuIC0gYSksIDIwMCAqIChhIC0gZSksIHQub3BhY2l0eSkgfSBmdW5jdGlvbiBPbih0LCBuLCBlLCByKSB7IHJldHVybiAxID09PSBhcmd1bWVudHMubGVuZ3RoID8gVW4odCkgOiBuZXcgQm4odCwgbiwgZSwgbnVsbCA9PSByID8gMSA6IHIpIH0gZnVuY3Rpb24gQm4odCwgbiwgZSwgcikgeyB0aGlzLmwgPSArdCwgdGhpcy5hID0gK24sIHRoaXMuYiA9ICtlLCB0aGlzLm9wYWNpdHkgPSArciB9IGZ1bmN0aW9uIEZuKHQpIHsgcmV0dXJuIHQgPiBMbiA/IE1hdGgucG93KHQsIDEgLyAzKSA6IHQgLyBxbiArIFJuIH0gZnVuY3Rpb24gWW4odCkgeyByZXR1cm4gdCA+IERuID8gdCAqIHQgKiB0IDogcW4gKiAodCAtIFJuKSB9IGZ1bmN0aW9uIEluKHQpIHsgcmV0dXJuIDI1NSAqICh0IDw9IC4wMDMxMzA4ID8gMTIuOTIgKiB0IDogMS4wNTUgKiBNYXRoLnBvdyh0LCAxIC8gMi40KSAtIC4wNTUpIH0gZnVuY3Rpb24gSG4odCkgeyByZXR1cm4gKHQgLz0gMjU1KSA8PSAuMDQwNDUgPyB0IC8gMTIuOTIgOiBNYXRoLnBvdygodCArIC4wNTUpIC8gMS4wNTUsIDIuNCkgfSBmdW5jdGlvbiBqbih0KSB7IGlmICh0IGluc3RhbmNlb2YgVm4pIHJldHVybiBuZXcgVm4odC5oLCB0LmMsIHQubCwgdC5vcGFjaXR5KTsgaWYgKHQgaW5zdGFuY2VvZiBCbiB8fCAodCA9IFVuKHQpKSwgMCA9PT0gdC5hICYmIDAgPT09IHQuYikgcmV0dXJuIG5ldyBWbihOYU4sIDAgPCB0LmwgJiYgdC5sIDwgMTAwID8gMCA6IE5hTiwgdC5sLCB0Lm9wYWNpdHkpOyB2YXIgbiA9IE1hdGguYXRhbjIodC5iLCB0LmEpICogRW47IHJldHVybiBuZXcgVm4obiA8IDAgPyBuICsgMzYwIDogbiwgTWF0aC5zcXJ0KHQuYSAqIHQuYSArIHQuYiAqIHQuYiksIHQubCwgdC5vcGFjaXR5KSB9IGZ1bmN0aW9uIFhuKHQsIG4sIGUsIHIpIHsgcmV0dXJuIDEgPT09IGFyZ3VtZW50cy5sZW5ndGggPyBqbih0KSA6IG5ldyBWbih0LCBuLCBlLCBudWxsID09IHIgPyAxIDogcikgfSBmdW5jdGlvbiBWbih0LCBuLCBlLCByKSB7IHRoaXMuaCA9ICt0LCB0aGlzLmMgPSArbiwgdGhpcy5sID0gK2UsIHRoaXMub3BhY2l0eSA9ICtyIH0gZnVuY3Rpb24gR24odCkgeyBpZiAoaXNOYU4odC5oKSkgcmV0dXJuIG5ldyBCbih0LmwsIDAsIDAsIHQub3BhY2l0eSk7IHZhciBuID0gdC5oICoga247IHJldHVybiBuZXcgQm4odC5sLCBNYXRoLmNvcyhuKSAqIHQuYywgTWF0aC5zaW4obikgKiB0LmMsIHQub3BhY2l0eSkgfSBRdChCbiwgT24sIEt0KEp0LCB7IGJyaWdodGVyOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gbmV3IEJuKHRoaXMubCArIDE4ICogKG51bGwgPT0gdCA/IDEgOiB0KSwgdGhpcy5hLCB0aGlzLmIsIHRoaXMub3BhY2l0eSkgfSwgZGFya2VyOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gbmV3IEJuKHRoaXMubCAtIDE4ICogKG51bGwgPT0gdCA/IDEgOiB0KSwgdGhpcy5hLCB0aGlzLmIsIHRoaXMub3BhY2l0eSkgfSwgcmdiOiBmdW5jdGlvbiAoKSB7IHZhciB0ID0gKHRoaXMubCArIDE2KSAvIDExNiwgbiA9IGlzTmFOKHRoaXMuYSkgPyB0IDogdCArIHRoaXMuYSAvIDUwMCwgZSA9IGlzTmFOKHRoaXMuYikgPyB0IDogdCAtIHRoaXMuYiAvIDIwMDsgcmV0dXJuIG5ldyBibihJbigzLjEzMzg1NjEgKiAobiA9IENuICogWW4obikpIC0gMS42MTY4NjY3ICogKHQgPSBQbiAqIFluKHQpKSAtIC40OTA2MTQ2ICogKGUgPSB6biAqIFluKGUpKSksIEluKC0uOTc4NzY4NCAqIG4gKyAxLjkxNjE0MTUgKiB0ICsgLjAzMzQ1NCAqIGUpLCBJbiguMDcxOTQ1MyAqIG4gLSAuMjI4OTkxNCAqIHQgKyAxLjQwNTI0MjcgKiBlKSwgdGhpcy5vcGFjaXR5KSB9IH0pKSwgUXQoVm4sIFhuLCBLdChKdCwgeyBicmlnaHRlcjogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIG5ldyBWbih0aGlzLmgsIHRoaXMuYywgdGhpcy5sICsgMTggKiAobnVsbCA9PSB0ID8gMSA6IHQpLCB0aGlzLm9wYWNpdHkpIH0sIGRhcmtlcjogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIG5ldyBWbih0aGlzLmgsIHRoaXMuYywgdGhpcy5sIC0gMTggKiAobnVsbCA9PSB0ID8gMSA6IHQpLCB0aGlzLm9wYWNpdHkpIH0sIHJnYjogZnVuY3Rpb24gKCkgeyByZXR1cm4gR24odGhpcykucmdiKCkgfSB9KSk7IHZhciAkbiA9IC0uMTQ4NjEsIFduID0gMS43ODI3NywgWm4gPSAtLjI5MjI3LCBRbiA9IC0uOTA2NDksIEtuID0gMS45NzI5NCwgSm4gPSBLbiAqIFFuLCB0ZSA9IEtuICogV24sIG5lID0gV24gKiBabiAtIFFuICogJG47IGZ1bmN0aW9uIGVlKHQsIG4sIGUsIHIpIHsgcmV0dXJuIDEgPT09IGFyZ3VtZW50cy5sZW5ndGggPyBmdW5jdGlvbiAodCkgeyBpZiAodCBpbnN0YW5jZW9mIHJlKSByZXR1cm4gbmV3IHJlKHQuaCwgdC5zLCB0LmwsIHQub3BhY2l0eSk7IHQgaW5zdGFuY2VvZiBibiB8fCAodCA9IHluKHQpKTsgdmFyIG4gPSB0LnIgLyAyNTUsIGUgPSB0LmcgLyAyNTUsIHIgPSB0LmIgLyAyNTUsIGkgPSAobmUgKiByICsgSm4gKiBuIC0gdGUgKiBlKSAvIChuZSArIEpuIC0gdGUpLCBvID0gciAtIGksIGEgPSAoS24gKiAoZSAtIGkpIC0gWm4gKiBvKSAvIFFuLCB1ID0gTWF0aC5zcXJ0KGEgKiBhICsgbyAqIG8pIC8gKEtuICogaSAqICgxIC0gaSkpLCBjID0gdSA/IE1hdGguYXRhbjIoYSwgbykgKiBFbiAtIDEyMCA6IE5hTjsgcmV0dXJuIG5ldyByZShjIDwgMCA/IGMgKyAzNjAgOiBjLCB1LCBpLCB0Lm9wYWNpdHkpIH0odCkgOiBuZXcgcmUodCwgbiwgZSwgbnVsbCA9PSByID8gMSA6IHIpIH0gZnVuY3Rpb24gcmUodCwgbiwgZSwgcikgeyB0aGlzLmggPSArdCwgdGhpcy5zID0gK24sIHRoaXMubCA9ICtlLCB0aGlzLm9wYWNpdHkgPSArciB9IGZ1bmN0aW9uIGllKHQsIG4sIGUsIHIsIGkpIHsgdmFyIG8gPSB0ICogdCwgYSA9IG8gKiB0OyByZXR1cm4gKCgxIC0gMyAqIHQgKyAzICogbyAtIGEpICogbiArICg0IC0gNiAqIG8gKyAzICogYSkgKiBlICsgKDEgKyAzICogdCArIDMgKiBvIC0gMyAqIGEpICogciArIGEgKiBpKSAvIDYgfSBmdW5jdGlvbiBvZSh0KSB7IHZhciBuID0gdC5sZW5ndGggLSAxOyByZXR1cm4gZnVuY3Rpb24gKGUpIHsgdmFyIHIgPSBlIDw9IDAgPyBlID0gMCA6IGUgPj0gMSA/IChlID0gMSwgbiAtIDEpIDogTWF0aC5mbG9vcihlICogbiksIGkgPSB0W3JdLCBvID0gdFtyICsgMV0sIGEgPSByID4gMCA/IHRbciAtIDFdIDogMiAqIGkgLSBvLCB1ID0gciA8IG4gLSAxID8gdFtyICsgMl0gOiAyICogbyAtIGk7IHJldHVybiBpZSgoZSAtIHIgLyBuKSAqIG4sIGEsIGksIG8sIHUpIH0gfSBmdW5jdGlvbiBhZSh0KSB7IHZhciBuID0gdC5sZW5ndGg7IHJldHVybiBmdW5jdGlvbiAoZSkgeyB2YXIgciA9IE1hdGguZmxvb3IoKChlICU9IDEpIDwgMCA/ICsrZSA6IGUpICogbiksIGkgPSB0WyhyICsgbiAtIDEpICUgbl0sIG8gPSB0W3IgJSBuXSwgYSA9IHRbKHIgKyAxKSAlIG5dLCB1ID0gdFsociArIDIpICUgbl07IHJldHVybiBpZSgoZSAtIHIgLyBuKSAqIG4sIGksIG8sIGEsIHUpIH0gfSBmdW5jdGlvbiB1ZSh0KSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiB0IH0gfSBmdW5jdGlvbiBjZSh0LCBuKSB7IHJldHVybiBmdW5jdGlvbiAoZSkgeyByZXR1cm4gdCArIGUgKiBuIH0gfSBmdW5jdGlvbiBmZSh0LCBuKSB7IHZhciBlID0gbiAtIHQ7IHJldHVybiBlID8gY2UodCwgZSA+IDE4MCB8fCBlIDwgLTE4MCA/IGUgLSAzNjAgKiBNYXRoLnJvdW5kKGUgLyAzNjApIDogZSkgOiB1ZShpc05hTih0KSA/IG4gOiB0KSB9IGZ1bmN0aW9uIHNlKHQpIHsgcmV0dXJuIDEgPT0gKHQgPSArdCkgPyBsZSA6IGZ1bmN0aW9uIChuLCBlKSB7IHJldHVybiBlIC0gbiA/IGZ1bmN0aW9uICh0LCBuLCBlKSB7IHJldHVybiB0ID0gTWF0aC5wb3codCwgZSksIG4gPSBNYXRoLnBvdyhuLCBlKSAtIHQsIGUgPSAxIC8gZSwgZnVuY3Rpb24gKHIpIHsgcmV0dXJuIE1hdGgucG93KHQgKyByICogbiwgZSkgfSB9KG4sIGUsIHQpIDogdWUoaXNOYU4obikgPyBlIDogbikgfSB9IGZ1bmN0aW9uIGxlKHQsIG4pIHsgdmFyIGUgPSBuIC0gdDsgcmV0dXJuIGUgPyBjZSh0LCBlKSA6IHVlKGlzTmFOKHQpID8gbiA6IHQpIH0gUXQocmUsIGVlLCBLdChKdCwgeyBicmlnaHRlcjogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQgPSBudWxsID09IHQgPyAxIC8gLjcgOiBNYXRoLnBvdygxIC8gLjcsIHQpLCBuZXcgcmUodGhpcy5oLCB0aGlzLnMsIHRoaXMubCAqIHQsIHRoaXMub3BhY2l0eSkgfSwgZGFya2VyOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gdCA9IG51bGwgPT0gdCA/IC43IDogTWF0aC5wb3coLjcsIHQpLCBuZXcgcmUodGhpcy5oLCB0aGlzLnMsIHRoaXMubCAqIHQsIHRoaXMub3BhY2l0eSkgfSwgcmdiOiBmdW5jdGlvbiAoKSB7IHZhciB0ID0gaXNOYU4odGhpcy5oKSA/IDAgOiAodGhpcy5oICsgMTIwKSAqIGtuLCBuID0gK3RoaXMubCwgZSA9IGlzTmFOKHRoaXMucykgPyAwIDogdGhpcy5zICogbiAqICgxIC0gbiksIHIgPSBNYXRoLmNvcyh0KSwgaSA9IE1hdGguc2luKHQpOyByZXR1cm4gbmV3IGJuKDI1NSAqIChuICsgZSAqICgkbiAqIHIgKyBXbiAqIGkpKSwgMjU1ICogKG4gKyBlICogKFpuICogciArIFFuICogaSkpLCAyNTUgKiAobiArIGUgKiAoS24gKiByKSksIHRoaXMub3BhY2l0eSkgfSB9KSk7IHZhciBoZSA9IGZ1bmN0aW9uIHQobikgeyB2YXIgZSA9IHNlKG4pOyBmdW5jdGlvbiByKHQsIG4pIHsgdmFyIHIgPSBlKCh0ID0gX24odCkpLnIsIChuID0gX24obikpLnIpLCBpID0gZSh0LmcsIG4uZyksIG8gPSBlKHQuYiwgbi5iKSwgYSA9IGxlKHQub3BhY2l0eSwgbi5vcGFjaXR5KTsgcmV0dXJuIGZ1bmN0aW9uIChuKSB7IHJldHVybiB0LnIgPSByKG4pLCB0LmcgPSBpKG4pLCB0LmIgPSBvKG4pLCB0Lm9wYWNpdHkgPSBhKG4pLCB0ICsgIiIgfSB9IHJldHVybiByLmdhbW1hID0gdCwgciB9KDEpOyBmdW5jdGlvbiBkZSh0KSB7IHJldHVybiBmdW5jdGlvbiAobikgeyB2YXIgZSwgciwgaSA9IG4ubGVuZ3RoLCBvID0gbmV3IEFycmF5KGkpLCBhID0gbmV3IEFycmF5KGkpLCB1ID0gbmV3IEFycmF5KGkpOyBmb3IgKGUgPSAwOyBlIDwgaTsgKytlKXIgPSBfbihuW2VdKSwgb1tlXSA9IHIuciB8fCAwLCBhW2VdID0gci5nIHx8IDAsIHVbZV0gPSByLmIgfHwgMDsgcmV0dXJuIG8gPSB0KG8pLCBhID0gdChhKSwgdSA9IHQodSksIHIub3BhY2l0eSA9IDEsIGZ1bmN0aW9uICh0KSB7IHJldHVybiByLnIgPSBvKHQpLCByLmcgPSBhKHQpLCByLmIgPSB1KHQpLCByICsgIiIgfSB9IH0gdmFyIHBlID0gZGUob2UpLCB2ZSA9IGRlKGFlKTsgZnVuY3Rpb24gZ2UodCwgbikgeyBuIHx8IChuID0gW10pOyB2YXIgZSwgciA9IHQgPyBNYXRoLm1pbihuLmxlbmd0aCwgdC5sZW5ndGgpIDogMCwgaSA9IG4uc2xpY2UoKTsgcmV0dXJuIGZ1bmN0aW9uIChvKSB7IGZvciAoZSA9IDA7IGUgPCByOyArK2UpaVtlXSA9IHRbZV0gKiAoMSAtIG8pICsgbltlXSAqIG87IHJldHVybiBpIH0gfSBmdW5jdGlvbiB5ZSh0KSB7IHJldHVybiBBcnJheUJ1ZmZlci5pc1ZpZXcodCkgJiYgISh0IGluc3RhbmNlb2YgRGF0YVZpZXcpIH0gZnVuY3Rpb24gX2UodCwgbikgeyB2YXIgZSwgciA9IG4gPyBuLmxlbmd0aCA6IDAsIGkgPSB0ID8gTWF0aC5taW4ociwgdC5sZW5ndGgpIDogMCwgbyA9IG5ldyBBcnJheShpKSwgYSA9IG5ldyBBcnJheShyKTsgZm9yIChlID0gMDsgZSA8IGk7ICsrZSlvW2VdID0gVGUodFtlXSwgbltlXSk7IGZvciAoOyBlIDwgcjsgKytlKWFbZV0gPSBuW2VdOyByZXR1cm4gZnVuY3Rpb24gKHQpIHsgZm9yIChlID0gMDsgZSA8IGk7ICsrZSlhW2VdID0gb1tlXSh0KTsgcmV0dXJuIGEgfSB9IGZ1bmN0aW9uIGJlKHQsIG4pIHsgdmFyIGUgPSBuZXcgRGF0ZTsgcmV0dXJuIHQgPSArdCwgbiA9ICtuLCBmdW5jdGlvbiAocikgeyByZXR1cm4gZS5zZXRUaW1lKHQgKiAoMSAtIHIpICsgbiAqIHIpLCBlIH0gfSBmdW5jdGlvbiBtZSh0LCBuKSB7IHJldHVybiB0ID0gK3QsIG4gPSArbiwgZnVuY3Rpb24gKGUpIHsgcmV0dXJuIHQgKiAoMSAtIGUpICsgbiAqIGUgfSB9IGZ1bmN0aW9uIHhlKHQsIG4pIHsgdmFyIGUsIHIgPSB7fSwgaSA9IHt9OyBmb3IgKGUgaW4gbnVsbCAhPT0gdCAmJiAib2JqZWN0IiA9PSB0eXBlb2YgdCB8fCAodCA9IHt9KSwgbnVsbCAhPT0gbiAmJiAib2JqZWN0IiA9PSB0eXBlb2YgbiB8fCAobiA9IHt9KSwgbikgZSBpbiB0ID8gcltlXSA9IFRlKHRbZV0sIG5bZV0pIDogaVtlXSA9IG5bZV07IHJldHVybiBmdW5jdGlvbiAodCkgeyBmb3IgKGUgaW4gcikgaVtlXSA9IHJbZV0odCk7IHJldHVybiBpIH0gfSB2YXIgd2UgPSAvWy0rXT8oPzpcZCtcLj9cZCp8XC4/XGQrKSg/OltlRV1bLStdP1xkKyk/L2csIE1lID0gbmV3IFJlZ0V4cCh3ZS5zb3VyY2UsICJnIik7IGZ1bmN0aW9uIE5lKHQsIG4pIHsgdmFyIGUsIHIsIGksIG8gPSB3ZS5sYXN0SW5kZXggPSBNZS5sYXN0SW5kZXggPSAwLCBhID0gLTEsIHUgPSBbXSwgYyA9IFtdOyBmb3IgKHQgKz0gIiIsIG4gKz0gIiI7IChlID0gd2UuZXhlYyh0KSkgJiYgKHIgPSBNZS5leGVjKG4pKTspKGkgPSByLmluZGV4KSA+IG8gJiYgKGkgPSBuLnNsaWNlKG8sIGkpLCB1W2FdID8gdVthXSArPSBpIDogdVsrK2FdID0gaSksIChlID0gZVswXSkgPT09IChyID0gclswXSkgPyB1W2FdID8gdVthXSArPSByIDogdVsrK2FdID0gciA6ICh1WysrYV0gPSBudWxsLCBjLnB1c2goeyBpOiBhLCB4OiBtZShlLCByKSB9KSksIG8gPSBNZS5sYXN0SW5kZXg7IHJldHVybiBvIDwgbi5sZW5ndGggJiYgKGkgPSBuLnNsaWNlKG8pLCB1W2FdID8gdVthXSArPSBpIDogdVsrK2FdID0gaSksIHUubGVuZ3RoIDwgMiA/IGNbMF0gPyBmdW5jdGlvbiAodCkgeyByZXR1cm4gZnVuY3Rpb24gKG4pIHsgcmV0dXJuIHQobikgKyAiIiB9IH0oY1swXS54KSA6IGZ1bmN0aW9uICh0KSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiB0IH0gfShuKSA6IChuID0gYy5sZW5ndGgsIGZ1bmN0aW9uICh0KSB7IGZvciAodmFyIGUsIHIgPSAwOyByIDwgbjsgKytyKXVbKGUgPSBjW3JdKS5pXSA9IGUueCh0KTsgcmV0dXJuIHUuam9pbigiIikgfSkgfSBmdW5jdGlvbiBUZSh0LCBuKSB7IHZhciBlLCByID0gdHlwZW9mIG47IHJldHVybiBudWxsID09IG4gfHwgImJvb2xlYW4iID09PSByID8gdWUobikgOiAoIm51bWJlciIgPT09IHIgPyBtZSA6ICJzdHJpbmciID09PSByID8gKGUgPSBwbihuKSkgPyAobiA9IGUsIGhlKSA6IE5lIDogbiBpbnN0YW5jZW9mIHBuID8gaGUgOiBuIGluc3RhbmNlb2YgRGF0ZSA/IGJlIDogeWUobikgPyBnZSA6IEFycmF5LmlzQXJyYXkobikgPyBfZSA6ICJmdW5jdGlvbiIgIT0gdHlwZW9mIG4udmFsdWVPZiAmJiAiZnVuY3Rpb24iICE9IHR5cGVvZiBuLnRvU3RyaW5nIHx8IGlzTmFOKG4pID8geGUgOiBtZSkodCwgbikgfSBmdW5jdGlvbiBBZSh0LCBuKSB7IHJldHVybiB0ID0gK3QsIG4gPSArbiwgZnVuY3Rpb24gKGUpIHsgcmV0dXJuIE1hdGgucm91bmQodCAqICgxIC0gZSkgKyBuICogZSkgfSB9IHZhciBTZSwga2UsIEVlLCBDZSwgUGUgPSAxODAgLyBNYXRoLlBJLCB6ZSA9IHsgdHJhbnNsYXRlWDogMCwgdHJhbnNsYXRlWTogMCwgcm90YXRlOiAwLCBza2V3WDogMCwgc2NhbGVYOiAxLCBzY2FsZVk6IDEgfTsgZnVuY3Rpb24gUmUodCwgbiwgZSwgciwgaSwgbykgeyB2YXIgYSwgdSwgYzsgcmV0dXJuIChhID0gTWF0aC5zcXJ0KHQgKiB0ICsgbiAqIG4pKSAmJiAodCAvPSBhLCBuIC89IGEpLCAoYyA9IHQgKiBlICsgbiAqIHIpICYmIChlIC09IHQgKiBjLCByIC09IG4gKiBjKSwgKHUgPSBNYXRoLnNxcnQoZSAqIGUgKyByICogcikpICYmIChlIC89IHUsIHIgLz0gdSwgYyAvPSB1KSwgdCAqIHIgPCBuICogZSAmJiAodCA9IC10LCBuID0gLW4sIGMgPSAtYywgYSA9IC1hKSwgeyB0cmFuc2xhdGVYOiBpLCB0cmFuc2xhdGVZOiBvLCByb3RhdGU6IE1hdGguYXRhbjIobiwgdCkgKiBQZSwgc2tld1g6IE1hdGguYXRhbihjKSAqIFBlLCBzY2FsZVg6IGEsIHNjYWxlWTogdSB9IH0gZnVuY3Rpb24gRGUodCwgbiwgZSwgcikgeyBmdW5jdGlvbiBpKHQpIHsgcmV0dXJuIHQubGVuZ3RoID8gdC5wb3AoKSArICIgIiA6ICIiIH0gcmV0dXJuIGZ1bmN0aW9uIChvLCBhKSB7IHZhciB1ID0gW10sIGMgPSBbXTsgcmV0dXJuIG8gPSB0KG8pLCBhID0gdChhKSwgZnVuY3Rpb24gKHQsIHIsIGksIG8sIGEsIHUpIHsgaWYgKHQgIT09IGkgfHwgciAhPT0gbykgeyB2YXIgYyA9IGEucHVzaCgidHJhbnNsYXRlKCIsIG51bGwsIG4sIG51bGwsIGUpOyB1LnB1c2goeyBpOiBjIC0gNCwgeDogbWUodCwgaSkgfSwgeyBpOiBjIC0gMiwgeDogbWUociwgbykgfSkgfSBlbHNlIChpIHx8IG8pICYmIGEucHVzaCgidHJhbnNsYXRlKCIgKyBpICsgbiArIG8gKyBlKSB9KG8udHJhbnNsYXRlWCwgby50cmFuc2xhdGVZLCBhLnRyYW5zbGF0ZVgsIGEudHJhbnNsYXRlWSwgdSwgYyksIGZ1bmN0aW9uICh0LCBuLCBlLCBvKSB7IHQgIT09IG4gPyAodCAtIG4gPiAxODAgPyBuICs9IDM2MCA6IG4gLSB0ID4gMTgwICYmICh0ICs9IDM2MCksIG8ucHVzaCh7IGk6IGUucHVzaChpKGUpICsgInJvdGF0ZSgiLCBudWxsLCByKSAtIDIsIHg6IG1lKHQsIG4pIH0pKSA6IG4gJiYgZS5wdXNoKGkoZSkgKyAicm90YXRlKCIgKyBuICsgcikgfShvLnJvdGF0ZSwgYS5yb3RhdGUsIHUsIGMpLCBmdW5jdGlvbiAodCwgbiwgZSwgbykgeyB0ICE9PSBuID8gby5wdXNoKHsgaTogZS5wdXNoKGkoZSkgKyAic2tld1goIiwgbnVsbCwgcikgLSAyLCB4OiBtZSh0LCBuKSB9KSA6IG4gJiYgZS5wdXNoKGkoZSkgKyAic2tld1goIiArIG4gKyByKSB9KG8uc2tld1gsIGEuc2tld1gsIHUsIGMpLCBmdW5jdGlvbiAodCwgbiwgZSwgciwgbywgYSkgeyBpZiAodCAhPT0gZSB8fCBuICE9PSByKSB7IHZhciB1ID0gby5wdXNoKGkobykgKyAic2NhbGUoIiwgbnVsbCwgIiwiLCBudWxsLCAiKSIpOyBhLnB1c2goeyBpOiB1IC0gNCwgeDogbWUodCwgZSkgfSwgeyBpOiB1IC0gMiwgeDogbWUobiwgcikgfSkgfSBlbHNlIDEgPT09IGUgJiYgMSA9PT0gciB8fCBvLnB1c2goaShvKSArICJzY2FsZSgiICsgZSArICIsIiArIHIgKyAiKSIpIH0oby5zY2FsZVgsIG8uc2NhbGVZLCBhLnNjYWxlWCwgYS5zY2FsZVksIHUsIGMpLCBvID0gYSA9IG51bGwsIGZ1bmN0aW9uICh0KSB7IGZvciAodmFyIG4sIGUgPSAtMSwgciA9IGMubGVuZ3RoOyArK2UgPCByOyl1WyhuID0gY1tlXSkuaV0gPSBuLngodCk7IHJldHVybiB1LmpvaW4oIiIpIH0gfSB9IHZhciBxZSA9IERlKGZ1bmN0aW9uICh0KSB7IHJldHVybiAibm9uZSIgPT09IHQgPyB6ZSA6IChTZSB8fCAoU2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJESVYiKSwga2UgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsIEVlID0gZG9jdW1lbnQuZGVmYXVsdFZpZXcpLCBTZS5zdHlsZS50cmFuc2Zvcm0gPSB0LCB0ID0gRWUuZ2V0Q29tcHV0ZWRTdHlsZShrZS5hcHBlbmRDaGlsZChTZSksIG51bGwpLmdldFByb3BlcnR5VmFsdWUoInRyYW5zZm9ybSIpLCBrZS5yZW1vdmVDaGlsZChTZSksIFJlKCsodCA9IHQuc2xpY2UoNywgLTEpLnNwbGl0KCIsIikpWzBdLCArdFsxXSwgK3RbMl0sICt0WzNdLCArdFs0XSwgK3RbNV0pKSB9LCAicHgsICIsICJweCkiLCAiZGVnKSIpLCBMZSA9IERlKGZ1bmN0aW9uICh0KSB7IHJldHVybiBudWxsID09IHQgPyB6ZSA6IChDZSB8fCAoQ2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiwgImciKSksIENlLnNldEF0dHJpYnV0ZSgidHJhbnNmb3JtIiwgdCksICh0ID0gQ2UudHJhbnNmb3JtLmJhc2VWYWwuY29uc29saWRhdGUoKSkgPyBSZSgodCA9IHQubWF0cml4KS5hLCB0LmIsIHQuYywgdC5kLCB0LmUsIHQuZikgOiB6ZSkgfSwgIiwgIiwgIikiLCAiKSIpLCBVZSA9IE1hdGguU1FSVDIsIE9lID0gMiwgQmUgPSA0LCBGZSA9IDFlLTEyOyBmdW5jdGlvbiBZZSh0KSB7IHJldHVybiAoKHQgPSBNYXRoLmV4cCh0KSkgKyAxIC8gdCkgLyAyIH0gZnVuY3Rpb24gSWUodCwgbikgeyB2YXIgZSwgciwgaSA9IHRbMF0sIG8gPSB0WzFdLCBhID0gdFsyXSwgdSA9IG5bMF0sIGMgPSBuWzFdLCBmID0gblsyXSwgcyA9IHUgLSBpLCBsID0gYyAtIG8sIGggPSBzICogcyArIGwgKiBsOyBpZiAoaCA8IEZlKSByID0gTWF0aC5sb2coZiAvIGEpIC8gVWUsIGUgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gW2kgKyB0ICogcywgbyArIHQgKiBsLCBhICogTWF0aC5leHAoVWUgKiB0ICogcildIH07IGVsc2UgeyB2YXIgZCA9IE1hdGguc3FydChoKSwgcCA9IChmICogZiAtIGEgKiBhICsgQmUgKiBoKSAvICgyICogYSAqIE9lICogZCksIHYgPSAoZiAqIGYgLSBhICogYSAtIEJlICogaCkgLyAoMiAqIGYgKiBPZSAqIGQpLCBnID0gTWF0aC5sb2coTWF0aC5zcXJ0KHAgKiBwICsgMSkgLSBwKSwgeSA9IE1hdGgubG9nKE1hdGguc3FydCh2ICogdiArIDEpIC0gdik7IHIgPSAoeSAtIGcpIC8gVWUsIGUgPSBmdW5jdGlvbiAodCkgeyB2YXIgbiA9IHQgKiByLCBlID0gWWUoZyksIHUgPSBhIC8gKE9lICogZCkgKiAoZSAqIGZ1bmN0aW9uICh0KSB7IHJldHVybiAoKHQgPSBNYXRoLmV4cCgyICogdCkpIC0gMSkgLyAodCArIDEpIH0oVWUgKiBuICsgZykgLSBmdW5jdGlvbiAodCkgeyByZXR1cm4gKCh0ID0gTWF0aC5leHAodCkpIC0gMSAvIHQpIC8gMiB9KGcpKTsgcmV0dXJuIFtpICsgdSAqIHMsIG8gKyB1ICogbCwgYSAqIGUgLyBZZShVZSAqIG4gKyBnKV0gfSB9IHJldHVybiBlLmR1cmF0aW9uID0gMWUzICogciwgZSB9IGZ1bmN0aW9uIEhlKHQpIHsgcmV0dXJuIGZ1bmN0aW9uIChuLCBlKSB7IHZhciByID0gdCgobiA9IFRuKG4pKS5oLCAoZSA9IFRuKGUpKS5oKSwgaSA9IGxlKG4ucywgZS5zKSwgbyA9IGxlKG4ubCwgZS5sKSwgYSA9IGxlKG4ub3BhY2l0eSwgZS5vcGFjaXR5KTsgcmV0dXJuIGZ1bmN0aW9uICh0KSB7IHJldHVybiBuLmggPSByKHQpLCBuLnMgPSBpKHQpLCBuLmwgPSBvKHQpLCBuLm9wYWNpdHkgPSBhKHQpLCBuICsgIiIgfSB9IH0gdmFyIGplID0gSGUoZmUpLCBYZSA9IEhlKGxlKTsgZnVuY3Rpb24gVmUodCkgeyByZXR1cm4gZnVuY3Rpb24gKG4sIGUpIHsgdmFyIHIgPSB0KChuID0gWG4obikpLmgsIChlID0gWG4oZSkpLmgpLCBpID0gbGUobi5jLCBlLmMpLCBvID0gbGUobi5sLCBlLmwpLCBhID0gbGUobi5vcGFjaXR5LCBlLm9wYWNpdHkpOyByZXR1cm4gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIG4uaCA9IHIodCksIG4uYyA9IGkodCksIG4ubCA9IG8odCksIG4ub3BhY2l0eSA9IGEodCksIG4gKyAiIiB9IH0gfSB2YXIgR2UgPSBWZShmZSksICRlID0gVmUobGUpOyBmdW5jdGlvbiBXZSh0KSB7IHJldHVybiBmdW5jdGlvbiBuKGUpIHsgZnVuY3Rpb24gcihuLCByKSB7IHZhciBpID0gdCgobiA9IGVlKG4pKS5oLCAociA9IGVlKHIpKS5oKSwgbyA9IGxlKG4ucywgci5zKSwgYSA9IGxlKG4ubCwgci5sKSwgdSA9IGxlKG4ub3BhY2l0eSwgci5vcGFjaXR5KTsgcmV0dXJuIGZ1bmN0aW9uICh0KSB7IHJldHVybiBuLmggPSBpKHQpLCBuLnMgPSBvKHQpLCBuLmwgPSBhKE1hdGgucG93KHQsIGUpKSwgbi5vcGFjaXR5ID0gdSh0KSwgbiArICIiIH0gfSByZXR1cm4gZSA9ICtlLCByLmdhbW1hID0gbiwgciB9KDEpIH0gdmFyIFplID0gV2UoZmUpLCBRZSA9IFdlKGxlKTsgdmFyIEtlLCBKZSwgdHIgPSAwLCBuciA9IDAsIGVyID0gMCwgcnIgPSAxZTMsIGlyID0gMCwgb3IgPSAwLCBhciA9IDAsIHVyID0gIm9iamVjdCIgPT0gdHlwZW9mIHBlcmZvcm1hbmNlICYmIHBlcmZvcm1hbmNlLm5vdyA/IHBlcmZvcm1hbmNlIDogRGF0ZSwgY3IgPSAib2JqZWN0IiA9PSB0eXBlb2Ygd2luZG93ICYmIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgPyB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lLmJpbmQod2luZG93KSA6IGZ1bmN0aW9uICh0KSB7IHNldFRpbWVvdXQodCwgMTcpIH07IGZ1bmN0aW9uIGZyKCkgeyByZXR1cm4gb3IgfHwgKGNyKHNyKSwgb3IgPSB1ci5ub3coKSArIGFyKSB9IGZ1bmN0aW9uIHNyKCkgeyBvciA9IDAgfSBmdW5jdGlvbiBscigpIHsgdGhpcy5fY2FsbCA9IHRoaXMuX3RpbWUgPSB0aGlzLl9uZXh0ID0gbnVsbCB9IGZ1bmN0aW9uIGhyKHQsIG4sIGUpIHsgdmFyIHIgPSBuZXcgbHI7IHJldHVybiByLnJlc3RhcnQodCwgbiwgZSksIHIgfSBmdW5jdGlvbiBkcigpIHsgZnIoKSwgKyt0cjsgZm9yICh2YXIgdCwgbiA9IEtlOyBuOykodCA9IG9yIC0gbi5fdGltZSkgPj0gMCAmJiBuLl9jYWxsLmNhbGwobnVsbCwgdCksIG4gPSBuLl9uZXh0OyAtLXRyIH0gZnVuY3Rpb24gcHIoKSB7IG9yID0gKGlyID0gdXIubm93KCkpICsgYXIsIHRyID0gbnIgPSAwOyB0cnkgeyBkcigpIH0gZmluYWxseSB7IHRyID0gMCwgZnVuY3Rpb24gKCkgeyB2YXIgdCwgbiwgZSA9IEtlLCByID0gMSAvIDA7IGZvciAoOyBlOyllLl9jYWxsID8gKHIgPiBlLl90aW1lICYmIChyID0gZS5fdGltZSksIHQgPSBlLCBlID0gZS5fbmV4dCkgOiAobiA9IGUuX25leHQsIGUuX25leHQgPSBudWxsLCBlID0gdCA/IHQuX25leHQgPSBuIDogS2UgPSBuKTsgSmUgPSB0LCBncihyKSB9KCksIG9yID0gMCB9IH0gZnVuY3Rpb24gdnIoKSB7IHZhciB0ID0gdXIubm93KCksIG4gPSB0IC0gaXI7IG4gPiByciAmJiAoYXIgLT0gbiwgaXIgPSB0KSB9IGZ1bmN0aW9uIGdyKHQpIHsgdHIgfHwgKG5yICYmIChuciA9IGNsZWFyVGltZW91dChucikpLCB0IC0gb3IgPiAyNCA/ICh0IDwgMSAvIDAgJiYgKG5yID0gc2V0VGltZW91dChwciwgdCAtIHVyLm5vdygpIC0gYXIpKSwgZXIgJiYgKGVyID0gY2xlYXJJbnRlcnZhbChlcikpKSA6IChlciB8fCAoaXIgPSB1ci5ub3coKSwgZXIgPSBzZXRJbnRlcnZhbCh2ciwgcnIpKSwgdHIgPSAxLCBjcihwcikpKSB9IGZ1bmN0aW9uIHlyKHQsIG4sIGUpIHsgdmFyIHIgPSBuZXcgbHI7IHJldHVybiBuID0gbnVsbCA9PSBuID8gMCA6ICtuLCByLnJlc3RhcnQoZnVuY3Rpb24gKGUpIHsgci5zdG9wKCksIHQoZSArIG4pIH0sIG4sIGUpLCByIH0gbHIucHJvdG90eXBlID0gaHIucHJvdG90eXBlID0geyBjb25zdHJ1Y3RvcjogbHIsIHJlc3RhcnQ6IGZ1bmN0aW9uICh0LCBuLCBlKSB7IGlmICgiZnVuY3Rpb24iICE9IHR5cGVvZiB0KSB0aHJvdyBuZXcgVHlwZUVycm9yKCJjYWxsYmFjayBpcyBub3QgYSBmdW5jdGlvbiIpOyBlID0gKG51bGwgPT0gZSA/IGZyKCkgOiArZSkgKyAobnVsbCA9PSBuID8gMCA6ICtuKSwgdGhpcy5fbmV4dCB8fCBKZSA9PT0gdGhpcyB8fCAoSmUgPyBKZS5fbmV4dCA9IHRoaXMgOiBLZSA9IHRoaXMsIEplID0gdGhpcyksIHRoaXMuX2NhbGwgPSB0LCB0aGlzLl90aW1lID0gZSwgZ3IoKSB9LCBzdG9wOiBmdW5jdGlvbiAoKSB7IHRoaXMuX2NhbGwgJiYgKHRoaXMuX2NhbGwgPSBudWxsLCB0aGlzLl90aW1lID0gMSAvIDAsIGdyKCkpIH0gfTsgdmFyIF9yID0gSSgic3RhcnQiLCAiZW5kIiwgImNhbmNlbCIsICJpbnRlcnJ1cHQiKSwgYnIgPSBbXSwgbXIgPSAwLCB4ciA9IDEsIHdyID0gMiwgTXIgPSAzLCBOciA9IDQsIFRyID0gNSwgQXIgPSA2OyBmdW5jdGlvbiBTcih0LCBuLCBlLCByLCBpLCBvKSB7IHZhciBhID0gdC5fX3RyYW5zaXRpb247IGlmIChhKSB7IGlmIChlIGluIGEpIHJldHVybiB9IGVsc2UgdC5fX3RyYW5zaXRpb24gPSB7fTsgIWZ1bmN0aW9uICh0LCBuLCBlKSB7IHZhciByLCBpID0gdC5fX3RyYW5zaXRpb247IGZ1bmN0aW9uIG8oYykgeyB2YXIgZiwgcywgbCwgaDsgaWYgKGUuc3RhdGUgIT09IHhyKSByZXR1cm4gdSgpOyBmb3IgKGYgaW4gaSkgaWYgKChoID0gaVtmXSkubmFtZSA9PT0gZS5uYW1lKSB7IGlmIChoLnN0YXRlID09PSBNcikgcmV0dXJuIHlyKG8pOyBoLnN0YXRlID09PSBOciA/IChoLnN0YXRlID0gQXIsIGgudGltZXIuc3RvcCgpLCBoLm9uLmNhbGwoImludGVycnVwdCIsIHQsIHQuX19kYXRhX18sIGguaW5kZXgsIGguZ3JvdXApLCBkZWxldGUgaVtmXSkgOiArZiA8IG4gJiYgKGguc3RhdGUgPSBBciwgaC50aW1lci5zdG9wKCksIGgub24uY2FsbCgiY2FuY2VsIiwgdCwgdC5fX2RhdGFfXywgaC5pbmRleCwgaC5ncm91cCksIGRlbGV0ZSBpW2ZdKSB9IGlmICh5cihmdW5jdGlvbiAoKSB7IGUuc3RhdGUgPT09IE1yICYmIChlLnN0YXRlID0gTnIsIGUudGltZXIucmVzdGFydChhLCBlLmRlbGF5LCBlLnRpbWUpLCBhKGMpKSB9KSwgZS5zdGF0ZSA9IHdyLCBlLm9uLmNhbGwoInN0YXJ0IiwgdCwgdC5fX2RhdGFfXywgZS5pbmRleCwgZS5ncm91cCksIGUuc3RhdGUgPT09IHdyKSB7IGZvciAoZS5zdGF0ZSA9IE1yLCByID0gbmV3IEFycmF5KGwgPSBlLnR3ZWVuLmxlbmd0aCksIGYgPSAwLCBzID0gLTE7IGYgPCBsOyArK2YpKGggPSBlLnR3ZWVuW2ZdLnZhbHVlLmNhbGwodCwgdC5fX2RhdGFfXywgZS5pbmRleCwgZS5ncm91cCkpICYmIChyWysrc10gPSBoKTsgci5sZW5ndGggPSBzICsgMSB9IH0gZnVuY3Rpb24gYShuKSB7IGZvciAodmFyIGkgPSBuIDwgZS5kdXJhdGlvbiA/IGUuZWFzZS5jYWxsKG51bGwsIG4gLyBlLmR1cmF0aW9uKSA6IChlLnRpbWVyLnJlc3RhcnQodSksIGUuc3RhdGUgPSBUciwgMSksIG8gPSAtMSwgYSA9IHIubGVuZ3RoOyArK28gPCBhOylyW29dLmNhbGwodCwgaSk7IGUuc3RhdGUgPT09IFRyICYmIChlLm9uLmNhbGwoImVuZCIsIHQsIHQuX19kYXRhX18sIGUuaW5kZXgsIGUuZ3JvdXApLCB1KCkpIH0gZnVuY3Rpb24gdSgpIHsgZm9yICh2YXIgciBpbiBlLnN0YXRlID0gQXIsIGUudGltZXIuc3RvcCgpLCBkZWxldGUgaVtuXSwgaSkgcmV0dXJuOyBkZWxldGUgdC5fX3RyYW5zaXRpb24gfSBpW25dID0gZSwgZS50aW1lciA9IGhyKGZ1bmN0aW9uICh0KSB7IGUuc3RhdGUgPSB4ciwgZS50aW1lci5yZXN0YXJ0KG8sIGUuZGVsYXksIGUudGltZSksIGUuZGVsYXkgPD0gdCAmJiBvKHQgLSBlLmRlbGF5KSB9LCAwLCBlLnRpbWUpIH0odCwgZSwgeyBuYW1lOiBuLCBpbmRleDogciwgZ3JvdXA6IGksIG9uOiBfciwgdHdlZW46IGJyLCB0aW1lOiBvLnRpbWUsIGRlbGF5OiBvLmRlbGF5LCBkdXJhdGlvbjogby5kdXJhdGlvbiwgZWFzZTogby5lYXNlLCB0aW1lcjogbnVsbCwgc3RhdGU6IG1yIH0pIH0gZnVuY3Rpb24ga3IodCwgbikgeyB2YXIgZSA9IENyKHQsIG4pOyBpZiAoZS5zdGF0ZSA+IG1yKSB0aHJvdyBuZXcgRXJyb3IoInRvbyBsYXRlOyBhbHJlYWR5IHNjaGVkdWxlZCIpOyByZXR1cm4gZSB9IGZ1bmN0aW9uIEVyKHQsIG4pIHsgdmFyIGUgPSBDcih0LCBuKTsgaWYgKGUuc3RhdGUgPiBNcikgdGhyb3cgbmV3IEVycm9yKCJ0b28gbGF0ZTsgYWxyZWFkeSBydW5uaW5nIik7IHJldHVybiBlIH0gZnVuY3Rpb24gQ3IodCwgbikgeyB2YXIgZSA9IHQuX190cmFuc2l0aW9uOyBpZiAoIWUgfHwgIShlID0gZVtuXSkpIHRocm93IG5ldyBFcnJvcigidHJhbnNpdGlvbiBub3QgZm91bmQiKTsgcmV0dXJuIGUgfSBmdW5jdGlvbiBQcih0LCBuKSB7IHZhciBlLCByLCBpLCBvID0gdC5fX3RyYW5zaXRpb24sIGEgPSAhMDsgaWYgKG8pIHsgZm9yIChpIGluIG4gPSBudWxsID09IG4gPyBudWxsIDogbiArICIiLCBvKSAoZSA9IG9baV0pLm5hbWUgPT09IG4gPyAociA9IGUuc3RhdGUgPiB3ciAmJiBlLnN0YXRlIDwgVHIsIGUuc3RhdGUgPSBBciwgZS50aW1lci5zdG9wKCksIGUub24uY2FsbChyID8gImludGVycnVwdCIgOiAiY2FuY2VsIiwgdCwgdC5fX2RhdGFfXywgZS5pbmRleCwgZS5ncm91cCksIGRlbGV0ZSBvW2ldKSA6IGEgPSAhMTsgYSAmJiBkZWxldGUgdC5fX3RyYW5zaXRpb24gfSB9IGZ1bmN0aW9uIHpyKHQsIG4sIGUpIHsgdmFyIHIgPSB0Ll9pZDsgcmV0dXJuIHQuZWFjaChmdW5jdGlvbiAoKSB7IHZhciB0ID0gRXIodGhpcywgcik7ICh0LnZhbHVlIHx8ICh0LnZhbHVlID0ge30pKVtuXSA9IGUuYXBwbHkodGhpcywgYXJndW1lbnRzKSB9KSwgZnVuY3Rpb24gKHQpIHsgcmV0dXJuIENyKHQsIHIpLnZhbHVlW25dIH0gfSBmdW5jdGlvbiBScih0LCBuKSB7IHZhciBlOyByZXR1cm4gKCJudW1iZXIiID09IHR5cGVvZiBuID8gbWUgOiBuIGluc3RhbmNlb2YgcG4gPyBoZSA6IChlID0gcG4obikpID8gKG4gPSBlLCBoZSkgOiBOZSkodCwgbikgfSB2YXIgRHIgPSB6dC5wcm90b3R5cGUuY29uc3RydWN0b3I7IGZ1bmN0aW9uIHFyKHQpIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdGhpcy5zdHlsZS5yZW1vdmVQcm9wZXJ0eSh0KSB9IH0gdmFyIExyID0gMDsgZnVuY3Rpb24gVXIodCwgbiwgZSwgcikgeyB0aGlzLl9ncm91cHMgPSB0LCB0aGlzLl9wYXJlbnRzID0gbiwgdGhpcy5fbmFtZSA9IGUsIHRoaXMuX2lkID0gciB9IGZ1bmN0aW9uIE9yKHQpIHsgcmV0dXJuIHp0KCkudHJhbnNpdGlvbih0KSB9IGZ1bmN0aW9uIEJyKCkgeyByZXR1cm4gKytMciB9IHZhciBGciA9IHp0LnByb3RvdHlwZTsgZnVuY3Rpb24gWXIodCkgeyByZXR1cm4gKCh0ICo9IDIpIDw9IDEgPyB0ICogdCA6IC0tdCAqICgyIC0gdCkgKyAxKSAvIDIgfSBmdW5jdGlvbiBJcih0KSB7IHJldHVybiAoKHQgKj0gMikgPD0gMSA/IHQgKiB0ICogdCA6ICh0IC09IDIpICogdCAqIHQgKyAyKSAvIDIgfSBVci5wcm90b3R5cGUgPSBPci5wcm90b3R5cGUgPSB7IGNvbnN0cnVjdG9yOiBVciwgc2VsZWN0OiBmdW5jdGlvbiAodCkgeyB2YXIgbiA9IHRoaXMuX25hbWUsIGUgPSB0aGlzLl9pZDsgImZ1bmN0aW9uIiAhPSB0eXBlb2YgdCAmJiAodCA9IEsodCkpOyBmb3IgKHZhciByID0gdGhpcy5fZ3JvdXBzLCBpID0gci5sZW5ndGgsIG8gPSBuZXcgQXJyYXkoaSksIGEgPSAwOyBhIDwgaTsgKythKWZvciAodmFyIHUsIGMsIGYgPSByW2FdLCBzID0gZi5sZW5ndGgsIGwgPSBvW2FdID0gbmV3IEFycmF5KHMpLCBoID0gMDsgaCA8IHM7ICsraCkodSA9IGZbaF0pICYmIChjID0gdC5jYWxsKHUsIHUuX19kYXRhX18sIGgsIGYpKSAmJiAoIl9fZGF0YV9fIiBpbiB1ICYmIChjLl9fZGF0YV9fID0gdS5fX2RhdGFfXyksIGxbaF0gPSBjLCBTcihsW2hdLCBuLCBlLCBoLCBsLCBDcih1LCBlKSkpOyByZXR1cm4gbmV3IFVyKG8sIHRoaXMuX3BhcmVudHMsIG4sIGUpIH0sIHNlbGVjdEFsbDogZnVuY3Rpb24gKHQpIHsgdmFyIG4gPSB0aGlzLl9uYW1lLCBlID0gdGhpcy5faWQ7ICJmdW5jdGlvbiIgIT0gdHlwZW9mIHQgJiYgKHQgPSB0dCh0KSk7IGZvciAodmFyIHIgPSB0aGlzLl9ncm91cHMsIGkgPSByLmxlbmd0aCwgbyA9IFtdLCBhID0gW10sIHUgPSAwOyB1IDwgaTsgKyt1KWZvciAodmFyIGMsIGYgPSByW3VdLCBzID0gZi5sZW5ndGgsIGwgPSAwOyBsIDwgczsgKytsKWlmIChjID0gZltsXSkgeyBmb3IgKHZhciBoLCBkID0gdC5jYWxsKGMsIGMuX19kYXRhX18sIGwsIGYpLCBwID0gQ3IoYywgZSksIHYgPSAwLCBnID0gZC5sZW5ndGg7IHYgPCBnOyArK3YpKGggPSBkW3ZdKSAmJiBTcihoLCBuLCBlLCB2LCBkLCBwKTsgby5wdXNoKGQpLCBhLnB1c2goYykgfSByZXR1cm4gbmV3IFVyKG8sIGEsIG4sIGUpIH0sIGZpbHRlcjogZnVuY3Rpb24gKHQpIHsgImZ1bmN0aW9uIiAhPSB0eXBlb2YgdCAmJiAodCA9IG50KHQpKTsgZm9yICh2YXIgbiA9IHRoaXMuX2dyb3VwcywgZSA9IG4ubGVuZ3RoLCByID0gbmV3IEFycmF5KGUpLCBpID0gMDsgaSA8IGU7ICsraSlmb3IgKHZhciBvLCBhID0gbltpXSwgdSA9IGEubGVuZ3RoLCBjID0gcltpXSA9IFtdLCBmID0gMDsgZiA8IHU7ICsrZikobyA9IGFbZl0pICYmIHQuY2FsbChvLCBvLl9fZGF0YV9fLCBmLCBhKSAmJiBjLnB1c2gobyk7IHJldHVybiBuZXcgVXIociwgdGhpcy5fcGFyZW50cywgdGhpcy5fbmFtZSwgdGhpcy5faWQpIH0sIG1lcmdlOiBmdW5jdGlvbiAodCkgeyBpZiAodC5faWQgIT09IHRoaXMuX2lkKSB0aHJvdyBuZXcgRXJyb3I7IGZvciAodmFyIG4gPSB0aGlzLl9ncm91cHMsIGUgPSB0Ll9ncm91cHMsIHIgPSBuLmxlbmd0aCwgaSA9IGUubGVuZ3RoLCBvID0gTWF0aC5taW4ociwgaSksIGEgPSBuZXcgQXJyYXkociksIHUgPSAwOyB1IDwgbzsgKyt1KWZvciAodmFyIGMsIGYgPSBuW3VdLCBzID0gZVt1XSwgbCA9IGYubGVuZ3RoLCBoID0gYVt1XSA9IG5ldyBBcnJheShsKSwgZCA9IDA7IGQgPCBsOyArK2QpKGMgPSBmW2RdIHx8IHNbZF0pICYmIChoW2RdID0gYyk7IGZvciAoOyB1IDwgcjsgKyt1KWFbdV0gPSBuW3VdOyByZXR1cm4gbmV3IFVyKGEsIHRoaXMuX3BhcmVudHMsIHRoaXMuX25hbWUsIHRoaXMuX2lkKSB9LCBzZWxlY3Rpb246IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG5ldyBEcih0aGlzLl9ncm91cHMsIHRoaXMuX3BhcmVudHMpIH0sIHRyYW5zaXRpb246IGZ1bmN0aW9uICgpIHsgZm9yICh2YXIgdCA9IHRoaXMuX25hbWUsIG4gPSB0aGlzLl9pZCwgZSA9IEJyKCksIHIgPSB0aGlzLl9ncm91cHMsIGkgPSByLmxlbmd0aCwgbyA9IDA7IG8gPCBpOyArK28pZm9yICh2YXIgYSwgdSA9IHJbb10sIGMgPSB1Lmxlbmd0aCwgZiA9IDA7IGYgPCBjOyArK2YpaWYgKGEgPSB1W2ZdKSB7IHZhciBzID0gQ3IoYSwgbik7IFNyKGEsIHQsIGUsIGYsIHUsIHsgdGltZTogcy50aW1lICsgcy5kZWxheSArIHMuZHVyYXRpb24sIGRlbGF5OiAwLCBkdXJhdGlvbjogcy5kdXJhdGlvbiwgZWFzZTogcy5lYXNlIH0pIH0gcmV0dXJuIG5ldyBVcihyLCB0aGlzLl9wYXJlbnRzLCB0LCBlKSB9LCBjYWxsOiBGci5jYWxsLCBub2RlczogRnIubm9kZXMsIG5vZGU6IEZyLm5vZGUsIHNpemU6IEZyLnNpemUsIGVtcHR5OiBGci5lbXB0eSwgZWFjaDogRnIuZWFjaCwgb246IGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlID0gdGhpcy5faWQ7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoIDwgMiA/IENyKHRoaXMubm9kZSgpLCBlKS5vbi5vbih0KSA6IHRoaXMuZWFjaChmdW5jdGlvbiAodCwgbiwgZSkgeyB2YXIgciwgaSwgbyA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiAodCArICIiKS50cmltKCkuc3BsaXQoL158XHMrLykuZXZlcnkoZnVuY3Rpb24gKHQpIHsgdmFyIG4gPSB0LmluZGV4T2YoIi4iKTsgcmV0dXJuIG4gPj0gMCAmJiAodCA9IHQuc2xpY2UoMCwgbikpLCAhdCB8fCAic3RhcnQiID09PSB0IH0pIH0obikgPyBrciA6IEVyOyByZXR1cm4gZnVuY3Rpb24gKCkgeyB2YXIgYSA9IG8odGhpcywgdCksIHUgPSBhLm9uOyB1ICE9PSByICYmIChpID0gKHIgPSB1KS5jb3B5KCkpLm9uKG4sIGUpLCBhLm9uID0gaSB9IH0oZSwgdCwgbikpIH0sIGF0dHI6IGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlID0gVyh0KSwgciA9ICJ0cmFuc2Zvcm0iID09PSBlID8gTGUgOiBScjsgcmV0dXJuIHRoaXMuYXR0clR3ZWVuKHQsICJmdW5jdGlvbiIgPT0gdHlwZW9mIG4gPyAoZS5sb2NhbCA/IGZ1bmN0aW9uICh0LCBuLCBlKSB7IHZhciByLCBpLCBvOyByZXR1cm4gZnVuY3Rpb24gKCkgeyB2YXIgYSwgdSwgYyA9IGUodGhpcyk7IGlmIChudWxsICE9IGMpIHJldHVybiAoYSA9IHRoaXMuZ2V0QXR0cmlidXRlTlModC5zcGFjZSwgdC5sb2NhbCkpID09PSAodSA9IGMgKyAiIikgPyBudWxsIDogYSA9PT0gciAmJiB1ID09PSBpID8gbyA6IChpID0gdSwgbyA9IG4ociA9IGEsIGMpKTsgdGhpcy5yZW1vdmVBdHRyaWJ1dGVOUyh0LnNwYWNlLCB0LmxvY2FsKSB9IH0gOiBmdW5jdGlvbiAodCwgbiwgZSkgeyB2YXIgciwgaSwgbzsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIGEsIHUsIGMgPSBlKHRoaXMpOyBpZiAobnVsbCAhPSBjKSByZXR1cm4gKGEgPSB0aGlzLmdldEF0dHJpYnV0ZSh0KSkgPT09ICh1ID0gYyArICIiKSA/IG51bGwgOiBhID09PSByICYmIHUgPT09IGkgPyBvIDogKGkgPSB1LCBvID0gbihyID0gYSwgYykpOyB0aGlzLnJlbW92ZUF0dHJpYnV0ZSh0KSB9IH0pKGUsIHIsIHpyKHRoaXMsICJhdHRyLiIgKyB0LCBuKSkgOiBudWxsID09IG4gPyAoZS5sb2NhbCA/IGZ1bmN0aW9uICh0KSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHRoaXMucmVtb3ZlQXR0cmlidXRlTlModC5zcGFjZSwgdC5sb2NhbCkgfSB9IDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdGhpcy5yZW1vdmVBdHRyaWJ1dGUodCkgfSB9KShlKSA6IChlLmxvY2FsID8gZnVuY3Rpb24gKHQsIG4sIGUpIHsgdmFyIHIsIGksIG8gPSBlICsgIiI7IHJldHVybiBmdW5jdGlvbiAoKSB7IHZhciBhID0gdGhpcy5nZXRBdHRyaWJ1dGVOUyh0LnNwYWNlLCB0LmxvY2FsKTsgcmV0dXJuIGEgPT09IG8gPyBudWxsIDogYSA9PT0gciA/IGkgOiBpID0gbihyID0gYSwgZSkgfSB9IDogZnVuY3Rpb24gKHQsIG4sIGUpIHsgdmFyIHIsIGksIG8gPSBlICsgIiI7IHJldHVybiBmdW5jdGlvbiAoKSB7IHZhciBhID0gdGhpcy5nZXRBdHRyaWJ1dGUodCk7IHJldHVybiBhID09PSBvID8gbnVsbCA6IGEgPT09IHIgPyBpIDogaSA9IG4ociA9IGEsIGUpIH0gfSkoZSwgciwgbikpIH0sIGF0dHJUd2VlbjogZnVuY3Rpb24gKHQsIG4pIHsgdmFyIGUgPSAiYXR0ci4iICsgdDsgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSByZXR1cm4gKGUgPSB0aGlzLnR3ZWVuKGUpKSAmJiBlLl92YWx1ZTsgaWYgKG51bGwgPT0gbikgcmV0dXJuIHRoaXMudHdlZW4oZSwgbnVsbCk7IGlmICgiZnVuY3Rpb24iICE9IHR5cGVvZiBuKSB0aHJvdyBuZXcgRXJyb3I7IHZhciByID0gVyh0KTsgcmV0dXJuIHRoaXMudHdlZW4oZSwgKHIubG9jYWwgPyBmdW5jdGlvbiAodCwgbikgeyB2YXIgZSwgcjsgZnVuY3Rpb24gaSgpIHsgdmFyIGkgPSBuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IHJldHVybiBpICE9PSByICYmIChlID0gKHIgPSBpKSAmJiBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gZnVuY3Rpb24gKGUpIHsgdGhpcy5zZXRBdHRyaWJ1dGVOUyh0LnNwYWNlLCB0LmxvY2FsLCBuLmNhbGwodGhpcywgZSkpIH0gfSh0LCBpKSksIGUgfSByZXR1cm4gaS5fdmFsdWUgPSBuLCBpIH0gOiBmdW5jdGlvbiAodCwgbikgeyB2YXIgZSwgcjsgZnVuY3Rpb24gaSgpIHsgdmFyIGkgPSBuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IHJldHVybiBpICE9PSByICYmIChlID0gKHIgPSBpKSAmJiBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gZnVuY3Rpb24gKGUpIHsgdGhpcy5zZXRBdHRyaWJ1dGUodCwgbi5jYWxsKHRoaXMsIGUpKSB9IH0odCwgaSkpLCBlIH0gcmV0dXJuIGkuX3ZhbHVlID0gbiwgaSB9KShyLCBuKSkgfSwgc3R5bGU6IGZ1bmN0aW9uICh0LCBuLCBlKSB7IHZhciByID0gInRyYW5zZm9ybSIgPT0gKHQgKz0gIiIpID8gcWUgOiBScjsgcmV0dXJuIG51bGwgPT0gbiA/IHRoaXMuc3R5bGVUd2Vlbih0LCBmdW5jdGlvbiAodCwgbikgeyB2YXIgZSwgciwgaTsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIG8gPSBmdCh0aGlzLCB0KSwgYSA9ICh0aGlzLnN0eWxlLnJlbW92ZVByb3BlcnR5KHQpLCBmdCh0aGlzLCB0KSk7IHJldHVybiBvID09PSBhID8gbnVsbCA6IG8gPT09IGUgJiYgYSA9PT0gciA/IGkgOiBpID0gbihlID0gbywgciA9IGEpIH0gfSh0LCByKSkub24oImVuZC5zdHlsZS4iICsgdCwgcXIodCkpIDogImZ1bmN0aW9uIiA9PSB0eXBlb2YgbiA/IHRoaXMuc3R5bGVUd2Vlbih0LCBmdW5jdGlvbiAodCwgbiwgZSkgeyB2YXIgciwgaSwgbzsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIGEgPSBmdCh0aGlzLCB0KSwgdSA9IGUodGhpcyksIGMgPSB1ICsgIiI7IHJldHVybiBudWxsID09IHUgJiYgKHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkodCksIGMgPSB1ID0gZnQodGhpcywgdCkpLCBhID09PSBjID8gbnVsbCA6IGEgPT09IHIgJiYgYyA9PT0gaSA/IG8gOiAoaSA9IGMsIG8gPSBuKHIgPSBhLCB1KSkgfSB9KHQsIHIsIHpyKHRoaXMsICJzdHlsZS4iICsgdCwgbikpKS5lYWNoKGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlLCByLCBpLCBvLCBhID0gInN0eWxlLiIgKyBuLCB1ID0gImVuZC4iICsgYTsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIGMgPSBFcih0aGlzLCB0KSwgZiA9IGMub24sIHMgPSBudWxsID09IGMudmFsdWVbYV0gPyBvIHx8IChvID0gcXIobikpIDogdm9pZCAwOyBmID09PSBlICYmIGkgPT09IHMgfHwgKHIgPSAoZSA9IGYpLmNvcHkoKSkub24odSwgaSA9IHMpLCBjLm9uID0gciB9IH0odGhpcy5faWQsIHQpKSA6IHRoaXMuc3R5bGVUd2Vlbih0LCBmdW5jdGlvbiAodCwgbiwgZSkgeyB2YXIgciwgaSwgbyA9IGUgKyAiIjsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIGEgPSBmdCh0aGlzLCB0KTsgcmV0dXJuIGEgPT09IG8gPyBudWxsIDogYSA9PT0gciA/IGkgOiBpID0gbihyID0gYSwgZSkgfSB9KHQsIHIsIG4pLCBlKS5vbigiZW5kLnN0eWxlLiIgKyB0LCBudWxsKSB9LCBzdHlsZVR3ZWVuOiBmdW5jdGlvbiAodCwgbiwgZSkgeyB2YXIgciA9ICJzdHlsZS4iICsgKHQgKz0gIiIpOyBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHJldHVybiAociA9IHRoaXMudHdlZW4ocikpICYmIHIuX3ZhbHVlOyBpZiAobnVsbCA9PSBuKSByZXR1cm4gdGhpcy50d2VlbihyLCBudWxsKTsgaWYgKCJmdW5jdGlvbiIgIT0gdHlwZW9mIG4pIHRocm93IG5ldyBFcnJvcjsgcmV0dXJuIHRoaXMudHdlZW4ociwgZnVuY3Rpb24gKHQsIG4sIGUpIHsgdmFyIHIsIGk7IGZ1bmN0aW9uIG8oKSB7IHZhciBvID0gbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyByZXR1cm4gbyAhPT0gaSAmJiAociA9IChpID0gbykgJiYgZnVuY3Rpb24gKHQsIG4sIGUpIHsgcmV0dXJuIGZ1bmN0aW9uIChyKSB7IHRoaXMuc3R5bGUuc2V0UHJvcGVydHkodCwgbi5jYWxsKHRoaXMsIHIpLCBlKSB9IH0odCwgbywgZSkpLCByIH0gcmV0dXJuIG8uX3ZhbHVlID0gbiwgbyB9KHQsIG4sIG51bGwgPT0gZSA/ICIiIDogZSkpIH0sIHRleHQ6IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0aGlzLnR3ZWVuKCJ0ZXh0IiwgImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IGZ1bmN0aW9uICh0KSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHZhciBuID0gdCh0aGlzKTsgdGhpcy50ZXh0Q29udGVudCA9IG51bGwgPT0gbiA/ICIiIDogbiB9IH0oenIodGhpcywgInRleHQiLCB0KSkgOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyB0aGlzLnRleHRDb250ZW50ID0gdCB9IH0obnVsbCA9PSB0ID8gIiIgOiB0ICsgIiIpKSB9LCB0ZXh0VHdlZW46IGZ1bmN0aW9uICh0KSB7IHZhciBuID0gInRleHQiOyBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDEpIHJldHVybiAobiA9IHRoaXMudHdlZW4obikpICYmIG4uX3ZhbHVlOyBpZiAobnVsbCA9PSB0KSByZXR1cm4gdGhpcy50d2VlbihuLCBudWxsKTsgaWYgKCJmdW5jdGlvbiIgIT0gdHlwZW9mIHQpIHRocm93IG5ldyBFcnJvcjsgcmV0dXJuIHRoaXMudHdlZW4obiwgZnVuY3Rpb24gKHQpIHsgdmFyIG4sIGU7IGZ1bmN0aW9uIHIoKSB7IHZhciByID0gdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyByZXR1cm4gciAhPT0gZSAmJiAobiA9IChlID0gcikgJiYgZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGZ1bmN0aW9uIChuKSB7IHRoaXMudGV4dENvbnRlbnQgPSB0LmNhbGwodGhpcywgbikgfSB9KHIpKSwgbiB9IHJldHVybiByLl92YWx1ZSA9IHQsIHIgfSh0KSkgfSwgcmVtb3ZlOiBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzLm9uKCJlbmQucmVtb3ZlIiwgZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIG4gPSB0aGlzLnBhcmVudE5vZGU7IGZvciAodmFyIGUgaW4gdGhpcy5fX3RyYW5zaXRpb24pIGlmICgrZSAhPT0gdCkgcmV0dXJuOyBuICYmIG4ucmVtb3ZlQ2hpbGQodGhpcykgfSB9KHRoaXMuX2lkKSkgfSwgdHdlZW46IGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlID0gdGhpcy5faWQ7IGlmICh0ICs9ICIiLCBhcmd1bWVudHMubGVuZ3RoIDwgMikgeyBmb3IgKHZhciByLCBpID0gQ3IodGhpcy5ub2RlKCksIGUpLnR3ZWVuLCBvID0gMCwgYSA9IGkubGVuZ3RoOyBvIDwgYTsgKytvKWlmICgociA9IGlbb10pLm5hbWUgPT09IHQpIHJldHVybiByLnZhbHVlOyByZXR1cm4gbnVsbCB9IHJldHVybiB0aGlzLmVhY2goKG51bGwgPT0gbiA/IGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlLCByOyByZXR1cm4gZnVuY3Rpb24gKCkgeyB2YXIgaSA9IEVyKHRoaXMsIHQpLCBvID0gaS50d2VlbjsgaWYgKG8gIT09IGUpIGZvciAodmFyIGEgPSAwLCB1ID0gKHIgPSBlID0gbykubGVuZ3RoOyBhIDwgdTsgKythKWlmIChyW2FdLm5hbWUgPT09IG4pIHsgKHIgPSByLnNsaWNlKCkpLnNwbGljZShhLCAxKTsgYnJlYWsgfSBpLnR3ZWVuID0gciB9IH0gOiBmdW5jdGlvbiAodCwgbiwgZSkgeyB2YXIgciwgaTsgaWYgKCJmdW5jdGlvbiIgIT0gdHlwZW9mIGUpIHRocm93IG5ldyBFcnJvcjsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIG8gPSBFcih0aGlzLCB0KSwgYSA9IG8udHdlZW47IGlmIChhICE9PSByKSB7IGkgPSAociA9IGEpLnNsaWNlKCk7IGZvciAodmFyIHUgPSB7IG5hbWU6IG4sIHZhbHVlOiBlIH0sIGMgPSAwLCBmID0gaS5sZW5ndGg7IGMgPCBmOyArK2MpaWYgKGlbY10ubmFtZSA9PT0gbikgeyBpW2NdID0gdTsgYnJlYWsgfSBjID09PSBmICYmIGkucHVzaCh1KSB9IG8udHdlZW4gPSBpIH0gfSkoZSwgdCwgbikpIH0sIGRlbGF5OiBmdW5jdGlvbiAodCkgeyB2YXIgbiA9IHRoaXMuX2lkOyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IHRoaXMuZWFjaCgoImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IGtyKHRoaXMsIHQpLmRlbGF5ID0gK24uYXBwbHkodGhpcywgYXJndW1lbnRzKSB9IH0gOiBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gbiA9ICtuLCBmdW5jdGlvbiAoKSB7IGtyKHRoaXMsIHQpLmRlbGF5ID0gbiB9IH0pKG4sIHQpKSA6IENyKHRoaXMubm9kZSgpLCBuKS5kZWxheSB9LCBkdXJhdGlvbjogZnVuY3Rpb24gKHQpIHsgdmFyIG4gPSB0aGlzLl9pZDsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyB0aGlzLmVhY2goKCJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyBFcih0aGlzLCB0KS5kdXJhdGlvbiA9ICtuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfSB9IDogZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIG4gPSArbiwgZnVuY3Rpb24gKCkgeyBFcih0aGlzLCB0KS5kdXJhdGlvbiA9IG4gfSB9KShuLCB0KSkgOiBDcih0aGlzLm5vZGUoKSwgbikuZHVyYXRpb24gfSwgZWFzZTogZnVuY3Rpb24gKHQpIHsgdmFyIG4gPSB0aGlzLl9pZDsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyB0aGlzLmVhY2goZnVuY3Rpb24gKHQsIG4pIHsgaWYgKCJmdW5jdGlvbiIgIT0gdHlwZW9mIG4pIHRocm93IG5ldyBFcnJvcjsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgRXIodGhpcywgdCkuZWFzZSA9IG4gfSB9KG4sIHQpKSA6IENyKHRoaXMubm9kZSgpLCBuKS5lYXNlIH0sIGVuZDogZnVuY3Rpb24gKCkgeyB2YXIgdCwgbiwgZSA9IHRoaXMsIHIgPSBlLl9pZCwgaSA9IGUuc2l6ZSgpOyByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKG8sIGEpIHsgdmFyIHUgPSB7IHZhbHVlOiBhIH0sIGMgPSB7IHZhbHVlOiBmdW5jdGlvbiAoKSB7IDAgPT0gLS1pICYmIG8oKSB9IH07IGUuZWFjaChmdW5jdGlvbiAoKSB7IHZhciBlID0gRXIodGhpcywgciksIGkgPSBlLm9uOyBpICE9PSB0ICYmICgobiA9ICh0ID0gaSkuY29weSgpKS5fLmNhbmNlbC5wdXNoKHUpLCBuLl8uaW50ZXJydXB0LnB1c2godSksIG4uXy5lbmQucHVzaChjKSksIGUub24gPSBuIH0pIH0pIH0gfTsgdmFyIEhyID0gZnVuY3Rpb24gdChuKSB7IGZ1bmN0aW9uIGUodCkgeyByZXR1cm4gTWF0aC5wb3codCwgbikgfSByZXR1cm4gbiA9ICtuLCBlLmV4cG9uZW50ID0gdCwgZSB9KDMpLCBqciA9IGZ1bmN0aW9uIHQobikgeyBmdW5jdGlvbiBlKHQpIHsgcmV0dXJuIDEgLSBNYXRoLnBvdygxIC0gdCwgbikgfSByZXR1cm4gbiA9ICtuLCBlLmV4cG9uZW50ID0gdCwgZSB9KDMpLCBYciA9IGZ1bmN0aW9uIHQobikgeyBmdW5jdGlvbiBlKHQpIHsgcmV0dXJuICgodCAqPSAyKSA8PSAxID8gTWF0aC5wb3codCwgbikgOiAyIC0gTWF0aC5wb3coMiAtIHQsIG4pKSAvIDIgfSByZXR1cm4gbiA9ICtuLCBlLmV4cG9uZW50ID0gdCwgZSB9KDMpLCBWciA9IE1hdGguUEksIEdyID0gVnIgLyAyOyBmdW5jdGlvbiAkcih0KSB7IHJldHVybiAoMSAtIE1hdGguY29zKFZyICogdCkpIC8gMiB9IGZ1bmN0aW9uIFdyKHQpIHsgcmV0dXJuICgodCAqPSAyKSA8PSAxID8gTWF0aC5wb3coMiwgMTAgKiB0IC0gMTApIDogMiAtIE1hdGgucG93KDIsIDEwIC0gMTAgKiB0KSkgLyAyIH0gZnVuY3Rpb24gWnIodCkgeyByZXR1cm4gKCh0ICo9IDIpIDw9IDEgPyAxIC0gTWF0aC5zcXJ0KDEgLSB0ICogdCkgOiBNYXRoLnNxcnQoMSAtICh0IC09IDIpICogdCkgKyAxKSAvIDIgfSB2YXIgUXIgPSA0IC8gMTEsIEtyID0gNiAvIDExLCBKciA9IDggLyAxMSwgdGkgPSAuNzUsIG5pID0gOSAvIDExLCBlaSA9IDEwIC8gMTEsIHJpID0gLjkzNzUsIGlpID0gMjEgLyAyMiwgb2kgPSA2MyAvIDY0LCBhaSA9IDEgLyBRciAvIFFyOyBmdW5jdGlvbiB1aSh0KSB7IHJldHVybiAodCA9ICt0KSA8IFFyID8gYWkgKiB0ICogdCA6IHQgPCBKciA/IGFpICogKHQgLT0gS3IpICogdCArIHRpIDogdCA8IGVpID8gYWkgKiAodCAtPSBuaSkgKiB0ICsgcmkgOiBhaSAqICh0IC09IGlpKSAqIHQgKyBvaSB9IHZhciBjaSA9IGZ1bmN0aW9uIHQobikgeyBmdW5jdGlvbiBlKHQpIHsgcmV0dXJuIHQgKiB0ICogKChuICsgMSkgKiB0IC0gbikgfSByZXR1cm4gbiA9ICtuLCBlLm92ZXJzaG9vdCA9IHQsIGUgfSgxLjcwMTU4KSwgZmkgPSBmdW5jdGlvbiB0KG4pIHsgZnVuY3Rpb24gZSh0KSB7IHJldHVybiAtLXQgKiB0ICogKChuICsgMSkgKiB0ICsgbikgKyAxIH0gcmV0dXJuIG4gPSArbiwgZS5vdmVyc2hvb3QgPSB0LCBlIH0oMS43MDE1OCksIHNpID0gZnVuY3Rpb24gdChuKSB7IGZ1bmN0aW9uIGUodCkgeyByZXR1cm4gKCh0ICo9IDIpIDwgMSA/IHQgKiB0ICogKChuICsgMSkgKiB0IC0gbikgOiAodCAtPSAyKSAqIHQgKiAoKG4gKyAxKSAqIHQgKyBuKSArIDIpIC8gMiB9IHJldHVybiBuID0gK24sIGUub3ZlcnNob290ID0gdCwgZSB9KDEuNzAxNTgpLCBsaSA9IDIgKiBNYXRoLlBJLCBoaSA9IGZ1bmN0aW9uIHQobiwgZSkgeyB2YXIgciA9IE1hdGguYXNpbigxIC8gKG4gPSBNYXRoLm1heCgxLCBuKSkpICogKGUgLz0gbGkpOyBmdW5jdGlvbiBpKHQpIHsgcmV0dXJuIG4gKiBNYXRoLnBvdygyLCAxMCAqIC0tdCkgKiBNYXRoLnNpbigociAtIHQpIC8gZSkgfSByZXR1cm4gaS5hbXBsaXR1ZGUgPSBmdW5jdGlvbiAobikgeyByZXR1cm4gdChuLCBlICogbGkpIH0sIGkucGVyaW9kID0gZnVuY3Rpb24gKGUpIHsgcmV0dXJuIHQobiwgZSkgfSwgaSB9KDEsIC4zKSwgZGkgPSBmdW5jdGlvbiB0KG4sIGUpIHsgdmFyIHIgPSBNYXRoLmFzaW4oMSAvIChuID0gTWF0aC5tYXgoMSwgbikpKSAqIChlIC89IGxpKTsgZnVuY3Rpb24gaSh0KSB7IHJldHVybiAxIC0gbiAqIE1hdGgucG93KDIsIC0xMCAqICh0ID0gK3QpKSAqIE1hdGguc2luKCh0ICsgcikgLyBlKSB9IHJldHVybiBpLmFtcGxpdHVkZSA9IGZ1bmN0aW9uIChuKSB7IHJldHVybiB0KG4sIGUgKiBsaSkgfSwgaS5wZXJpb2QgPSBmdW5jdGlvbiAoZSkgeyByZXR1cm4gdChuLCBlKSB9LCBpIH0oMSwgLjMpLCBwaSA9IGZ1bmN0aW9uIHQobiwgZSkgeyB2YXIgciA9IE1hdGguYXNpbigxIC8gKG4gPSBNYXRoLm1heCgxLCBuKSkpICogKGUgLz0gbGkpOyBmdW5jdGlvbiBpKHQpIHsgcmV0dXJuICgodCA9IDIgKiB0IC0gMSkgPCAwID8gbiAqIE1hdGgucG93KDIsIDEwICogdCkgKiBNYXRoLnNpbigociAtIHQpIC8gZSkgOiAyIC0gbiAqIE1hdGgucG93KDIsIC0xMCAqIHQpICogTWF0aC5zaW4oKHIgKyB0KSAvIGUpKSAvIDIgfSByZXR1cm4gaS5hbXBsaXR1ZGUgPSBmdW5jdGlvbiAobikgeyByZXR1cm4gdChuLCBlICogbGkpIH0sIGkucGVyaW9kID0gZnVuY3Rpb24gKGUpIHsgcmV0dXJuIHQobiwgZSkgfSwgaSB9KDEsIC4zKSwgdmkgPSB7IHRpbWU6IG51bGwsIGRlbGF5OiAwLCBkdXJhdGlvbjogMjUwLCBlYXNlOiBJciB9OyBmdW5jdGlvbiBnaSh0LCBuKSB7IGZvciAodmFyIGU7ICEoZSA9IHQuX190cmFuc2l0aW9uKSB8fCAhKGUgPSBlW25dKTspaWYgKCEodCA9IHQucGFyZW50Tm9kZSkpIHJldHVybiB2aS50aW1lID0gZnIoKSwgdmk7IHJldHVybiBlIH0genQucHJvdG90eXBlLmludGVycnVwdCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkgeyBQcih0aGlzLCB0KSB9KSB9LCB6dC5wcm90b3R5cGUudHJhbnNpdGlvbiA9IGZ1bmN0aW9uICh0KSB7IHZhciBuLCBlOyB0IGluc3RhbmNlb2YgVXIgPyAobiA9IHQuX2lkLCB0ID0gdC5fbmFtZSkgOiAobiA9IEJyKCksIChlID0gdmkpLnRpbWUgPSBmcigpLCB0ID0gbnVsbCA9PSB0ID8gbnVsbCA6IHQgKyAiIik7IGZvciAodmFyIHIgPSB0aGlzLl9ncm91cHMsIGkgPSByLmxlbmd0aCwgbyA9IDA7IG8gPCBpOyArK28pZm9yICh2YXIgYSwgdSA9IHJbb10sIGMgPSB1Lmxlbmd0aCwgZiA9IDA7IGYgPCBjOyArK2YpKGEgPSB1W2ZdKSAmJiBTcihhLCB0LCBuLCBmLCB1LCBlIHx8IGdpKGEsIG4pKTsgcmV0dXJuIG5ldyBVcihyLCB0aGlzLl9wYXJlbnRzLCB0LCBuKSB9OyB2YXIgeWkgPSBbbnVsbF07IGZ1bmN0aW9uIF9pKHQpIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHQgfSB9IGZ1bmN0aW9uIGJpKHQsIG4sIGUpIHsgdGhpcy50YXJnZXQgPSB0LCB0aGlzLnR5cGUgPSBuLCB0aGlzLnNlbGVjdGlvbiA9IGUgfSBmdW5jdGlvbiBtaSgpIHsgdC5ldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKSB9IGZ1bmN0aW9uIHhpKCkgeyB0LmV2ZW50LnByZXZlbnREZWZhdWx0KCksIHQuZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCkgfSB2YXIgd2kgPSB7IG5hbWU6ICJkcmFnIiB9LCBNaSA9IHsgbmFtZTogInNwYWNlIiB9LCBOaSA9IHsgbmFtZTogImhhbmRsZSIgfSwgVGkgPSB7IG5hbWU6ICJjZW50ZXIiIH07IGZ1bmN0aW9uIEFpKHQpIHsgcmV0dXJuIFsrdFswXSwgK3RbMV1dIH0gZnVuY3Rpb24gU2kodCkgeyByZXR1cm4gW0FpKHRbMF0pLCBBaSh0WzFdKV0gfSB2YXIga2kgPSB7IG5hbWU6ICJ4IiwgaGFuZGxlczogWyJ3IiwgImUiXS5tYXAoTGkpLCBpbnB1dDogZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIG51bGwgPT0gdCA/IG51bGwgOiBbWyt0WzBdLCBuWzBdWzFdXSwgWyt0WzFdLCBuWzFdWzFdXV0gfSwgb3V0cHV0OiBmdW5jdGlvbiAodCkgeyByZXR1cm4gdCAmJiBbdFswXVswXSwgdFsxXVswXV0gfSB9LCBFaSA9IHsgbmFtZTogInkiLCBoYW5kbGVzOiBbIm4iLCAicyJdLm1hcChMaSksIGlucHV0OiBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gbnVsbCA9PSB0ID8gbnVsbCA6IFtbblswXVswXSwgK3RbMF1dLCBbblsxXVswXSwgK3RbMV1dXSB9LCBvdXRwdXQ6IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0ICYmIFt0WzBdWzFdLCB0WzFdWzFdXSB9IH0sIENpID0geyBuYW1lOiAieHkiLCBoYW5kbGVzOiBbIm4iLCAidyIsICJlIiwgInMiLCAibnciLCAibmUiLCAic3ciLCAic2UiXS5tYXAoTGkpLCBpbnB1dDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIG51bGwgPT0gdCA/IG51bGwgOiBTaSh0KSB9LCBvdXRwdXQ6IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0IH0gfSwgUGkgPSB7IG92ZXJsYXk6ICJjcm9zc2hhaXIiLCBzZWxlY3Rpb246ICJtb3ZlIiwgbjogIm5zLXJlc2l6ZSIsIGU6ICJldy1yZXNpemUiLCBzOiAibnMtcmVzaXplIiwgdzogImV3LXJlc2l6ZSIsIG53OiAibndzZS1yZXNpemUiLCBuZTogIm5lc3ctcmVzaXplIiwgc2U6ICJud3NlLXJlc2l6ZSIsIHN3OiAibmVzdy1yZXNpemUiIH0sIHppID0geyBlOiAidyIsIHc6ICJlIiwgbnc6ICJuZSIsIG5lOiAibnciLCBzZTogInN3Iiwgc3c6ICJzZSIgfSwgUmkgPSB7IG46ICJzIiwgczogIm4iLCBudzogInN3IiwgbmU6ICJzZSIsIHNlOiAibmUiLCBzdzogIm53IiB9LCBEaSA9IHsgb3ZlcmxheTogMSwgc2VsZWN0aW9uOiAxLCBuOiBudWxsLCBlOiAxLCBzOiBudWxsLCB3OiAtMSwgbnc6IC0xLCBuZTogMSwgc2U6IDEsIHN3OiAtMSB9LCBxaSA9IHsgb3ZlcmxheTogMSwgc2VsZWN0aW9uOiAxLCBuOiAtMSwgZTogbnVsbCwgczogMSwgdzogbnVsbCwgbnc6IC0xLCBuZTogLTEsIHNlOiAxLCBzdzogMSB9OyBmdW5jdGlvbiBMaSh0KSB7IHJldHVybiB7IHR5cGU6IHQgfSB9IGZ1bmN0aW9uIFVpKCkgeyByZXR1cm4gIXQuZXZlbnQuY3RybEtleSAmJiAhdC5ldmVudC5idXR0b24gfSBmdW5jdGlvbiBPaSgpIHsgdmFyIHQgPSB0aGlzLm93bmVyU1ZHRWxlbWVudCB8fCB0aGlzOyByZXR1cm4gdC5oYXNBdHRyaWJ1dGUoInZpZXdCb3giKSA/IFtbKHQgPSB0LnZpZXdCb3guYmFzZVZhbCkueCwgdC55XSwgW3QueCArIHQud2lkdGgsIHQueSArIHQuaGVpZ2h0XV0gOiBbWzAsIDBdLCBbdC53aWR0aC5iYXNlVmFsLnZhbHVlLCB0LmhlaWdodC5iYXNlVmFsLnZhbHVlXV0gfSBmdW5jdGlvbiBCaSgpIHsgcmV0dXJuIG5hdmlnYXRvci5tYXhUb3VjaFBvaW50cyB8fCAib250b3VjaHN0YXJ0IiBpbiB0aGlzIH0gZnVuY3Rpb24gRmkodCkgeyBmb3IgKDsgIXQuX19icnVzaDspaWYgKCEodCA9IHQucGFyZW50Tm9kZSkpIHJldHVybjsgcmV0dXJuIHQuX19icnVzaCB9IGZ1bmN0aW9uIFlpKG4pIHsgdmFyIGUsIHIgPSBPaSwgaSA9IFVpLCBvID0gQmksIGEgPSAhMCwgdSA9IEkoInN0YXJ0IiwgImJydXNoIiwgImVuZCIpLCBjID0gNjsgZnVuY3Rpb24gZih0KSB7IHZhciBlID0gdC5wcm9wZXJ0eSgiX19icnVzaCIsIGcpLnNlbGVjdEFsbCgiLm92ZXJsYXkiKS5kYXRhKFtMaSgib3ZlcmxheSIpXSk7IGUuZW50ZXIoKS5hcHBlbmQoInJlY3QiKS5hdHRyKCJjbGFzcyIsICJvdmVybGF5IikuYXR0cigicG9pbnRlci1ldmVudHMiLCAiYWxsIikuYXR0cigiY3Vyc29yIiwgUGkub3ZlcmxheSkubWVyZ2UoZSkuZWFjaChmdW5jdGlvbiAoKSB7IHZhciB0ID0gRmkodGhpcykuZXh0ZW50OyBSdCh0aGlzKS5hdHRyKCJ4IiwgdFswXVswXSkuYXR0cigieSIsIHRbMF1bMV0pLmF0dHIoIndpZHRoIiwgdFsxXVswXSAtIHRbMF1bMF0pLmF0dHIoImhlaWdodCIsIHRbMV1bMV0gLSB0WzBdWzFdKSB9KSwgdC5zZWxlY3RBbGwoIi5zZWxlY3Rpb24iKS5kYXRhKFtMaSgic2VsZWN0aW9uIildKS5lbnRlcigpLmFwcGVuZCgicmVjdCIpLmF0dHIoImNsYXNzIiwgInNlbGVjdGlvbiIpLmF0dHIoImN1cnNvciIsIFBpLnNlbGVjdGlvbikuYXR0cigiZmlsbCIsICIjNzc3IikuYXR0cigiZmlsbC1vcGFjaXR5IiwgLjMpLmF0dHIoInN0cm9rZSIsICIjZmZmIikuYXR0cigic2hhcGUtcmVuZGVyaW5nIiwgImNyaXNwRWRnZXMiKTsgdmFyIHIgPSB0LnNlbGVjdEFsbCgiLmhhbmRsZSIpLmRhdGEobi5oYW5kbGVzLCBmdW5jdGlvbiAodCkgeyByZXR1cm4gdC50eXBlIH0pOyByLmV4aXQoKS5yZW1vdmUoKSwgci5lbnRlcigpLmFwcGVuZCgicmVjdCIpLmF0dHIoImNsYXNzIiwgZnVuY3Rpb24gKHQpIHsgcmV0dXJuICJoYW5kbGUgaGFuZGxlLS0iICsgdC50eXBlIH0pLmF0dHIoImN1cnNvciIsIGZ1bmN0aW9uICh0KSB7IHJldHVybiBQaVt0LnR5cGVdIH0pLCB0LmVhY2gocykuYXR0cigiZmlsbCIsICJub25lIikuYXR0cigicG9pbnRlci1ldmVudHMiLCAiYWxsIikub24oIm1vdXNlZG93bi5icnVzaCIsIGQpLmZpbHRlcihvKS5vbigidG91Y2hzdGFydC5icnVzaCIsIGQpLm9uKCJ0b3VjaG1vdmUuYnJ1c2giLCBwKS5vbigidG91Y2hlbmQuYnJ1c2ggdG91Y2hjYW5jZWwuYnJ1c2giLCB2KS5zdHlsZSgidG91Y2gtYWN0aW9uIiwgIm5vbmUiKS5zdHlsZSgiLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yIiwgInJnYmEoMCwwLDAsMCkiKSB9IGZ1bmN0aW9uIHMoKSB7IHZhciB0ID0gUnQodGhpcyksIG4gPSBGaSh0aGlzKS5zZWxlY3Rpb247IG4gPyAodC5zZWxlY3RBbGwoIi5zZWxlY3Rpb24iKS5zdHlsZSgiZGlzcGxheSIsIG51bGwpLmF0dHIoIngiLCBuWzBdWzBdKS5hdHRyKCJ5IiwgblswXVsxXSkuYXR0cigid2lkdGgiLCBuWzFdWzBdIC0gblswXVswXSkuYXR0cigiaGVpZ2h0IiwgblsxXVsxXSAtIG5bMF1bMV0pLCB0LnNlbGVjdEFsbCgiLmhhbmRsZSIpLnN0eWxlKCJkaXNwbGF5IiwgbnVsbCkuYXR0cigieCIsIGZ1bmN0aW9uICh0KSB7IHJldHVybiAiZSIgPT09IHQudHlwZVt0LnR5cGUubGVuZ3RoIC0gMV0gPyBuWzFdWzBdIC0gYyAvIDIgOiBuWzBdWzBdIC0gYyAvIDIgfSkuYXR0cigieSIsIGZ1bmN0aW9uICh0KSB7IHJldHVybiAicyIgPT09IHQudHlwZVswXSA/IG5bMV1bMV0gLSBjIC8gMiA6IG5bMF1bMV0gLSBjIC8gMiB9KS5hdHRyKCJ3aWR0aCIsIGZ1bmN0aW9uICh0KSB7IHJldHVybiAibiIgPT09IHQudHlwZSB8fCAicyIgPT09IHQudHlwZSA/IG5bMV1bMF0gLSBuWzBdWzBdICsgYyA6IGMgfSkuYXR0cigiaGVpZ2h0IiwgZnVuY3Rpb24gKHQpIHsgcmV0dXJuICJlIiA9PT0gdC50eXBlIHx8ICJ3IiA9PT0gdC50eXBlID8gblsxXVsxXSAtIG5bMF1bMV0gKyBjIDogYyB9KSkgOiB0LnNlbGVjdEFsbCgiLnNlbGVjdGlvbiwuaGFuZGxlIikuc3R5bGUoImRpc3BsYXkiLCAibm9uZSIpLmF0dHIoIngiLCBudWxsKS5hdHRyKCJ5IiwgbnVsbCkuYXR0cigid2lkdGgiLCBudWxsKS5hdHRyKCJoZWlnaHQiLCBudWxsKSB9IGZ1bmN0aW9uIGwodCwgbiwgZSkgeyByZXR1cm4gIWUgJiYgdC5fX2JydXNoLmVtaXR0ZXIgfHwgbmV3IGgodCwgbikgfSBmdW5jdGlvbiBoKHQsIG4pIHsgdGhpcy50aGF0ID0gdCwgdGhpcy5hcmdzID0gbiwgdGhpcy5zdGF0ZSA9IHQuX19icnVzaCwgdGhpcy5hY3RpdmUgPSAwIH0gZnVuY3Rpb24gZCgpIHsgaWYgKCghZSB8fCB0LmV2ZW50LnRvdWNoZXMpICYmIGkuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgeyB2YXIgciwgbywgdSwgYywgZiwgaCwgZCwgcCwgdiwgZywgeSwgXywgYiA9IHRoaXMsIG0gPSB0LmV2ZW50LnRhcmdldC5fX2RhdGFfXy50eXBlLCB4ID0gInNlbGVjdGlvbiIgPT09IChhICYmIHQuZXZlbnQubWV0YUtleSA/IG0gPSAib3ZlcmxheSIgOiBtKSA/IHdpIDogYSAmJiB0LmV2ZW50LmFsdEtleSA/IFRpIDogTmksIHcgPSBuID09PSBFaSA/IG51bGwgOiBEaVttXSwgTSA9IG4gPT09IGtpID8gbnVsbCA6IHFpW21dLCBOID0gRmkoYiksIFQgPSBOLmV4dGVudCwgQSA9IE4uc2VsZWN0aW9uLCBTID0gVFswXVswXSwgayA9IFRbMF1bMV0sIEUgPSBUWzFdWzBdLCBDID0gVFsxXVsxXSwgUCA9IDAsIHogPSAwLCBSID0gdyAmJiBNICYmIGEgJiYgdC5ldmVudC5zaGlmdEtleSwgRCA9IHQuZXZlbnQudG91Y2hlcyA/IChfID0gdC5ldmVudC5jaGFuZ2VkVG91Y2hlc1swXS5pZGVudGlmaWVyLCBmdW5jdGlvbiAobikgeyByZXR1cm4gRnQobiwgdC5ldmVudC50b3VjaGVzLCBfKSB9KSA6IEJ0LCBxID0gRChiKSwgTCA9IHEsIFUgPSBsKGIsIGFyZ3VtZW50cywgITApLmJlZm9yZXN0YXJ0KCk7ICJvdmVybGF5IiA9PT0gbSA/IChBICYmICh2ID0gITApLCBOLnNlbGVjdGlvbiA9IEEgPSBbW3IgPSBuID09PSBFaSA/IFMgOiBxWzBdLCB1ID0gbiA9PT0ga2kgPyBrIDogcVsxXV0sIFtmID0gbiA9PT0gRWkgPyBFIDogciwgZCA9IG4gPT09IGtpID8gQyA6IHVdXSkgOiAociA9IEFbMF1bMF0sIHUgPSBBWzBdWzFdLCBmID0gQVsxXVswXSwgZCA9IEFbMV1bMV0pLCBvID0gciwgYyA9IHUsIGggPSBmLCBwID0gZDsgdmFyIE8gPSBSdChiKS5hdHRyKCJwb2ludGVyLWV2ZW50cyIsICJub25lIiksIEIgPSBPLnNlbGVjdEFsbCgiLm92ZXJsYXkiKS5hdHRyKCJjdXJzb3IiLCBQaVttXSk7IGlmICh0LmV2ZW50LnRvdWNoZXMpIFUubW92ZWQgPSBZLCBVLmVuZGVkID0gSDsgZWxzZSB7IHZhciBGID0gUnQodC5ldmVudC52aWV3KS5vbigibW91c2Vtb3ZlLmJydXNoIiwgWSwgITApLm9uKCJtb3VzZXVwLmJydXNoIiwgSCwgITApOyBhICYmIEYub24oImtleWRvd24uYnJ1c2giLCBmdW5jdGlvbiAoKSB7IHN3aXRjaCAodC5ldmVudC5rZXlDb2RlKSB7IGNhc2UgMTY6IFIgPSB3ICYmIE07IGJyZWFrOyBjYXNlIDE4OiB4ID09PSBOaSAmJiAodyAmJiAoZiA9IGggLSBQICogdywgciA9IG8gKyBQICogdyksIE0gJiYgKGQgPSBwIC0geiAqIE0sIHUgPSBjICsgeiAqIE0pLCB4ID0gVGksIEkoKSk7IGJyZWFrOyBjYXNlIDMyOiB4ICE9PSBOaSAmJiB4ICE9PSBUaSB8fCAodyA8IDAgPyBmID0gaCAtIFAgOiB3ID4gMCAmJiAociA9IG8gLSBQKSwgTSA8IDAgPyBkID0gcCAtIHogOiBNID4gMCAmJiAodSA9IGMgLSB6KSwgeCA9IE1pLCBCLmF0dHIoImN1cnNvciIsIFBpLnNlbGVjdGlvbiksIEkoKSk7IGJyZWFrOyBkZWZhdWx0OiByZXR1cm4gfXhpKCkgfSwgITApLm9uKCJrZXl1cC5icnVzaCIsIGZ1bmN0aW9uICgpIHsgc3dpdGNoICh0LmV2ZW50LmtleUNvZGUpIHsgY2FzZSAxNjogUiAmJiAoZyA9IHkgPSBSID0gITEsIEkoKSk7IGJyZWFrOyBjYXNlIDE4OiB4ID09PSBUaSAmJiAodyA8IDAgPyBmID0gaCA6IHcgPiAwICYmIChyID0gbyksIE0gPCAwID8gZCA9IHAgOiBNID4gMCAmJiAodSA9IGMpLCB4ID0gTmksIEkoKSk7IGJyZWFrOyBjYXNlIDMyOiB4ID09PSBNaSAmJiAodC5ldmVudC5hbHRLZXkgPyAodyAmJiAoZiA9IGggLSBQICogdywgciA9IG8gKyBQICogdyksIE0gJiYgKGQgPSBwIC0geiAqIE0sIHUgPSBjICsgeiAqIE0pLCB4ID0gVGkpIDogKHcgPCAwID8gZiA9IGggOiB3ID4gMCAmJiAociA9IG8pLCBNIDwgMCA/IGQgPSBwIDogTSA+IDAgJiYgKHUgPSBjKSwgeCA9IE5pKSwgQi5hdHRyKCJjdXJzb3IiLCBQaVttXSksIEkoKSk7IGJyZWFrOyBkZWZhdWx0OiByZXR1cm4gfXhpKCkgfSwgITApLCBIdCh0LmV2ZW50LnZpZXcpIH0gbWkoKSwgUHIoYiksIHMuY2FsbChiKSwgVS5zdGFydCgpIH0gZnVuY3Rpb24gWSgpIHsgdmFyIHQgPSBEKGIpOyAhUiB8fCBnIHx8IHkgfHwgKE1hdGguYWJzKHRbMF0gLSBMWzBdKSA+IE1hdGguYWJzKHRbMV0gLSBMWzFdKSA/IHkgPSAhMCA6IGcgPSAhMCksIEwgPSB0LCB2ID0gITAsIHhpKCksIEkoKSB9IGZ1bmN0aW9uIEkoKSB7IHZhciB0OyBzd2l0Y2ggKFAgPSBMWzBdIC0gcVswXSwgeiA9IExbMV0gLSBxWzFdLCB4KSB7IGNhc2UgTWk6IGNhc2Ugd2k6IHcgJiYgKFAgPSBNYXRoLm1heChTIC0gciwgTWF0aC5taW4oRSAtIGYsIFApKSwgbyA9IHIgKyBQLCBoID0gZiArIFApLCBNICYmICh6ID0gTWF0aC5tYXgoayAtIHUsIE1hdGgubWluKEMgLSBkLCB6KSksIGMgPSB1ICsgeiwgcCA9IGQgKyB6KTsgYnJlYWs7IGNhc2UgTmk6IHcgPCAwID8gKFAgPSBNYXRoLm1heChTIC0gciwgTWF0aC5taW4oRSAtIHIsIFApKSwgbyA9IHIgKyBQLCBoID0gZikgOiB3ID4gMCAmJiAoUCA9IE1hdGgubWF4KFMgLSBmLCBNYXRoLm1pbihFIC0gZiwgUCkpLCBvID0gciwgaCA9IGYgKyBQKSwgTSA8IDAgPyAoeiA9IE1hdGgubWF4KGsgLSB1LCBNYXRoLm1pbihDIC0gdSwgeikpLCBjID0gdSArIHosIHAgPSBkKSA6IE0gPiAwICYmICh6ID0gTWF0aC5tYXgoayAtIGQsIE1hdGgubWluKEMgLSBkLCB6KSksIGMgPSB1LCBwID0gZCArIHopOyBicmVhazsgY2FzZSBUaTogdyAmJiAobyA9IE1hdGgubWF4KFMsIE1hdGgubWluKEUsIHIgLSBQICogdykpLCBoID0gTWF0aC5tYXgoUywgTWF0aC5taW4oRSwgZiArIFAgKiB3KSkpLCBNICYmIChjID0gTWF0aC5tYXgoaywgTWF0aC5taW4oQywgdSAtIHogKiBNKSksIHAgPSBNYXRoLm1heChrLCBNYXRoLm1pbihDLCBkICsgeiAqIE0pKSkgfWggPCBvICYmICh3ICo9IC0xLCB0ID0gciwgciA9IGYsIGYgPSB0LCB0ID0gbywgbyA9IGgsIGggPSB0LCBtIGluIHppICYmIEIuYXR0cigiY3Vyc29yIiwgUGlbbSA9IHppW21dXSkpLCBwIDwgYyAmJiAoTSAqPSAtMSwgdCA9IHUsIHUgPSBkLCBkID0gdCwgdCA9IGMsIGMgPSBwLCBwID0gdCwgbSBpbiBSaSAmJiBCLmF0dHIoImN1cnNvciIsIFBpW20gPSBSaVttXV0pKSwgTi5zZWxlY3Rpb24gJiYgKEEgPSBOLnNlbGVjdGlvbiksIGcgJiYgKG8gPSBBWzBdWzBdLCBoID0gQVsxXVswXSksIHkgJiYgKGMgPSBBWzBdWzFdLCBwID0gQVsxXVsxXSksIEFbMF1bMF0gPT09IG8gJiYgQVswXVsxXSA9PT0gYyAmJiBBWzFdWzBdID09PSBoICYmIEFbMV1bMV0gPT09IHAgfHwgKE4uc2VsZWN0aW9uID0gW1tvLCBjXSwgW2gsIHBdXSwgcy5jYWxsKGIpLCBVLmJydXNoKCkpIH0gZnVuY3Rpb24gSCgpIHsgaWYgKG1pKCksIHQuZXZlbnQudG91Y2hlcykgeyBpZiAodC5ldmVudC50b3VjaGVzLmxlbmd0aCkgcmV0dXJuOyBlICYmIGNsZWFyVGltZW91dChlKSwgZSA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgeyBlID0gbnVsbCB9LCA1MDApIH0gZWxzZSBqdCh0LmV2ZW50LnZpZXcsIHYpLCBGLm9uKCJrZXlkb3duLmJydXNoIGtleXVwLmJydXNoIG1vdXNlbW92ZS5icnVzaCBtb3VzZXVwLmJydXNoIiwgbnVsbCk7IE8uYXR0cigicG9pbnRlci1ldmVudHMiLCAiYWxsIiksIEIuYXR0cigiY3Vyc29yIiwgUGkub3ZlcmxheSksIE4uc2VsZWN0aW9uICYmIChBID0gTi5zZWxlY3Rpb24pLCBmdW5jdGlvbiAodCkgeyByZXR1cm4gdFswXVswXSA9PT0gdFsxXVswXSB8fCB0WzBdWzFdID09PSB0WzFdWzFdIH0oQSkgJiYgKE4uc2VsZWN0aW9uID0gbnVsbCwgcy5jYWxsKGIpKSwgVS5lbmQoKSB9IH0gZnVuY3Rpb24gcCgpIHsgbCh0aGlzLCBhcmd1bWVudHMpLm1vdmVkKCkgfSBmdW5jdGlvbiB2KCkgeyBsKHRoaXMsIGFyZ3VtZW50cykuZW5kZWQoKSB9IGZ1bmN0aW9uIGcoKSB7IHZhciB0ID0gdGhpcy5fX2JydXNoIHx8IHsgc2VsZWN0aW9uOiBudWxsIH07IHJldHVybiB0LmV4dGVudCA9IFNpKHIuYXBwbHkodGhpcywgYXJndW1lbnRzKSksIHQuZGltID0gbiwgdCB9IHJldHVybiBmLm1vdmUgPSBmdW5jdGlvbiAodCwgZSkgeyB0LnNlbGVjdGlvbiA/IHQub24oInN0YXJ0LmJydXNoIiwgZnVuY3Rpb24gKCkgeyBsKHRoaXMsIGFyZ3VtZW50cykuYmVmb3Jlc3RhcnQoKS5zdGFydCgpIH0pLm9uKCJpbnRlcnJ1cHQuYnJ1c2ggZW5kLmJydXNoIiwgZnVuY3Rpb24gKCkgeyBsKHRoaXMsIGFyZ3VtZW50cykuZW5kKCkgfSkudHdlZW4oImJydXNoIiwgZnVuY3Rpb24gKCkgeyB2YXIgdCA9IHRoaXMsIHIgPSB0Ll9fYnJ1c2gsIGkgPSBsKHQsIGFyZ3VtZW50cyksIG8gPSByLnNlbGVjdGlvbiwgYSA9IG4uaW5wdXQoImZ1bmN0aW9uIiA9PSB0eXBlb2YgZSA/IGUuYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IGUsIHIuZXh0ZW50KSwgdSA9IFRlKG8sIGEpOyBmdW5jdGlvbiBjKG4pIHsgci5zZWxlY3Rpb24gPSAxID09PSBuICYmIG51bGwgPT09IGEgPyBudWxsIDogdShuKSwgcy5jYWxsKHQpLCBpLmJydXNoKCkgfSByZXR1cm4gbnVsbCAhPT0gbyAmJiBudWxsICE9PSBhID8gYyA6IGMoMSkgfSkgOiB0LmVhY2goZnVuY3Rpb24gKCkgeyB2YXIgdCA9IHRoaXMsIHIgPSBhcmd1bWVudHMsIGkgPSB0Ll9fYnJ1c2gsIG8gPSBuLmlucHV0KCJmdW5jdGlvbiIgPT0gdHlwZW9mIGUgPyBlLmFwcGx5KHQsIHIpIDogZSwgaS5leHRlbnQpLCBhID0gbCh0LCByKS5iZWZvcmVzdGFydCgpOyBQcih0KSwgaS5zZWxlY3Rpb24gPSBudWxsID09PSBvID8gbnVsbCA6IG8sIHMuY2FsbCh0KSwgYS5zdGFydCgpLmJydXNoKCkuZW5kKCkgfSkgfSwgZi5jbGVhciA9IGZ1bmN0aW9uICh0KSB7IGYubW92ZSh0LCBudWxsKSB9LCBoLnByb3RvdHlwZSA9IHsgYmVmb3Jlc3RhcnQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDEgPT0gKyt0aGlzLmFjdGl2ZSAmJiAodGhpcy5zdGF0ZS5lbWl0dGVyID0gdGhpcywgdGhpcy5zdGFydGluZyA9ICEwKSwgdGhpcyB9LCBzdGFydDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpcy5zdGFydGluZyA/ICh0aGlzLnN0YXJ0aW5nID0gITEsIHRoaXMuZW1pdCgic3RhcnQiKSkgOiB0aGlzLmVtaXQoImJydXNoIiksIHRoaXMgfSwgYnJ1c2g6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMuZW1pdCgiYnJ1c2giKSwgdGhpcyB9LCBlbmQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDAgPT0gLS10aGlzLmFjdGl2ZSAmJiAoZGVsZXRlIHRoaXMuc3RhdGUuZW1pdHRlciwgdGhpcy5lbWl0KCJlbmQiKSksIHRoaXMgfSwgZW1pdDogZnVuY3Rpb24gKHQpIHsga3QobmV3IGJpKGYsIHQsIG4ub3V0cHV0KHRoaXMuc3RhdGUuc2VsZWN0aW9uKSksIHUuYXBwbHksIHUsIFt0LCB0aGlzLnRoYXQsIHRoaXMuYXJnc10pIH0gfSwgZi5leHRlbnQgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBfaShTaSh0KSksIGYpIDogciB9LCBmLmZpbHRlciA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGkgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IF9pKCEhdCksIGYpIDogaSB9LCBmLnRvdWNoYWJsZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG8gPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IF9pKCEhdCksIGYpIDogbyB9LCBmLmhhbmRsZVNpemUgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChjID0gK3QsIGYpIDogYyB9LCBmLmtleU1vZGlmaWVycyA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGEgPSAhIXQsIGYpIDogYSB9LCBmLm9uID0gZnVuY3Rpb24gKCkgeyB2YXIgdCA9IHUub24uYXBwbHkodSwgYXJndW1lbnRzKTsgcmV0dXJuIHQgPT09IHUgPyBmIDogdCB9LCBmIH0gdmFyIElpID0gTWF0aC5jb3MsIEhpID0gTWF0aC5zaW4sIGppID0gTWF0aC5QSSwgWGkgPSBqaSAvIDIsIFZpID0gMiAqIGppLCBHaSA9IE1hdGgubWF4OyBmdW5jdGlvbiAkaSh0KSB7IHJldHVybiBmdW5jdGlvbiAobiwgZSkgeyByZXR1cm4gdChuLnNvdXJjZS52YWx1ZSArIG4udGFyZ2V0LnZhbHVlLCBlLnNvdXJjZS52YWx1ZSArIGUudGFyZ2V0LnZhbHVlKSB9IH0gdmFyIFdpID0gQXJyYXkucHJvdG90eXBlLnNsaWNlOyBmdW5jdGlvbiBaaSh0KSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiB0IH0gfSB2YXIgUWkgPSBNYXRoLlBJLCBLaSA9IDIgKiBRaSwgSmkgPSBLaSAtIDFlLTY7IGZ1bmN0aW9uIHRvKCkgeyB0aGlzLl94MCA9IHRoaXMuX3kwID0gdGhpcy5feDEgPSB0aGlzLl95MSA9IG51bGwsIHRoaXMuXyA9ICIiIH0gZnVuY3Rpb24gbm8oKSB7IHJldHVybiBuZXcgdG8gfSBmdW5jdGlvbiBlbyh0KSB7IHJldHVybiB0LnNvdXJjZSB9IGZ1bmN0aW9uIHJvKHQpIHsgcmV0dXJuIHQudGFyZ2V0IH0gZnVuY3Rpb24gaW8odCkgeyByZXR1cm4gdC5yYWRpdXMgfSBmdW5jdGlvbiBvbyh0KSB7IHJldHVybiB0LnN0YXJ0QW5nbGUgfSBmdW5jdGlvbiBhbyh0KSB7IHJldHVybiB0LmVuZEFuZ2xlIH0gdG8ucHJvdG90eXBlID0gbm8ucHJvdG90eXBlID0geyBjb25zdHJ1Y3RvcjogdG8sIG1vdmVUbzogZnVuY3Rpb24gKHQsIG4pIHsgdGhpcy5fICs9ICJNIiArICh0aGlzLl94MCA9IHRoaXMuX3gxID0gK3QpICsgIiwiICsgKHRoaXMuX3kwID0gdGhpcy5feTEgPSArbikgfSwgY2xvc2VQYXRoOiBmdW5jdGlvbiAoKSB7IG51bGwgIT09IHRoaXMuX3gxICYmICh0aGlzLl94MSA9IHRoaXMuX3gwLCB0aGlzLl95MSA9IHRoaXMuX3kwLCB0aGlzLl8gKz0gIloiKSB9LCBsaW5lVG86IGZ1bmN0aW9uICh0LCBuKSB7IHRoaXMuXyArPSAiTCIgKyAodGhpcy5feDEgPSArdCkgKyAiLCIgKyAodGhpcy5feTEgPSArbikgfSwgcXVhZHJhdGljQ3VydmVUbzogZnVuY3Rpb24gKHQsIG4sIGUsIHIpIHsgdGhpcy5fICs9ICJRIiArICt0ICsgIiwiICsgK24gKyAiLCIgKyAodGhpcy5feDEgPSArZSkgKyAiLCIgKyAodGhpcy5feTEgPSArcikgfSwgYmV6aWVyQ3VydmVUbzogZnVuY3Rpb24gKHQsIG4sIGUsIHIsIGksIG8pIHsgdGhpcy5fICs9ICJDIiArICt0ICsgIiwiICsgK24gKyAiLCIgKyArZSArICIsIiArICtyICsgIiwiICsgKHRoaXMuX3gxID0gK2kpICsgIiwiICsgKHRoaXMuX3kxID0gK28pIH0sIGFyY1RvOiBmdW5jdGlvbiAodCwgbiwgZSwgciwgaSkgeyB0ID0gK3QsIG4gPSArbiwgZSA9ICtlLCByID0gK3IsIGkgPSAraTsgdmFyIG8gPSB0aGlzLl94MSwgYSA9IHRoaXMuX3kxLCB1ID0gZSAtIHQsIGMgPSByIC0gbiwgZiA9IG8gLSB0LCBzID0gYSAtIG4sIGwgPSBmICogZiArIHMgKiBzOyBpZiAoaSA8IDApIHRocm93IG5ldyBFcnJvcigibmVnYXRpdmUgcmFkaXVzOiAiICsgaSk7IGlmIChudWxsID09PSB0aGlzLl94MSkgdGhpcy5fICs9ICJNIiArICh0aGlzLl94MSA9IHQpICsgIiwiICsgKHRoaXMuX3kxID0gbik7IGVsc2UgaWYgKGwgPiAxZS02KSBpZiAoTWF0aC5hYnMocyAqIHUgLSBjICogZikgPiAxZS02ICYmIGkpIHsgdmFyIGggPSBlIC0gbywgZCA9IHIgLSBhLCBwID0gdSAqIHUgKyBjICogYywgdiA9IGggKiBoICsgZCAqIGQsIGcgPSBNYXRoLnNxcnQocCksIHkgPSBNYXRoLnNxcnQobCksIF8gPSBpICogTWF0aC50YW4oKFFpIC0gTWF0aC5hY29zKChwICsgbCAtIHYpIC8gKDIgKiBnICogeSkpKSAvIDIpLCBiID0gXyAvIHksIG0gPSBfIC8gZzsgTWF0aC5hYnMoYiAtIDEpID4gMWUtNiAmJiAodGhpcy5fICs9ICJMIiArICh0ICsgYiAqIGYpICsgIiwiICsgKG4gKyBiICogcykpLCB0aGlzLl8gKz0gIkEiICsgaSArICIsIiArIGkgKyAiLDAsMCwiICsgKyhzICogaCA+IGYgKiBkKSArICIsIiArICh0aGlzLl94MSA9IHQgKyBtICogdSkgKyAiLCIgKyAodGhpcy5feTEgPSBuICsgbSAqIGMpIH0gZWxzZSB0aGlzLl8gKz0gIkwiICsgKHRoaXMuX3gxID0gdCkgKyAiLCIgKyAodGhpcy5feTEgPSBuKTsgZWxzZTsgfSwgYXJjOiBmdW5jdGlvbiAodCwgbiwgZSwgciwgaSwgbykgeyB0ID0gK3QsIG4gPSArbiwgbyA9ICEhbzsgdmFyIGEgPSAoZSA9ICtlKSAqIE1hdGguY29zKHIpLCB1ID0gZSAqIE1hdGguc2luKHIpLCBjID0gdCArIGEsIGYgPSBuICsgdSwgcyA9IDEgXiBvLCBsID0gbyA/IHIgLSBpIDogaSAtIHI7IGlmIChlIDwgMCkgdGhyb3cgbmV3IEVycm9yKCJuZWdhdGl2ZSByYWRpdXM6ICIgKyBlKTsgbnVsbCA9PT0gdGhpcy5feDEgPyB0aGlzLl8gKz0gIk0iICsgYyArICIsIiArIGYgOiAoTWF0aC5hYnModGhpcy5feDEgLSBjKSA+IDFlLTYgfHwgTWF0aC5hYnModGhpcy5feTEgLSBmKSA+IDFlLTYpICYmICh0aGlzLl8gKz0gIkwiICsgYyArICIsIiArIGYpLCBlICYmIChsIDwgMCAmJiAobCA9IGwgJSBLaSArIEtpKSwgbCA+IEppID8gdGhpcy5fICs9ICJBIiArIGUgKyAiLCIgKyBlICsgIiwwLDEsIiArIHMgKyAiLCIgKyAodCAtIGEpICsgIiwiICsgKG4gLSB1KSArICJBIiArIGUgKyAiLCIgKyBlICsgIiwwLDEsIiArIHMgKyAiLCIgKyAodGhpcy5feDEgPSBjKSArICIsIiArICh0aGlzLl95MSA9IGYpIDogbCA+IDFlLTYgJiYgKHRoaXMuXyArPSAiQSIgKyBlICsgIiwiICsgZSArICIsMCwiICsgKyhsID49IFFpKSArICIsIiArIHMgKyAiLCIgKyAodGhpcy5feDEgPSB0ICsgZSAqIE1hdGguY29zKGkpKSArICIsIiArICh0aGlzLl95MSA9IG4gKyBlICogTWF0aC5zaW4oaSkpKSkgfSwgcmVjdDogZnVuY3Rpb24gKHQsIG4sIGUsIHIpIHsgdGhpcy5fICs9ICJNIiArICh0aGlzLl94MCA9IHRoaXMuX3gxID0gK3QpICsgIiwiICsgKHRoaXMuX3kwID0gdGhpcy5feTEgPSArbikgKyAiaCIgKyArZSArICJ2IiArICtyICsgImgiICsgLWUgKyAiWiIgfSwgdG9TdHJpbmc6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMuXyB9IH07IGZ1bmN0aW9uIHVvKCkgeyB9IGZ1bmN0aW9uIGNvKHQsIG4pIHsgdmFyIGUgPSBuZXcgdW87IGlmICh0IGluc3RhbmNlb2YgdW8pIHQuZWFjaChmdW5jdGlvbiAodCwgbikgeyBlLnNldChuLCB0KSB9KTsgZWxzZSBpZiAoQXJyYXkuaXNBcnJheSh0KSkgeyB2YXIgciwgaSA9IC0xLCBvID0gdC5sZW5ndGg7IGlmIChudWxsID09IG4pIGZvciAoOyArK2kgPCBvOyllLnNldChpLCB0W2ldKTsgZWxzZSBmb3IgKDsgKytpIDwgbzspZS5zZXQobihyID0gdFtpXSwgaSwgdCksIHIpIH0gZWxzZSBpZiAodCkgZm9yICh2YXIgYSBpbiB0KSBlLnNldChhLCB0W2FdKTsgcmV0dXJuIGUgfSBmdW5jdGlvbiBmbygpIHsgcmV0dXJuIHt9IH0gZnVuY3Rpb24gc28odCwgbiwgZSkgeyB0W25dID0gZSB9IGZ1bmN0aW9uIGxvKCkgeyByZXR1cm4gY28oKSB9IGZ1bmN0aW9uIGhvKHQsIG4sIGUpIHsgdC5zZXQobiwgZSkgfSBmdW5jdGlvbiBwbygpIHsgfSB1by5wcm90b3R5cGUgPSBjby5wcm90b3R5cGUgPSB7IGNvbnN0cnVjdG9yOiB1bywgaGFzOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gIiQiICsgdCBpbiB0aGlzIH0sIGdldDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHRoaXNbIiQiICsgdF0gfSwgc2V0OiBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gdGhpc1siJCIgKyB0XSA9IG4sIHRoaXMgfSwgcmVtb3ZlOiBmdW5jdGlvbiAodCkgeyB2YXIgbiA9ICIkIiArIHQ7IHJldHVybiBuIGluIHRoaXMgJiYgZGVsZXRlIHRoaXNbbl0gfSwgY2xlYXI6IGZ1bmN0aW9uICgpIHsgZm9yICh2YXIgdCBpbiB0aGlzKSAiJCIgPT09IHRbMF0gJiYgZGVsZXRlIHRoaXNbdF0gfSwga2V5czogZnVuY3Rpb24gKCkgeyB2YXIgdCA9IFtdOyBmb3IgKHZhciBuIGluIHRoaXMpICIkIiA9PT0gblswXSAmJiB0LnB1c2gobi5zbGljZSgxKSk7IHJldHVybiB0IH0sIHZhbHVlczogZnVuY3Rpb24gKCkgeyB2YXIgdCA9IFtdOyBmb3IgKHZhciBuIGluIHRoaXMpICIkIiA9PT0gblswXSAmJiB0LnB1c2godGhpc1tuXSk7IHJldHVybiB0IH0sIGVudHJpZXM6IGZ1bmN0aW9uICgpIHsgdmFyIHQgPSBbXTsgZm9yICh2YXIgbiBpbiB0aGlzKSAiJCIgPT09IG5bMF0gJiYgdC5wdXNoKHsga2V5OiBuLnNsaWNlKDEpLCB2YWx1ZTogdGhpc1tuXSB9KTsgcmV0dXJuIHQgfSwgc2l6ZTogZnVuY3Rpb24gKCkgeyB2YXIgdCA9IDA7IGZvciAodmFyIG4gaW4gdGhpcykgIiQiID09PSBuWzBdICYmICsrdDsgcmV0dXJuIHQgfSwgZW1wdHk6IGZ1bmN0aW9uICgpIHsgZm9yICh2YXIgdCBpbiB0aGlzKSBpZiAoIiQiID09PSB0WzBdKSByZXR1cm4gITE7IHJldHVybiAhMCB9LCBlYWNoOiBmdW5jdGlvbiAodCkgeyBmb3IgKHZhciBuIGluIHRoaXMpICIkIiA9PT0gblswXSAmJiB0KHRoaXNbbl0sIG4uc2xpY2UoMSksIHRoaXMpIH0gfTsgdmFyIHZvID0gY28ucHJvdG90eXBlOyBmdW5jdGlvbiBnbyh0LCBuKSB7IHZhciBlID0gbmV3IHBvOyBpZiAodCBpbnN0YW5jZW9mIHBvKSB0LmVhY2goZnVuY3Rpb24gKHQpIHsgZS5hZGQodCkgfSk7IGVsc2UgaWYgKHQpIHsgdmFyIHIgPSAtMSwgaSA9IHQubGVuZ3RoOyBpZiAobnVsbCA9PSBuKSBmb3IgKDsgKytyIDwgaTspZS5hZGQodFtyXSk7IGVsc2UgZm9yICg7ICsrciA8IGk7KWUuYWRkKG4odFtyXSwgciwgdCkpIH0gcmV0dXJuIGUgfSBwby5wcm90b3R5cGUgPSBnby5wcm90b3R5cGUgPSB7IGNvbnN0cnVjdG9yOiBwbywgaGFzOiB2by5oYXMsIGFkZDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHRoaXNbIiQiICsgKHQgKz0gIiIpXSA9IHQsIHRoaXMgfSwgcmVtb3ZlOiB2by5yZW1vdmUsIGNsZWFyOiB2by5jbGVhciwgdmFsdWVzOiB2by5rZXlzLCBzaXplOiB2by5zaXplLCBlbXB0eTogdm8uZW1wdHksIGVhY2g6IHZvLmVhY2ggfTsgdmFyIHlvID0gQXJyYXkucHJvdG90eXBlLnNsaWNlOyBmdW5jdGlvbiBfbyh0LCBuKSB7IHJldHVybiB0IC0gbiB9IGZ1bmN0aW9uIGJvKHQpIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHQgfSB9IGZ1bmN0aW9uIG1vKHQsIG4pIHsgZm9yICh2YXIgZSwgciA9IC0xLCBpID0gbi5sZW5ndGg7ICsrciA8IGk7KWlmIChlID0geG8odCwgbltyXSkpIHJldHVybiBlOyByZXR1cm4gMCB9IGZ1bmN0aW9uIHhvKHQsIG4pIHsgZm9yICh2YXIgZSA9IG5bMF0sIHIgPSBuWzFdLCBpID0gLTEsIG8gPSAwLCBhID0gdC5sZW5ndGgsIHUgPSBhIC0gMTsgbyA8IGE7IHUgPSBvKyspIHsgdmFyIGMgPSB0W29dLCBmID0gY1swXSwgcyA9IGNbMV0sIGwgPSB0W3VdLCBoID0gbFswXSwgZCA9IGxbMV07IGlmICh3byhjLCBsLCBuKSkgcmV0dXJuIDA7IHMgPiByICE9IGQgPiByICYmIGUgPCAoaCAtIGYpICogKHIgLSBzKSAvIChkIC0gcykgKyBmICYmIChpID0gLWkpIH0gcmV0dXJuIGkgfSBmdW5jdGlvbiB3byh0LCBuLCBlKSB7IHZhciByLCBpLCBvLCBhOyByZXR1cm4gZnVuY3Rpb24gKHQsIG4sIGUpIHsgcmV0dXJuIChuWzBdIC0gdFswXSkgKiAoZVsxXSAtIHRbMV0pID09IChlWzBdIC0gdFswXSkgKiAoblsxXSAtIHRbMV0pIH0odCwgbiwgZSkgJiYgKGkgPSB0W3IgPSArKHRbMF0gPT09IG5bMF0pXSwgbyA9IGVbcl0sIGEgPSBuW3JdLCBpIDw9IG8gJiYgbyA8PSBhIHx8IGEgPD0gbyAmJiBvIDw9IGkpIH0gZnVuY3Rpb24gTW8oKSB7IH0gdmFyIE5vID0gW1tdLCBbW1sxLCAxLjVdLCBbLjUsIDFdXV0sIFtbWzEuNSwgMV0sIFsxLCAxLjVdXV0sIFtbWzEuNSwgMV0sIFsuNSwgMV1dXSwgW1tbMSwgLjVdLCBbMS41LCAxXV1dLCBbW1sxLCAxLjVdLCBbLjUsIDFdXSwgW1sxLCAuNV0sIFsxLjUsIDFdXV0sIFtbWzEsIC41XSwgWzEsIDEuNV1dXSwgW1tbMSwgLjVdLCBbLjUsIDFdXV0sIFtbWy41LCAxXSwgWzEsIC41XV1dLCBbW1sxLCAxLjVdLCBbMSwgLjVdXV0sIFtbWy41LCAxXSwgWzEsIC41XV0sIFtbMS41LCAxXSwgWzEsIDEuNV1dXSwgW1tbMS41LCAxXSwgWzEsIC41XV1dLCBbW1suNSwgMV0sIFsxLjUsIDFdXV0sIFtbWzEsIDEuNV0sIFsxLjUsIDFdXV0sIFtbWy41LCAxXSwgWzEsIDEuNV1dXSwgW11dOyBmdW5jdGlvbiBUbygpIHsgdmFyIHQgPSAxLCBuID0gMSwgZSA9IE0sIHIgPSB1OyBmdW5jdGlvbiBpKHQpIHsgdmFyIG4gPSBlKHQpOyBpZiAoQXJyYXkuaXNBcnJheShuKSkgbiA9IG4uc2xpY2UoKS5zb3J0KF9vKTsgZWxzZSB7IHZhciByID0gcyh0KSwgaSA9IHJbMF0sIGEgPSByWzFdOyBuID0gdyhpLCBhLCBuKSwgbiA9IGcoTWF0aC5mbG9vcihpIC8gbikgKiBuLCBNYXRoLmZsb29yKGEgLyBuKSAqIG4sIG4pIH0gcmV0dXJuIG4ubWFwKGZ1bmN0aW9uIChuKSB7IHJldHVybiBvKHQsIG4pIH0pIH0gZnVuY3Rpb24gbyhlLCBpKSB7IHZhciBvID0gW10sIHUgPSBbXTsgcmV0dXJuIGZ1bmN0aW9uIChlLCByLCBpKSB7IHZhciBvLCB1LCBjLCBmLCBzLCBsLCBoID0gbmV3IEFycmF5LCBkID0gbmV3IEFycmF5OyBvID0gdSA9IC0xLCBmID0gZVswXSA+PSByLCBOb1tmIDw8IDFdLmZvckVhY2gocCk7IGZvciAoOyArK28gPCB0IC0gMTspYyA9IGYsIGYgPSBlW28gKyAxXSA+PSByLCBOb1tjIHwgZiA8PCAxXS5mb3JFYWNoKHApOyBOb1tmIDw8IDBdLmZvckVhY2gocCk7IGZvciAoOyArK3UgPCBuIC0gMTspIHsgZm9yIChvID0gLTEsIGYgPSBlW3UgKiB0ICsgdF0gPj0gciwgcyA9IGVbdSAqIHRdID49IHIsIE5vW2YgPDwgMSB8IHMgPDwgMl0uZm9yRWFjaChwKTsgKytvIDwgdCAtIDE7KWMgPSBmLCBmID0gZVt1ICogdCArIHQgKyBvICsgMV0gPj0gciwgbCA9IHMsIHMgPSBlW3UgKiB0ICsgbyArIDFdID49IHIsIE5vW2MgfCBmIDw8IDEgfCBzIDw8IDIgfCBsIDw8IDNdLmZvckVhY2gocCk7IE5vW2YgfCBzIDw8IDNdLmZvckVhY2gocCkgfSBvID0gLTEsIHMgPSBlW3UgKiB0XSA+PSByLCBOb1tzIDw8IDJdLmZvckVhY2gocCk7IGZvciAoOyArK28gPCB0IC0gMTspbCA9IHMsIHMgPSBlW3UgKiB0ICsgbyArIDFdID49IHIsIE5vW3MgPDwgMiB8IGwgPDwgM10uZm9yRWFjaChwKTsgZnVuY3Rpb24gcCh0KSB7IHZhciBuLCBlLCByID0gW3RbMF1bMF0gKyBvLCB0WzBdWzFdICsgdV0sIGMgPSBbdFsxXVswXSArIG8sIHRbMV1bMV0gKyB1XSwgZiA9IGEociksIHMgPSBhKGMpOyAobiA9IGRbZl0pID8gKGUgPSBoW3NdKSA/IChkZWxldGUgZFtuLmVuZF0sIGRlbGV0ZSBoW2Uuc3RhcnRdLCBuID09PSBlID8gKG4ucmluZy5wdXNoKGMpLCBpKG4ucmluZykpIDogaFtuLnN0YXJ0XSA9IGRbZS5lbmRdID0geyBzdGFydDogbi5zdGFydCwgZW5kOiBlLmVuZCwgcmluZzogbi5yaW5nLmNvbmNhdChlLnJpbmcpIH0pIDogKGRlbGV0ZSBkW24uZW5kXSwgbi5yaW5nLnB1c2goYyksIGRbbi5lbmQgPSBzXSA9IG4pIDogKG4gPSBoW3NdKSA/IChlID0gZFtmXSkgPyAoZGVsZXRlIGhbbi5zdGFydF0sIGRlbGV0ZSBkW2UuZW5kXSwgbiA9PT0gZSA/IChuLnJpbmcucHVzaChjKSwgaShuLnJpbmcpKSA6IGhbZS5zdGFydF0gPSBkW24uZW5kXSA9IHsgc3RhcnQ6IGUuc3RhcnQsIGVuZDogbi5lbmQsIHJpbmc6IGUucmluZy5jb25jYXQobi5yaW5nKSB9KSA6IChkZWxldGUgaFtuLnN0YXJ0XSwgbi5yaW5nLnVuc2hpZnQociksIGhbbi5zdGFydCA9IGZdID0gbikgOiBoW2ZdID0gZFtzXSA9IHsgc3RhcnQ6IGYsIGVuZDogcywgcmluZzogW3IsIGNdIH0gfSBOb1tzIDw8IDNdLmZvckVhY2gocCkgfShlLCBpLCBmdW5jdGlvbiAodCkgeyByKHQsIGUsIGkpLCBmdW5jdGlvbiAodCkgeyBmb3IgKHZhciBuID0gMCwgZSA9IHQubGVuZ3RoLCByID0gdFtlIC0gMV1bMV0gKiB0WzBdWzBdIC0gdFtlIC0gMV1bMF0gKiB0WzBdWzFdOyArK24gPCBlOylyICs9IHRbbiAtIDFdWzFdICogdFtuXVswXSAtIHRbbiAtIDFdWzBdICogdFtuXVsxXTsgcmV0dXJuIHIgfSh0KSA+IDAgPyBvLnB1c2goW3RdKSA6IHUucHVzaCh0KSB9KSwgdS5mb3JFYWNoKGZ1bmN0aW9uICh0KSB7IGZvciAodmFyIG4sIGUgPSAwLCByID0gby5sZW5ndGg7IGUgPCByOyArK2UpaWYgKC0xICE9PSBtbygobiA9IG9bZV0pWzBdLCB0KSkgcmV0dXJuIHZvaWQgbi5wdXNoKHQpIH0pLCB7IHR5cGU6ICJNdWx0aVBvbHlnb24iLCB2YWx1ZTogaSwgY29vcmRpbmF0ZXM6IG8gfSB9IGZ1bmN0aW9uIGEobikgeyByZXR1cm4gMiAqIG5bMF0gKyBuWzFdICogKHQgKyAxKSAqIDQgfSBmdW5jdGlvbiB1KGUsIHIsIGkpIHsgZS5mb3JFYWNoKGZ1bmN0aW9uIChlKSB7IHZhciBvLCBhID0gZVswXSwgdSA9IGVbMV0sIGMgPSAwIHwgYSwgZiA9IDAgfCB1LCBzID0gcltmICogdCArIGNdOyBhID4gMCAmJiBhIDwgdCAmJiBjID09PSBhICYmIChvID0gcltmICogdCArIGMgLSAxXSwgZVswXSA9IGEgKyAoaSAtIG8pIC8gKHMgLSBvKSAtIC41KSwgdSA+IDAgJiYgdSA8IG4gJiYgZiA9PT0gdSAmJiAobyA9IHJbKGYgLSAxKSAqIHQgKyBjXSwgZVsxXSA9IHUgKyAoaSAtIG8pIC8gKHMgLSBvKSAtIC41KSB9KSB9IHJldHVybiBpLmNvbnRvdXIgPSBvLCBpLnNpemUgPSBmdW5jdGlvbiAoZSkgeyBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBbdCwgbl07IHZhciByID0gTWF0aC5jZWlsKGVbMF0pLCBvID0gTWF0aC5jZWlsKGVbMV0pOyBpZiAoIShyID4gMCAmJiBvID4gMCkpIHRocm93IG5ldyBFcnJvcigiaW52YWxpZCBzaXplIik7IHJldHVybiB0ID0gciwgbiA9IG8sIGkgfSwgaS50aHJlc2hvbGRzID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZSA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogQXJyYXkuaXNBcnJheSh0KSA/IGJvKHlvLmNhbGwodCkpIDogYm8odCksIGkpIDogZSB9LCBpLnNtb290aCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHIgPSB0ID8gdSA6IE1vLCBpKSA6IHIgPT09IHUgfSwgaSB9IGZ1bmN0aW9uIEFvKHQsIG4sIGUpIHsgZm9yICh2YXIgciA9IHQud2lkdGgsIGkgPSB0LmhlaWdodCwgbyA9IDEgKyAoZSA8PCAxKSwgYSA9IDA7IGEgPCBpOyArK2EpZm9yICh2YXIgdSA9IDAsIGMgPSAwOyB1IDwgciArIGU7ICsrdSl1IDwgciAmJiAoYyArPSB0LmRhdGFbdSArIGEgKiByXSksIHUgPj0gZSAmJiAodSA+PSBvICYmIChjIC09IHQuZGF0YVt1IC0gbyArIGEgKiByXSksIG4uZGF0YVt1IC0gZSArIGEgKiByXSA9IGMgLyBNYXRoLm1pbih1ICsgMSwgciAtIDEgKyBvIC0gdSwgbykpIH0gZnVuY3Rpb24gU28odCwgbiwgZSkgeyBmb3IgKHZhciByID0gdC53aWR0aCwgaSA9IHQuaGVpZ2h0LCBvID0gMSArIChlIDw8IDEpLCBhID0gMDsgYSA8IHI7ICsrYSlmb3IgKHZhciB1ID0gMCwgYyA9IDA7IHUgPCBpICsgZTsgKyt1KXUgPCBpICYmIChjICs9IHQuZGF0YVthICsgdSAqIHJdKSwgdSA+PSBlICYmICh1ID49IG8gJiYgKGMgLT0gdC5kYXRhW2EgKyAodSAtIG8pICogcl0pLCBuLmRhdGFbYSArICh1IC0gZSkgKiByXSA9IGMgLyBNYXRoLm1pbih1ICsgMSwgaSAtIDEgKyBvIC0gdSwgbykpIH0gZnVuY3Rpb24ga28odCkgeyByZXR1cm4gdFswXSB9IGZ1bmN0aW9uIEVvKHQpIHsgcmV0dXJuIHRbMV0gfSBmdW5jdGlvbiBDbygpIHsgcmV0dXJuIDEgfSB2YXIgUG8gPSB7fSwgem8gPSB7fSwgUm8gPSAzNCwgRG8gPSAxMCwgcW8gPSAxMzsgZnVuY3Rpb24gTG8odCkgeyByZXR1cm4gbmV3IEZ1bmN0aW9uKCJkIiwgInJldHVybiB7IiArIHQubWFwKGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiBKU09OLnN0cmluZ2lmeSh0KSArICI6IGRbIiArIG4gKyAnXSB8fCAiIicgfSkuam9pbigiLCIpICsgIn0iKSB9IGZ1bmN0aW9uIFVvKHQpIHsgdmFyIG4gPSBPYmplY3QuY3JlYXRlKG51bGwpLCBlID0gW107IHJldHVybiB0LmZvckVhY2goZnVuY3Rpb24gKHQpIHsgZm9yICh2YXIgciBpbiB0KSByIGluIG4gfHwgZS5wdXNoKG5bcl0gPSByKSB9KSwgZSB9IGZ1bmN0aW9uIE9vKHQsIG4pIHsgdmFyIGUgPSB0ICsgIiIsIHIgPSBlLmxlbmd0aDsgcmV0dXJuIHIgPCBuID8gbmV3IEFycmF5KG4gLSByICsgMSkuam9pbigwKSArIGUgOiBlIH0gZnVuY3Rpb24gQm8odCkgeyB2YXIgbiA9IHQuZ2V0VVRDSG91cnMoKSwgZSA9IHQuZ2V0VVRDTWludXRlcygpLCByID0gdC5nZXRVVENTZWNvbmRzKCksIGkgPSB0LmdldFVUQ01pbGxpc2Vjb25kcygpOyByZXR1cm4gaXNOYU4odCkgPyAiSW52YWxpZCBEYXRlIiA6IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0IDwgMCA/ICItIiArIE9vKC10LCA2KSA6IHQgPiA5OTk5ID8gIisiICsgT28odCwgNikgOiBPbyh0LCA0KSB9KHQuZ2V0VVRDRnVsbFllYXIoKSkgKyAiLSIgKyBPbyh0LmdldFVUQ01vbnRoKCkgKyAxLCAyKSArICItIiArIE9vKHQuZ2V0VVRDRGF0ZSgpLCAyKSArIChpID8gIlQiICsgT28obiwgMikgKyAiOiIgKyBPbyhlLCAyKSArICI6IiArIE9vKHIsIDIpICsgIi4iICsgT28oaSwgMykgKyAiWiIgOiByID8gIlQiICsgT28obiwgMikgKyAiOiIgKyBPbyhlLCAyKSArICI6IiArIE9vKHIsIDIpICsgIloiIDogZSB8fCBuID8gIlQiICsgT28obiwgMikgKyAiOiIgKyBPbyhlLCAyKSArICJaIiA6ICIiKSB9IGZ1bmN0aW9uIEZvKHQpIHsgdmFyIG4gPSBuZXcgUmVnRXhwKCdbIicgKyB0ICsgIlxuXHJdIiksIGUgPSB0LmNoYXJDb2RlQXQoMCk7IGZ1bmN0aW9uIHIodCwgbikgeyB2YXIgciwgaSA9IFtdLCBvID0gdC5sZW5ndGgsIGEgPSAwLCB1ID0gMCwgYyA9IG8gPD0gMCwgZiA9ICExOyBmdW5jdGlvbiBzKCkgeyBpZiAoYykgcmV0dXJuIHpvOyBpZiAoZikgcmV0dXJuIGYgPSAhMSwgUG87IHZhciBuLCByLCBpID0gYTsgaWYgKHQuY2hhckNvZGVBdChpKSA9PT0gUm8pIHsgZm9yICg7IGErKyA8IG8gJiYgdC5jaGFyQ29kZUF0KGEpICE9PSBSbyB8fCB0LmNoYXJDb2RlQXQoKythKSA9PT0gUm87KTsgcmV0dXJuIChuID0gYSkgPj0gbyA/IGMgPSAhMCA6IChyID0gdC5jaGFyQ29kZUF0KGErKykpID09PSBEbyA/IGYgPSAhMCA6IHIgPT09IHFvICYmIChmID0gITAsIHQuY2hhckNvZGVBdChhKSA9PT0gRG8gJiYgKythKSwgdC5zbGljZShpICsgMSwgbiAtIDEpLnJlcGxhY2UoLyIiL2csICciJykgfSBmb3IgKDsgYSA8IG87KSB7IGlmICgociA9IHQuY2hhckNvZGVBdChuID0gYSsrKSkgPT09IERvKSBmID0gITA7IGVsc2UgaWYgKHIgPT09IHFvKSBmID0gITAsIHQuY2hhckNvZGVBdChhKSA9PT0gRG8gJiYgKythOyBlbHNlIGlmIChyICE9PSBlKSBjb250aW51ZTsgcmV0dXJuIHQuc2xpY2UoaSwgbikgfSByZXR1cm4gYyA9ICEwLCB0LnNsaWNlKGksIG8pIH0gZm9yICh0LmNoYXJDb2RlQXQobyAtIDEpID09PSBEbyAmJiAtLW8sIHQuY2hhckNvZGVBdChvIC0gMSkgPT09IHFvICYmIC0tbzsgKHIgPSBzKCkpICE9PSB6bzspIHsgZm9yICh2YXIgbCA9IFtdOyByICE9PSBQbyAmJiByICE9PSB6bzspbC5wdXNoKHIpLCByID0gcygpOyBuICYmIG51bGwgPT0gKGwgPSBuKGwsIHUrKykpIHx8IGkucHVzaChsKSB9IHJldHVybiBpIH0gZnVuY3Rpb24gaShuLCBlKSB7IHJldHVybiBuLm1hcChmdW5jdGlvbiAobikgeyByZXR1cm4gZS5tYXAoZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGEoblt0XSkgfSkuam9pbih0KSB9KSB9IGZ1bmN0aW9uIG8obikgeyByZXR1cm4gbi5tYXAoYSkuam9pbih0KSB9IGZ1bmN0aW9uIGEodCkgeyByZXR1cm4gbnVsbCA9PSB0ID8gIiIgOiB0IGluc3RhbmNlb2YgRGF0ZSA/IEJvKHQpIDogbi50ZXN0KHQgKz0gIiIpID8gJyInICsgdC5yZXBsYWNlKC8iL2csICciIicpICsgJyInIDogdCB9IHJldHVybiB7IHBhcnNlOiBmdW5jdGlvbiAodCwgbikgeyB2YXIgZSwgaSwgbyA9IHIodCwgZnVuY3Rpb24gKHQsIHIpIHsgaWYgKGUpIHJldHVybiBlKHQsIHIgLSAxKTsgaSA9IHQsIGUgPSBuID8gZnVuY3Rpb24gKHQsIG4pIHsgdmFyIGUgPSBMbyh0KTsgcmV0dXJuIGZ1bmN0aW9uIChyLCBpKSB7IHJldHVybiBuKGUociksIGksIHQpIH0gfSh0LCBuKSA6IExvKHQpIH0pOyByZXR1cm4gby5jb2x1bW5zID0gaSB8fCBbXSwgbyB9LCBwYXJzZVJvd3M6IHIsIGZvcm1hdDogZnVuY3Rpb24gKG4sIGUpIHsgcmV0dXJuIG51bGwgPT0gZSAmJiAoZSA9IFVvKG4pKSwgW2UubWFwKGEpLmpvaW4odCldLmNvbmNhdChpKG4sIGUpKS5qb2luKCJcbiIpIH0sIGZvcm1hdEJvZHk6IGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiBudWxsID09IG4gJiYgKG4gPSBVbyh0KSksIGkodCwgbikuam9pbigiXG4iKSB9LCBmb3JtYXRSb3dzOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gdC5tYXAobykuam9pbigiXG4iKSB9LCBmb3JtYXRSb3c6IG8sIGZvcm1hdFZhbHVlOiBhIH0gfSB2YXIgWW8gPSBGbygiLCIpLCBJbyA9IFlvLnBhcnNlLCBIbyA9IFlvLnBhcnNlUm93cywgam8gPSBZby5mb3JtYXQsIFhvID0gWW8uZm9ybWF0Qm9keSwgVm8gPSBZby5mb3JtYXRSb3dzLCBHbyA9IFlvLmZvcm1hdFJvdywgJG8gPSBZby5mb3JtYXRWYWx1ZSwgV28gPSBGbygiXHQiKSwgWm8gPSBXby5wYXJzZSwgUW8gPSBXby5wYXJzZVJvd3MsIEtvID0gV28uZm9ybWF0LCBKbyA9IFdvLmZvcm1hdEJvZHksIHRhID0gV28uZm9ybWF0Um93cywgbmEgPSBXby5mb3JtYXRSb3csIGVhID0gV28uZm9ybWF0VmFsdWU7IHZhciByYSA9IG5ldyBEYXRlKCIyMDE5LTAxLTAxVDAwOjAwIikuZ2V0SG91cnMoKSB8fCBuZXcgRGF0ZSgiMjAxOS0wNy0wMVQwMDowMCIpLmdldEhvdXJzKCk7IGZ1bmN0aW9uIGlhKHQpIHsgaWYgKCF0Lm9rKSB0aHJvdyBuZXcgRXJyb3IodC5zdGF0dXMgKyAiICIgKyB0LnN0YXR1c1RleHQpOyByZXR1cm4gdC5ibG9iKCkgfSBmdW5jdGlvbiBvYSh0KSB7IGlmICghdC5vaykgdGhyb3cgbmV3IEVycm9yKHQuc3RhdHVzICsgIiAiICsgdC5zdGF0dXNUZXh0KTsgcmV0dXJuIHQuYXJyYXlCdWZmZXIoKSB9IGZ1bmN0aW9uIGFhKHQpIHsgaWYgKCF0Lm9rKSB0aHJvdyBuZXcgRXJyb3IodC5zdGF0dXMgKyAiICIgKyB0LnN0YXR1c1RleHQpOyByZXR1cm4gdC50ZXh0KCkgfSBmdW5jdGlvbiB1YSh0LCBuKSB7IHJldHVybiBmZXRjaCh0LCBuKS50aGVuKGFhKSB9IGZ1bmN0aW9uIGNhKHQpIHsgcmV0dXJuIGZ1bmN0aW9uIChuLCBlLCByKSB7IHJldHVybiAyID09PSBhcmd1bWVudHMubGVuZ3RoICYmICJmdW5jdGlvbiIgPT0gdHlwZW9mIGUgJiYgKHIgPSBlLCBlID0gdm9pZCAwKSwgdWEobiwgZSkudGhlbihmdW5jdGlvbiAobikgeyByZXR1cm4gdChuLCByKSB9KSB9IH0gdmFyIGZhID0gY2EoSW8pLCBzYSA9IGNhKFpvKTsgZnVuY3Rpb24gbGEodCkgeyBpZiAoIXQub2spIHRocm93IG5ldyBFcnJvcih0LnN0YXR1cyArICIgIiArIHQuc3RhdHVzVGV4dCk7IHJldHVybiB0Lmpzb24oKSB9IGZ1bmN0aW9uIGhhKHQpIHsgcmV0dXJuIGZ1bmN0aW9uIChuLCBlKSB7IHJldHVybiB1YShuLCBlKS50aGVuKGZ1bmN0aW9uIChuKSB7IHJldHVybiAobmV3IERPTVBhcnNlcikucGFyc2VGcm9tU3RyaW5nKG4sIHQpIH0pIH0gfSB2YXIgZGEgPSBoYSgiYXBwbGljYXRpb24veG1sIiksIHBhID0gaGEoInRleHQvaHRtbCIpLCB2YSA9IGhhKCJpbWFnZS9zdmcreG1sIik7IGZ1bmN0aW9uIGdhKHQpIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHQgfSB9IGZ1bmN0aW9uIHlhKCkgeyByZXR1cm4gMWUtNiAqIChNYXRoLnJhbmRvbSgpIC0gLjUpIH0gZnVuY3Rpb24gX2EodCwgbiwgZSwgcikgeyBpZiAoaXNOYU4obikgfHwgaXNOYU4oZSkpIHJldHVybiB0OyB2YXIgaSwgbywgYSwgdSwgYywgZiwgcywgbCwgaCwgZCA9IHQuX3Jvb3QsIHAgPSB7IGRhdGE6IHIgfSwgdiA9IHQuX3gwLCBnID0gdC5feTAsIHkgPSB0Ll94MSwgXyA9IHQuX3kxOyBpZiAoIWQpIHJldHVybiB0Ll9yb290ID0gcCwgdDsgZm9yICg7IGQubGVuZ3RoOylpZiAoKGYgPSBuID49IChvID0gKHYgKyB5KSAvIDIpKSA/IHYgPSBvIDogeSA9IG8sIChzID0gZSA+PSAoYSA9IChnICsgXykgLyAyKSkgPyBnID0gYSA6IF8gPSBhLCBpID0gZCwgIShkID0gZFtsID0gcyA8PCAxIHwgZl0pKSByZXR1cm4gaVtsXSA9IHAsIHQ7IGlmICh1ID0gK3QuX3guY2FsbChudWxsLCBkLmRhdGEpLCBjID0gK3QuX3kuY2FsbChudWxsLCBkLmRhdGEpLCBuID09PSB1ICYmIGUgPT09IGMpIHJldHVybiBwLm5leHQgPSBkLCBpID8gaVtsXSA9IHAgOiB0Ll9yb290ID0gcCwgdDsgZG8geyBpID0gaSA/IGlbbF0gPSBuZXcgQXJyYXkoNCkgOiB0Ll9yb290ID0gbmV3IEFycmF5KDQpLCAoZiA9IG4gPj0gKG8gPSAodiArIHkpIC8gMikpID8gdiA9IG8gOiB5ID0gbywgKHMgPSBlID49IChhID0gKGcgKyBfKSAvIDIpKSA/IGcgPSBhIDogXyA9IGEgfSB3aGlsZSAoKGwgPSBzIDw8IDEgfCBmKSA9PSAoaCA9IChjID49IGEpIDw8IDEgfCB1ID49IG8pKTsgcmV0dXJuIGlbaF0gPSBkLCBpW2xdID0gcCwgdCB9IGZ1bmN0aW9uIGJhKHQsIG4sIGUsIHIsIGkpIHsgdGhpcy5ub2RlID0gdCwgdGhpcy54MCA9IG4sIHRoaXMueTAgPSBlLCB0aGlzLngxID0gciwgdGhpcy55MSA9IGkgfSBmdW5jdGlvbiBtYSh0KSB7IHJldHVybiB0WzBdIH0gZnVuY3Rpb24geGEodCkgeyByZXR1cm4gdFsxXSB9IGZ1bmN0aW9uIHdhKHQsIG4sIGUpIHsgdmFyIHIgPSBuZXcgTWEobnVsbCA9PSBuID8gbWEgOiBuLCBudWxsID09IGUgPyB4YSA6IGUsIE5hTiwgTmFOLCBOYU4sIE5hTik7IHJldHVybiBudWxsID09IHQgPyByIDogci5hZGRBbGwodCkgfSBmdW5jdGlvbiBNYSh0LCBuLCBlLCByLCBpLCBvKSB7IHRoaXMuX3ggPSB0LCB0aGlzLl95ID0gbiwgdGhpcy5feDAgPSBlLCB0aGlzLl95MCA9IHIsIHRoaXMuX3gxID0gaSwgdGhpcy5feTEgPSBvLCB0aGlzLl9yb290ID0gdm9pZCAwIH0gZnVuY3Rpb24gTmEodCkgeyBmb3IgKHZhciBuID0geyBkYXRhOiB0LmRhdGEgfSwgZSA9IG47IHQgPSB0Lm5leHQ7KWUgPSBlLm5leHQgPSB7IGRhdGE6IHQuZGF0YSB9OyByZXR1cm4gbiB9IHZhciBUYSA9IHdhLnByb3RvdHlwZSA9IE1hLnByb3RvdHlwZTsgZnVuY3Rpb24gQWEodCkgeyByZXR1cm4gdC54ICsgdC52eCB9IGZ1bmN0aW9uIFNhKHQpIHsgcmV0dXJuIHQueSArIHQudnkgfSBmdW5jdGlvbiBrYSh0KSB7IHJldHVybiB0LmluZGV4IH0gZnVuY3Rpb24gRWEodCwgbikgeyB2YXIgZSA9IHQuZ2V0KG4pOyBpZiAoIWUpIHRocm93IG5ldyBFcnJvcigibWlzc2luZzogIiArIG4pOyByZXR1cm4gZSB9IGZ1bmN0aW9uIENhKHQpIHsgcmV0dXJuIHQueCB9IGZ1bmN0aW9uIFBhKHQpIHsgcmV0dXJuIHQueSB9IFRhLmNvcHkgPSBmdW5jdGlvbiAoKSB7IHZhciB0LCBuLCBlID0gbmV3IE1hKHRoaXMuX3gsIHRoaXMuX3ksIHRoaXMuX3gwLCB0aGlzLl95MCwgdGhpcy5feDEsIHRoaXMuX3kxKSwgciA9IHRoaXMuX3Jvb3Q7IGlmICghcikgcmV0dXJuIGU7IGlmICghci5sZW5ndGgpIHJldHVybiBlLl9yb290ID0gTmEociksIGU7IGZvciAodCA9IFt7IHNvdXJjZTogciwgdGFyZ2V0OiBlLl9yb290ID0gbmV3IEFycmF5KDQpIH1dOyByID0gdC5wb3AoKTspZm9yICh2YXIgaSA9IDA7IGkgPCA0OyArK2kpKG4gPSByLnNvdXJjZVtpXSkgJiYgKG4ubGVuZ3RoID8gdC5wdXNoKHsgc291cmNlOiBuLCB0YXJnZXQ6IHIudGFyZ2V0W2ldID0gbmV3IEFycmF5KDQpIH0pIDogci50YXJnZXRbaV0gPSBOYShuKSk7IHJldHVybiBlIH0sIFRhLmFkZCA9IGZ1bmN0aW9uICh0KSB7IHZhciBuID0gK3RoaXMuX3guY2FsbChudWxsLCB0KSwgZSA9ICt0aGlzLl95LmNhbGwobnVsbCwgdCk7IHJldHVybiBfYSh0aGlzLmNvdmVyKG4sIGUpLCBuLCBlLCB0KSB9LCBUYS5hZGRBbGwgPSBmdW5jdGlvbiAodCkgeyB2YXIgbiwgZSwgciwgaSwgbyA9IHQubGVuZ3RoLCBhID0gbmV3IEFycmF5KG8pLCB1ID0gbmV3IEFycmF5KG8pLCBjID0gMSAvIDAsIGYgPSAxIC8gMCwgcyA9IC0xIC8gMCwgbCA9IC0xIC8gMDsgZm9yIChlID0gMDsgZSA8IG87ICsrZSlpc05hTihyID0gK3RoaXMuX3guY2FsbChudWxsLCBuID0gdFtlXSkpIHx8IGlzTmFOKGkgPSArdGhpcy5feS5jYWxsKG51bGwsIG4pKSB8fCAoYVtlXSA9IHIsIHVbZV0gPSBpLCByIDwgYyAmJiAoYyA9IHIpLCByID4gcyAmJiAocyA9IHIpLCBpIDwgZiAmJiAoZiA9IGkpLCBpID4gbCAmJiAobCA9IGkpKTsgaWYgKGMgPiBzIHx8IGYgPiBsKSByZXR1cm4gdGhpczsgZm9yICh0aGlzLmNvdmVyKGMsIGYpLmNvdmVyKHMsIGwpLCBlID0gMDsgZSA8IG87ICsrZSlfYSh0aGlzLCBhW2VdLCB1W2VdLCB0W2VdKTsgcmV0dXJuIHRoaXMgfSwgVGEuY292ZXIgPSBmdW5jdGlvbiAodCwgbikgeyBpZiAoaXNOYU4odCA9ICt0KSB8fCBpc05hTihuID0gK24pKSByZXR1cm4gdGhpczsgdmFyIGUgPSB0aGlzLl94MCwgciA9IHRoaXMuX3kwLCBpID0gdGhpcy5feDEsIG8gPSB0aGlzLl95MTsgaWYgKGlzTmFOKGUpKSBpID0gKGUgPSBNYXRoLmZsb29yKHQpKSArIDEsIG8gPSAociA9IE1hdGguZmxvb3IobikpICsgMTsgZWxzZSB7IGZvciAodmFyIGEsIHUsIGMgPSBpIC0gZSwgZiA9IHRoaXMuX3Jvb3Q7IGUgPiB0IHx8IHQgPj0gaSB8fCByID4gbiB8fCBuID49IG87KXN3aXRjaCAodSA9IChuIDwgcikgPDwgMSB8IHQgPCBlLCAoYSA9IG5ldyBBcnJheSg0KSlbdV0gPSBmLCBmID0gYSwgYyAqPSAyLCB1KSB7IGNhc2UgMDogaSA9IGUgKyBjLCBvID0gciArIGM7IGJyZWFrOyBjYXNlIDE6IGUgPSBpIC0gYywgbyA9IHIgKyBjOyBicmVhazsgY2FzZSAyOiBpID0gZSArIGMsIHIgPSBvIC0gYzsgYnJlYWs7IGNhc2UgMzogZSA9IGkgLSBjLCByID0gbyAtIGMgfXRoaXMuX3Jvb3QgJiYgdGhpcy5fcm9vdC5sZW5ndGggJiYgKHRoaXMuX3Jvb3QgPSBmKSB9IHJldHVybiB0aGlzLl94MCA9IGUsIHRoaXMuX3kwID0gciwgdGhpcy5feDEgPSBpLCB0aGlzLl95MSA9IG8sIHRoaXMgfSwgVGEuZGF0YSA9IGZ1bmN0aW9uICgpIHsgdmFyIHQgPSBbXTsgcmV0dXJuIHRoaXMudmlzaXQoZnVuY3Rpb24gKG4pIHsgaWYgKCFuLmxlbmd0aCkgZG8geyB0LnB1c2gobi5kYXRhKSB9IHdoaWxlIChuID0gbi5uZXh0KSB9KSwgdCB9LCBUYS5leHRlbnQgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IHRoaXMuY292ZXIoK3RbMF1bMF0sICt0WzBdWzFdKS5jb3ZlcigrdFsxXVswXSwgK3RbMV1bMV0pIDogaXNOYU4odGhpcy5feDApID8gdm9pZCAwIDogW1t0aGlzLl94MCwgdGhpcy5feTBdLCBbdGhpcy5feDEsIHRoaXMuX3kxXV0gfSwgVGEuZmluZCA9IGZ1bmN0aW9uICh0LCBuLCBlKSB7IHZhciByLCBpLCBvLCBhLCB1LCBjLCBmLCBzID0gdGhpcy5feDAsIGwgPSB0aGlzLl95MCwgaCA9IHRoaXMuX3gxLCBkID0gdGhpcy5feTEsIHAgPSBbXSwgdiA9IHRoaXMuX3Jvb3Q7IGZvciAodiAmJiBwLnB1c2gobmV3IGJhKHYsIHMsIGwsIGgsIGQpKSwgbnVsbCA9PSBlID8gZSA9IDEgLyAwIDogKHMgPSB0IC0gZSwgbCA9IG4gLSBlLCBoID0gdCArIGUsIGQgPSBuICsgZSwgZSAqPSBlKTsgYyA9IHAucG9wKCk7KWlmICghKCEodiA9IGMubm9kZSkgfHwgKGkgPSBjLngwKSA+IGggfHwgKG8gPSBjLnkwKSA+IGQgfHwgKGEgPSBjLngxKSA8IHMgfHwgKHUgPSBjLnkxKSA8IGwpKSBpZiAodi5sZW5ndGgpIHsgdmFyIGcgPSAoaSArIGEpIC8gMiwgeSA9IChvICsgdSkgLyAyOyBwLnB1c2gobmV3IGJhKHZbM10sIGcsIHksIGEsIHUpLCBuZXcgYmEodlsyXSwgaSwgeSwgZywgdSksIG5ldyBiYSh2WzFdLCBnLCBvLCBhLCB5KSwgbmV3IGJhKHZbMF0sIGksIG8sIGcsIHkpKSwgKGYgPSAobiA+PSB5KSA8PCAxIHwgdCA+PSBnKSAmJiAoYyA9IHBbcC5sZW5ndGggLSAxXSwgcFtwLmxlbmd0aCAtIDFdID0gcFtwLmxlbmd0aCAtIDEgLSBmXSwgcFtwLmxlbmd0aCAtIDEgLSBmXSA9IGMpIH0gZWxzZSB7IHZhciBfID0gdCAtICt0aGlzLl94LmNhbGwobnVsbCwgdi5kYXRhKSwgYiA9IG4gLSArdGhpcy5feS5jYWxsKG51bGwsIHYuZGF0YSksIG0gPSBfICogXyArIGIgKiBiOyBpZiAobSA8IGUpIHsgdmFyIHggPSBNYXRoLnNxcnQoZSA9IG0pOyBzID0gdCAtIHgsIGwgPSBuIC0geCwgaCA9IHQgKyB4LCBkID0gbiArIHgsIHIgPSB2LmRhdGEgfSB9IHJldHVybiByIH0sIFRhLnJlbW92ZSA9IGZ1bmN0aW9uICh0KSB7IGlmIChpc05hTihvID0gK3RoaXMuX3guY2FsbChudWxsLCB0KSkgfHwgaXNOYU4oYSA9ICt0aGlzLl95LmNhbGwobnVsbCwgdCkpKSByZXR1cm4gdGhpczsgdmFyIG4sIGUsIHIsIGksIG8sIGEsIHUsIGMsIGYsIHMsIGwsIGgsIGQgPSB0aGlzLl9yb290LCBwID0gdGhpcy5feDAsIHYgPSB0aGlzLl95MCwgZyA9IHRoaXMuX3gxLCB5ID0gdGhpcy5feTE7IGlmICghZCkgcmV0dXJuIHRoaXM7IGlmIChkLmxlbmd0aCkgZm9yICg7IDspIHsgaWYgKChmID0gbyA+PSAodSA9IChwICsgZykgLyAyKSkgPyBwID0gdSA6IGcgPSB1LCAocyA9IGEgPj0gKGMgPSAodiArIHkpIC8gMikpID8gdiA9IGMgOiB5ID0gYywgbiA9IGQsICEoZCA9IGRbbCA9IHMgPDwgMSB8IGZdKSkgcmV0dXJuIHRoaXM7IGlmICghZC5sZW5ndGgpIGJyZWFrOyAobltsICsgMSAmIDNdIHx8IG5bbCArIDIgJiAzXSB8fCBuW2wgKyAzICYgM10pICYmIChlID0gbiwgaCA9IGwpIH0gZm9yICg7IGQuZGF0YSAhPT0gdDspaWYgKHIgPSBkLCAhKGQgPSBkLm5leHQpKSByZXR1cm4gdGhpczsgcmV0dXJuIChpID0gZC5uZXh0KSAmJiBkZWxldGUgZC5uZXh0LCByID8gKGkgPyByLm5leHQgPSBpIDogZGVsZXRlIHIubmV4dCwgdGhpcykgOiBuID8gKGkgPyBuW2xdID0gaSA6IGRlbGV0ZSBuW2xdLCAoZCA9IG5bMF0gfHwgblsxXSB8fCBuWzJdIHx8IG5bM10pICYmIGQgPT09IChuWzNdIHx8IG5bMl0gfHwgblsxXSB8fCBuWzBdKSAmJiAhZC5sZW5ndGggJiYgKGUgPyBlW2hdID0gZCA6IHRoaXMuX3Jvb3QgPSBkKSwgdGhpcykgOiAodGhpcy5fcm9vdCA9IGksIHRoaXMpIH0sIFRhLnJlbW92ZUFsbCA9IGZ1bmN0aW9uICh0KSB7IGZvciAodmFyIG4gPSAwLCBlID0gdC5sZW5ndGg7IG4gPCBlOyArK24pdGhpcy5yZW1vdmUodFtuXSk7IHJldHVybiB0aGlzIH0sIFRhLnJvb3QgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzLl9yb290IH0sIFRhLnNpemUgPSBmdW5jdGlvbiAoKSB7IHZhciB0ID0gMDsgcmV0dXJuIHRoaXMudmlzaXQoZnVuY3Rpb24gKG4pIHsgaWYgKCFuLmxlbmd0aCkgZG8geyArK3QgfSB3aGlsZSAobiA9IG4ubmV4dCkgfSksIHQgfSwgVGEudmlzaXQgPSBmdW5jdGlvbiAodCkgeyB2YXIgbiwgZSwgciwgaSwgbywgYSwgdSA9IFtdLCBjID0gdGhpcy5fcm9vdDsgZm9yIChjICYmIHUucHVzaChuZXcgYmEoYywgdGhpcy5feDAsIHRoaXMuX3kwLCB0aGlzLl94MSwgdGhpcy5feTEpKTsgbiA9IHUucG9wKCk7KWlmICghdChjID0gbi5ub2RlLCByID0gbi54MCwgaSA9IG4ueTAsIG8gPSBuLngxLCBhID0gbi55MSkgJiYgYy5sZW5ndGgpIHsgdmFyIGYgPSAociArIG8pIC8gMiwgcyA9IChpICsgYSkgLyAyOyAoZSA9IGNbM10pICYmIHUucHVzaChuZXcgYmEoZSwgZiwgcywgbywgYSkpLCAoZSA9IGNbMl0pICYmIHUucHVzaChuZXcgYmEoZSwgciwgcywgZiwgYSkpLCAoZSA9IGNbMV0pICYmIHUucHVzaChuZXcgYmEoZSwgZiwgaSwgbywgcykpLCAoZSA9IGNbMF0pICYmIHUucHVzaChuZXcgYmEoZSwgciwgaSwgZiwgcykpIH0gcmV0dXJuIHRoaXMgfSwgVGEudmlzaXRBZnRlciA9IGZ1bmN0aW9uICh0KSB7IHZhciBuLCBlID0gW10sIHIgPSBbXTsgZm9yICh0aGlzLl9yb290ICYmIGUucHVzaChuZXcgYmEodGhpcy5fcm9vdCwgdGhpcy5feDAsIHRoaXMuX3kwLCB0aGlzLl94MSwgdGhpcy5feTEpKTsgbiA9IGUucG9wKCk7KSB7IHZhciBpID0gbi5ub2RlOyBpZiAoaS5sZW5ndGgpIHsgdmFyIG8sIGEgPSBuLngwLCB1ID0gbi55MCwgYyA9IG4ueDEsIGYgPSBuLnkxLCBzID0gKGEgKyBjKSAvIDIsIGwgPSAodSArIGYpIC8gMjsgKG8gPSBpWzBdKSAmJiBlLnB1c2gobmV3IGJhKG8sIGEsIHUsIHMsIGwpKSwgKG8gPSBpWzFdKSAmJiBlLnB1c2gobmV3IGJhKG8sIHMsIHUsIGMsIGwpKSwgKG8gPSBpWzJdKSAmJiBlLnB1c2gobmV3IGJhKG8sIGEsIGwsIHMsIGYpKSwgKG8gPSBpWzNdKSAmJiBlLnB1c2gobmV3IGJhKG8sIHMsIGwsIGMsIGYpKSB9IHIucHVzaChuKSB9IGZvciAoOyBuID0gci5wb3AoKTspdChuLm5vZGUsIG4ueDAsIG4ueTAsIG4ueDEsIG4ueTEpOyByZXR1cm4gdGhpcyB9LCBUYS54ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGhpcy5feCA9IHQsIHRoaXMpIDogdGhpcy5feCB9LCBUYS55ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodGhpcy5feSA9IHQsIHRoaXMpIDogdGhpcy5feSB9OyB2YXIgemEgPSAxMCwgUmEgPSBNYXRoLlBJICogKDMgLSBNYXRoLnNxcnQoNSkpOyBmdW5jdGlvbiBEYSh0LCBuKSB7IGlmICgoZSA9ICh0ID0gbiA/IHQudG9FeHBvbmVudGlhbChuIC0gMSkgOiB0LnRvRXhwb25lbnRpYWwoKSkuaW5kZXhPZigiZSIpKSA8IDApIHJldHVybiBudWxsOyB2YXIgZSwgciA9IHQuc2xpY2UoMCwgZSk7IHJldHVybiBbci5sZW5ndGggPiAxID8gclswXSArIHIuc2xpY2UoMikgOiByLCArdC5zbGljZShlICsgMSldIH0gZnVuY3Rpb24gcWEodCkgeyByZXR1cm4gKHQgPSBEYShNYXRoLmFicyh0KSkpID8gdFsxXSA6IE5hTiB9IHZhciBMYSwgVWEgPSAvXig/OiguKT8oWzw+PV5dKSk/KFsrXC0oIF0pPyhbJCNdKT8oMCk/KFxkKyk/KCwpPyhcLlxkKyk/KH4pPyhbYS16JV0pPyQvaTsgZnVuY3Rpb24gT2EodCkgeyBpZiAoIShuID0gVWEuZXhlYyh0KSkpIHRocm93IG5ldyBFcnJvcigiaW52YWxpZCBmb3JtYXQ6ICIgKyB0KTsgdmFyIG47IHJldHVybiBuZXcgQmEoeyBmaWxsOiBuWzFdLCBhbGlnbjogblsyXSwgc2lnbjogblszXSwgc3ltYm9sOiBuWzRdLCB6ZXJvOiBuWzVdLCB3aWR0aDogbls2XSwgY29tbWE6IG5bN10sIHByZWNpc2lvbjogbls4XSAmJiBuWzhdLnNsaWNlKDEpLCB0cmltOiBuWzldLCB0eXBlOiBuWzEwXSB9KSB9IGZ1bmN0aW9uIEJhKHQpIHsgdGhpcy5maWxsID0gdm9pZCAwID09PSB0LmZpbGwgPyAiICIgOiB0LmZpbGwgKyAiIiwgdGhpcy5hbGlnbiA9IHZvaWQgMCA9PT0gdC5hbGlnbiA/ICI+IiA6IHQuYWxpZ24gKyAiIiwgdGhpcy5zaWduID0gdm9pZCAwID09PSB0LnNpZ24gPyAiLSIgOiB0LnNpZ24gKyAiIiwgdGhpcy5zeW1ib2wgPSB2b2lkIDAgPT09IHQuc3ltYm9sID8gIiIgOiB0LnN5bWJvbCArICIiLCB0aGlzLnplcm8gPSAhIXQuemVybywgdGhpcy53aWR0aCA9IHZvaWQgMCA9PT0gdC53aWR0aCA/IHZvaWQgMCA6ICt0LndpZHRoLCB0aGlzLmNvbW1hID0gISF0LmNvbW1hLCB0aGlzLnByZWNpc2lvbiA9IHZvaWQgMCA9PT0gdC5wcmVjaXNpb24gPyB2b2lkIDAgOiArdC5wcmVjaXNpb24sIHRoaXMudHJpbSA9ICEhdC50cmltLCB0aGlzLnR5cGUgPSB2b2lkIDAgPT09IHQudHlwZSA/ICIiIDogdC50eXBlICsgIiIgfSBmdW5jdGlvbiBGYSh0LCBuKSB7IHZhciBlID0gRGEodCwgbik7IGlmICghZSkgcmV0dXJuIHQgKyAiIjsgdmFyIHIgPSBlWzBdLCBpID0gZVsxXTsgcmV0dXJuIGkgPCAwID8gIjAuIiArIG5ldyBBcnJheSgtaSkuam9pbigiMCIpICsgciA6IHIubGVuZ3RoID4gaSArIDEgPyByLnNsaWNlKDAsIGkgKyAxKSArICIuIiArIHIuc2xpY2UoaSArIDEpIDogciArIG5ldyBBcnJheShpIC0gci5sZW5ndGggKyAyKS5qb2luKCIwIikgfSBPYS5wcm90b3R5cGUgPSBCYS5wcm90b3R5cGUsIEJhLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMuZmlsbCArIHRoaXMuYWxpZ24gKyB0aGlzLnNpZ24gKyB0aGlzLnN5bWJvbCArICh0aGlzLnplcm8gPyAiMCIgOiAiIikgKyAodm9pZCAwID09PSB0aGlzLndpZHRoID8gIiIgOiBNYXRoLm1heCgxLCAwIHwgdGhpcy53aWR0aCkpICsgKHRoaXMuY29tbWEgPyAiLCIgOiAiIikgKyAodm9pZCAwID09PSB0aGlzLnByZWNpc2lvbiA/ICIiIDogIi4iICsgTWF0aC5tYXgoMCwgMCB8IHRoaXMucHJlY2lzaW9uKSkgKyAodGhpcy50cmltID8gIn4iIDogIiIpICsgdGhpcy50eXBlIH07IHZhciBZYSA9IHsgIiUiOiBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gKDEwMCAqIHQpLnRvRml4ZWQobikgfSwgYjogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIE1hdGgucm91bmQodCkudG9TdHJpbmcoMikgfSwgYzogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQgKyAiIiB9LCBkOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gTWF0aC5yb3VuZCh0KS50b1N0cmluZygxMCkgfSwgZTogZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIHQudG9FeHBvbmVudGlhbChuKSB9LCBmOiBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gdC50b0ZpeGVkKG4pIH0sIGc6IGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiB0LnRvUHJlY2lzaW9uKG4pIH0sIG86IGZ1bmN0aW9uICh0KSB7IHJldHVybiBNYXRoLnJvdW5kKHQpLnRvU3RyaW5nKDgpIH0sIHA6IGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiBGYSgxMDAgKiB0LCBuKSB9LCByOiBGYSwgczogZnVuY3Rpb24gKHQsIG4pIHsgdmFyIGUgPSBEYSh0LCBuKTsgaWYgKCFlKSByZXR1cm4gdCArICIiOyB2YXIgciA9IGVbMF0sIGkgPSBlWzFdLCBvID0gaSAtIChMYSA9IDMgKiBNYXRoLm1heCgtOCwgTWF0aC5taW4oOCwgTWF0aC5mbG9vcihpIC8gMykpKSkgKyAxLCBhID0gci5sZW5ndGg7IHJldHVybiBvID09PSBhID8gciA6IG8gPiBhID8gciArIG5ldyBBcnJheShvIC0gYSArIDEpLmpvaW4oIjAiKSA6IG8gPiAwID8gci5zbGljZSgwLCBvKSArICIuIiArIHIuc2xpY2UobykgOiAiMC4iICsgbmV3IEFycmF5KDEgLSBvKS5qb2luKCIwIikgKyBEYSh0LCBNYXRoLm1heCgwLCBuICsgbyAtIDEpKVswXSB9LCBYOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gTWF0aC5yb3VuZCh0KS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKSB9LCB4OiBmdW5jdGlvbiAodCkgeyByZXR1cm4gTWF0aC5yb3VuZCh0KS50b1N0cmluZygxNikgfSB9OyBmdW5jdGlvbiBJYSh0KSB7IHJldHVybiB0IH0gdmFyIEhhLCBqYSA9IEFycmF5LnByb3RvdHlwZS5tYXAsIFhhID0gWyJ5IiwgInoiLCAiYSIsICJmIiwgInAiLCAibiIsICLCtSIsICJtIiwgIiIsICJrIiwgIk0iLCAiRyIsICJUIiwgIlAiLCAiRSIsICJaIiwgIlkiXTsgZnVuY3Rpb24gVmEodCkgeyB2YXIgbiwgZSwgciA9IHZvaWQgMCA9PT0gdC5ncm91cGluZyB8fCB2b2lkIDAgPT09IHQudGhvdXNhbmRzID8gSWEgOiAobiA9IGphLmNhbGwodC5ncm91cGluZywgTnVtYmVyKSwgZSA9IHQudGhvdXNhbmRzICsgIiIsIGZ1bmN0aW9uICh0LCByKSB7IGZvciAodmFyIGkgPSB0Lmxlbmd0aCwgbyA9IFtdLCBhID0gMCwgdSA9IG5bMF0sIGMgPSAwOyBpID4gMCAmJiB1ID4gMCAmJiAoYyArIHUgKyAxID4gciAmJiAodSA9IE1hdGgubWF4KDEsIHIgLSBjKSksIG8ucHVzaCh0LnN1YnN0cmluZyhpIC09IHUsIGkgKyB1KSksICEoKGMgKz0gdSArIDEpID4gcikpOyl1ID0gblthID0gKGEgKyAxKSAlIG4ubGVuZ3RoXTsgcmV0dXJuIG8ucmV2ZXJzZSgpLmpvaW4oZSkgfSksIGkgPSB2b2lkIDAgPT09IHQuY3VycmVuY3kgPyAiIiA6IHQuY3VycmVuY3lbMF0gKyAiIiwgbyA9IHZvaWQgMCA9PT0gdC5jdXJyZW5jeSA/ICIiIDogdC5jdXJyZW5jeVsxXSArICIiLCBhID0gdm9pZCAwID09PSB0LmRlY2ltYWwgPyAiLiIgOiB0LmRlY2ltYWwgKyAiIiwgdSA9IHZvaWQgMCA9PT0gdC5udW1lcmFscyA/IElhIDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGZ1bmN0aW9uIChuKSB7IHJldHVybiBuLnJlcGxhY2UoL1swLTldL2csIGZ1bmN0aW9uIChuKSB7IHJldHVybiB0WytuXSB9KSB9IH0oamEuY2FsbCh0Lm51bWVyYWxzLCBTdHJpbmcpKSwgYyA9IHZvaWQgMCA9PT0gdC5wZXJjZW50ID8gIiUiIDogdC5wZXJjZW50ICsgIiIsIGYgPSB2b2lkIDAgPT09IHQubWludXMgPyAiLSIgOiB0Lm1pbnVzICsgIiIsIHMgPSB2b2lkIDAgPT09IHQubmFuID8gIk5hTiIgOiB0Lm5hbiArICIiOyBmdW5jdGlvbiBsKHQpIHsgdmFyIG4gPSAodCA9IE9hKHQpKS5maWxsLCBlID0gdC5hbGlnbiwgbCA9IHQuc2lnbiwgaCA9IHQuc3ltYm9sLCBkID0gdC56ZXJvLCBwID0gdC53aWR0aCwgdiA9IHQuY29tbWEsIGcgPSB0LnByZWNpc2lvbiwgeSA9IHQudHJpbSwgXyA9IHQudHlwZTsgIm4iID09PSBfID8gKHYgPSAhMCwgXyA9ICJnIikgOiBZYVtfXSB8fCAodm9pZCAwID09PSBnICYmIChnID0gMTIpLCB5ID0gITAsIF8gPSAiZyIpLCAoZCB8fCAiMCIgPT09IG4gJiYgIj0iID09PSBlKSAmJiAoZCA9ICEwLCBuID0gIjAiLCBlID0gIj0iKTsgdmFyIGIgPSAiJCIgPT09IGggPyBpIDogIiMiID09PSBoICYmIC9bYm94WF0vLnRlc3QoXykgPyAiMCIgKyBfLnRvTG93ZXJDYXNlKCkgOiAiIiwgbSA9ICIkIiA9PT0gaCA/IG8gOiAvWyVwXS8udGVzdChfKSA/IGMgOiAiIiwgeCA9IFlhW19dLCB3ID0gL1tkZWZncHJzJV0vLnRlc3QoXyk7IGZ1bmN0aW9uIE0odCkgeyB2YXIgaSwgbywgYywgaCA9IGIsIE0gPSBtOyBpZiAoImMiID09PSBfKSBNID0geCh0KSArIE0sIHQgPSAiIjsgZWxzZSB7IHZhciBOID0gKHQgPSArdCkgPCAwIHx8IDEgLyB0IDwgMDsgaWYgKHQgPSBpc05hTih0KSA/IHMgOiB4KE1hdGguYWJzKHQpLCBnKSwgeSAmJiAodCA9IGZ1bmN0aW9uICh0KSB7IHQ6IGZvciAodmFyIG4sIGUgPSB0Lmxlbmd0aCwgciA9IDEsIGkgPSAtMTsgciA8IGU7ICsrcilzd2l0Y2ggKHRbcl0pIHsgY2FzZSAiLiI6IGkgPSBuID0gcjsgYnJlYWs7IGNhc2UgIjAiOiAwID09PSBpICYmIChpID0gciksIG4gPSByOyBicmVhazsgZGVmYXVsdDogaWYgKCErdFtyXSkgYnJlYWsgdDsgaSA+IDAgJiYgKGkgPSAwKSB9cmV0dXJuIGkgPiAwID8gdC5zbGljZSgwLCBpKSArIHQuc2xpY2UobiArIDEpIDogdCB9KHQpKSwgTiAmJiAwID09ICt0ICYmICIrIiAhPT0gbCAmJiAoTiA9ICExKSwgaCA9IChOID8gIigiID09PSBsID8gbCA6IGYgOiAiLSIgPT09IGwgfHwgIigiID09PSBsID8gIiIgOiBsKSArIGgsIE0gPSAoInMiID09PSBfID8gWGFbOCArIExhIC8gM10gOiAiIikgKyBNICsgKE4gJiYgIigiID09PSBsID8gIikiIDogIiIpLCB3KSBmb3IgKGkgPSAtMSwgbyA9IHQubGVuZ3RoOyArK2kgPCBvOylpZiAoNDggPiAoYyA9IHQuY2hhckNvZGVBdChpKSkgfHwgYyA+IDU3KSB7IE0gPSAoNDYgPT09IGMgPyBhICsgdC5zbGljZShpICsgMSkgOiB0LnNsaWNlKGkpKSArIE0sIHQgPSB0LnNsaWNlKDAsIGkpOyBicmVhayB9IH0gdiAmJiAhZCAmJiAodCA9IHIodCwgMSAvIDApKTsgdmFyIFQgPSBoLmxlbmd0aCArIHQubGVuZ3RoICsgTS5sZW5ndGgsIEEgPSBUIDwgcCA/IG5ldyBBcnJheShwIC0gVCArIDEpLmpvaW4obikgOiAiIjsgc3dpdGNoICh2ICYmIGQgJiYgKHQgPSByKEEgKyB0LCBBLmxlbmd0aCA/IHAgLSBNLmxlbmd0aCA6IDEgLyAwKSwgQSA9ICIiKSwgZSkgeyBjYXNlICI8IjogdCA9IGggKyB0ICsgTSArIEE7IGJyZWFrOyBjYXNlICI9IjogdCA9IGggKyBBICsgdCArIE07IGJyZWFrOyBjYXNlICJeIjogdCA9IEEuc2xpY2UoMCwgVCA9IEEubGVuZ3RoID4+IDEpICsgaCArIHQgKyBNICsgQS5zbGljZShUKTsgYnJlYWs7IGRlZmF1bHQ6IHQgPSBBICsgaCArIHQgKyBNIH1yZXR1cm4gdSh0KSB9IHJldHVybiBnID0gdm9pZCAwID09PSBnID8gNiA6IC9bZ3Byc10vLnRlc3QoXykgPyBNYXRoLm1heCgxLCBNYXRoLm1pbigyMSwgZykpIDogTWF0aC5tYXgoMCwgTWF0aC5taW4oMjAsIGcpKSwgTS50b1N0cmluZyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHQgKyAiIiB9LCBNIH0gcmV0dXJuIHsgZm9ybWF0OiBsLCBmb3JtYXRQcmVmaXg6IGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlID0gbCgoKHQgPSBPYSh0KSkudHlwZSA9ICJmIiwgdCkpLCByID0gMyAqIE1hdGgubWF4KC04LCBNYXRoLm1pbig4LCBNYXRoLmZsb29yKHFhKG4pIC8gMykpKSwgaSA9IE1hdGgucG93KDEwLCAtciksIG8gPSBYYVs4ICsgciAvIDNdOyByZXR1cm4gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGUoaSAqIHQpICsgbyB9IH0gfSB9IGZ1bmN0aW9uIEdhKG4pIHsgcmV0dXJuIEhhID0gVmEobiksIHQuZm9ybWF0ID0gSGEuZm9ybWF0LCB0LmZvcm1hdFByZWZpeCA9IEhhLmZvcm1hdFByZWZpeCwgSGEgfSBmdW5jdGlvbiAkYSh0KSB7IHJldHVybiBNYXRoLm1heCgwLCAtcWEoTWF0aC5hYnModCkpKSB9IGZ1bmN0aW9uIFdhKHQsIG4pIHsgcmV0dXJuIE1hdGgubWF4KDAsIDMgKiBNYXRoLm1heCgtOCwgTWF0aC5taW4oOCwgTWF0aC5mbG9vcihxYShuKSAvIDMpKSkgLSBxYShNYXRoLmFicyh0KSkpIH0gZnVuY3Rpb24gWmEodCwgbikgeyByZXR1cm4gdCA9IE1hdGguYWJzKHQpLCBuID0gTWF0aC5hYnMobikgLSB0LCBNYXRoLm1heCgwLCBxYShuKSAtIHFhKHQpKSArIDEgfSBmdW5jdGlvbiBRYSgpIHsgcmV0dXJuIG5ldyBLYSB9IGZ1bmN0aW9uIEthKCkgeyB0aGlzLnJlc2V0KCkgfSBHYSh7IGRlY2ltYWw6ICIuIiwgdGhvdXNhbmRzOiAiLCIsIGdyb3VwaW5nOiBbM10sIGN1cnJlbmN5OiBbIiQiLCAiIl0sIG1pbnVzOiAiLSIgfSksIEthLnByb3RvdHlwZSA9IHsgY29uc3RydWN0b3I6IEthLCByZXNldDogZnVuY3Rpb24gKCkgeyB0aGlzLnMgPSB0aGlzLnQgPSAwIH0sIGFkZDogZnVuY3Rpb24gKHQpIHsgdHUoSmEsIHQsIHRoaXMudCksIHR1KHRoaXMsIEphLnMsIHRoaXMucyksIHRoaXMucyA/IHRoaXMudCArPSBKYS50IDogdGhpcy5zID0gSmEudCB9LCB2YWx1ZU9mOiBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzLnMgfSB9OyB2YXIgSmEgPSBuZXcgS2E7IGZ1bmN0aW9uIHR1KHQsIG4sIGUpIHsgdmFyIHIgPSB0LnMgPSBuICsgZSwgaSA9IHIgLSBuLCBvID0gciAtIGk7IHQudCA9IG4gLSBvICsgKGUgLSBpKSB9IHZhciBudSA9IDFlLTYsIGV1ID0gMWUtMTIsIHJ1ID0gTWF0aC5QSSwgaXUgPSBydSAvIDIsIG91ID0gcnUgLyA0LCBhdSA9IDIgKiBydSwgdXUgPSAxODAgLyBydSwgY3UgPSBydSAvIDE4MCwgZnUgPSBNYXRoLmFicywgc3UgPSBNYXRoLmF0YW4sIGx1ID0gTWF0aC5hdGFuMiwgaHUgPSBNYXRoLmNvcywgZHUgPSBNYXRoLmNlaWwsIHB1ID0gTWF0aC5leHAsIHZ1ID0gTWF0aC5sb2csIGd1ID0gTWF0aC5wb3csIHl1ID0gTWF0aC5zaW4sIF91ID0gTWF0aC5zaWduIHx8IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0ID4gMCA/IDEgOiB0IDwgMCA/IC0xIDogMCB9LCBidSA9IE1hdGguc3FydCwgbXUgPSBNYXRoLnRhbjsgZnVuY3Rpb24geHUodCkgeyByZXR1cm4gdCA+IDEgPyAwIDogdCA8IC0xID8gcnUgOiBNYXRoLmFjb3ModCkgfSBmdW5jdGlvbiB3dSh0KSB7IHJldHVybiB0ID4gMSA/IGl1IDogdCA8IC0xID8gLWl1IDogTWF0aC5hc2luKHQpIH0gZnVuY3Rpb24gTXUodCkgeyByZXR1cm4gKHQgPSB5dSh0IC8gMikpICogdCB9IGZ1bmN0aW9uIE51KCkgeyB9IGZ1bmN0aW9uIFR1KHQsIG4pIHsgdCAmJiBTdS5oYXNPd25Qcm9wZXJ0eSh0LnR5cGUpICYmIFN1W3QudHlwZV0odCwgbikgfSB2YXIgQXUgPSB7IEZlYXR1cmU6IGZ1bmN0aW9uICh0LCBuKSB7IFR1KHQuZ2VvbWV0cnksIG4pIH0sIEZlYXR1cmVDb2xsZWN0aW9uOiBmdW5jdGlvbiAodCwgbikgeyBmb3IgKHZhciBlID0gdC5mZWF0dXJlcywgciA9IC0xLCBpID0gZS5sZW5ndGg7ICsrciA8IGk7KVR1KGVbcl0uZ2VvbWV0cnksIG4pIH0gfSwgU3UgPSB7IFNwaGVyZTogZnVuY3Rpb24gKHQsIG4pIHsgbi5zcGhlcmUoKSB9LCBQb2ludDogZnVuY3Rpb24gKHQsIG4pIHsgdCA9IHQuY29vcmRpbmF0ZXMsIG4ucG9pbnQodFswXSwgdFsxXSwgdFsyXSkgfSwgTXVsdGlQb2ludDogZnVuY3Rpb24gKHQsIG4pIHsgZm9yICh2YXIgZSA9IHQuY29vcmRpbmF0ZXMsIHIgPSAtMSwgaSA9IGUubGVuZ3RoOyArK3IgPCBpOyl0ID0gZVtyXSwgbi5wb2ludCh0WzBdLCB0WzFdLCB0WzJdKSB9LCBMaW5lU3RyaW5nOiBmdW5jdGlvbiAodCwgbikgeyBrdSh0LmNvb3JkaW5hdGVzLCBuLCAwKSB9LCBNdWx0aUxpbmVTdHJpbmc6IGZ1bmN0aW9uICh0LCBuKSB7IGZvciAodmFyIGUgPSB0LmNvb3JkaW5hdGVzLCByID0gLTEsIGkgPSBlLmxlbmd0aDsgKytyIDwgaTspa3UoZVtyXSwgbiwgMCkgfSwgUG9seWdvbjogZnVuY3Rpb24gKHQsIG4pIHsgRXUodC5jb29yZGluYXRlcywgbikgfSwgTXVsdGlQb2x5Z29uOiBmdW5jdGlvbiAodCwgbikgeyBmb3IgKHZhciBlID0gdC5jb29yZGluYXRlcywgciA9IC0xLCBpID0gZS5sZW5ndGg7ICsrciA8IGk7KUV1KGVbcl0sIG4pIH0sIEdlb21ldHJ5Q29sbGVjdGlvbjogZnVuY3Rpb24gKHQsIG4pIHsgZm9yICh2YXIgZSA9IHQuZ2VvbWV0cmllcywgciA9IC0xLCBpID0gZS5sZW5ndGg7ICsrciA8IGk7KVR1KGVbcl0sIG4pIH0gfTsgZnVuY3Rpb24ga3UodCwgbiwgZSkgeyB2YXIgciwgaSA9IC0xLCBvID0gdC5sZW5ndGggLSBlOyBmb3IgKG4ubGluZVN0YXJ0KCk7ICsraSA8IG87KXIgPSB0W2ldLCBuLnBvaW50KHJbMF0sIHJbMV0sIHJbMl0pOyBuLmxpbmVFbmQoKSB9IGZ1bmN0aW9uIEV1KHQsIG4pIHsgdmFyIGUgPSAtMSwgciA9IHQubGVuZ3RoOyBmb3IgKG4ucG9seWdvblN0YXJ0KCk7ICsrZSA8IHI7KWt1KHRbZV0sIG4sIDEpOyBuLnBvbHlnb25FbmQoKSB9IGZ1bmN0aW9uIEN1KHQsIG4pIHsgdCAmJiBBdS5oYXNPd25Qcm9wZXJ0eSh0LnR5cGUpID8gQXVbdC50eXBlXSh0LCBuKSA6IFR1KHQsIG4pIH0gdmFyIFB1LCB6dSwgUnUsIER1LCBxdSwgTHUgPSBRYSgpLCBVdSA9IFFhKCksIE91ID0geyBwb2ludDogTnUsIGxpbmVTdGFydDogTnUsIGxpbmVFbmQ6IE51LCBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uICgpIHsgTHUucmVzZXQoKSwgT3UubGluZVN0YXJ0ID0gQnUsIE91LmxpbmVFbmQgPSBGdSB9LCBwb2x5Z29uRW5kOiBmdW5jdGlvbiAoKSB7IHZhciB0ID0gK0x1OyBVdS5hZGQodCA8IDAgPyBhdSArIHQgOiB0KSwgdGhpcy5saW5lU3RhcnQgPSB0aGlzLmxpbmVFbmQgPSB0aGlzLnBvaW50ID0gTnUgfSwgc3BoZXJlOiBmdW5jdGlvbiAoKSB7IFV1LmFkZChhdSkgfSB9OyBmdW5jdGlvbiBCdSgpIHsgT3UucG9pbnQgPSBZdSB9IGZ1bmN0aW9uIEZ1KCkgeyBJdShQdSwgenUpIH0gZnVuY3Rpb24gWXUodCwgbikgeyBPdS5wb2ludCA9IEl1LCBQdSA9IHQsIHp1ID0gbiwgUnUgPSB0ICo9IGN1LCBEdSA9IGh1KG4gPSAobiAqPSBjdSkgLyAyICsgb3UpLCBxdSA9IHl1KG4pIH0gZnVuY3Rpb24gSXUodCwgbikgeyB2YXIgZSA9ICh0ICo9IGN1KSAtIFJ1LCByID0gZSA+PSAwID8gMSA6IC0xLCBpID0gciAqIGUsIG8gPSBodShuID0gKG4gKj0gY3UpIC8gMiArIG91KSwgYSA9IHl1KG4pLCB1ID0gcXUgKiBhLCBjID0gRHUgKiBvICsgdSAqIGh1KGkpLCBmID0gdSAqIHIgKiB5dShpKTsgTHUuYWRkKGx1KGYsIGMpKSwgUnUgPSB0LCBEdSA9IG8sIHF1ID0gYSB9IGZ1bmN0aW9uIEh1KHQpIHsgcmV0dXJuIFtsdSh0WzFdLCB0WzBdKSwgd3UodFsyXSldIH0gZnVuY3Rpb24ganUodCkgeyB2YXIgbiA9IHRbMF0sIGUgPSB0WzFdLCByID0gaHUoZSk7IHJldHVybiBbciAqIGh1KG4pLCByICogeXUobiksIHl1KGUpXSB9IGZ1bmN0aW9uIFh1KHQsIG4pIHsgcmV0dXJuIHRbMF0gKiBuWzBdICsgdFsxXSAqIG5bMV0gKyB0WzJdICogblsyXSB9IGZ1bmN0aW9uIFZ1KHQsIG4pIHsgcmV0dXJuIFt0WzFdICogblsyXSAtIHRbMl0gKiBuWzFdLCB0WzJdICogblswXSAtIHRbMF0gKiBuWzJdLCB0WzBdICogblsxXSAtIHRbMV0gKiBuWzBdXSB9IGZ1bmN0aW9uIEd1KHQsIG4pIHsgdFswXSArPSBuWzBdLCB0WzFdICs9IG5bMV0sIHRbMl0gKz0gblsyXSB9IGZ1bmN0aW9uICR1KHQsIG4pIHsgcmV0dXJuIFt0WzBdICogbiwgdFsxXSAqIG4sIHRbMl0gKiBuXSB9IGZ1bmN0aW9uIFd1KHQpIHsgdmFyIG4gPSBidSh0WzBdICogdFswXSArIHRbMV0gKiB0WzFdICsgdFsyXSAqIHRbMl0pOyB0WzBdIC89IG4sIHRbMV0gLz0gbiwgdFsyXSAvPSBuIH0gdmFyIFp1LCBRdSwgS3UsIEp1LCB0YywgbmMsIGVjLCByYywgaWMsIG9jLCBhYywgdWMsIGNjLCBmYywgc2MsIGxjLCBoYywgZGMsIHBjLCB2YywgZ2MsIHljLCBfYywgYmMsIG1jLCB4Yywgd2MgPSBRYSgpLCBNYyA9IHsgcG9pbnQ6IE5jLCBsaW5lU3RhcnQ6IEFjLCBsaW5lRW5kOiBTYywgcG9seWdvblN0YXJ0OiBmdW5jdGlvbiAoKSB7IE1jLnBvaW50ID0ga2MsIE1jLmxpbmVTdGFydCA9IEVjLCBNYy5saW5lRW5kID0gQ2MsIHdjLnJlc2V0KCksIE91LnBvbHlnb25TdGFydCgpIH0sIHBvbHlnb25FbmQ6IGZ1bmN0aW9uICgpIHsgT3UucG9seWdvbkVuZCgpLCBNYy5wb2ludCA9IE5jLCBNYy5saW5lU3RhcnQgPSBBYywgTWMubGluZUVuZCA9IFNjLCBMdSA8IDAgPyAoWnUgPSAtKEt1ID0gMTgwKSwgUXUgPSAtKEp1ID0gOTApKSA6IHdjID4gbnUgPyBKdSA9IDkwIDogd2MgPCAtbnUgJiYgKFF1ID0gLTkwKSwgb2NbMF0gPSBadSwgb2NbMV0gPSBLdSB9LCBzcGhlcmU6IGZ1bmN0aW9uICgpIHsgWnUgPSAtKEt1ID0gMTgwKSwgUXUgPSAtKEp1ID0gOTApIH0gfTsgZnVuY3Rpb24gTmModCwgbikgeyBpYy5wdXNoKG9jID0gW1p1ID0gdCwgS3UgPSB0XSksIG4gPCBRdSAmJiAoUXUgPSBuKSwgbiA+IEp1ICYmIChKdSA9IG4pIH0gZnVuY3Rpb24gVGModCwgbikgeyB2YXIgZSA9IGp1KFt0ICogY3UsIG4gKiBjdV0pOyBpZiAocmMpIHsgdmFyIHIgPSBWdShyYywgZSksIGkgPSBWdShbclsxXSwgLXJbMF0sIDBdLCByKTsgV3UoaSksIGkgPSBIdShpKTsgdmFyIG8sIGEgPSB0IC0gdGMsIHUgPSBhID4gMCA/IDEgOiAtMSwgYyA9IGlbMF0gKiB1dSAqIHUsIGYgPSBmdShhKSA+IDE4MDsgZiBeICh1ICogdGMgPCBjICYmIGMgPCB1ICogdCkgPyAobyA9IGlbMV0gKiB1dSkgPiBKdSAmJiAoSnUgPSBvKSA6IGYgXiAodSAqIHRjIDwgKGMgPSAoYyArIDM2MCkgJSAzNjAgLSAxODApICYmIGMgPCB1ICogdCkgPyAobyA9IC1pWzFdICogdXUpIDwgUXUgJiYgKFF1ID0gbykgOiAobiA8IFF1ICYmIChRdSA9IG4pLCBuID4gSnUgJiYgKEp1ID0gbikpLCBmID8gdCA8IHRjID8gUGMoWnUsIHQpID4gUGMoWnUsIEt1KSAmJiAoS3UgPSB0KSA6IFBjKHQsIEt1KSA+IFBjKFp1LCBLdSkgJiYgKFp1ID0gdCkgOiBLdSA+PSBadSA/ICh0IDwgWnUgJiYgKFp1ID0gdCksIHQgPiBLdSAmJiAoS3UgPSB0KSkgOiB0ID4gdGMgPyBQYyhadSwgdCkgPiBQYyhadSwgS3UpICYmIChLdSA9IHQpIDogUGModCwgS3UpID4gUGMoWnUsIEt1KSAmJiAoWnUgPSB0KSB9IGVsc2UgaWMucHVzaChvYyA9IFtadSA9IHQsIEt1ID0gdF0pOyBuIDwgUXUgJiYgKFF1ID0gbiksIG4gPiBKdSAmJiAoSnUgPSBuKSwgcmMgPSBlLCB0YyA9IHQgfSBmdW5jdGlvbiBBYygpIHsgTWMucG9pbnQgPSBUYyB9IGZ1bmN0aW9uIFNjKCkgeyBvY1swXSA9IFp1LCBvY1sxXSA9IEt1LCBNYy5wb2ludCA9IE5jLCByYyA9IG51bGwgfSBmdW5jdGlvbiBrYyh0LCBuKSB7IGlmIChyYykgeyB2YXIgZSA9IHQgLSB0Yzsgd2MuYWRkKGZ1KGUpID4gMTgwID8gZSArIChlID4gMCA/IDM2MCA6IC0zNjApIDogZSkgfSBlbHNlIG5jID0gdCwgZWMgPSBuOyBPdS5wb2ludCh0LCBuKSwgVGModCwgbikgfSBmdW5jdGlvbiBFYygpIHsgT3UubGluZVN0YXJ0KCkgfSBmdW5jdGlvbiBDYygpIHsga2MobmMsIGVjKSwgT3UubGluZUVuZCgpLCBmdSh3YykgPiBudSAmJiAoWnUgPSAtKEt1ID0gMTgwKSksIG9jWzBdID0gWnUsIG9jWzFdID0gS3UsIHJjID0gbnVsbCB9IGZ1bmN0aW9uIFBjKHQsIG4pIHsgcmV0dXJuIChuIC09IHQpIDwgMCA/IG4gKyAzNjAgOiBuIH0gZnVuY3Rpb24gemModCwgbikgeyByZXR1cm4gdFswXSAtIG5bMF0gfSBmdW5jdGlvbiBSYyh0LCBuKSB7IHJldHVybiB0WzBdIDw9IHRbMV0gPyB0WzBdIDw9IG4gJiYgbiA8PSB0WzFdIDogbiA8IHRbMF0gfHwgdFsxXSA8IG4gfSB2YXIgRGMgPSB7IHNwaGVyZTogTnUsIHBvaW50OiBxYywgbGluZVN0YXJ0OiBVYywgbGluZUVuZDogRmMsIHBvbHlnb25TdGFydDogZnVuY3Rpb24gKCkgeyBEYy5saW5lU3RhcnQgPSBZYywgRGMubGluZUVuZCA9IEljIH0sIHBvbHlnb25FbmQ6IGZ1bmN0aW9uICgpIHsgRGMubGluZVN0YXJ0ID0gVWMsIERjLmxpbmVFbmQgPSBGYyB9IH07IGZ1bmN0aW9uIHFjKHQsIG4pIHsgdCAqPSBjdTsgdmFyIGUgPSBodShuICo9IGN1KTsgTGMoZSAqIGh1KHQpLCBlICogeXUodCksIHl1KG4pKSB9IGZ1bmN0aW9uIExjKHQsIG4sIGUpIHsgY2MgKz0gKHQgLSBjYykgLyArK2FjLCBmYyArPSAobiAtIGZjKSAvIGFjLCBzYyArPSAoZSAtIHNjKSAvIGFjIH0gZnVuY3Rpb24gVWMoKSB7IERjLnBvaW50ID0gT2MgfSBmdW5jdGlvbiBPYyh0LCBuKSB7IHQgKj0gY3U7IHZhciBlID0gaHUobiAqPSBjdSk7IGJjID0gZSAqIGh1KHQpLCBtYyA9IGUgKiB5dSh0KSwgeGMgPSB5dShuKSwgRGMucG9pbnQgPSBCYywgTGMoYmMsIG1jLCB4YykgfSBmdW5jdGlvbiBCYyh0LCBuKSB7IHQgKj0gY3U7IHZhciBlID0gaHUobiAqPSBjdSksIHIgPSBlICogaHUodCksIGkgPSBlICogeXUodCksIG8gPSB5dShuKSwgYSA9IGx1KGJ1KChhID0gbWMgKiBvIC0geGMgKiBpKSAqIGEgKyAoYSA9IHhjICogciAtIGJjICogbykgKiBhICsgKGEgPSBiYyAqIGkgLSBtYyAqIHIpICogYSksIGJjICogciArIG1jICogaSArIHhjICogbyk7IHVjICs9IGEsIGxjICs9IGEgKiAoYmMgKyAoYmMgPSByKSksIGhjICs9IGEgKiAobWMgKyAobWMgPSBpKSksIGRjICs9IGEgKiAoeGMgKyAoeGMgPSBvKSksIExjKGJjLCBtYywgeGMpIH0gZnVuY3Rpb24gRmMoKSB7IERjLnBvaW50ID0gcWMgfSBmdW5jdGlvbiBZYygpIHsgRGMucG9pbnQgPSBIYyB9IGZ1bmN0aW9uIEljKCkgeyBqYyh5YywgX2MpLCBEYy5wb2ludCA9IHFjIH0gZnVuY3Rpb24gSGModCwgbikgeyB5YyA9IHQsIF9jID0gbiwgdCAqPSBjdSwgbiAqPSBjdSwgRGMucG9pbnQgPSBqYzsgdmFyIGUgPSBodShuKTsgYmMgPSBlICogaHUodCksIG1jID0gZSAqIHl1KHQpLCB4YyA9IHl1KG4pLCBMYyhiYywgbWMsIHhjKSB9IGZ1bmN0aW9uIGpjKHQsIG4pIHsgdCAqPSBjdTsgdmFyIGUgPSBodShuICo9IGN1KSwgciA9IGUgKiBodSh0KSwgaSA9IGUgKiB5dSh0KSwgbyA9IHl1KG4pLCBhID0gbWMgKiBvIC0geGMgKiBpLCB1ID0geGMgKiByIC0gYmMgKiBvLCBjID0gYmMgKiBpIC0gbWMgKiByLCBmID0gYnUoYSAqIGEgKyB1ICogdSArIGMgKiBjKSwgcyA9IHd1KGYpLCBsID0gZiAmJiAtcyAvIGY7IHBjICs9IGwgKiBhLCB2YyArPSBsICogdSwgZ2MgKz0gbCAqIGMsIHVjICs9IHMsIGxjICs9IHMgKiAoYmMgKyAoYmMgPSByKSksIGhjICs9IHMgKiAobWMgKyAobWMgPSBpKSksIGRjICs9IHMgKiAoeGMgKyAoeGMgPSBvKSksIExjKGJjLCBtYywgeGMpIH0gZnVuY3Rpb24gWGModCkgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyByZXR1cm4gdCB9IH0gZnVuY3Rpb24gVmModCwgbikgeyBmdW5jdGlvbiBlKGUsIHIpIHsgcmV0dXJuIGUgPSB0KGUsIHIpLCBuKGVbMF0sIGVbMV0pIH0gcmV0dXJuIHQuaW52ZXJ0ICYmIG4uaW52ZXJ0ICYmIChlLmludmVydCA9IGZ1bmN0aW9uIChlLCByKSB7IHJldHVybiAoZSA9IG4uaW52ZXJ0KGUsIHIpKSAmJiB0LmludmVydChlWzBdLCBlWzFdKSB9KSwgZSB9IGZ1bmN0aW9uIEdjKHQsIG4pIHsgcmV0dXJuIFtmdSh0KSA+IHJ1ID8gdCArIE1hdGgucm91bmQoLXQgLyBhdSkgKiBhdSA6IHQsIG5dIH0gZnVuY3Rpb24gJGModCwgbiwgZSkgeyByZXR1cm4gKHQgJT0gYXUpID8gbiB8fCBlID8gVmMoWmModCksIFFjKG4sIGUpKSA6IFpjKHQpIDogbiB8fCBlID8gUWMobiwgZSkgOiBHYyB9IGZ1bmN0aW9uIFdjKHQpIHsgcmV0dXJuIGZ1bmN0aW9uIChuLCBlKSB7IHJldHVybiBbKG4gKz0gdCkgPiBydSA/IG4gLSBhdSA6IG4gPCAtcnUgPyBuICsgYXUgOiBuLCBlXSB9IH0gZnVuY3Rpb24gWmModCkgeyB2YXIgbiA9IFdjKHQpOyByZXR1cm4gbi5pbnZlcnQgPSBXYygtdCksIG4gfSBmdW5jdGlvbiBRYyh0LCBuKSB7IHZhciBlID0gaHUodCksIHIgPSB5dSh0KSwgaSA9IGh1KG4pLCBvID0geXUobik7IGZ1bmN0aW9uIGEodCwgbikgeyB2YXIgYSA9IGh1KG4pLCB1ID0gaHUodCkgKiBhLCBjID0geXUodCkgKiBhLCBmID0geXUobiksIHMgPSBmICogZSArIHUgKiByOyByZXR1cm4gW2x1KGMgKiBpIC0gcyAqIG8sIHUgKiBlIC0gZiAqIHIpLCB3dShzICogaSArIGMgKiBvKV0gfSByZXR1cm4gYS5pbnZlcnQgPSBmdW5jdGlvbiAodCwgbikgeyB2YXIgYSA9IGh1KG4pLCB1ID0gaHUodCkgKiBhLCBjID0geXUodCkgKiBhLCBmID0geXUobiksIHMgPSBmICogaSAtIGMgKiBvOyByZXR1cm4gW2x1KGMgKiBpICsgZiAqIG8sIHUgKiBlICsgcyAqIHIpLCB3dShzICogZSAtIHUgKiByKV0gfSwgYSB9IGZ1bmN0aW9uIEtjKHQpIHsgZnVuY3Rpb24gbihuKSB7IHJldHVybiAobiA9IHQoblswXSAqIGN1LCBuWzFdICogY3UpKVswXSAqPSB1dSwgblsxXSAqPSB1dSwgbiB9IHJldHVybiB0ID0gJGModFswXSAqIGN1LCB0WzFdICogY3UsIHQubGVuZ3RoID4gMiA/IHRbMl0gKiBjdSA6IDApLCBuLmludmVydCA9IGZ1bmN0aW9uIChuKSB7IHJldHVybiAobiA9IHQuaW52ZXJ0KG5bMF0gKiBjdSwgblsxXSAqIGN1KSlbMF0gKj0gdXUsIG5bMV0gKj0gdXUsIG4gfSwgbiB9IGZ1bmN0aW9uIEpjKHQsIG4sIGUsIHIsIGksIG8pIHsgaWYgKGUpIHsgdmFyIGEgPSBodShuKSwgdSA9IHl1KG4pLCBjID0gciAqIGU7IG51bGwgPT0gaSA/IChpID0gbiArIHIgKiBhdSwgbyA9IG4gLSBjIC8gMikgOiAoaSA9IHRmKGEsIGkpLCBvID0gdGYoYSwgbyksIChyID4gMCA/IGkgPCBvIDogaSA+IG8pICYmIChpICs9IHIgKiBhdSkpOyBmb3IgKHZhciBmLCBzID0gaTsgciA+IDAgPyBzID4gbyA6IHMgPCBvOyBzIC09IGMpZiA9IEh1KFthLCAtdSAqIGh1KHMpLCAtdSAqIHl1KHMpXSksIHQucG9pbnQoZlswXSwgZlsxXSkgfSB9IGZ1bmN0aW9uIHRmKHQsIG4pIHsgKG4gPSBqdShuKSlbMF0gLT0gdCwgV3Uobik7IHZhciBlID0geHUoLW5bMV0pOyByZXR1cm4gKCgtblsyXSA8IDAgPyAtZSA6IGUpICsgYXUgLSBudSkgJSBhdSB9IGZ1bmN0aW9uIG5mKCkgeyB2YXIgdCwgbiA9IFtdOyByZXR1cm4geyBwb2ludDogZnVuY3Rpb24gKG4sIGUpIHsgdC5wdXNoKFtuLCBlXSkgfSwgbGluZVN0YXJ0OiBmdW5jdGlvbiAoKSB7IG4ucHVzaCh0ID0gW10pIH0sIGxpbmVFbmQ6IE51LCByZWpvaW46IGZ1bmN0aW9uICgpIHsgbi5sZW5ndGggPiAxICYmIG4ucHVzaChuLnBvcCgpLmNvbmNhdChuLnNoaWZ0KCkpKSB9LCByZXN1bHQ6IGZ1bmN0aW9uICgpIHsgdmFyIGUgPSBuOyByZXR1cm4gbiA9IFtdLCB0ID0gbnVsbCwgZSB9IH0gfSBmdW5jdGlvbiBlZih0LCBuKSB7IHJldHVybiBmdSh0WzBdIC0gblswXSkgPCBudSAmJiBmdSh0WzFdIC0gblsxXSkgPCBudSB9IGZ1bmN0aW9uIHJmKHQsIG4sIGUsIHIpIHsgdGhpcy54ID0gdCwgdGhpcy56ID0gbiwgdGhpcy5vID0gZSwgdGhpcy5lID0gciwgdGhpcy52ID0gITEsIHRoaXMubiA9IHRoaXMucCA9IG51bGwgfSBmdW5jdGlvbiBvZih0LCBuLCBlLCByLCBpKSB7IHZhciBvLCBhLCB1ID0gW10sIGMgPSBbXTsgaWYgKHQuZm9yRWFjaChmdW5jdGlvbiAodCkgeyBpZiAoISgobiA9IHQubGVuZ3RoIC0gMSkgPD0gMCkpIHsgdmFyIG4sIGUsIHIgPSB0WzBdLCBhID0gdFtuXTsgaWYgKGVmKHIsIGEpKSB7IGZvciAoaS5saW5lU3RhcnQoKSwgbyA9IDA7IG8gPCBuOyArK28paS5wb2ludCgociA9IHRbb10pWzBdLCByWzFdKTsgaS5saW5lRW5kKCkgfSBlbHNlIHUucHVzaChlID0gbmV3IHJmKHIsIHQsIG51bGwsICEwKSksIGMucHVzaChlLm8gPSBuZXcgcmYociwgbnVsbCwgZSwgITEpKSwgdS5wdXNoKGUgPSBuZXcgcmYoYSwgdCwgbnVsbCwgITEpKSwgYy5wdXNoKGUubyA9IG5ldyByZihhLCBudWxsLCBlLCAhMCkpIH0gfSksIHUubGVuZ3RoKSB7IGZvciAoYy5zb3J0KG4pLCBhZih1KSwgYWYoYyksIG8gPSAwLCBhID0gYy5sZW5ndGg7IG8gPCBhOyArK28pY1tvXS5lID0gZSA9ICFlOyBmb3IgKHZhciBmLCBzLCBsID0gdVswXTsgOykgeyBmb3IgKHZhciBoID0gbCwgZCA9ICEwOyBoLnY7KWlmICgoaCA9IGgubikgPT09IGwpIHJldHVybjsgZiA9IGgueiwgaS5saW5lU3RhcnQoKTsgZG8geyBpZiAoaC52ID0gaC5vLnYgPSAhMCwgaC5lKSB7IGlmIChkKSBmb3IgKG8gPSAwLCBhID0gZi5sZW5ndGg7IG8gPCBhOyArK28paS5wb2ludCgocyA9IGZbb10pWzBdLCBzWzFdKTsgZWxzZSByKGgueCwgaC5uLngsIDEsIGkpOyBoID0gaC5uIH0gZWxzZSB7IGlmIChkKSBmb3IgKGYgPSBoLnAueiwgbyA9IGYubGVuZ3RoIC0gMTsgbyA+PSAwOyAtLW8paS5wb2ludCgocyA9IGZbb10pWzBdLCBzWzFdKTsgZWxzZSByKGgueCwgaC5wLngsIC0xLCBpKTsgaCA9IGgucCB9IGYgPSAoaCA9IGgubykueiwgZCA9ICFkIH0gd2hpbGUgKCFoLnYpOyBpLmxpbmVFbmQoKSB9IH0gfSBmdW5jdGlvbiBhZih0KSB7IGlmIChuID0gdC5sZW5ndGgpIHsgZm9yICh2YXIgbiwgZSwgciA9IDAsIGkgPSB0WzBdOyArK3IgPCBuOylpLm4gPSBlID0gdFtyXSwgZS5wID0gaSwgaSA9IGU7IGkubiA9IGUgPSB0WzBdLCBlLnAgPSBpIH0gfSBHYy5pbnZlcnQgPSBHYzsgdmFyIHVmID0gUWEoKTsgZnVuY3Rpb24gY2YodCkgeyByZXR1cm4gZnUodFswXSkgPD0gcnUgPyB0WzBdIDogX3UodFswXSkgKiAoKGZ1KHRbMF0pICsgcnUpICUgYXUgLSBydSkgfSBmdW5jdGlvbiBmZih0LCBuKSB7IHZhciBlID0gY2YobiksIHIgPSBuWzFdLCBpID0geXUociksIG8gPSBbeXUoZSksIC1odShlKSwgMF0sIGEgPSAwLCB1ID0gMDsgdWYucmVzZXQoKSwgMSA9PT0gaSA/IHIgPSBpdSArIG51IDogLTEgPT09IGkgJiYgKHIgPSAtaXUgLSBudSk7IGZvciAodmFyIGMgPSAwLCBmID0gdC5sZW5ndGg7IGMgPCBmOyArK2MpaWYgKGwgPSAocyA9IHRbY10pLmxlbmd0aCkgZm9yICh2YXIgcywgbCwgaCA9IHNbbCAtIDFdLCBkID0gY2YoaCksIHAgPSBoWzFdIC8gMiArIG91LCB2ID0geXUocCksIGcgPSBodShwKSwgeSA9IDA7IHkgPCBsOyArK3ksIGQgPSBiLCB2ID0geCwgZyA9IHcsIGggPSBfKSB7IHZhciBfID0gc1t5XSwgYiA9IGNmKF8pLCBtID0gX1sxXSAvIDIgKyBvdSwgeCA9IHl1KG0pLCB3ID0gaHUobSksIE0gPSBiIC0gZCwgTiA9IE0gPj0gMCA/IDEgOiAtMSwgVCA9IE4gKiBNLCBBID0gVCA+IHJ1LCBTID0gdiAqIHg7IGlmICh1Zi5hZGQobHUoUyAqIE4gKiB5dShUKSwgZyAqIHcgKyBTICogaHUoVCkpKSwgYSArPSBBID8gTSArIE4gKiBhdSA6IE0sIEEgXiBkID49IGUgXiBiID49IGUpIHsgdmFyIGsgPSBWdShqdShoKSwganUoXykpOyBXdShrKTsgdmFyIEUgPSBWdShvLCBrKTsgV3UoRSk7IHZhciBDID0gKEEgXiBNID49IDAgPyAtMSA6IDEpICogd3UoRVsyXSk7IChyID4gQyB8fCByID09PSBDICYmIChrWzBdIHx8IGtbMV0pKSAmJiAodSArPSBBIF4gTSA+PSAwID8gMSA6IC0xKSB9IH0gcmV0dXJuIChhIDwgLW51IHx8IGEgPCBudSAmJiB1ZiA8IC1udSkgXiAxICYgdSB9IGZ1bmN0aW9uIHNmKHQsIG4sIGUsIHIpIHsgcmV0dXJuIGZ1bmN0aW9uIChpKSB7IHZhciBvLCBhLCB1LCBjID0gbihpKSwgZiA9IG5mKCksIHMgPSBuKGYpLCBsID0gITEsIGggPSB7IHBvaW50OiBkLCBsaW5lU3RhcnQ6IHYsIGxpbmVFbmQ6IGcsIHBvbHlnb25TdGFydDogZnVuY3Rpb24gKCkgeyBoLnBvaW50ID0geSwgaC5saW5lU3RhcnQgPSBfLCBoLmxpbmVFbmQgPSBiLCBhID0gW10sIG8gPSBbXSB9LCBwb2x5Z29uRW5kOiBmdW5jdGlvbiAoKSB7IGgucG9pbnQgPSBkLCBoLmxpbmVTdGFydCA9IHYsIGgubGluZUVuZCA9IGcsIGEgPSBBKGEpOyB2YXIgdCA9IGZmKG8sIHIpOyBhLmxlbmd0aCA/IChsIHx8IChpLnBvbHlnb25TdGFydCgpLCBsID0gITApLCBvZihhLCBoZiwgdCwgZSwgaSkpIDogdCAmJiAobCB8fCAoaS5wb2x5Z29uU3RhcnQoKSwgbCA9ICEwKSwgaS5saW5lU3RhcnQoKSwgZShudWxsLCBudWxsLCAxLCBpKSwgaS5saW5lRW5kKCkpLCBsICYmIChpLnBvbHlnb25FbmQoKSwgbCA9ICExKSwgYSA9IG8gPSBudWxsIH0sIHNwaGVyZTogZnVuY3Rpb24gKCkgeyBpLnBvbHlnb25TdGFydCgpLCBpLmxpbmVTdGFydCgpLCBlKG51bGwsIG51bGwsIDEsIGkpLCBpLmxpbmVFbmQoKSwgaS5wb2x5Z29uRW5kKCkgfSB9OyBmdW5jdGlvbiBkKG4sIGUpIHsgdChuLCBlKSAmJiBpLnBvaW50KG4sIGUpIH0gZnVuY3Rpb24gcCh0LCBuKSB7IGMucG9pbnQodCwgbikgfSBmdW5jdGlvbiB2KCkgeyBoLnBvaW50ID0gcCwgYy5saW5lU3RhcnQoKSB9IGZ1bmN0aW9uIGcoKSB7IGgucG9pbnQgPSBkLCBjLmxpbmVFbmQoKSB9IGZ1bmN0aW9uIHkodCwgbikgeyB1LnB1c2goW3QsIG5dKSwgcy5wb2ludCh0LCBuKSB9IGZ1bmN0aW9uIF8oKSB7IHMubGluZVN0YXJ0KCksIHUgPSBbXSB9IGZ1bmN0aW9uIGIoKSB7IHkodVswXVswXSwgdVswXVsxXSksIHMubGluZUVuZCgpOyB2YXIgdCwgbiwgZSwgciwgYyA9IHMuY2xlYW4oKSwgaCA9IGYucmVzdWx0KCksIGQgPSBoLmxlbmd0aDsgaWYgKHUucG9wKCksIG8ucHVzaCh1KSwgdSA9IG51bGwsIGQpIGlmICgxICYgYykgeyBpZiAoKG4gPSAoZSA9IGhbMF0pLmxlbmd0aCAtIDEpID4gMCkgeyBmb3IgKGwgfHwgKGkucG9seWdvblN0YXJ0KCksIGwgPSAhMCksIGkubGluZVN0YXJ0KCksIHQgPSAwOyB0IDwgbjsgKyt0KWkucG9pbnQoKHIgPSBlW3RdKVswXSwgclsxXSk7IGkubGluZUVuZCgpIH0gfSBlbHNlIGQgPiAxICYmIDIgJiBjICYmIGgucHVzaChoLnBvcCgpLmNvbmNhdChoLnNoaWZ0KCkpKSwgYS5wdXNoKGguZmlsdGVyKGxmKSkgfSByZXR1cm4gaCB9IH0gZnVuY3Rpb24gbGYodCkgeyByZXR1cm4gdC5sZW5ndGggPiAxIH0gZnVuY3Rpb24gaGYodCwgbikgeyByZXR1cm4gKCh0ID0gdC54KVswXSA8IDAgPyB0WzFdIC0gaXUgLSBudSA6IGl1IC0gdFsxXSkgLSAoKG4gPSBuLngpWzBdIDwgMCA/IG5bMV0gLSBpdSAtIG51IDogaXUgLSBuWzFdKSB9IHZhciBkZiA9IHNmKGZ1bmN0aW9uICgpIHsgcmV0dXJuICEwIH0sIGZ1bmN0aW9uICh0KSB7IHZhciBuLCBlID0gTmFOLCByID0gTmFOLCBpID0gTmFOOyByZXR1cm4geyBsaW5lU3RhcnQ6IGZ1bmN0aW9uICgpIHsgdC5saW5lU3RhcnQoKSwgbiA9IDEgfSwgcG9pbnQ6IGZ1bmN0aW9uIChvLCBhKSB7IHZhciB1ID0gbyA+IDAgPyBydSA6IC1ydSwgYyA9IGZ1KG8gLSBlKTsgZnUoYyAtIHJ1KSA8IG51ID8gKHQucG9pbnQoZSwgciA9IChyICsgYSkgLyAyID4gMCA/IGl1IDogLWl1KSwgdC5wb2ludChpLCByKSwgdC5saW5lRW5kKCksIHQubGluZVN0YXJ0KCksIHQucG9pbnQodSwgciksIHQucG9pbnQobywgciksIG4gPSAwKSA6IGkgIT09IHUgJiYgYyA+PSBydSAmJiAoZnUoZSAtIGkpIDwgbnUgJiYgKGUgLT0gaSAqIG51KSwgZnUobyAtIHUpIDwgbnUgJiYgKG8gLT0gdSAqIG51KSwgciA9IGZ1bmN0aW9uICh0LCBuLCBlLCByKSB7IHZhciBpLCBvLCBhID0geXUodCAtIGUpOyByZXR1cm4gZnUoYSkgPiBudSA/IHN1KCh5dShuKSAqIChvID0gaHUocikpICogeXUoZSkgLSB5dShyKSAqIChpID0gaHUobikpICogeXUodCkpIC8gKGkgKiBvICogYSkpIDogKG4gKyByKSAvIDIgfShlLCByLCBvLCBhKSwgdC5wb2ludChpLCByKSwgdC5saW5lRW5kKCksIHQubGluZVN0YXJ0KCksIHQucG9pbnQodSwgciksIG4gPSAwKSwgdC5wb2ludChlID0gbywgciA9IGEpLCBpID0gdSB9LCBsaW5lRW5kOiBmdW5jdGlvbiAoKSB7IHQubGluZUVuZCgpLCBlID0gciA9IE5hTiB9LCBjbGVhbjogZnVuY3Rpb24gKCkgeyByZXR1cm4gMiAtIG4gfSB9IH0sIGZ1bmN0aW9uICh0LCBuLCBlLCByKSB7IHZhciBpOyBpZiAobnVsbCA9PSB0KSBpID0gZSAqIGl1LCByLnBvaW50KC1ydSwgaSksIHIucG9pbnQoMCwgaSksIHIucG9pbnQocnUsIGkpLCByLnBvaW50KHJ1LCAwKSwgci5wb2ludChydSwgLWkpLCByLnBvaW50KDAsIC1pKSwgci5wb2ludCgtcnUsIC1pKSwgci5wb2ludCgtcnUsIDApLCByLnBvaW50KC1ydSwgaSk7IGVsc2UgaWYgKGZ1KHRbMF0gLSBuWzBdKSA+IG51KSB7IHZhciBvID0gdFswXSA8IG5bMF0gPyBydSA6IC1ydTsgaSA9IGUgKiBvIC8gMiwgci5wb2ludCgtbywgaSksIHIucG9pbnQoMCwgaSksIHIucG9pbnQobywgaSkgfSBlbHNlIHIucG9pbnQoblswXSwgblsxXSkgfSwgWy1ydSwgLWl1XSk7IGZ1bmN0aW9uIHBmKHQpIHsgdmFyIG4gPSBodSh0KSwgZSA9IDYgKiBjdSwgciA9IG4gPiAwLCBpID0gZnUobikgPiBudTsgZnVuY3Rpb24gbyh0LCBlKSB7IHJldHVybiBodSh0KSAqIGh1KGUpID4gbiB9IGZ1bmN0aW9uIGEodCwgZSwgcikgeyB2YXIgaSA9IFsxLCAwLCAwXSwgbyA9IFZ1KGp1KHQpLCBqdShlKSksIGEgPSBYdShvLCBvKSwgdSA9IG9bMF0sIGMgPSBhIC0gdSAqIHU7IGlmICghYykgcmV0dXJuICFyICYmIHQ7IHZhciBmID0gbiAqIGEgLyBjLCBzID0gLW4gKiB1IC8gYywgbCA9IFZ1KGksIG8pLCBoID0gJHUoaSwgZik7IEd1KGgsICR1KG8sIHMpKTsgdmFyIGQgPSBsLCBwID0gWHUoaCwgZCksIHYgPSBYdShkLCBkKSwgZyA9IHAgKiBwIC0gdiAqIChYdShoLCBoKSAtIDEpOyBpZiAoIShnIDwgMCkpIHsgdmFyIHkgPSBidShnKSwgXyA9ICR1KGQsICgtcCAtIHkpIC8gdik7IGlmIChHdShfLCBoKSwgXyA9IEh1KF8pLCAhcikgcmV0dXJuIF87IHZhciBiLCBtID0gdFswXSwgeCA9IGVbMF0sIHcgPSB0WzFdLCBNID0gZVsxXTsgeCA8IG0gJiYgKGIgPSBtLCBtID0geCwgeCA9IGIpOyB2YXIgTiA9IHggLSBtLCBUID0gZnUoTiAtIHJ1KSA8IG51OyBpZiAoIVQgJiYgTSA8IHcgJiYgKGIgPSB3LCB3ID0gTSwgTSA9IGIpLCBUIHx8IE4gPCBudSA/IFQgPyB3ICsgTSA+IDAgXiBfWzFdIDwgKGZ1KF9bMF0gLSBtKSA8IG51ID8gdyA6IE0pIDogdyA8PSBfWzFdICYmIF9bMV0gPD0gTSA6IE4gPiBydSBeIChtIDw9IF9bMF0gJiYgX1swXSA8PSB4KSkgeyB2YXIgQSA9ICR1KGQsICgtcCArIHkpIC8gdik7IHJldHVybiBHdShBLCBoKSwgW18sIEh1KEEpXSB9IH0gfSBmdW5jdGlvbiB1KG4sIGUpIHsgdmFyIGkgPSByID8gdCA6IHJ1IC0gdCwgbyA9IDA7IHJldHVybiBuIDwgLWkgPyBvIHw9IDEgOiBuID4gaSAmJiAobyB8PSAyKSwgZSA8IC1pID8gbyB8PSA0IDogZSA+IGkgJiYgKG8gfD0gOCksIG8gfSByZXR1cm4gc2YobywgZnVuY3Rpb24gKHQpIHsgdmFyIG4sIGUsIGMsIGYsIHM7IHJldHVybiB7IGxpbmVTdGFydDogZnVuY3Rpb24gKCkgeyBmID0gYyA9ICExLCBzID0gMSB9LCBwb2ludDogZnVuY3Rpb24gKGwsIGgpIHsgdmFyIGQsIHAgPSBbbCwgaF0sIHYgPSBvKGwsIGgpLCBnID0gciA/IHYgPyAwIDogdShsLCBoKSA6IHYgPyB1KGwgKyAobCA8IDAgPyBydSA6IC1ydSksIGgpIDogMDsgaWYgKCFuICYmIChmID0gYyA9IHYpICYmIHQubGluZVN0YXJ0KCksIHYgIT09IGMgJiYgKCEoZCA9IGEobiwgcCkpIHx8IGVmKG4sIGQpIHx8IGVmKHAsIGQpKSAmJiAocFswXSArPSBudSwgcFsxXSArPSBudSwgdiA9IG8ocFswXSwgcFsxXSkpLCB2ICE9PSBjKSBzID0gMCwgdiA/ICh0LmxpbmVTdGFydCgpLCBkID0gYShwLCBuKSwgdC5wb2ludChkWzBdLCBkWzFdKSkgOiAoZCA9IGEobiwgcCksIHQucG9pbnQoZFswXSwgZFsxXSksIHQubGluZUVuZCgpKSwgbiA9IGQ7IGVsc2UgaWYgKGkgJiYgbiAmJiByIF4gdikgeyB2YXIgeTsgZyAmIGUgfHwgISh5ID0gYShwLCBuLCAhMCkpIHx8IChzID0gMCwgciA/ICh0LmxpbmVTdGFydCgpLCB0LnBvaW50KHlbMF1bMF0sIHlbMF1bMV0pLCB0LnBvaW50KHlbMV1bMF0sIHlbMV1bMV0pLCB0LmxpbmVFbmQoKSkgOiAodC5wb2ludCh5WzFdWzBdLCB5WzFdWzFdKSwgdC5saW5lRW5kKCksIHQubGluZVN0YXJ0KCksIHQucG9pbnQoeVswXVswXSwgeVswXVsxXSkpKSB9ICF2IHx8IG4gJiYgZWYobiwgcCkgfHwgdC5wb2ludChwWzBdLCBwWzFdKSwgbiA9IHAsIGMgPSB2LCBlID0gZyB9LCBsaW5lRW5kOiBmdW5jdGlvbiAoKSB7IGMgJiYgdC5saW5lRW5kKCksIG4gPSBudWxsIH0sIGNsZWFuOiBmdW5jdGlvbiAoKSB7IHJldHVybiBzIHwgKGYgJiYgYykgPDwgMSB9IH0gfSwgZnVuY3Rpb24gKG4sIHIsIGksIG8pIHsgSmMobywgdCwgZSwgaSwgbiwgcikgfSwgciA/IFswLCAtdF0gOiBbLXJ1LCB0IC0gcnVdKSB9IHZhciB2ZiA9IDFlOSwgZ2YgPSAtdmY7IGZ1bmN0aW9uIHlmKHQsIG4sIGUsIHIpIHsgZnVuY3Rpb24gaShpLCBvKSB7IHJldHVybiB0IDw9IGkgJiYgaSA8PSBlICYmIG4gPD0gbyAmJiBvIDw9IHIgfSBmdW5jdGlvbiBvKGksIG8sIHUsIGYpIHsgdmFyIHMgPSAwLCBsID0gMDsgaWYgKG51bGwgPT0gaSB8fCAocyA9IGEoaSwgdSkpICE9PSAobCA9IGEobywgdSkpIHx8IGMoaSwgbykgPCAwIF4gdSA+IDApIGRvIHsgZi5wb2ludCgwID09PSBzIHx8IDMgPT09IHMgPyB0IDogZSwgcyA+IDEgPyByIDogbikgfSB3aGlsZSAoKHMgPSAocyArIHUgKyA0KSAlIDQpICE9PSBsKTsgZWxzZSBmLnBvaW50KG9bMF0sIG9bMV0pIH0gZnVuY3Rpb24gYShyLCBpKSB7IHJldHVybiBmdShyWzBdIC0gdCkgPCBudSA/IGkgPiAwID8gMCA6IDMgOiBmdShyWzBdIC0gZSkgPCBudSA/IGkgPiAwID8gMiA6IDEgOiBmdShyWzFdIC0gbikgPCBudSA/IGkgPiAwID8gMSA6IDAgOiBpID4gMCA/IDMgOiAyIH0gZnVuY3Rpb24gdSh0LCBuKSB7IHJldHVybiBjKHQueCwgbi54KSB9IGZ1bmN0aW9uIGModCwgbikgeyB2YXIgZSA9IGEodCwgMSksIHIgPSBhKG4sIDEpOyByZXR1cm4gZSAhPT0gciA/IGUgLSByIDogMCA9PT0gZSA/IG5bMV0gLSB0WzFdIDogMSA9PT0gZSA/IHRbMF0gLSBuWzBdIDogMiA9PT0gZSA/IHRbMV0gLSBuWzFdIDogblswXSAtIHRbMF0gfSByZXR1cm4gZnVuY3Rpb24gKGEpIHsgdmFyIGMsIGYsIHMsIGwsIGgsIGQsIHAsIHYsIGcsIHksIF8sIGIgPSBhLCBtID0gbmYoKSwgeCA9IHsgcG9pbnQ6IHcsIGxpbmVTdGFydDogZnVuY3Rpb24gKCkgeyB4LnBvaW50ID0gTSwgZiAmJiBmLnB1c2gocyA9IFtdKTsgeSA9ICEwLCBnID0gITEsIHAgPSB2ID0gTmFOIH0sIGxpbmVFbmQ6IGZ1bmN0aW9uICgpIHsgYyAmJiAoTShsLCBoKSwgZCAmJiBnICYmIG0ucmVqb2luKCksIGMucHVzaChtLnJlc3VsdCgpKSk7IHgucG9pbnQgPSB3LCBnICYmIGIubGluZUVuZCgpIH0sIHBvbHlnb25TdGFydDogZnVuY3Rpb24gKCkgeyBiID0gbSwgYyA9IFtdLCBmID0gW10sIF8gPSAhMCB9LCBwb2x5Z29uRW5kOiBmdW5jdGlvbiAoKSB7IHZhciBuID0gZnVuY3Rpb24gKCkgeyBmb3IgKHZhciBuID0gMCwgZSA9IDAsIGkgPSBmLmxlbmd0aDsgZSA8IGk7ICsrZSlmb3IgKHZhciBvLCBhLCB1ID0gZltlXSwgYyA9IDEsIHMgPSB1Lmxlbmd0aCwgbCA9IHVbMF0sIGggPSBsWzBdLCBkID0gbFsxXTsgYyA8IHM7ICsrYylvID0gaCwgYSA9IGQsIGwgPSB1W2NdLCBoID0gbFswXSwgZCA9IGxbMV0sIGEgPD0gciA/IGQgPiByICYmIChoIC0gbykgKiAociAtIGEpID4gKGQgLSBhKSAqICh0IC0gbykgJiYgKytuIDogZCA8PSByICYmIChoIC0gbykgKiAociAtIGEpIDwgKGQgLSBhKSAqICh0IC0gbykgJiYgLS1uOyByZXR1cm4gbiB9KCksIGUgPSBfICYmIG4sIGkgPSAoYyA9IEEoYykpLmxlbmd0aDsgKGUgfHwgaSkgJiYgKGEucG9seWdvblN0YXJ0KCksIGUgJiYgKGEubGluZVN0YXJ0KCksIG8obnVsbCwgbnVsbCwgMSwgYSksIGEubGluZUVuZCgpKSwgaSAmJiBvZihjLCB1LCBuLCBvLCBhKSwgYS5wb2x5Z29uRW5kKCkpOyBiID0gYSwgYyA9IGYgPSBzID0gbnVsbCB9IH07IGZ1bmN0aW9uIHcodCwgbikgeyBpKHQsIG4pICYmIGIucG9pbnQodCwgbikgfSBmdW5jdGlvbiBNKG8sIGEpIHsgdmFyIHUgPSBpKG8sIGEpOyBpZiAoZiAmJiBzLnB1c2goW28sIGFdKSwgeSkgbCA9IG8sIGggPSBhLCBkID0gdSwgeSA9ICExLCB1ICYmIChiLmxpbmVTdGFydCgpLCBiLnBvaW50KG8sIGEpKTsgZWxzZSBpZiAodSAmJiBnKSBiLnBvaW50KG8sIGEpOyBlbHNlIHsgdmFyIGMgPSBbcCA9IE1hdGgubWF4KGdmLCBNYXRoLm1pbih2ZiwgcCkpLCB2ID0gTWF0aC5tYXgoZ2YsIE1hdGgubWluKHZmLCB2KSldLCBtID0gW28gPSBNYXRoLm1heChnZiwgTWF0aC5taW4odmYsIG8pKSwgYSA9IE1hdGgubWF4KGdmLCBNYXRoLm1pbih2ZiwgYSkpXTsgIWZ1bmN0aW9uICh0LCBuLCBlLCByLCBpLCBvKSB7IHZhciBhLCB1ID0gdFswXSwgYyA9IHRbMV0sIGYgPSAwLCBzID0gMSwgbCA9IG5bMF0gLSB1LCBoID0gblsxXSAtIGM7IGlmIChhID0gZSAtIHUsIGwgfHwgIShhID4gMCkpIHsgaWYgKGEgLz0gbCwgbCA8IDApIHsgaWYgKGEgPCBmKSByZXR1cm47IGEgPCBzICYmIChzID0gYSkgfSBlbHNlIGlmIChsID4gMCkgeyBpZiAoYSA+IHMpIHJldHVybjsgYSA+IGYgJiYgKGYgPSBhKSB9IGlmIChhID0gaSAtIHUsIGwgfHwgIShhIDwgMCkpIHsgaWYgKGEgLz0gbCwgbCA8IDApIHsgaWYgKGEgPiBzKSByZXR1cm47IGEgPiBmICYmIChmID0gYSkgfSBlbHNlIGlmIChsID4gMCkgeyBpZiAoYSA8IGYpIHJldHVybjsgYSA8IHMgJiYgKHMgPSBhKSB9IGlmIChhID0gciAtIGMsIGggfHwgIShhID4gMCkpIHsgaWYgKGEgLz0gaCwgaCA8IDApIHsgaWYgKGEgPCBmKSByZXR1cm47IGEgPCBzICYmIChzID0gYSkgfSBlbHNlIGlmIChoID4gMCkgeyBpZiAoYSA+IHMpIHJldHVybjsgYSA+IGYgJiYgKGYgPSBhKSB9IGlmIChhID0gbyAtIGMsIGggfHwgIShhIDwgMCkpIHsgaWYgKGEgLz0gaCwgaCA8IDApIHsgaWYgKGEgPiBzKSByZXR1cm47IGEgPiBmICYmIChmID0gYSkgfSBlbHNlIGlmIChoID4gMCkgeyBpZiAoYSA8IGYpIHJldHVybjsgYSA8IHMgJiYgKHMgPSBhKSB9IHJldHVybiBmID4gMCAmJiAodFswXSA9IHUgKyBmICogbCwgdFsxXSA9IGMgKyBmICogaCksIHMgPCAxICYmIChuWzBdID0gdSArIHMgKiBsLCBuWzFdID0gYyArIHMgKiBoKSwgITAgfSB9IH0gfSB9KGMsIG0sIHQsIG4sIGUsIHIpID8gdSAmJiAoYi5saW5lU3RhcnQoKSwgYi5wb2ludChvLCBhKSwgXyA9ICExKSA6IChnIHx8IChiLmxpbmVTdGFydCgpLCBiLnBvaW50KGNbMF0sIGNbMV0pKSwgYi5wb2ludChtWzBdLCBtWzFdKSwgdSB8fCBiLmxpbmVFbmQoKSwgXyA9ICExKSB9IHAgPSBvLCB2ID0gYSwgZyA9IHUgfSByZXR1cm4geCB9IH0gdmFyIF9mLCBiZiwgbWYsIHhmID0gUWEoKSwgd2YgPSB7IHNwaGVyZTogTnUsIHBvaW50OiBOdSwgbGluZVN0YXJ0OiBmdW5jdGlvbiAoKSB7IHdmLnBvaW50ID0gTmYsIHdmLmxpbmVFbmQgPSBNZiB9LCBsaW5lRW5kOiBOdSwgcG9seWdvblN0YXJ0OiBOdSwgcG9seWdvbkVuZDogTnUgfTsgZnVuY3Rpb24gTWYoKSB7IHdmLnBvaW50ID0gd2YubGluZUVuZCA9IE51IH0gZnVuY3Rpb24gTmYodCwgbikgeyBfZiA9IHQgKj0gY3UsIGJmID0geXUobiAqPSBjdSksIG1mID0gaHUobiksIHdmLnBvaW50ID0gVGYgfSBmdW5jdGlvbiBUZih0LCBuKSB7IHQgKj0gY3U7IHZhciBlID0geXUobiAqPSBjdSksIHIgPSBodShuKSwgaSA9IGZ1KHQgLSBfZiksIG8gPSBodShpKSwgYSA9IHIgKiB5dShpKSwgdSA9IG1mICogZSAtIGJmICogciAqIG8sIGMgPSBiZiAqIGUgKyBtZiAqIHIgKiBvOyB4Zi5hZGQobHUoYnUoYSAqIGEgKyB1ICogdSksIGMpKSwgX2YgPSB0LCBiZiA9IGUsIG1mID0gciB9IGZ1bmN0aW9uIEFmKHQpIHsgcmV0dXJuIHhmLnJlc2V0KCksIEN1KHQsIHdmKSwgK3hmIH0gdmFyIFNmID0gW251bGwsIG51bGxdLCBrZiA9IHsgdHlwZTogIkxpbmVTdHJpbmciLCBjb29yZGluYXRlczogU2YgfTsgZnVuY3Rpb24gRWYodCwgbikgeyByZXR1cm4gU2ZbMF0gPSB0LCBTZlsxXSA9IG4sIEFmKGtmKSB9IHZhciBDZiA9IHsgRmVhdHVyZTogZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIHpmKHQuZ2VvbWV0cnksIG4pIH0sIEZlYXR1cmVDb2xsZWN0aW9uOiBmdW5jdGlvbiAodCwgbikgeyBmb3IgKHZhciBlID0gdC5mZWF0dXJlcywgciA9IC0xLCBpID0gZS5sZW5ndGg7ICsrciA8IGk7KWlmICh6ZihlW3JdLmdlb21ldHJ5LCBuKSkgcmV0dXJuICEwOyByZXR1cm4gITEgfSB9LCBQZiA9IHsgU3BoZXJlOiBmdW5jdGlvbiAoKSB7IHJldHVybiAhMCB9LCBQb2ludDogZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIFJmKHQuY29vcmRpbmF0ZXMsIG4pIH0sIE11bHRpUG9pbnQ6IGZ1bmN0aW9uICh0LCBuKSB7IGZvciAodmFyIGUgPSB0LmNvb3JkaW5hdGVzLCByID0gLTEsIGkgPSBlLmxlbmd0aDsgKytyIDwgaTspaWYgKFJmKGVbcl0sIG4pKSByZXR1cm4gITA7IHJldHVybiAhMSB9LCBMaW5lU3RyaW5nOiBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gRGYodC5jb29yZGluYXRlcywgbikgfSwgTXVsdGlMaW5lU3RyaW5nOiBmdW5jdGlvbiAodCwgbikgeyBmb3IgKHZhciBlID0gdC5jb29yZGluYXRlcywgciA9IC0xLCBpID0gZS5sZW5ndGg7ICsrciA8IGk7KWlmIChEZihlW3JdLCBuKSkgcmV0dXJuICEwOyByZXR1cm4gITEgfSwgUG9seWdvbjogZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIHFmKHQuY29vcmRpbmF0ZXMsIG4pIH0sIE11bHRpUG9seWdvbjogZnVuY3Rpb24gKHQsIG4pIHsgZm9yICh2YXIgZSA9IHQuY29vcmRpbmF0ZXMsIHIgPSAtMSwgaSA9IGUubGVuZ3RoOyArK3IgPCBpOylpZiAocWYoZVtyXSwgbikpIHJldHVybiAhMDsgcmV0dXJuICExIH0sIEdlb21ldHJ5Q29sbGVjdGlvbjogZnVuY3Rpb24gKHQsIG4pIHsgZm9yICh2YXIgZSA9IHQuZ2VvbWV0cmllcywgciA9IC0xLCBpID0gZS5sZW5ndGg7ICsrciA8IGk7KWlmICh6ZihlW3JdLCBuKSkgcmV0dXJuICEwOyByZXR1cm4gITEgfSB9OyBmdW5jdGlvbiB6Zih0LCBuKSB7IHJldHVybiAhKCF0IHx8ICFQZi5oYXNPd25Qcm9wZXJ0eSh0LnR5cGUpKSAmJiBQZlt0LnR5cGVdKHQsIG4pIH0gZnVuY3Rpb24gUmYodCwgbikgeyByZXR1cm4gMCA9PT0gRWYodCwgbikgfSBmdW5jdGlvbiBEZih0LCBuKSB7IGZvciAodmFyIGUsIHIsIGksIG8gPSAwLCBhID0gdC5sZW5ndGg7IG8gPCBhOyBvKyspIHsgaWYgKDAgPT09IChyID0gRWYodFtvXSwgbikpKSByZXR1cm4gITA7IGlmIChvID4gMCAmJiAoaSA9IEVmKHRbb10sIHRbbyAtIDFdKSkgPiAwICYmIGUgPD0gaSAmJiByIDw9IGkgJiYgKGUgKyByIC0gaSkgKiAoMSAtIE1hdGgucG93KChlIC0gcikgLyBpLCAyKSkgPCBldSAqIGkpIHJldHVybiAhMDsgZSA9IHIgfSByZXR1cm4gITEgfSBmdW5jdGlvbiBxZih0LCBuKSB7IHJldHVybiAhIWZmKHQubWFwKExmKSwgVWYobikpIH0gZnVuY3Rpb24gTGYodCkgeyByZXR1cm4gKHQgPSB0Lm1hcChVZikpLnBvcCgpLCB0IH0gZnVuY3Rpb24gVWYodCkgeyByZXR1cm4gW3RbMF0gKiBjdSwgdFsxXSAqIGN1XSB9IGZ1bmN0aW9uIE9mKHQsIG4sIGUpIHsgdmFyIHIgPSBnKHQsIG4gLSBudSwgZSkuY29uY2F0KG4pOyByZXR1cm4gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHIubWFwKGZ1bmN0aW9uIChuKSB7IHJldHVybiBbdCwgbl0gfSkgfSB9IGZ1bmN0aW9uIEJmKHQsIG4sIGUpIHsgdmFyIHIgPSBnKHQsIG4gLSBudSwgZSkuY29uY2F0KG4pOyByZXR1cm4gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHIubWFwKGZ1bmN0aW9uIChuKSB7IHJldHVybiBbbiwgdF0gfSkgfSB9IGZ1bmN0aW9uIEZmKCkgeyB2YXIgdCwgbiwgZSwgciwgaSwgbywgYSwgdSwgYywgZiwgcywgbCwgaCA9IDEwLCBkID0gaCwgcCA9IDkwLCB2ID0gMzYwLCB5ID0gMi41OyBmdW5jdGlvbiBfKCkgeyByZXR1cm4geyB0eXBlOiAiTXVsdGlMaW5lU3RyaW5nIiwgY29vcmRpbmF0ZXM6IGIoKSB9IH0gZnVuY3Rpb24gYigpIHsgcmV0dXJuIGcoZHUociAvIHApICogcCwgZSwgcCkubWFwKHMpLmNvbmNhdChnKGR1KHUgLyB2KSAqIHYsIGEsIHYpLm1hcChsKSkuY29uY2F0KGcoZHUobiAvIGgpICogaCwgdCwgaCkuZmlsdGVyKGZ1bmN0aW9uICh0KSB7IHJldHVybiBmdSh0ICUgcCkgPiBudSB9KS5tYXAoYykpLmNvbmNhdChnKGR1KG8gLyBkKSAqIGQsIGksIGQpLmZpbHRlcihmdW5jdGlvbiAodCkgeyByZXR1cm4gZnUodCAlIHYpID4gbnUgfSkubWFwKGYpKSB9IHJldHVybiBfLmxpbmVzID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gYigpLm1hcChmdW5jdGlvbiAodCkgeyByZXR1cm4geyB0eXBlOiAiTGluZVN0cmluZyIsIGNvb3JkaW5hdGVzOiB0IH0gfSkgfSwgXy5vdXRsaW5lID0gZnVuY3Rpb24gKCkgeyByZXR1cm4geyB0eXBlOiAiUG9seWdvbiIsIGNvb3JkaW5hdGVzOiBbcyhyKS5jb25jYXQobChhKS5zbGljZSgxKSwgcyhlKS5yZXZlcnNlKCkuc2xpY2UoMSksIGwodSkucmV2ZXJzZSgpLnNsaWNlKDEpKV0gfSB9LCBfLmV4dGVudCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gXy5leHRlbnRNYWpvcih0KS5leHRlbnRNaW5vcih0KSA6IF8uZXh0ZW50TWlub3IoKSB9LCBfLmV4dGVudE1ham9yID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAociA9ICt0WzBdWzBdLCBlID0gK3RbMV1bMF0sIHUgPSArdFswXVsxXSwgYSA9ICt0WzFdWzFdLCByID4gZSAmJiAodCA9IHIsIHIgPSBlLCBlID0gdCksIHUgPiBhICYmICh0ID0gdSwgdSA9IGEsIGEgPSB0KSwgXy5wcmVjaXNpb24oeSkpIDogW1tyLCB1XSwgW2UsIGFdXSB9LCBfLmV4dGVudE1pbm9yID0gZnVuY3Rpb24gKGUpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobiA9ICtlWzBdWzBdLCB0ID0gK2VbMV1bMF0sIG8gPSArZVswXVsxXSwgaSA9ICtlWzFdWzFdLCBuID4gdCAmJiAoZSA9IG4sIG4gPSB0LCB0ID0gZSksIG8gPiBpICYmIChlID0gbywgbyA9IGksIGkgPSBlKSwgXy5wcmVjaXNpb24oeSkpIDogW1tuLCBvXSwgW3QsIGldXSB9LCBfLnN0ZXAgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IF8uc3RlcE1ham9yKHQpLnN0ZXBNaW5vcih0KSA6IF8uc3RlcE1pbm9yKCkgfSwgXy5zdGVwTWFqb3IgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChwID0gK3RbMF0sIHYgPSArdFsxXSwgXykgOiBbcCwgdl0gfSwgXy5zdGVwTWlub3IgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChoID0gK3RbMF0sIGQgPSArdFsxXSwgXykgOiBbaCwgZF0gfSwgXy5wcmVjaXNpb24gPSBmdW5jdGlvbiAoaCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh5ID0gK2gsIGMgPSBPZihvLCBpLCA5MCksIGYgPSBCZihuLCB0LCB5KSwgcyA9IE9mKHUsIGEsIDkwKSwgbCA9IEJmKHIsIGUsIHkpLCBfKSA6IHkgfSwgXy5leHRlbnRNYWpvcihbWy0xODAsIC05MCArIG51XSwgWzE4MCwgOTAgLSBudV1dKS5leHRlbnRNaW5vcihbWy0xODAsIC04MCAtIG51XSwgWzE4MCwgODAgKyBudV1dKSB9IGZ1bmN0aW9uIFlmKHQpIHsgcmV0dXJuIHQgfSB2YXIgSWYsIEhmLCBqZiwgWGYsIFZmID0gUWEoKSwgR2YgPSBRYSgpLCAkZiA9IHsgcG9pbnQ6IE51LCBsaW5lU3RhcnQ6IE51LCBsaW5lRW5kOiBOdSwgcG9seWdvblN0YXJ0OiBmdW5jdGlvbiAoKSB7ICRmLmxpbmVTdGFydCA9IFdmLCAkZi5saW5lRW5kID0gS2YgfSwgcG9seWdvbkVuZDogZnVuY3Rpb24gKCkgeyAkZi5saW5lU3RhcnQgPSAkZi5saW5lRW5kID0gJGYucG9pbnQgPSBOdSwgVmYuYWRkKGZ1KEdmKSksIEdmLnJlc2V0KCkgfSwgcmVzdWx0OiBmdW5jdGlvbiAoKSB7IHZhciB0ID0gVmYgLyAyOyByZXR1cm4gVmYucmVzZXQoKSwgdCB9IH07IGZ1bmN0aW9uIFdmKCkgeyAkZi5wb2ludCA9IFpmIH0gZnVuY3Rpb24gWmYodCwgbikgeyAkZi5wb2ludCA9IFFmLCBJZiA9IGpmID0gdCwgSGYgPSBYZiA9IG4gfSBmdW5jdGlvbiBRZih0LCBuKSB7IEdmLmFkZChYZiAqIHQgLSBqZiAqIG4pLCBqZiA9IHQsIFhmID0gbiB9IGZ1bmN0aW9uIEtmKCkgeyBRZihJZiwgSGYpIH0gdmFyIEpmID0gMSAvIDAsIHRzID0gSmYsIG5zID0gLUpmLCBlcyA9IG5zLCBycyA9IHsgcG9pbnQ6IGZ1bmN0aW9uICh0LCBuKSB7IHQgPCBKZiAmJiAoSmYgPSB0KTsgdCA+IG5zICYmIChucyA9IHQpOyBuIDwgdHMgJiYgKHRzID0gbik7IG4gPiBlcyAmJiAoZXMgPSBuKSB9LCBsaW5lU3RhcnQ6IE51LCBsaW5lRW5kOiBOdSwgcG9seWdvblN0YXJ0OiBOdSwgcG9seWdvbkVuZDogTnUsIHJlc3VsdDogZnVuY3Rpb24gKCkgeyB2YXIgdCA9IFtbSmYsIHRzXSwgW25zLCBlc11dOyByZXR1cm4gbnMgPSBlcyA9IC0odHMgPSBKZiA9IDEgLyAwKSwgdCB9IH07IHZhciBpcywgb3MsIGFzLCB1cywgY3MgPSAwLCBmcyA9IDAsIHNzID0gMCwgbHMgPSAwLCBocyA9IDAsIGRzID0gMCwgcHMgPSAwLCB2cyA9IDAsIGdzID0gMCwgeXMgPSB7IHBvaW50OiBfcywgbGluZVN0YXJ0OiBicywgbGluZUVuZDogd3MsIHBvbHlnb25TdGFydDogZnVuY3Rpb24gKCkgeyB5cy5saW5lU3RhcnQgPSBNcywgeXMubGluZUVuZCA9IE5zIH0sIHBvbHlnb25FbmQ6IGZ1bmN0aW9uICgpIHsgeXMucG9pbnQgPSBfcywgeXMubGluZVN0YXJ0ID0gYnMsIHlzLmxpbmVFbmQgPSB3cyB9LCByZXN1bHQ6IGZ1bmN0aW9uICgpIHsgdmFyIHQgPSBncyA/IFtwcyAvIGdzLCB2cyAvIGdzXSA6IGRzID8gW2xzIC8gZHMsIGhzIC8gZHNdIDogc3MgPyBbY3MgLyBzcywgZnMgLyBzc10gOiBbTmFOLCBOYU5dOyByZXR1cm4gY3MgPSBmcyA9IHNzID0gbHMgPSBocyA9IGRzID0gcHMgPSB2cyA9IGdzID0gMCwgdCB9IH07IGZ1bmN0aW9uIF9zKHQsIG4pIHsgY3MgKz0gdCwgZnMgKz0gbiwgKytzcyB9IGZ1bmN0aW9uIGJzKCkgeyB5cy5wb2ludCA9IG1zIH0gZnVuY3Rpb24gbXModCwgbikgeyB5cy5wb2ludCA9IHhzLCBfcyhhcyA9IHQsIHVzID0gbikgfSBmdW5jdGlvbiB4cyh0LCBuKSB7IHZhciBlID0gdCAtIGFzLCByID0gbiAtIHVzLCBpID0gYnUoZSAqIGUgKyByICogcik7IGxzICs9IGkgKiAoYXMgKyB0KSAvIDIsIGhzICs9IGkgKiAodXMgKyBuKSAvIDIsIGRzICs9IGksIF9zKGFzID0gdCwgdXMgPSBuKSB9IGZ1bmN0aW9uIHdzKCkgeyB5cy5wb2ludCA9IF9zIH0gZnVuY3Rpb24gTXMoKSB7IHlzLnBvaW50ID0gVHMgfSBmdW5jdGlvbiBOcygpIHsgQXMoaXMsIG9zKSB9IGZ1bmN0aW9uIFRzKHQsIG4pIHsgeXMucG9pbnQgPSBBcywgX3MoaXMgPSBhcyA9IHQsIG9zID0gdXMgPSBuKSB9IGZ1bmN0aW9uIEFzKHQsIG4pIHsgdmFyIGUgPSB0IC0gYXMsIHIgPSBuIC0gdXMsIGkgPSBidShlICogZSArIHIgKiByKTsgbHMgKz0gaSAqIChhcyArIHQpIC8gMiwgaHMgKz0gaSAqICh1cyArIG4pIC8gMiwgZHMgKz0gaSwgcHMgKz0gKGkgPSB1cyAqIHQgLSBhcyAqIG4pICogKGFzICsgdCksIHZzICs9IGkgKiAodXMgKyBuKSwgZ3MgKz0gMyAqIGksIF9zKGFzID0gdCwgdXMgPSBuKSB9IGZ1bmN0aW9uIFNzKHQpIHsgdGhpcy5fY29udGV4dCA9IHQgfSBTcy5wcm90b3R5cGUgPSB7IF9yYWRpdXM6IDQuNSwgcG9pbnRSYWRpdXM6IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0aGlzLl9yYWRpdXMgPSB0LCB0aGlzIH0sIHBvbHlnb25TdGFydDogZnVuY3Rpb24gKCkgeyB0aGlzLl9saW5lID0gMCB9LCBwb2x5Z29uRW5kOiBmdW5jdGlvbiAoKSB7IHRoaXMuX2xpbmUgPSBOYU4gfSwgbGluZVN0YXJ0OiBmdW5jdGlvbiAoKSB7IHRoaXMuX3BvaW50ID0gMCB9LCBsaW5lRW5kOiBmdW5jdGlvbiAoKSB7IDAgPT09IHRoaXMuX2xpbmUgJiYgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKSwgdGhpcy5fcG9pbnQgPSBOYU4gfSwgcG9pbnQ6IGZ1bmN0aW9uICh0LCBuKSB7IHN3aXRjaCAodGhpcy5fcG9pbnQpIHsgY2FzZSAwOiB0aGlzLl9jb250ZXh0Lm1vdmVUbyh0LCBuKSwgdGhpcy5fcG9pbnQgPSAxOyBicmVhazsgY2FzZSAxOiB0aGlzLl9jb250ZXh0LmxpbmVUbyh0LCBuKTsgYnJlYWs7IGRlZmF1bHQ6IHRoaXMuX2NvbnRleHQubW92ZVRvKHQgKyB0aGlzLl9yYWRpdXMsIG4pLCB0aGlzLl9jb250ZXh0LmFyYyh0LCBuLCB0aGlzLl9yYWRpdXMsIDAsIGF1KSB9IH0sIHJlc3VsdDogTnUgfTsgdmFyIGtzLCBFcywgQ3MsIFBzLCB6cywgUnMgPSBRYSgpLCBEcyA9IHsgcG9pbnQ6IE51LCBsaW5lU3RhcnQ6IGZ1bmN0aW9uICgpIHsgRHMucG9pbnQgPSBxcyB9LCBsaW5lRW5kOiBmdW5jdGlvbiAoKSB7IGtzICYmIExzKEVzLCBDcyksIERzLnBvaW50ID0gTnUgfSwgcG9seWdvblN0YXJ0OiBmdW5jdGlvbiAoKSB7IGtzID0gITAgfSwgcG9seWdvbkVuZDogZnVuY3Rpb24gKCkgeyBrcyA9IG51bGwgfSwgcmVzdWx0OiBmdW5jdGlvbiAoKSB7IHZhciB0ID0gK1JzOyByZXR1cm4gUnMucmVzZXQoKSwgdCB9IH07IGZ1bmN0aW9uIHFzKHQsIG4pIHsgRHMucG9pbnQgPSBMcywgRXMgPSBQcyA9IHQsIENzID0genMgPSBuIH0gZnVuY3Rpb24gTHModCwgbikgeyBQcyAtPSB0LCB6cyAtPSBuLCBScy5hZGQoYnUoUHMgKiBQcyArIHpzICogenMpKSwgUHMgPSB0LCB6cyA9IG4gfSBmdW5jdGlvbiBVcygpIHsgdGhpcy5fc3RyaW5nID0gW10gfSBmdW5jdGlvbiBPcyh0KSB7IHJldHVybiAibTAsIiArIHQgKyAiYSIgKyB0ICsgIiwiICsgdCArICIgMCAxLDEgMCwiICsgLTIgKiB0ICsgImEiICsgdCArICIsIiArIHQgKyAiIDAgMSwxIDAsIiArIDIgKiB0ICsgInoiIH0gZnVuY3Rpb24gQnModCkgeyByZXR1cm4gZnVuY3Rpb24gKG4pIHsgdmFyIGUgPSBuZXcgRnM7IGZvciAodmFyIHIgaW4gdCkgZVtyXSA9IHRbcl07IHJldHVybiBlLnN0cmVhbSA9IG4sIGUgfSB9IGZ1bmN0aW9uIEZzKCkgeyB9IGZ1bmN0aW9uIFlzKHQsIG4sIGUpIHsgdmFyIHIgPSB0LmNsaXBFeHRlbnQgJiYgdC5jbGlwRXh0ZW50KCk7IHJldHVybiB0LnNjYWxlKDE1MCkudHJhbnNsYXRlKFswLCAwXSksIG51bGwgIT0gciAmJiB0LmNsaXBFeHRlbnQobnVsbCksIEN1KGUsIHQuc3RyZWFtKHJzKSksIG4ocnMucmVzdWx0KCkpLCBudWxsICE9IHIgJiYgdC5jbGlwRXh0ZW50KHIpLCB0IH0gZnVuY3Rpb24gSXModCwgbiwgZSkgeyByZXR1cm4gWXModCwgZnVuY3Rpb24gKGUpIHsgdmFyIHIgPSBuWzFdWzBdIC0gblswXVswXSwgaSA9IG5bMV1bMV0gLSBuWzBdWzFdLCBvID0gTWF0aC5taW4ociAvIChlWzFdWzBdIC0gZVswXVswXSksIGkgLyAoZVsxXVsxXSAtIGVbMF1bMV0pKSwgYSA9ICtuWzBdWzBdICsgKHIgLSBvICogKGVbMV1bMF0gKyBlWzBdWzBdKSkgLyAyLCB1ID0gK25bMF1bMV0gKyAoaSAtIG8gKiAoZVsxXVsxXSArIGVbMF1bMV0pKSAvIDI7IHQuc2NhbGUoMTUwICogbykudHJhbnNsYXRlKFthLCB1XSkgfSwgZSkgfSBmdW5jdGlvbiBIcyh0LCBuLCBlKSB7IHJldHVybiBJcyh0LCBbWzAsIDBdLCBuXSwgZSkgfSBmdW5jdGlvbiBqcyh0LCBuLCBlKSB7IHJldHVybiBZcyh0LCBmdW5jdGlvbiAoZSkgeyB2YXIgciA9ICtuLCBpID0gciAvIChlWzFdWzBdIC0gZVswXVswXSksIG8gPSAociAtIGkgKiAoZVsxXVswXSArIGVbMF1bMF0pKSAvIDIsIGEgPSAtaSAqIGVbMF1bMV07IHQuc2NhbGUoMTUwICogaSkudHJhbnNsYXRlKFtvLCBhXSkgfSwgZSkgfSBmdW5jdGlvbiBYcyh0LCBuLCBlKSB7IHJldHVybiBZcyh0LCBmdW5jdGlvbiAoZSkgeyB2YXIgciA9ICtuLCBpID0gciAvIChlWzFdWzFdIC0gZVswXVsxXSksIG8gPSAtaSAqIGVbMF1bMF0sIGEgPSAociAtIGkgKiAoZVsxXVsxXSArIGVbMF1bMV0pKSAvIDI7IHQuc2NhbGUoMTUwICogaSkudHJhbnNsYXRlKFtvLCBhXSkgfSwgZSkgfSBVcy5wcm90b3R5cGUgPSB7IF9yYWRpdXM6IDQuNSwgX2NpcmNsZTogT3MoNC41KSwgcG9pbnRSYWRpdXM6IGZ1bmN0aW9uICh0KSB7IHJldHVybiAodCA9ICt0KSAhPT0gdGhpcy5fcmFkaXVzICYmICh0aGlzLl9yYWRpdXMgPSB0LCB0aGlzLl9jaXJjbGUgPSBudWxsKSwgdGhpcyB9LCBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uICgpIHsgdGhpcy5fbGluZSA9IDAgfSwgcG9seWdvbkVuZDogZnVuY3Rpb24gKCkgeyB0aGlzLl9saW5lID0gTmFOIH0sIGxpbmVTdGFydDogZnVuY3Rpb24gKCkgeyB0aGlzLl9wb2ludCA9IDAgfSwgbGluZUVuZDogZnVuY3Rpb24gKCkgeyAwID09PSB0aGlzLl9saW5lICYmIHRoaXMuX3N0cmluZy5wdXNoKCJaIiksIHRoaXMuX3BvaW50ID0gTmFOIH0sIHBvaW50OiBmdW5jdGlvbiAodCwgbikgeyBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7IGNhc2UgMDogdGhpcy5fc3RyaW5nLnB1c2goIk0iLCB0LCAiLCIsIG4pLCB0aGlzLl9wb2ludCA9IDE7IGJyZWFrOyBjYXNlIDE6IHRoaXMuX3N0cmluZy5wdXNoKCJMIiwgdCwgIiwiLCBuKTsgYnJlYWs7IGRlZmF1bHQ6IG51bGwgPT0gdGhpcy5fY2lyY2xlICYmICh0aGlzLl9jaXJjbGUgPSBPcyh0aGlzLl9yYWRpdXMpKSwgdGhpcy5fc3RyaW5nLnB1c2goIk0iLCB0LCAiLCIsIG4sIHRoaXMuX2NpcmNsZSkgfSB9LCByZXN1bHQ6IGZ1bmN0aW9uICgpIHsgaWYgKHRoaXMuX3N0cmluZy5sZW5ndGgpIHsgdmFyIHQgPSB0aGlzLl9zdHJpbmcuam9pbigiIik7IHJldHVybiB0aGlzLl9zdHJpbmcgPSBbXSwgdCB9IHJldHVybiBudWxsIH0gfSwgRnMucHJvdG90eXBlID0geyBjb25zdHJ1Y3RvcjogRnMsIHBvaW50OiBmdW5jdGlvbiAodCwgbikgeyB0aGlzLnN0cmVhbS5wb2ludCh0LCBuKSB9LCBzcGhlcmU6IGZ1bmN0aW9uICgpIHsgdGhpcy5zdHJlYW0uc3BoZXJlKCkgfSwgbGluZVN0YXJ0OiBmdW5jdGlvbiAoKSB7IHRoaXMuc3RyZWFtLmxpbmVTdGFydCgpIH0sIGxpbmVFbmQ6IGZ1bmN0aW9uICgpIHsgdGhpcy5zdHJlYW0ubGluZUVuZCgpIH0sIHBvbHlnb25TdGFydDogZnVuY3Rpb24gKCkgeyB0aGlzLnN0cmVhbS5wb2x5Z29uU3RhcnQoKSB9LCBwb2x5Z29uRW5kOiBmdW5jdGlvbiAoKSB7IHRoaXMuc3RyZWFtLnBvbHlnb25FbmQoKSB9IH07IHZhciBWcyA9IDE2LCBHcyA9IGh1KDMwICogY3UpOyBmdW5jdGlvbiAkcyh0LCBuKSB7IHJldHVybiArbiA/IGZ1bmN0aW9uICh0LCBuKSB7IGZ1bmN0aW9uIGUociwgaSwgbywgYSwgdSwgYywgZiwgcywgbCwgaCwgZCwgcCwgdiwgZykgeyB2YXIgeSA9IGYgLSByLCBfID0gcyAtIGksIGIgPSB5ICogeSArIF8gKiBfOyBpZiAoYiA+IDQgKiBuICYmIHYtLSkgeyB2YXIgbSA9IGEgKyBoLCB4ID0gdSArIGQsIHcgPSBjICsgcCwgTSA9IGJ1KG0gKiBtICsgeCAqIHggKyB3ICogdyksIE4gPSB3dSh3IC89IE0pLCBUID0gZnUoZnUodykgLSAxKSA8IG51IHx8IGZ1KG8gLSBsKSA8IG51ID8gKG8gKyBsKSAvIDIgOiBsdSh4LCBtKSwgQSA9IHQoVCwgTiksIFMgPSBBWzBdLCBrID0gQVsxXSwgRSA9IFMgLSByLCBDID0gayAtIGksIFAgPSBfICogRSAtIHkgKiBDOyAoUCAqIFAgLyBiID4gbiB8fCBmdSgoeSAqIEUgKyBfICogQykgLyBiIC0gLjUpID4gLjMgfHwgYSAqIGggKyB1ICogZCArIGMgKiBwIDwgR3MpICYmIChlKHIsIGksIG8sIGEsIHUsIGMsIFMsIGssIFQsIG0gLz0gTSwgeCAvPSBNLCB3LCB2LCBnKSwgZy5wb2ludChTLCBrKSwgZShTLCBrLCBULCBtLCB4LCB3LCBmLCBzLCBsLCBoLCBkLCBwLCB2LCBnKSkgfSB9IHJldHVybiBmdW5jdGlvbiAobikgeyB2YXIgciwgaSwgbywgYSwgdSwgYywgZiwgcywgbCwgaCwgZCwgcCwgdiA9IHsgcG9pbnQ6IGcsIGxpbmVTdGFydDogeSwgbGluZUVuZDogYiwgcG9seWdvblN0YXJ0OiBmdW5jdGlvbiAoKSB7IG4ucG9seWdvblN0YXJ0KCksIHYubGluZVN0YXJ0ID0gbSB9LCBwb2x5Z29uRW5kOiBmdW5jdGlvbiAoKSB7IG4ucG9seWdvbkVuZCgpLCB2LmxpbmVTdGFydCA9IHkgfSB9OyBmdW5jdGlvbiBnKGUsIHIpIHsgZSA9IHQoZSwgciksIG4ucG9pbnQoZVswXSwgZVsxXSkgfSBmdW5jdGlvbiB5KCkgeyBzID0gTmFOLCB2LnBvaW50ID0gXywgbi5saW5lU3RhcnQoKSB9IGZ1bmN0aW9uIF8ociwgaSkgeyB2YXIgbyA9IGp1KFtyLCBpXSksIGEgPSB0KHIsIGkpOyBlKHMsIGwsIGYsIGgsIGQsIHAsIHMgPSBhWzBdLCBsID0gYVsxXSwgZiA9IHIsIGggPSBvWzBdLCBkID0gb1sxXSwgcCA9IG9bMl0sIFZzLCBuKSwgbi5wb2ludChzLCBsKSB9IGZ1bmN0aW9uIGIoKSB7IHYucG9pbnQgPSBnLCBuLmxpbmVFbmQoKSB9IGZ1bmN0aW9uIG0oKSB7IHkoKSwgdi5wb2ludCA9IHgsIHYubGluZUVuZCA9IHcgfSBmdW5jdGlvbiB4KHQsIG4pIHsgXyhyID0gdCwgbiksIGkgPSBzLCBvID0gbCwgYSA9IGgsIHUgPSBkLCBjID0gcCwgdi5wb2ludCA9IF8gfSBmdW5jdGlvbiB3KCkgeyBlKHMsIGwsIGYsIGgsIGQsIHAsIGksIG8sIHIsIGEsIHUsIGMsIFZzLCBuKSwgdi5saW5lRW5kID0gYiwgYigpIH0gcmV0dXJuIHYgfSB9KHQsIG4pIDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIEJzKHsgcG9pbnQ6IGZ1bmN0aW9uIChuLCBlKSB7IG4gPSB0KG4sIGUpLCB0aGlzLnN0cmVhbS5wb2ludChuWzBdLCBuWzFdKSB9IH0pIH0odCkgfSB2YXIgV3MgPSBCcyh7IHBvaW50OiBmdW5jdGlvbiAodCwgbikgeyB0aGlzLnN0cmVhbS5wb2ludCh0ICogY3UsIG4gKiBjdSkgfSB9KTsgZnVuY3Rpb24gWnModCwgbiwgZSwgciwgaSwgbykgeyB2YXIgYSA9IGh1KG8pLCB1ID0geXUobyksIGMgPSBhICogdCwgZiA9IHUgKiB0LCBzID0gYSAvIHQsIGwgPSB1IC8gdCwgaCA9ICh1ICogZSAtIGEgKiBuKSAvIHQsIGQgPSAodSAqIG4gKyBhICogZSkgLyB0OyBmdW5jdGlvbiBwKHQsIG8pIHsgcmV0dXJuIFtjICogKHQgKj0gcikgLSBmICogKG8gKj0gaSkgKyBuLCBlIC0gZiAqIHQgLSBjICogb10gfSByZXR1cm4gcC5pbnZlcnQgPSBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gW3IgKiAocyAqIHQgLSBsICogbiArIGgpLCBpICogKGQgLSBsICogdCAtIHMgKiBuKV0gfSwgcCB9IGZ1bmN0aW9uIFFzKHQpIHsgcmV0dXJuIEtzKGZ1bmN0aW9uICgpIHsgcmV0dXJuIHQgfSkoKSB9IGZ1bmN0aW9uIEtzKHQpIHsgdmFyIG4sIGUsIHIsIGksIG8sIGEsIHUsIGMsIGYsIHMsIGwgPSAxNTAsIGggPSA0ODAsIGQgPSAyNTAsIHAgPSAwLCB2ID0gMCwgZyA9IDAsIHkgPSAwLCBfID0gMCwgYiA9IDAsIG0gPSAxLCB4ID0gMSwgdyA9IG51bGwsIE0gPSBkZiwgTiA9IG51bGwsIFQgPSBZZiwgQSA9IC41OyBmdW5jdGlvbiBTKHQpIHsgcmV0dXJuIGModFswXSAqIGN1LCB0WzFdICogY3UpIH0gZnVuY3Rpb24gayh0KSB7IHJldHVybiAodCA9IGMuaW52ZXJ0KHRbMF0sIHRbMV0pKSAmJiBbdFswXSAqIHV1LCB0WzFdICogdXVdIH0gZnVuY3Rpb24gRSgpIHsgdmFyIHQgPSBacyhsLCAwLCAwLCBtLCB4LCBiKS5hcHBseShudWxsLCBuKHAsIHYpKSwgciA9IChiID8gWnMgOiBmdW5jdGlvbiAodCwgbiwgZSwgciwgaSkgeyBmdW5jdGlvbiBvKG8sIGEpIHsgcmV0dXJuIFtuICsgdCAqIChvICo9IHIpLCBlIC0gdCAqIChhICo9IGkpXSB9IHJldHVybiBvLmludmVydCA9IGZ1bmN0aW9uIChvLCBhKSB7IHJldHVybiBbKG8gLSBuKSAvIHQgKiByLCAoZSAtIGEpIC8gdCAqIGldIH0sIG8gfSkobCwgaCAtIHRbMF0sIGQgLSB0WzFdLCBtLCB4LCBiKTsgcmV0dXJuIGUgPSAkYyhnLCB5LCBfKSwgdSA9IFZjKG4sIHIpLCBjID0gVmMoZSwgdSksIGEgPSAkcyh1LCBBKSwgQygpIH0gZnVuY3Rpb24gQygpIHsgcmV0dXJuIGYgPSBzID0gbnVsbCwgUyB9IHJldHVybiBTLnN0cmVhbSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBmICYmIHMgPT09IHQgPyBmIDogZiA9IFdzKGZ1bmN0aW9uICh0KSB7IHJldHVybiBCcyh7IHBvaW50OiBmdW5jdGlvbiAobiwgZSkgeyB2YXIgciA9IHQobiwgZSk7IHJldHVybiB0aGlzLnN0cmVhbS5wb2ludChyWzBdLCByWzFdKSB9IH0pIH0oZSkoTShhKFQocyA9IHQpKSkpKSB9LCBTLnByZWNsaXAgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChNID0gdCwgdyA9IHZvaWQgMCwgQygpKSA6IE0gfSwgUy5wb3N0Y2xpcCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKFQgPSB0LCBOID0gciA9IGkgPSBvID0gbnVsbCwgQygpKSA6IFQgfSwgUy5jbGlwQW5nbGUgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChNID0gK3QgPyBwZih3ID0gdCAqIGN1KSA6ICh3ID0gbnVsbCwgZGYpLCBDKCkpIDogdyAqIHV1IH0sIFMuY2xpcEV4dGVudCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKFQgPSBudWxsID09IHQgPyAoTiA9IHIgPSBpID0gbyA9IG51bGwsIFlmKSA6IHlmKE4gPSArdFswXVswXSwgciA9ICt0WzBdWzFdLCBpID0gK3RbMV1bMF0sIG8gPSArdFsxXVsxXSksIEMoKSkgOiBudWxsID09IE4gPyBudWxsIDogW1tOLCByXSwgW2ksIG9dXSB9LCBTLnNjYWxlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobCA9ICt0LCBFKCkpIDogbCB9LCBTLnRyYW5zbGF0ZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGggPSArdFswXSwgZCA9ICt0WzFdLCBFKCkpIDogW2gsIGRdIH0sIFMuY2VudGVyID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocCA9IHRbMF0gJSAzNjAgKiBjdSwgdiA9IHRbMV0gJSAzNjAgKiBjdSwgRSgpKSA6IFtwICogdXUsIHYgKiB1dV0gfSwgUy5yb3RhdGUgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChnID0gdFswXSAlIDM2MCAqIGN1LCB5ID0gdFsxXSAlIDM2MCAqIGN1LCBfID0gdC5sZW5ndGggPiAyID8gdFsyXSAlIDM2MCAqIGN1IDogMCwgRSgpKSA6IFtnICogdXUsIHkgKiB1dSwgXyAqIHV1XSB9LCBTLmFuZ2xlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYiA9IHQgJSAzNjAgKiBjdSwgRSgpKSA6IGIgKiB1dSB9LCBTLnJlZmxlY3RYID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobSA9IHQgPyAtMSA6IDEsIEUoKSkgOiBtIDwgMCB9LCBTLnJlZmxlY3RZID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeCA9IHQgPyAtMSA6IDEsIEUoKSkgOiB4IDwgMCB9LCBTLnByZWNpc2lvbiA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGEgPSAkcyh1LCBBID0gdCAqIHQpLCBDKCkpIDogYnUoQSkgfSwgUy5maXRFeHRlbnQgPSBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gSXMoUywgdCwgbikgfSwgUy5maXRTaXplID0gZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIEhzKFMsIHQsIG4pIH0sIFMuZml0V2lkdGggPSBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4ganMoUywgdCwgbikgfSwgUy5maXRIZWlnaHQgPSBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gWHMoUywgdCwgbikgfSwgZnVuY3Rpb24gKCkgeyByZXR1cm4gbiA9IHQuYXBwbHkodGhpcywgYXJndW1lbnRzKSwgUy5pbnZlcnQgPSBuLmludmVydCAmJiBrLCBFKCkgfSB9IGZ1bmN0aW9uIEpzKHQpIHsgdmFyIG4gPSAwLCBlID0gcnUgLyAzLCByID0gS3ModCksIGkgPSByKG4sIGUpOyByZXR1cm4gaS5wYXJhbGxlbHMgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IHIobiA9IHRbMF0gKiBjdSwgZSA9IHRbMV0gKiBjdSkgOiBbbiAqIHV1LCBlICogdXVdIH0sIGkgfSBmdW5jdGlvbiB0bCh0LCBuKSB7IHZhciBlID0geXUodCksIHIgPSAoZSArIHl1KG4pKSAvIDI7IGlmIChmdShyKSA8IG51KSByZXR1cm4gZnVuY3Rpb24gKHQpIHsgdmFyIG4gPSBodSh0KTsgZnVuY3Rpb24gZSh0LCBlKSB7IHJldHVybiBbdCAqIG4sIHl1KGUpIC8gbl0gfSByZXR1cm4gZS5pbnZlcnQgPSBmdW5jdGlvbiAodCwgZSkgeyByZXR1cm4gW3QgLyBuLCB3dShlICogbildIH0sIGUgfSh0KTsgdmFyIGkgPSAxICsgZSAqICgyICogciAtIGUpLCBvID0gYnUoaSkgLyByOyBmdW5jdGlvbiBhKHQsIG4pIHsgdmFyIGUgPSBidShpIC0gMiAqIHIgKiB5dShuKSkgLyByOyByZXR1cm4gW2UgKiB5dSh0ICo9IHIpLCBvIC0gZSAqIGh1KHQpXSB9IHJldHVybiBhLmludmVydCA9IGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlID0gbyAtIG4sIGEgPSBsdSh0LCBmdShlKSkgKiBfdShlKTsgcmV0dXJuIGUgKiByIDwgMCAmJiAoYSAtPSBydSAqIF91KHQpICogX3UoZSkpLCBbYSAvIHIsIHd1KChpIC0gKHQgKiB0ICsgZSAqIGUpICogciAqIHIpIC8gKDIgKiByKSldIH0sIGEgfSBmdW5jdGlvbiBubCgpIHsgcmV0dXJuIEpzKHRsKS5zY2FsZSgxNTUuNDI0KS5jZW50ZXIoWzAsIDMzLjY0NDJdKSB9IGZ1bmN0aW9uIGVsKCkgeyByZXR1cm4gbmwoKS5wYXJhbGxlbHMoWzI5LjUsIDQ1LjVdKS5zY2FsZSgxMDcwKS50cmFuc2xhdGUoWzQ4MCwgMjUwXSkucm90YXRlKFs5NiwgMF0pLmNlbnRlcihbLS42LCAzOC43XSkgfSBmdW5jdGlvbiBybCh0KSB7IHJldHVybiBmdW5jdGlvbiAobiwgZSkgeyB2YXIgciA9IGh1KG4pLCBpID0gaHUoZSksIG8gPSB0KHIgKiBpKTsgcmV0dXJuIFtvICogaSAqIHl1KG4pLCBvICogeXUoZSldIH0gfSBmdW5jdGlvbiBpbCh0KSB7IHJldHVybiBmdW5jdGlvbiAobiwgZSkgeyB2YXIgciA9IGJ1KG4gKiBuICsgZSAqIGUpLCBpID0gdChyKSwgbyA9IHl1KGkpLCBhID0gaHUoaSk7IHJldHVybiBbbHUobiAqIG8sIHIgKiBhKSwgd3UociAmJiBlICogbyAvIHIpXSB9IH0gdmFyIG9sID0gcmwoZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGJ1KDIgLyAoMSArIHQpKSB9KTsgb2wuaW52ZXJ0ID0gaWwoZnVuY3Rpb24gKHQpIHsgcmV0dXJuIDIgKiB3dSh0IC8gMikgfSk7IHZhciBhbCA9IHJsKGZ1bmN0aW9uICh0KSB7IHJldHVybiAodCA9IHh1KHQpKSAmJiB0IC8geXUodCkgfSk7IGZ1bmN0aW9uIHVsKHQsIG4pIHsgcmV0dXJuIFt0LCB2dShtdSgoaXUgKyBuKSAvIDIpKV0gfSBmdW5jdGlvbiBjbCh0KSB7IHZhciBuLCBlLCByLCBpID0gUXModCksIG8gPSBpLmNlbnRlciwgYSA9IGkuc2NhbGUsIHUgPSBpLnRyYW5zbGF0ZSwgYyA9IGkuY2xpcEV4dGVudCwgZiA9IG51bGw7IGZ1bmN0aW9uIHMoKSB7IHZhciBvID0gcnUgKiBhKCksIHUgPSBpKEtjKGkucm90YXRlKCkpLmludmVydChbMCwgMF0pKTsgcmV0dXJuIGMobnVsbCA9PSBmID8gW1t1WzBdIC0gbywgdVsxXSAtIG9dLCBbdVswXSArIG8sIHVbMV0gKyBvXV0gOiB0ID09PSB1bCA/IFtbTWF0aC5tYXgodVswXSAtIG8sIGYpLCBuXSwgW01hdGgubWluKHVbMF0gKyBvLCBlKSwgcl1dIDogW1tmLCBNYXRoLm1heCh1WzFdIC0gbywgbildLCBbZSwgTWF0aC5taW4odVsxXSArIG8sIHIpXV0pIH0gcmV0dXJuIGkuc2NhbGUgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChhKHQpLCBzKCkpIDogYSgpIH0sIGkudHJhbnNsYXRlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodSh0KSwgcygpKSA6IHUoKSB9LCBpLmNlbnRlciA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG8odCksIHMoKSkgOiBvKCkgfSwgaS5jbGlwRXh0ZW50ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobnVsbCA9PSB0ID8gZiA9IG4gPSBlID0gciA9IG51bGwgOiAoZiA9ICt0WzBdWzBdLCBuID0gK3RbMF1bMV0sIGUgPSArdFsxXVswXSwgciA9ICt0WzFdWzFdKSwgcygpKSA6IG51bGwgPT0gZiA/IG51bGwgOiBbW2YsIG5dLCBbZSwgcl1dIH0sIHMoKSB9IGZ1bmN0aW9uIGZsKHQpIHsgcmV0dXJuIG11KChpdSArIHQpIC8gMikgfSBmdW5jdGlvbiBzbCh0LCBuKSB7IHZhciBlID0gaHUodCksIHIgPSB0ID09PSBuID8geXUodCkgOiB2dShlIC8gaHUobikpIC8gdnUoZmwobikgLyBmbCh0KSksIGkgPSBlICogZ3UoZmwodCksIHIpIC8gcjsgaWYgKCFyKSByZXR1cm4gdWw7IGZ1bmN0aW9uIG8odCwgbikgeyBpID4gMCA/IG4gPCAtaXUgKyBudSAmJiAobiA9IC1pdSArIG51KSA6IG4gPiBpdSAtIG51ICYmIChuID0gaXUgLSBudSk7IHZhciBlID0gaSAvIGd1KGZsKG4pLCByKTsgcmV0dXJuIFtlICogeXUociAqIHQpLCBpIC0gZSAqIGh1KHIgKiB0KV0gfSByZXR1cm4gby5pbnZlcnQgPSBmdW5jdGlvbiAodCwgbikgeyB2YXIgZSA9IGkgLSBuLCBvID0gX3UocikgKiBidSh0ICogdCArIGUgKiBlKSwgYSA9IGx1KHQsIGZ1KGUpKSAqIF91KGUpOyByZXR1cm4gZSAqIHIgPCAwICYmIChhIC09IHJ1ICogX3UodCkgKiBfdShlKSksIFthIC8gciwgMiAqIHN1KGd1KGkgLyBvLCAxIC8gcikpIC0gaXVdIH0sIG8gfSBmdW5jdGlvbiBsbCh0LCBuKSB7IHJldHVybiBbdCwgbl0gfSBmdW5jdGlvbiBobCh0LCBuKSB7IHZhciBlID0gaHUodCksIHIgPSB0ID09PSBuID8geXUodCkgOiAoZSAtIGh1KG4pKSAvIChuIC0gdCksIGkgPSBlIC8gciArIHQ7IGlmIChmdShyKSA8IG51KSByZXR1cm4gbGw7IGZ1bmN0aW9uIG8odCwgbikgeyB2YXIgZSA9IGkgLSBuLCBvID0gciAqIHQ7IHJldHVybiBbZSAqIHl1KG8pLCBpIC0gZSAqIGh1KG8pXSB9IHJldHVybiBvLmludmVydCA9IGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlID0gaSAtIG4sIG8gPSBsdSh0LCBmdShlKSkgKiBfdShlKTsgcmV0dXJuIGUgKiByIDwgMCAmJiAobyAtPSBydSAqIF91KHQpICogX3UoZSkpLCBbbyAvIHIsIGkgLSBfdShyKSAqIGJ1KHQgKiB0ICsgZSAqIGUpXSB9LCBvIH0gYWwuaW52ZXJ0ID0gaWwoZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQgfSksIHVsLmludmVydCA9IGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiBbdCwgMiAqIHN1KHB1KG4pKSAtIGl1XSB9LCBsbC5pbnZlcnQgPSBsbDsgdmFyIGRsID0gMS4zNDAyNjQsIHBsID0gLS4wODExMDYsIHZsID0gODkzZS02LCBnbCA9IC4wMDM3OTYsIHlsID0gYnUoMykgLyAyOyBmdW5jdGlvbiBfbCh0LCBuKSB7IHZhciBlID0gd3UoeWwgKiB5dShuKSksIHIgPSBlICogZSwgaSA9IHIgKiByICogcjsgcmV0dXJuIFt0ICogaHUoZSkgLyAoeWwgKiAoZGwgKyAzICogcGwgKiByICsgaSAqICg3ICogdmwgKyA5ICogZ2wgKiByKSkpLCBlICogKGRsICsgcGwgKiByICsgaSAqICh2bCArIGdsICogcikpXSB9IGZ1bmN0aW9uIGJsKHQsIG4pIHsgdmFyIGUgPSBodShuKSwgciA9IGh1KHQpICogZTsgcmV0dXJuIFtlICogeXUodCkgLyByLCB5dShuKSAvIHJdIH0gZnVuY3Rpb24gbWwodCwgbikgeyB2YXIgZSA9IG4gKiBuLCByID0gZSAqIGU7IHJldHVybiBbdCAqICguODcwNyAtIC4xMzE5NzkgKiBlICsgciAqIChyICogKC4wMDM5NzEgKiBlIC0gLjAwMTUyOSAqIHIpIC0gLjAxMzc5MSkpLCBuICogKDEuMDA3MjI2ICsgZSAqICguMDE1MDg1ICsgciAqICguMDI4ODc0ICogZSAtIC4wNDQ0NzUgLSAuMDA1OTE2ICogcikpKV0gfSBmdW5jdGlvbiB4bCh0LCBuKSB7IHJldHVybiBbaHUobikgKiB5dSh0KSwgeXUobildIH0gZnVuY3Rpb24gd2wodCwgbikgeyB2YXIgZSA9IGh1KG4pLCByID0gMSArIGh1KHQpICogZTsgcmV0dXJuIFtlICogeXUodCkgLyByLCB5dShuKSAvIHJdIH0gZnVuY3Rpb24gTWwodCwgbikgeyByZXR1cm4gW3Z1KG11KChpdSArIG4pIC8gMikpLCAtdF0gfSBmdW5jdGlvbiBObCh0LCBuKSB7IHJldHVybiB0LnBhcmVudCA9PT0gbi5wYXJlbnQgPyAxIDogMiB9IGZ1bmN0aW9uIFRsKHQsIG4pIHsgcmV0dXJuIHQgKyBuLnggfSBmdW5jdGlvbiBBbCh0LCBuKSB7IHJldHVybiBNYXRoLm1heCh0LCBuLnkpIH0gZnVuY3Rpb24gU2wodCkgeyB2YXIgbiA9IDAsIGUgPSB0LmNoaWxkcmVuLCByID0gZSAmJiBlLmxlbmd0aDsgaWYgKHIpIGZvciAoOyAtLXIgPj0gMDspbiArPSBlW3JdLnZhbHVlOyBlbHNlIG4gPSAxOyB0LnZhbHVlID0gbiB9IGZ1bmN0aW9uIGtsKHQsIG4pIHsgdmFyIGUsIHIsIGksIG8sIGEsIHUgPSBuZXcgemwodCksIGMgPSArdC52YWx1ZSAmJiAodS52YWx1ZSA9IHQudmFsdWUpLCBmID0gW3VdOyBmb3IgKG51bGwgPT0gbiAmJiAobiA9IEVsKTsgZSA9IGYucG9wKCk7KWlmIChjICYmIChlLnZhbHVlID0gK2UuZGF0YS52YWx1ZSksIChpID0gbihlLmRhdGEpKSAmJiAoYSA9IGkubGVuZ3RoKSkgZm9yIChlLmNoaWxkcmVuID0gbmV3IEFycmF5KGEpLCBvID0gYSAtIDE7IG8gPj0gMDsgLS1vKWYucHVzaChyID0gZS5jaGlsZHJlbltvXSA9IG5ldyB6bChpW29dKSksIHIucGFyZW50ID0gZSwgci5kZXB0aCA9IGUuZGVwdGggKyAxOyByZXR1cm4gdS5lYWNoQmVmb3JlKFBsKSB9IGZ1bmN0aW9uIEVsKHQpIHsgcmV0dXJuIHQuY2hpbGRyZW4gfSBmdW5jdGlvbiBDbCh0KSB7IHQuZGF0YSA9IHQuZGF0YS5kYXRhIH0gZnVuY3Rpb24gUGwodCkgeyB2YXIgbiA9IDA7IGRvIHsgdC5oZWlnaHQgPSBuIH0gd2hpbGUgKCh0ID0gdC5wYXJlbnQpICYmIHQuaGVpZ2h0IDwgKytuKSB9IGZ1bmN0aW9uIHpsKHQpIHsgdGhpcy5kYXRhID0gdCwgdGhpcy5kZXB0aCA9IHRoaXMuaGVpZ2h0ID0gMCwgdGhpcy5wYXJlbnQgPSBudWxsIH0gX2wuaW52ZXJ0ID0gZnVuY3Rpb24gKHQsIG4pIHsgZm9yICh2YXIgZSwgciA9IG4sIGkgPSByICogciwgbyA9IGkgKiBpICogaSwgYSA9IDA7IGEgPCAxMiAmJiAobyA9IChpID0gKHIgLT0gZSA9IChyICogKGRsICsgcGwgKiBpICsgbyAqICh2bCArIGdsICogaSkpIC0gbikgLyAoZGwgKyAzICogcGwgKiBpICsgbyAqICg3ICogdmwgKyA5ICogZ2wgKiBpKSkpICogcikgKiBpICogaSwgIShmdShlKSA8IGV1KSk7ICsrYSk7IHJldHVybiBbeWwgKiB0ICogKGRsICsgMyAqIHBsICogaSArIG8gKiAoNyAqIHZsICsgOSAqIGdsICogaSkpIC8gaHUociksIHd1KHl1KHIpIC8geWwpXSB9LCBibC5pbnZlcnQgPSBpbChzdSksIG1sLmludmVydCA9IGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlLCByID0gbiwgaSA9IDI1OyBkbyB7IHZhciBvID0gciAqIHIsIGEgPSBvICogbzsgciAtPSBlID0gKHIgKiAoMS4wMDcyMjYgKyBvICogKC4wMTUwODUgKyBhICogKC4wMjg4NzQgKiBvIC0gLjA0NDQ3NSAtIC4wMDU5MTYgKiBhKSkpIC0gbikgLyAoMS4wMDcyMjYgKyBvICogKC4wNDUyNTUgKyBhICogKC4yNTk4NjYgKiBvIC0gLjMxMTMyNSAtIC4wMDU5MTYgKiAxMSAqIGEpKSkgfSB3aGlsZSAoZnUoZSkgPiBudSAmJiAtLWkgPiAwKTsgcmV0dXJuIFt0IC8gKC44NzA3ICsgKG8gPSByICogcikgKiAobyAqIChvICogbyAqIG8gKiAoLjAwMzk3MSAtIC4wMDE1MjkgKiBvKSAtIC4wMTM3OTEpIC0gLjEzMTk3OSkpLCByXSB9LCB4bC5pbnZlcnQgPSBpbCh3dSksIHdsLmludmVydCA9IGlsKGZ1bmN0aW9uICh0KSB7IHJldHVybiAyICogc3UodCkgfSksIE1sLmludmVydCA9IGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiBbLW4sIDIgKiBzdShwdSh0KSkgLSBpdV0gfSwgemwucHJvdG90eXBlID0ga2wucHJvdG90eXBlID0geyBjb25zdHJ1Y3RvcjogemwsIGNvdW50OiBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzLmVhY2hBZnRlcihTbCkgfSwgZWFjaDogZnVuY3Rpb24gKHQpIHsgdmFyIG4sIGUsIHIsIGksIG8gPSB0aGlzLCBhID0gW29dOyBkbyB7IGZvciAobiA9IGEucmV2ZXJzZSgpLCBhID0gW107IG8gPSBuLnBvcCgpOylpZiAodChvKSwgZSA9IG8uY2hpbGRyZW4pIGZvciAociA9IDAsIGkgPSBlLmxlbmd0aDsgciA8IGk7ICsrcilhLnB1c2goZVtyXSkgfSB3aGlsZSAoYS5sZW5ndGgpOyByZXR1cm4gdGhpcyB9LCBlYWNoQWZ0ZXI6IGZ1bmN0aW9uICh0KSB7IGZvciAodmFyIG4sIGUsIHIsIGkgPSB0aGlzLCBvID0gW2ldLCBhID0gW107IGkgPSBvLnBvcCgpOylpZiAoYS5wdXNoKGkpLCBuID0gaS5jaGlsZHJlbikgZm9yIChlID0gMCwgciA9IG4ubGVuZ3RoOyBlIDwgcjsgKytlKW8ucHVzaChuW2VdKTsgZm9yICg7IGkgPSBhLnBvcCgpOyl0KGkpOyByZXR1cm4gdGhpcyB9LCBlYWNoQmVmb3JlOiBmdW5jdGlvbiAodCkgeyBmb3IgKHZhciBuLCBlLCByID0gdGhpcywgaSA9IFtyXTsgciA9IGkucG9wKCk7KWlmICh0KHIpLCBuID0gci5jaGlsZHJlbikgZm9yIChlID0gbi5sZW5ndGggLSAxOyBlID49IDA7IC0tZSlpLnB1c2gobltlXSk7IHJldHVybiB0aGlzIH0sIHN1bTogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHRoaXMuZWFjaEFmdGVyKGZ1bmN0aW9uIChuKSB7IGZvciAodmFyIGUgPSArdChuLmRhdGEpIHx8IDAsIHIgPSBuLmNoaWxkcmVuLCBpID0gciAmJiByLmxlbmd0aDsgLS1pID49IDA7KWUgKz0gcltpXS52YWx1ZTsgbi52YWx1ZSA9IGUgfSkgfSwgc29ydDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHRoaXMuZWFjaEJlZm9yZShmdW5jdGlvbiAobikgeyBuLmNoaWxkcmVuICYmIG4uY2hpbGRyZW4uc29ydCh0KSB9KSB9LCBwYXRoOiBmdW5jdGlvbiAodCkgeyBmb3IgKHZhciBuID0gdGhpcywgZSA9IGZ1bmN0aW9uICh0LCBuKSB7IGlmICh0ID09PSBuKSByZXR1cm4gdDsgdmFyIGUgPSB0LmFuY2VzdG9ycygpLCByID0gbi5hbmNlc3RvcnMoKSwgaSA9IG51bGw7IGZvciAodCA9IGUucG9wKCksIG4gPSByLnBvcCgpOyB0ID09PSBuOylpID0gdCwgdCA9IGUucG9wKCksIG4gPSByLnBvcCgpOyByZXR1cm4gaSB9KG4sIHQpLCByID0gW25dOyBuICE9PSBlOyluID0gbi5wYXJlbnQsIHIucHVzaChuKTsgZm9yICh2YXIgaSA9IHIubGVuZ3RoOyB0ICE9PSBlOylyLnNwbGljZShpLCAwLCB0KSwgdCA9IHQucGFyZW50OyByZXR1cm4gciB9LCBhbmNlc3RvcnM6IGZ1bmN0aW9uICgpIHsgZm9yICh2YXIgdCA9IHRoaXMsIG4gPSBbdF07IHQgPSB0LnBhcmVudDspbi5wdXNoKHQpOyByZXR1cm4gbiB9LCBkZXNjZW5kYW50czogZnVuY3Rpb24gKCkgeyB2YXIgdCA9IFtdOyByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uIChuKSB7IHQucHVzaChuKSB9KSwgdCB9LCBsZWF2ZXM6IGZ1bmN0aW9uICgpIHsgdmFyIHQgPSBbXTsgcmV0dXJuIHRoaXMuZWFjaEJlZm9yZShmdW5jdGlvbiAobikgeyBuLmNoaWxkcmVuIHx8IHQucHVzaChuKSB9KSwgdCB9LCBsaW5rczogZnVuY3Rpb24gKCkgeyB2YXIgdCA9IHRoaXMsIG4gPSBbXTsgcmV0dXJuIHQuZWFjaChmdW5jdGlvbiAoZSkgeyBlICE9PSB0ICYmIG4ucHVzaCh7IHNvdXJjZTogZS5wYXJlbnQsIHRhcmdldDogZSB9KSB9KSwgbiB9LCBjb3B5OiBmdW5jdGlvbiAoKSB7IHJldHVybiBrbCh0aGlzKS5lYWNoQmVmb3JlKENsKSB9IH07IHZhciBSbCA9IEFycmF5LnByb3RvdHlwZS5zbGljZTsgZnVuY3Rpb24gRGwodCkgeyBmb3IgKHZhciBuLCBlLCByID0gMCwgaSA9ICh0ID0gZnVuY3Rpb24gKHQpIHsgZm9yICh2YXIgbiwgZSwgciA9IHQubGVuZ3RoOyByOyllID0gTWF0aC5yYW5kb20oKSAqIHItLSB8IDAsIG4gPSB0W3JdLCB0W3JdID0gdFtlXSwgdFtlXSA9IG47IHJldHVybiB0IH0oUmwuY2FsbCh0KSkpLmxlbmd0aCwgbyA9IFtdOyByIDwgaTspbiA9IHRbcl0sIGUgJiYgVWwoZSwgbikgPyArK3IgOiAoZSA9IEJsKG8gPSBxbChvLCBuKSksIHIgPSAwKTsgcmV0dXJuIGUgfSBmdW5jdGlvbiBxbCh0LCBuKSB7IHZhciBlLCByOyBpZiAoT2wobiwgdCkpIHJldHVybiBbbl07IGZvciAoZSA9IDA7IGUgPCB0Lmxlbmd0aDsgKytlKWlmIChMbChuLCB0W2VdKSAmJiBPbChGbCh0W2VdLCBuKSwgdCkpIHJldHVybiBbdFtlXSwgbl07IGZvciAoZSA9IDA7IGUgPCB0Lmxlbmd0aCAtIDE7ICsrZSlmb3IgKHIgPSBlICsgMTsgciA8IHQubGVuZ3RoOyArK3IpaWYgKExsKEZsKHRbZV0sIHRbcl0pLCBuKSAmJiBMbChGbCh0W2VdLCBuKSwgdFtyXSkgJiYgTGwoRmwodFtyXSwgbiksIHRbZV0pICYmIE9sKFlsKHRbZV0sIHRbcl0sIG4pLCB0KSkgcmV0dXJuIFt0W2VdLCB0W3JdLCBuXTsgdGhyb3cgbmV3IEVycm9yIH0gZnVuY3Rpb24gTGwodCwgbikgeyB2YXIgZSA9IHQuciAtIG4uciwgciA9IG4ueCAtIHQueCwgaSA9IG4ueSAtIHQueTsgcmV0dXJuIGUgPCAwIHx8IGUgKiBlIDwgciAqIHIgKyBpICogaSB9IGZ1bmN0aW9uIFVsKHQsIG4pIHsgdmFyIGUgPSB0LnIgLSBuLnIgKyAxZS02LCByID0gbi54IC0gdC54LCBpID0gbi55IC0gdC55OyByZXR1cm4gZSA+IDAgJiYgZSAqIGUgPiByICogciArIGkgKiBpIH0gZnVuY3Rpb24gT2wodCwgbikgeyBmb3IgKHZhciBlID0gMDsgZSA8IG4ubGVuZ3RoOyArK2UpaWYgKCFVbCh0LCBuW2VdKSkgcmV0dXJuICExOyByZXR1cm4gITAgfSBmdW5jdGlvbiBCbCh0KSB7IHN3aXRjaCAodC5sZW5ndGgpIHsgY2FzZSAxOiByZXR1cm4gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHsgeDogdC54LCB5OiB0LnksIHI6IHQuciB9IH0odFswXSk7IGNhc2UgMjogcmV0dXJuIEZsKHRbMF0sIHRbMV0pOyBjYXNlIDM6IHJldHVybiBZbCh0WzBdLCB0WzFdLCB0WzJdKSB9IH0gZnVuY3Rpb24gRmwodCwgbikgeyB2YXIgZSA9IHQueCwgciA9IHQueSwgaSA9IHQuciwgbyA9IG4ueCwgYSA9IG4ueSwgdSA9IG4uciwgYyA9IG8gLSBlLCBmID0gYSAtIHIsIHMgPSB1IC0gaSwgbCA9IE1hdGguc3FydChjICogYyArIGYgKiBmKTsgcmV0dXJuIHsgeDogKGUgKyBvICsgYyAvIGwgKiBzKSAvIDIsIHk6IChyICsgYSArIGYgLyBsICogcykgLyAyLCByOiAobCArIGkgKyB1KSAvIDIgfSB9IGZ1bmN0aW9uIFlsKHQsIG4sIGUpIHsgdmFyIHIgPSB0LngsIGkgPSB0LnksIG8gPSB0LnIsIGEgPSBuLngsIHUgPSBuLnksIGMgPSBuLnIsIGYgPSBlLngsIHMgPSBlLnksIGwgPSBlLnIsIGggPSByIC0gYSwgZCA9IHIgLSBmLCBwID0gaSAtIHUsIHYgPSBpIC0gcywgZyA9IGMgLSBvLCB5ID0gbCAtIG8sIF8gPSByICogciArIGkgKiBpIC0gbyAqIG8sIGIgPSBfIC0gYSAqIGEgLSB1ICogdSArIGMgKiBjLCBtID0gXyAtIGYgKiBmIC0gcyAqIHMgKyBsICogbCwgeCA9IGQgKiBwIC0gaCAqIHYsIHcgPSAocCAqIG0gLSB2ICogYikgLyAoMiAqIHgpIC0gciwgTSA9ICh2ICogZyAtIHAgKiB5KSAvIHgsIE4gPSAoZCAqIGIgLSBoICogbSkgLyAoMiAqIHgpIC0gaSwgVCA9IChoICogeSAtIGQgKiBnKSAvIHgsIEEgPSBNICogTSArIFQgKiBUIC0gMSwgUyA9IDIgKiAobyArIHcgKiBNICsgTiAqIFQpLCBrID0gdyAqIHcgKyBOICogTiAtIG8gKiBvLCBFID0gLShBID8gKFMgKyBNYXRoLnNxcnQoUyAqIFMgLSA0ICogQSAqIGspKSAvICgyICogQSkgOiBrIC8gUyk7IHJldHVybiB7IHg6IHIgKyB3ICsgTSAqIEUsIHk6IGkgKyBOICsgVCAqIEUsIHI6IEUgfSB9IGZ1bmN0aW9uIElsKHQsIG4sIGUpIHsgdmFyIHIsIGksIG8sIGEsIHUgPSB0LnggLSBuLngsIGMgPSB0LnkgLSBuLnksIGYgPSB1ICogdSArIGMgKiBjOyBmID8gKGkgPSBuLnIgKyBlLnIsIGkgKj0gaSwgYSA9IHQuciArIGUuciwgaSA+IChhICo9IGEpID8gKHIgPSAoZiArIGEgLSBpKSAvICgyICogZiksIG8gPSBNYXRoLnNxcnQoTWF0aC5tYXgoMCwgYSAvIGYgLSByICogcikpLCBlLnggPSB0LnggLSByICogdSAtIG8gKiBjLCBlLnkgPSB0LnkgLSByICogYyArIG8gKiB1KSA6IChyID0gKGYgKyBpIC0gYSkgLyAoMiAqIGYpLCBvID0gTWF0aC5zcXJ0KE1hdGgubWF4KDAsIGkgLyBmIC0gciAqIHIpKSwgZS54ID0gbi54ICsgciAqIHUgLSBvICogYywgZS55ID0gbi55ICsgciAqIGMgKyBvICogdSkpIDogKGUueCA9IG4ueCArIGUuciwgZS55ID0gbi55KSB9IGZ1bmN0aW9uIEhsKHQsIG4pIHsgdmFyIGUgPSB0LnIgKyBuLnIgLSAxZS02LCByID0gbi54IC0gdC54LCBpID0gbi55IC0gdC55OyByZXR1cm4gZSA+IDAgJiYgZSAqIGUgPiByICogciArIGkgKiBpIH0gZnVuY3Rpb24gamwodCkgeyB2YXIgbiA9IHQuXywgZSA9IHQubmV4dC5fLCByID0gbi5yICsgZS5yLCBpID0gKG4ueCAqIGUuciArIGUueCAqIG4ucikgLyByLCBvID0gKG4ueSAqIGUuciArIGUueSAqIG4ucikgLyByOyByZXR1cm4gaSAqIGkgKyBvICogbyB9IGZ1bmN0aW9uIFhsKHQpIHsgdGhpcy5fID0gdCwgdGhpcy5uZXh0ID0gbnVsbCwgdGhpcy5wcmV2aW91cyA9IG51bGwgfSBmdW5jdGlvbiBWbCh0KSB7IGlmICghKGkgPSB0Lmxlbmd0aCkpIHJldHVybiAwOyB2YXIgbiwgZSwgciwgaSwgbywgYSwgdSwgYywgZiwgcywgbDsgaWYgKChuID0gdFswXSkueCA9IDAsIG4ueSA9IDAsICEoaSA+IDEpKSByZXR1cm4gbi5yOyBpZiAoZSA9IHRbMV0sIG4ueCA9IC1lLnIsIGUueCA9IG4uciwgZS55ID0gMCwgIShpID4gMikpIHJldHVybiBuLnIgKyBlLnI7IElsKGUsIG4sIHIgPSB0WzJdKSwgbiA9IG5ldyBYbChuKSwgZSA9IG5ldyBYbChlKSwgciA9IG5ldyBYbChyKSwgbi5uZXh0ID0gci5wcmV2aW91cyA9IGUsIGUubmV4dCA9IG4ucHJldmlvdXMgPSByLCByLm5leHQgPSBlLnByZXZpb3VzID0gbjsgdDogZm9yICh1ID0gMzsgdSA8IGk7ICsrdSkgeyBJbChuLl8sIGUuXywgciA9IHRbdV0pLCByID0gbmV3IFhsKHIpLCBjID0gZS5uZXh0LCBmID0gbi5wcmV2aW91cywgcyA9IGUuXy5yLCBsID0gbi5fLnI7IGRvIHsgaWYgKHMgPD0gbCkgeyBpZiAoSGwoYy5fLCByLl8pKSB7IGUgPSBjLCBuLm5leHQgPSBlLCBlLnByZXZpb3VzID0gbiwgLS11OyBjb250aW51ZSB0IH0gcyArPSBjLl8uciwgYyA9IGMubmV4dCB9IGVsc2UgeyBpZiAoSGwoZi5fLCByLl8pKSB7IChuID0gZikubmV4dCA9IGUsIGUucHJldmlvdXMgPSBuLCAtLXU7IGNvbnRpbnVlIHQgfSBsICs9IGYuXy5yLCBmID0gZi5wcmV2aW91cyB9IH0gd2hpbGUgKGMgIT09IGYubmV4dCk7IGZvciAoci5wcmV2aW91cyA9IG4sIHIubmV4dCA9IGUsIG4ubmV4dCA9IGUucHJldmlvdXMgPSBlID0gciwgbyA9IGpsKG4pOyAociA9IHIubmV4dCkgIT09IGU7KShhID0gamwocikpIDwgbyAmJiAobiA9IHIsIG8gPSBhKTsgZSA9IG4ubmV4dCB9IGZvciAobiA9IFtlLl9dLCByID0gZTsgKHIgPSByLm5leHQpICE9PSBlOyluLnB1c2goci5fKTsgZm9yIChyID0gRGwobiksIHUgPSAwOyB1IDwgaTsgKyt1KShuID0gdFt1XSkueCAtPSByLngsIG4ueSAtPSByLnk7IHJldHVybiByLnIgfSBmdW5jdGlvbiBHbCh0KSB7IHJldHVybiBudWxsID09IHQgPyBudWxsIDogJGwodCkgfSBmdW5jdGlvbiAkbCh0KSB7IGlmICgiZnVuY3Rpb24iICE9IHR5cGVvZiB0KSB0aHJvdyBuZXcgRXJyb3I7IHJldHVybiB0IH0gZnVuY3Rpb24gV2woKSB7IHJldHVybiAwIH0gZnVuY3Rpb24gWmwodCkgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyByZXR1cm4gdCB9IH0gZnVuY3Rpb24gUWwodCkgeyByZXR1cm4gTWF0aC5zcXJ0KHQudmFsdWUpIH0gZnVuY3Rpb24gS2wodCkgeyByZXR1cm4gZnVuY3Rpb24gKG4pIHsgbi5jaGlsZHJlbiB8fCAobi5yID0gTWF0aC5tYXgoMCwgK3QobikgfHwgMCkpIH0gfSBmdW5jdGlvbiBKbCh0LCBuKSB7IHJldHVybiBmdW5jdGlvbiAoZSkgeyBpZiAociA9IGUuY2hpbGRyZW4pIHsgdmFyIHIsIGksIG8sIGEgPSByLmxlbmd0aCwgdSA9IHQoZSkgKiBuIHx8IDA7IGlmICh1KSBmb3IgKGkgPSAwOyBpIDwgYTsgKytpKXJbaV0uciArPSB1OyBpZiAobyA9IFZsKHIpLCB1KSBmb3IgKGkgPSAwOyBpIDwgYTsgKytpKXJbaV0uciAtPSB1OyBlLnIgPSBvICsgdSB9IH0gfSBmdW5jdGlvbiB0aCh0KSB7IHJldHVybiBmdW5jdGlvbiAobikgeyB2YXIgZSA9IG4ucGFyZW50OyBuLnIgKj0gdCwgZSAmJiAobi54ID0gZS54ICsgdCAqIG4ueCwgbi55ID0gZS55ICsgdCAqIG4ueSkgfSB9IGZ1bmN0aW9uIG5oKHQpIHsgdC54MCA9IE1hdGgucm91bmQodC54MCksIHQueTAgPSBNYXRoLnJvdW5kKHQueTApLCB0LngxID0gTWF0aC5yb3VuZCh0LngxKSwgdC55MSA9IE1hdGgucm91bmQodC55MSkgfSBmdW5jdGlvbiBlaCh0LCBuLCBlLCByLCBpKSB7IGZvciAodmFyIG8sIGEgPSB0LmNoaWxkcmVuLCB1ID0gLTEsIGMgPSBhLmxlbmd0aCwgZiA9IHQudmFsdWUgJiYgKHIgLSBuKSAvIHQudmFsdWU7ICsrdSA8IGM7KShvID0gYVt1XSkueTAgPSBlLCBvLnkxID0gaSwgby54MCA9IG4sIG8ueDEgPSBuICs9IG8udmFsdWUgKiBmIH0gdmFyIHJoID0gIiQiLCBpaCA9IHsgZGVwdGg6IC0xIH0sIG9oID0ge307IGZ1bmN0aW9uIGFoKHQpIHsgcmV0dXJuIHQuaWQgfSBmdW5jdGlvbiB1aCh0KSB7IHJldHVybiB0LnBhcmVudElkIH0gZnVuY3Rpb24gY2godCwgbikgeyByZXR1cm4gdC5wYXJlbnQgPT09IG4ucGFyZW50ID8gMSA6IDIgfSBmdW5jdGlvbiBmaCh0KSB7IHZhciBuID0gdC5jaGlsZHJlbjsgcmV0dXJuIG4gPyBuWzBdIDogdC50IH0gZnVuY3Rpb24gc2godCkgeyB2YXIgbiA9IHQuY2hpbGRyZW47IHJldHVybiBuID8gbltuLmxlbmd0aCAtIDFdIDogdC50IH0gZnVuY3Rpb24gbGgodCwgbiwgZSkgeyB2YXIgciA9IGUgLyAobi5pIC0gdC5pKTsgbi5jIC09IHIsIG4ucyArPSBlLCB0LmMgKz0gciwgbi56ICs9IGUsIG4ubSArPSBlIH0gZnVuY3Rpb24gaGgodCwgbiwgZSkgeyByZXR1cm4gdC5hLnBhcmVudCA9PT0gbi5wYXJlbnQgPyB0LmEgOiBlIH0gZnVuY3Rpb24gZGgodCwgbikgeyB0aGlzLl8gPSB0LCB0aGlzLnBhcmVudCA9IG51bGwsIHRoaXMuY2hpbGRyZW4gPSBudWxsLCB0aGlzLkEgPSBudWxsLCB0aGlzLmEgPSB0aGlzLCB0aGlzLnogPSAwLCB0aGlzLm0gPSAwLCB0aGlzLmMgPSAwLCB0aGlzLnMgPSAwLCB0aGlzLnQgPSBudWxsLCB0aGlzLmkgPSBuIH0gZnVuY3Rpb24gcGgodCwgbiwgZSwgciwgaSkgeyBmb3IgKHZhciBvLCBhID0gdC5jaGlsZHJlbiwgdSA9IC0xLCBjID0gYS5sZW5ndGgsIGYgPSB0LnZhbHVlICYmIChpIC0gZSkgLyB0LnZhbHVlOyArK3UgPCBjOykobyA9IGFbdV0pLngwID0gbiwgby54MSA9IHIsIG8ueTAgPSBlLCBvLnkxID0gZSArPSBvLnZhbHVlICogZiB9IGRoLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoemwucHJvdG90eXBlKTsgdmFyIHZoID0gKDEgKyBNYXRoLnNxcnQoNSkpIC8gMjsgZnVuY3Rpb24gZ2godCwgbiwgZSwgciwgaSwgbykgeyBmb3IgKHZhciBhLCB1LCBjLCBmLCBzLCBsLCBoLCBkLCBwLCB2LCBnLCB5ID0gW10sIF8gPSBuLmNoaWxkcmVuLCBiID0gMCwgbSA9IDAsIHggPSBfLmxlbmd0aCwgdyA9IG4udmFsdWU7IGIgPCB4OykgeyBjID0gaSAtIGUsIGYgPSBvIC0gcjsgZG8geyBzID0gX1ttKytdLnZhbHVlIH0gd2hpbGUgKCFzICYmIG0gPCB4KTsgZm9yIChsID0gaCA9IHMsIGcgPSBzICogcyAqICh2ID0gTWF0aC5tYXgoZiAvIGMsIGMgLyBmKSAvICh3ICogdCkpLCBwID0gTWF0aC5tYXgoaCAvIGcsIGcgLyBsKTsgbSA8IHg7ICsrbSkgeyBpZiAocyArPSB1ID0gX1ttXS52YWx1ZSwgdSA8IGwgJiYgKGwgPSB1KSwgdSA+IGggJiYgKGggPSB1KSwgZyA9IHMgKiBzICogdiwgKGQgPSBNYXRoLm1heChoIC8gZywgZyAvIGwpKSA+IHApIHsgcyAtPSB1OyBicmVhayB9IHAgPSBkIH0geS5wdXNoKGEgPSB7IHZhbHVlOiBzLCBkaWNlOiBjIDwgZiwgY2hpbGRyZW46IF8uc2xpY2UoYiwgbSkgfSksIGEuZGljZSA/IGVoKGEsIGUsIHIsIGksIHcgPyByICs9IGYgKiBzIC8gdyA6IG8pIDogcGgoYSwgZSwgciwgdyA/IGUgKz0gYyAqIHMgLyB3IDogaSwgbyksIHcgLT0gcywgYiA9IG0gfSByZXR1cm4geSB9IHZhciB5aCA9IGZ1bmN0aW9uIHQobikgeyBmdW5jdGlvbiBlKHQsIGUsIHIsIGksIG8pIHsgZ2gobiwgdCwgZSwgciwgaSwgbykgfSByZXR1cm4gZS5yYXRpbyA9IGZ1bmN0aW9uIChuKSB7IHJldHVybiB0KChuID0gK24pID4gMSA/IG4gOiAxKSB9LCBlIH0odmgpOyB2YXIgX2ggPSBmdW5jdGlvbiB0KG4pIHsgZnVuY3Rpb24gZSh0LCBlLCByLCBpLCBvKSB7IGlmICgoYSA9IHQuX3NxdWFyaWZ5KSAmJiBhLnJhdGlvID09PSBuKSBmb3IgKHZhciBhLCB1LCBjLCBmLCBzLCBsID0gLTEsIGggPSBhLmxlbmd0aCwgZCA9IHQudmFsdWU7ICsrbCA8IGg7KSB7IGZvciAoYyA9ICh1ID0gYVtsXSkuY2hpbGRyZW4sIGYgPSB1LnZhbHVlID0gMCwgcyA9IGMubGVuZ3RoOyBmIDwgczsgKytmKXUudmFsdWUgKz0gY1tmXS52YWx1ZTsgdS5kaWNlID8gZWgodSwgZSwgciwgaSwgciArPSAobyAtIHIpICogdS52YWx1ZSAvIGQpIDogcGgodSwgZSwgciwgZSArPSAoaSAtIGUpICogdS52YWx1ZSAvIGQsIG8pLCBkIC09IHUudmFsdWUgfSBlbHNlIHQuX3NxdWFyaWZ5ID0gYSA9IGdoKG4sIHQsIGUsIHIsIGksIG8pLCBhLnJhdGlvID0gbiB9IHJldHVybiBlLnJhdGlvID0gZnVuY3Rpb24gKG4pIHsgcmV0dXJuIHQoKG4gPSArbikgPiAxID8gbiA6IDEpIH0sIGUgfSh2aCk7IGZ1bmN0aW9uIGJoKHQsIG4sIGUpIHsgcmV0dXJuIChuWzBdIC0gdFswXSkgKiAoZVsxXSAtIHRbMV0pIC0gKG5bMV0gLSB0WzFdKSAqIChlWzBdIC0gdFswXSkgfSBmdW5jdGlvbiBtaCh0LCBuKSB7IHJldHVybiB0WzBdIC0gblswXSB8fCB0WzFdIC0gblsxXSB9IGZ1bmN0aW9uIHhoKHQpIHsgZm9yICh2YXIgbiA9IHQubGVuZ3RoLCBlID0gWzAsIDFdLCByID0gMiwgaSA9IDI7IGkgPCBuOyArK2kpIHsgZm9yICg7IHIgPiAxICYmIGJoKHRbZVtyIC0gMl1dLCB0W2VbciAtIDFdXSwgdFtpXSkgPD0gMDspLS1yOyBlW3IrK10gPSBpIH0gcmV0dXJuIGUuc2xpY2UoMCwgcikgfSBmdW5jdGlvbiB3aCgpIHsgcmV0dXJuIE1hdGgucmFuZG9tKCkgfSB2YXIgTWggPSBmdW5jdGlvbiB0KG4pIHsgZnVuY3Rpb24gZSh0LCBlKSB7IHJldHVybiB0ID0gbnVsbCA9PSB0ID8gMCA6ICt0LCBlID0gbnVsbCA9PSBlID8gMSA6ICtlLCAxID09PSBhcmd1bWVudHMubGVuZ3RoID8gKGUgPSB0LCB0ID0gMCkgOiBlIC09IHQsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIG4oKSAqIGUgKyB0IH0gfSByZXR1cm4gZS5zb3VyY2UgPSB0LCBlIH0od2gpLCBOaCA9IGZ1bmN0aW9uIHQobikgeyBmdW5jdGlvbiBlKHQsIGUpIHsgdmFyIHIsIGk7IHJldHVybiB0ID0gbnVsbCA9PSB0ID8gMCA6ICt0LCBlID0gbnVsbCA9PSBlID8gMSA6ICtlLCBmdW5jdGlvbiAoKSB7IHZhciBvOyBpZiAobnVsbCAhPSByKSBvID0gciwgciA9IG51bGw7IGVsc2UgZG8geyByID0gMiAqIG4oKSAtIDEsIG8gPSAyICogbigpIC0gMSwgaSA9IHIgKiByICsgbyAqIG8gfSB3aGlsZSAoIWkgfHwgaSA+IDEpOyByZXR1cm4gdCArIGUgKiBvICogTWF0aC5zcXJ0KC0yICogTWF0aC5sb2coaSkgLyBpKSB9IH0gcmV0dXJuIGUuc291cmNlID0gdCwgZSB9KHdoKSwgVGggPSBmdW5jdGlvbiB0KG4pIHsgZnVuY3Rpb24gZSgpIHsgdmFyIHQgPSBOaC5zb3VyY2UobikuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgcmV0dXJuIE1hdGguZXhwKHQoKSkgfSB9IHJldHVybiBlLnNvdXJjZSA9IHQsIGUgfSh3aCksIEFoID0gZnVuY3Rpb24gdChuKSB7IGZ1bmN0aW9uIGUodCkgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyBmb3IgKHZhciBlID0gMCwgciA9IDA7IHIgPCB0OyArK3IpZSArPSBuKCk7IHJldHVybiBlIH0gfSByZXR1cm4gZS5zb3VyY2UgPSB0LCBlIH0od2gpLCBTaCA9IGZ1bmN0aW9uIHQobikgeyBmdW5jdGlvbiBlKHQpIHsgdmFyIGUgPSBBaC5zb3VyY2UobikodCk7IHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiBlKCkgLyB0IH0gfSByZXR1cm4gZS5zb3VyY2UgPSB0LCBlIH0od2gpLCBraCA9IGZ1bmN0aW9uIHQobikgeyBmdW5jdGlvbiBlKHQpIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgcmV0dXJuIC1NYXRoLmxvZygxIC0gbigpKSAvIHQgfSB9IHJldHVybiBlLnNvdXJjZSA9IHQsIGUgfSh3aCk7IGZ1bmN0aW9uIEVoKHQsIG4pIHsgc3dpdGNoIChhcmd1bWVudHMubGVuZ3RoKSB7IGNhc2UgMDogYnJlYWs7IGNhc2UgMTogdGhpcy5yYW5nZSh0KTsgYnJlYWs7IGRlZmF1bHQ6IHRoaXMucmFuZ2UobikuZG9tYWluKHQpIH1yZXR1cm4gdGhpcyB9IGZ1bmN0aW9uIENoKHQsIG4pIHsgc3dpdGNoIChhcmd1bWVudHMubGVuZ3RoKSB7IGNhc2UgMDogYnJlYWs7IGNhc2UgMTogdGhpcy5pbnRlcnBvbGF0b3IodCk7IGJyZWFrOyBkZWZhdWx0OiB0aGlzLmludGVycG9sYXRvcihuKS5kb21haW4odCkgfXJldHVybiB0aGlzIH0gdmFyIFBoID0gQXJyYXkucHJvdG90eXBlLCB6aCA9IFBoLm1hcCwgUmggPSBQaC5zbGljZSwgRGggPSB7IG5hbWU6ICJpbXBsaWNpdCIgfTsgZnVuY3Rpb24gcWgoKSB7IHZhciB0ID0gY28oKSwgbiA9IFtdLCBlID0gW10sIHIgPSBEaDsgZnVuY3Rpb24gaShpKSB7IHZhciBvID0gaSArICIiLCBhID0gdC5nZXQobyk7IGlmICghYSkgeyBpZiAociAhPT0gRGgpIHJldHVybiByOyB0LnNldChvLCBhID0gbi5wdXNoKGkpKSB9IHJldHVybiBlWyhhIC0gMSkgJSBlLmxlbmd0aF0gfSByZXR1cm4gaS5kb21haW4gPSBmdW5jdGlvbiAoZSkgeyBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBuLnNsaWNlKCk7IG4gPSBbXSwgdCA9IGNvKCk7IGZvciAodmFyIHIsIG8sIGEgPSAtMSwgdSA9IGUubGVuZ3RoOyArK2EgPCB1Oyl0LmhhcyhvID0gKHIgPSBlW2FdKSArICIiKSB8fCB0LnNldChvLCBuLnB1c2gocikpOyByZXR1cm4gaSB9LCBpLnJhbmdlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZSA9IFJoLmNhbGwodCksIGkpIDogZS5zbGljZSgpIH0sIGkudW5rbm93biA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHIgPSB0LCBpKSA6IHIgfSwgaS5jb3B5ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gcWgobiwgZSkudW5rbm93bihyKSB9LCBFaC5hcHBseShpLCBhcmd1bWVudHMpLCBpIH0gZnVuY3Rpb24gTGgoKSB7IHZhciB0LCBuLCBlID0gcWgoKS51bmtub3duKHZvaWQgMCksIHIgPSBlLmRvbWFpbiwgaSA9IGUucmFuZ2UsIG8gPSBbMCwgMV0sIGEgPSAhMSwgdSA9IDAsIGMgPSAwLCBmID0gLjU7IGZ1bmN0aW9uIHMoKSB7IHZhciBlID0gcigpLmxlbmd0aCwgcyA9IG9bMV0gPCBvWzBdLCBsID0gb1tzIC0gMF0sIGggPSBvWzEgLSBzXTsgdCA9IChoIC0gbCkgLyBNYXRoLm1heCgxLCBlIC0gdSArIDIgKiBjKSwgYSAmJiAodCA9IE1hdGguZmxvb3IodCkpLCBsICs9IChoIC0gbCAtIHQgKiAoZSAtIHUpKSAqIGYsIG4gPSB0ICogKDEgLSB1KSwgYSAmJiAobCA9IE1hdGgucm91bmQobCksIG4gPSBNYXRoLnJvdW5kKG4pKTsgdmFyIGQgPSBnKGUpLm1hcChmdW5jdGlvbiAobikgeyByZXR1cm4gbCArIHQgKiBuIH0pOyByZXR1cm4gaShzID8gZC5yZXZlcnNlKCkgOiBkKSB9IHJldHVybiBkZWxldGUgZS51bmtub3duLCBlLmRvbWFpbiA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHIodCksIHMoKSkgOiByKCkgfSwgZS5yYW5nZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG8gPSBbK3RbMF0sICt0WzFdXSwgcygpKSA6IG8uc2xpY2UoKSB9LCBlLnJhbmdlUm91bmQgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gbyA9IFsrdFswXSwgK3RbMV1dLCBhID0gITAsIHMoKSB9LCBlLmJhbmR3aWR0aCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG4gfSwgZS5zdGVwID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdCB9LCBlLnJvdW5kID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYSA9ICEhdCwgcygpKSA6IGEgfSwgZS5wYWRkaW5nID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodSA9IE1hdGgubWluKDEsIGMgPSArdCksIHMoKSkgOiB1IH0sIGUucGFkZGluZ0lubmVyID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodSA9IE1hdGgubWluKDEsIHQpLCBzKCkpIDogdSB9LCBlLnBhZGRpbmdPdXRlciA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGMgPSArdCwgcygpKSA6IGMgfSwgZS5hbGlnbiA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGYgPSBNYXRoLm1heCgwLCBNYXRoLm1pbigxLCB0KSksIHMoKSkgOiBmIH0sIGUuY29weSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIExoKHIoKSwgbykucm91bmQoYSkucGFkZGluZ0lubmVyKHUpLnBhZGRpbmdPdXRlcihjKS5hbGlnbihmKSB9LCBFaC5hcHBseShzKCksIGFyZ3VtZW50cykgfSBmdW5jdGlvbiBVaCh0KSB7IHJldHVybiArdCB9IHZhciBPaCA9IFswLCAxXTsgZnVuY3Rpb24gQmgodCkgeyByZXR1cm4gdCB9IGZ1bmN0aW9uIEZoKHQsIG4pIHsgcmV0dXJuIChuIC09IHQgPSArdCkgPyBmdW5jdGlvbiAoZSkgeyByZXR1cm4gKGUgLSB0KSAvIG4gfSA6IGZ1bmN0aW9uICh0KSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiB0IH0gfShpc05hTihuKSA/IE5hTiA6IC41KSB9IGZ1bmN0aW9uIFloKHQpIHsgdmFyIG4sIGUgPSB0WzBdLCByID0gdFt0Lmxlbmd0aCAtIDFdOyByZXR1cm4gZSA+IHIgJiYgKG4gPSBlLCBlID0gciwgciA9IG4pLCBmdW5jdGlvbiAodCkgeyByZXR1cm4gTWF0aC5tYXgoZSwgTWF0aC5taW4ociwgdCkpIH0gfSBmdW5jdGlvbiBJaCh0LCBuLCBlKSB7IHZhciByID0gdFswXSwgaSA9IHRbMV0sIG8gPSBuWzBdLCBhID0gblsxXTsgcmV0dXJuIGkgPCByID8gKHIgPSBGaChpLCByKSwgbyA9IGUoYSwgbykpIDogKHIgPSBGaChyLCBpKSwgbyA9IGUobywgYSkpLCBmdW5jdGlvbiAodCkgeyByZXR1cm4gbyhyKHQpKSB9IH0gZnVuY3Rpb24gSGgodCwgbiwgZSkgeyB2YXIgciA9IE1hdGgubWluKHQubGVuZ3RoLCBuLmxlbmd0aCkgLSAxLCBvID0gbmV3IEFycmF5KHIpLCBhID0gbmV3IEFycmF5KHIpLCB1ID0gLTE7IGZvciAodFtyXSA8IHRbMF0gJiYgKHQgPSB0LnNsaWNlKCkucmV2ZXJzZSgpLCBuID0gbi5zbGljZSgpLnJldmVyc2UoKSk7ICsrdSA8IHI7KW9bdV0gPSBGaCh0W3VdLCB0W3UgKyAxXSksIGFbdV0gPSBlKG5bdV0sIG5bdSArIDFdKTsgcmV0dXJuIGZ1bmN0aW9uIChuKSB7IHZhciBlID0gaSh0LCBuLCAxLCByKSAtIDE7IHJldHVybiBhW2VdKG9bZV0obikpIH0gfSBmdW5jdGlvbiBqaCh0LCBuKSB7IHJldHVybiBuLmRvbWFpbih0LmRvbWFpbigpKS5yYW5nZSh0LnJhbmdlKCkpLmludGVycG9sYXRlKHQuaW50ZXJwb2xhdGUoKSkuY2xhbXAodC5jbGFtcCgpKS51bmtub3duKHQudW5rbm93bigpKSB9IGZ1bmN0aW9uIFhoKCkgeyB2YXIgdCwgbiwgZSwgciwgaSwgbywgYSA9IE9oLCB1ID0gT2gsIGMgPSBUZSwgZiA9IEJoOyBmdW5jdGlvbiBzKCkgeyByZXR1cm4gciA9IE1hdGgubWluKGEubGVuZ3RoLCB1Lmxlbmd0aCkgPiAyID8gSGggOiBJaCwgaSA9IG8gPSBudWxsLCBsIH0gZnVuY3Rpb24gbChuKSB7IHJldHVybiBpc05hTihuID0gK24pID8gZSA6IChpIHx8IChpID0gcihhLm1hcCh0KSwgdSwgYykpKSh0KGYobikpKSB9IHJldHVybiBsLmludmVydCA9IGZ1bmN0aW9uIChlKSB7IHJldHVybiBmKG4oKG8gfHwgKG8gPSByKHUsIGEubWFwKHQpLCBtZSkpKShlKSkpIH0sIGwuZG9tYWluID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYSA9IHpoLmNhbGwodCwgVWgpLCBmID09PSBCaCB8fCAoZiA9IFloKGEpKSwgcygpKSA6IGEuc2xpY2UoKSB9LCBsLnJhbmdlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodSA9IFJoLmNhbGwodCksIHMoKSkgOiB1LnNsaWNlKCkgfSwgbC5yYW5nZVJvdW5kID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHUgPSBSaC5jYWxsKHQpLCBjID0gQWUsIHMoKSB9LCBsLmNsYW1wID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZiA9IHQgPyBZaChhKSA6IEJoLCBsKSA6IGYgIT09IEJoIH0sIGwuaW50ZXJwb2xhdGUgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChjID0gdCwgcygpKSA6IGMgfSwgbC51bmtub3duID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZSA9IHQsIGwpIDogZSB9LCBmdW5jdGlvbiAoZSwgcikgeyByZXR1cm4gdCA9IGUsIG4gPSByLCBzKCkgfSB9IGZ1bmN0aW9uIFZoKHQsIG4pIHsgcmV0dXJuIFhoKCkodCwgbikgfSBmdW5jdGlvbiBHaChuLCBlLCByLCBpKSB7IHZhciBvLCBhID0gdyhuLCBlLCByKTsgc3dpdGNoICgoaSA9IE9hKG51bGwgPT0gaSA/ICIsZiIgOiBpKSkudHlwZSkgeyBjYXNlICJzIjogdmFyIHUgPSBNYXRoLm1heChNYXRoLmFicyhuKSwgTWF0aC5hYnMoZSkpOyByZXR1cm4gbnVsbCAhPSBpLnByZWNpc2lvbiB8fCBpc05hTihvID0gV2EoYSwgdSkpIHx8IChpLnByZWNpc2lvbiA9IG8pLCB0LmZvcm1hdFByZWZpeChpLCB1KTsgY2FzZSAiIjogY2FzZSAiZSI6IGNhc2UgImciOiBjYXNlICJwIjogY2FzZSAiciI6IG51bGwgIT0gaS5wcmVjaXNpb24gfHwgaXNOYU4obyA9IFphKGEsIE1hdGgubWF4KE1hdGguYWJzKG4pLCBNYXRoLmFicyhlKSkpKSB8fCAoaS5wcmVjaXNpb24gPSBvIC0gKCJlIiA9PT0gaS50eXBlKSk7IGJyZWFrOyBjYXNlICJmIjogY2FzZSAiJSI6IG51bGwgIT0gaS5wcmVjaXNpb24gfHwgaXNOYU4obyA9ICRhKGEpKSB8fCAoaS5wcmVjaXNpb24gPSBvIC0gMiAqICgiJSIgPT09IGkudHlwZSkpIH1yZXR1cm4gdC5mb3JtYXQoaSkgfSBmdW5jdGlvbiAkaCh0KSB7IHZhciBuID0gdC5kb21haW47IHJldHVybiB0LnRpY2tzID0gZnVuY3Rpb24gKHQpIHsgdmFyIGUgPSBuKCk7IHJldHVybiBtKGVbMF0sIGVbZS5sZW5ndGggLSAxXSwgbnVsbCA9PSB0ID8gMTAgOiB0KSB9LCB0LnRpY2tGb3JtYXQgPSBmdW5jdGlvbiAodCwgZSkgeyB2YXIgciA9IG4oKTsgcmV0dXJuIEdoKHJbMF0sIHJbci5sZW5ndGggLSAxXSwgbnVsbCA9PSB0ID8gMTAgOiB0LCBlKSB9LCB0Lm5pY2UgPSBmdW5jdGlvbiAoZSkgeyBudWxsID09IGUgJiYgKGUgPSAxMCk7IHZhciByLCBpID0gbigpLCBvID0gMCwgYSA9IGkubGVuZ3RoIC0gMSwgdSA9IGlbb10sIGMgPSBpW2FdOyByZXR1cm4gYyA8IHUgJiYgKHIgPSB1LCB1ID0gYywgYyA9IHIsIHIgPSBvLCBvID0gYSwgYSA9IHIpLCAociA9IHgodSwgYywgZSkpID4gMCA/IHIgPSB4KHUgPSBNYXRoLmZsb29yKHUgLyByKSAqIHIsIGMgPSBNYXRoLmNlaWwoYyAvIHIpICogciwgZSkgOiByIDwgMCAmJiAociA9IHgodSA9IE1hdGguY2VpbCh1ICogcikgLyByLCBjID0gTWF0aC5mbG9vcihjICogcikgLyByLCBlKSksIHIgPiAwID8gKGlbb10gPSBNYXRoLmZsb29yKHUgLyByKSAqIHIsIGlbYV0gPSBNYXRoLmNlaWwoYyAvIHIpICogciwgbihpKSkgOiByIDwgMCAmJiAoaVtvXSA9IE1hdGguY2VpbCh1ICogcikgLyByLCBpW2FdID0gTWF0aC5mbG9vcihjICogcikgLyByLCBuKGkpKSwgdCB9LCB0IH0gZnVuY3Rpb24gV2godCwgbikgeyB2YXIgZSwgciA9IDAsIGkgPSAodCA9IHQuc2xpY2UoKSkubGVuZ3RoIC0gMSwgbyA9IHRbcl0sIGEgPSB0W2ldOyByZXR1cm4gYSA8IG8gJiYgKGUgPSByLCByID0gaSwgaSA9IGUsIGUgPSBvLCBvID0gYSwgYSA9IGUpLCB0W3JdID0gbi5mbG9vcihvKSwgdFtpXSA9IG4uY2VpbChhKSwgdCB9IGZ1bmN0aW9uIFpoKHQpIHsgcmV0dXJuIE1hdGgubG9nKHQpIH0gZnVuY3Rpb24gUWgodCkgeyByZXR1cm4gTWF0aC5leHAodCkgfSBmdW5jdGlvbiBLaCh0KSB7IHJldHVybiAtTWF0aC5sb2coLXQpIH0gZnVuY3Rpb24gSmgodCkgeyByZXR1cm4gLU1hdGguZXhwKC10KSB9IGZ1bmN0aW9uIHRkKHQpIHsgcmV0dXJuIGlzRmluaXRlKHQpID8gKygiMWUiICsgdCkgOiB0IDwgMCA/IDAgOiB0IH0gZnVuY3Rpb24gbmQodCkgeyByZXR1cm4gZnVuY3Rpb24gKG4pIHsgcmV0dXJuIC10KC1uKSB9IH0gZnVuY3Rpb24gZWQobikgeyB2YXIgZSwgciwgaSA9IG4oWmgsIFFoKSwgbyA9IGkuZG9tYWluLCBhID0gMTA7IGZ1bmN0aW9uIHUoKSB7IHJldHVybiBlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQgPT09IE1hdGguRSA/IE1hdGgubG9nIDogMTAgPT09IHQgJiYgTWF0aC5sb2cxMCB8fCAyID09PSB0ICYmIE1hdGgubG9nMiB8fCAodCA9IE1hdGgubG9nKHQpLCBmdW5jdGlvbiAobikgeyByZXR1cm4gTWF0aC5sb2cobikgLyB0IH0pIH0oYSksIHIgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gMTAgPT09IHQgPyB0ZCA6IHQgPT09IE1hdGguRSA/IE1hdGguZXhwIDogZnVuY3Rpb24gKG4pIHsgcmV0dXJuIE1hdGgucG93KHQsIG4pIH0gfShhKSwgbygpWzBdIDwgMCA/IChlID0gbmQoZSksIHIgPSBuZChyKSwgbihLaCwgSmgpKSA6IG4oWmgsIFFoKSwgaSB9IHJldHVybiBpLmJhc2UgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChhID0gK3QsIHUoKSkgOiBhIH0sIGkuZG9tYWluID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobyh0KSwgdSgpKSA6IG8oKSB9LCBpLnRpY2tzID0gZnVuY3Rpb24gKHQpIHsgdmFyIG4sIGkgPSBvKCksIHUgPSBpWzBdLCBjID0gaVtpLmxlbmd0aCAtIDFdOyAobiA9IGMgPCB1KSAmJiAoaCA9IHUsIHUgPSBjLCBjID0gaCk7IHZhciBmLCBzLCBsLCBoID0gZSh1KSwgZCA9IGUoYyksIHAgPSBudWxsID09IHQgPyAxMCA6ICt0LCB2ID0gW107IGlmICghKGEgJSAxKSAmJiBkIC0gaCA8IHApIHsgaWYgKGggPSBNYXRoLnJvdW5kKGgpIC0gMSwgZCA9IE1hdGgucm91bmQoZCkgKyAxLCB1ID4gMCkgeyBmb3IgKDsgaCA8IGQ7ICsraClmb3IgKHMgPSAxLCBmID0gcihoKTsgcyA8IGE7ICsrcylpZiAoISgobCA9IGYgKiBzKSA8IHUpKSB7IGlmIChsID4gYykgYnJlYWs7IHYucHVzaChsKSB9IH0gZWxzZSBmb3IgKDsgaCA8IGQ7ICsraClmb3IgKHMgPSBhIC0gMSwgZiA9IHIoaCk7IHMgPj0gMTsgLS1zKWlmICghKChsID0gZiAqIHMpIDwgdSkpIHsgaWYgKGwgPiBjKSBicmVhazsgdi5wdXNoKGwpIH0gfSBlbHNlIHYgPSBtKGgsIGQsIE1hdGgubWluKGQgLSBoLCBwKSkubWFwKHIpOyByZXR1cm4gbiA/IHYucmV2ZXJzZSgpIDogdiB9LCBpLnRpY2tGb3JtYXQgPSBmdW5jdGlvbiAobiwgbykgeyBpZiAobnVsbCA9PSBvICYmIChvID0gMTAgPT09IGEgPyAiLjBlIiA6ICIsIiksICJmdW5jdGlvbiIgIT0gdHlwZW9mIG8gJiYgKG8gPSB0LmZvcm1hdChvKSksIG4gPT09IDEgLyAwKSByZXR1cm4gbzsgbnVsbCA9PSBuICYmIChuID0gMTApOyB2YXIgdSA9IE1hdGgubWF4KDEsIGEgKiBuIC8gaS50aWNrcygpLmxlbmd0aCk7IHJldHVybiBmdW5jdGlvbiAodCkgeyB2YXIgbiA9IHQgLyByKE1hdGgucm91bmQoZSh0KSkpOyByZXR1cm4gbiAqIGEgPCBhIC0gLjUgJiYgKG4gKj0gYSksIG4gPD0gdSA/IG8odCkgOiAiIiB9IH0sIGkubmljZSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG8oV2gobygpLCB7IGZsb29yOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gcihNYXRoLmZsb29yKGUodCkpKSB9LCBjZWlsOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gcihNYXRoLmNlaWwoZSh0KSkpIH0gfSkpIH0sIGkgfSBmdW5jdGlvbiByZCh0KSB7IHJldHVybiBmdW5jdGlvbiAobikgeyByZXR1cm4gTWF0aC5zaWduKG4pICogTWF0aC5sb2cxcChNYXRoLmFicyhuIC8gdCkpIH0gfSBmdW5jdGlvbiBpZCh0KSB7IHJldHVybiBmdW5jdGlvbiAobikgeyByZXR1cm4gTWF0aC5zaWduKG4pICogTWF0aC5leHBtMShNYXRoLmFicyhuKSkgKiB0IH0gfSBmdW5jdGlvbiBvZCh0KSB7IHZhciBuID0gMSwgZSA9IHQocmQobiksIGlkKG4pKTsgcmV0dXJuIGUuY29uc3RhbnQgPSBmdW5jdGlvbiAoZSkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IHQocmQobiA9ICtlKSwgaWQobikpIDogbiB9LCAkaChlKSB9IGZ1bmN0aW9uIGFkKHQpIHsgcmV0dXJuIGZ1bmN0aW9uIChuKSB7IHJldHVybiBuIDwgMCA/IC1NYXRoLnBvdygtbiwgdCkgOiBNYXRoLnBvdyhuLCB0KSB9IH0gZnVuY3Rpb24gdWQodCkgeyByZXR1cm4gdCA8IDAgPyAtTWF0aC5zcXJ0KC10KSA6IE1hdGguc3FydCh0KSB9IGZ1bmN0aW9uIGNkKHQpIHsgcmV0dXJuIHQgPCAwID8gLXQgKiB0IDogdCAqIHQgfSBmdW5jdGlvbiBmZCh0KSB7IHZhciBuID0gdChCaCwgQmgpLCBlID0gMTsgZnVuY3Rpb24gcigpIHsgcmV0dXJuIDEgPT09IGUgPyB0KEJoLCBCaCkgOiAuNSA9PT0gZSA/IHQodWQsIGNkKSA6IHQoYWQoZSksIGFkKDEgLyBlKSkgfSByZXR1cm4gbi5leHBvbmVudCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGUgPSArdCwgcigpKSA6IGUgfSwgJGgobikgfSBmdW5jdGlvbiBzZCgpIHsgdmFyIHQgPSBmZChYaCgpKTsgcmV0dXJuIHQuY29weSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGpoKHQsIHNkKCkpLmV4cG9uZW50KHQuZXhwb25lbnQoKSkgfSwgRWguYXBwbHkodCwgYXJndW1lbnRzKSwgdCB9IHZhciBsZCA9IG5ldyBEYXRlLCBoZCA9IG5ldyBEYXRlOyBmdW5jdGlvbiBkZCh0LCBuLCBlLCByKSB7IGZ1bmN0aW9uIGkobikgeyByZXR1cm4gdChuID0gMCA9PT0gYXJndW1lbnRzLmxlbmd0aCA/IG5ldyBEYXRlIDogbmV3IERhdGUoK24pKSwgbiB9IHJldHVybiBpLmZsb29yID0gZnVuY3Rpb24gKG4pIHsgcmV0dXJuIHQobiA9IG5ldyBEYXRlKCtuKSksIG4gfSwgaS5jZWlsID0gZnVuY3Rpb24gKGUpIHsgcmV0dXJuIHQoZSA9IG5ldyBEYXRlKGUgLSAxKSksIG4oZSwgMSksIHQoZSksIGUgfSwgaS5yb3VuZCA9IGZ1bmN0aW9uICh0KSB7IHZhciBuID0gaSh0KSwgZSA9IGkuY2VpbCh0KTsgcmV0dXJuIHQgLSBuIDwgZSAtIHQgPyBuIDogZSB9LCBpLm9mZnNldCA9IGZ1bmN0aW9uICh0LCBlKSB7IHJldHVybiBuKHQgPSBuZXcgRGF0ZSgrdCksIG51bGwgPT0gZSA/IDEgOiBNYXRoLmZsb29yKGUpKSwgdCB9LCBpLnJhbmdlID0gZnVuY3Rpb24gKGUsIHIsIG8pIHsgdmFyIGEsIHUgPSBbXTsgaWYgKGUgPSBpLmNlaWwoZSksIG8gPSBudWxsID09IG8gPyAxIDogTWF0aC5mbG9vcihvKSwgIShlIDwgciAmJiBvID4gMCkpIHJldHVybiB1OyBkbyB7IHUucHVzaChhID0gbmV3IERhdGUoK2UpKSwgbihlLCBvKSwgdChlKSB9IHdoaWxlIChhIDwgZSAmJiBlIDwgcik7IHJldHVybiB1IH0sIGkuZmlsdGVyID0gZnVuY3Rpb24gKGUpIHsgcmV0dXJuIGRkKGZ1bmN0aW9uIChuKSB7IGlmIChuID49IG4pIGZvciAoOyB0KG4pLCAhZShuKTspbi5zZXRUaW1lKG4gLSAxKSB9LCBmdW5jdGlvbiAodCwgcikgeyBpZiAodCA+PSB0KSBpZiAociA8IDApIGZvciAoOyArK3IgPD0gMDspZm9yICg7IG4odCwgLTEpLCAhZSh0KTspOyBlbHNlIGZvciAoOyAtLXIgPj0gMDspZm9yICg7IG4odCwgMSksICFlKHQpOyk7IH0pIH0sIGUgJiYgKGkuY291bnQgPSBmdW5jdGlvbiAobiwgcikgeyByZXR1cm4gbGQuc2V0VGltZSgrbiksIGhkLnNldFRpbWUoK3IpLCB0KGxkKSwgdChoZCksIE1hdGguZmxvb3IoZShsZCwgaGQpKSB9LCBpLmV2ZXJ5ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQgPSBNYXRoLmZsb29yKHQpLCBpc0Zpbml0ZSh0KSAmJiB0ID4gMCA/IHQgPiAxID8gaS5maWx0ZXIociA/IGZ1bmN0aW9uIChuKSB7IHJldHVybiByKG4pICUgdCA9PSAwIH0gOiBmdW5jdGlvbiAobikgeyByZXR1cm4gaS5jb3VudCgwLCBuKSAlIHQgPT0gMCB9KSA6IGkgOiBudWxsIH0pLCBpIH0gdmFyIHBkID0gZGQoZnVuY3Rpb24gKCkgeyB9LCBmdW5jdGlvbiAodCwgbikgeyB0LnNldFRpbWUoK3QgKyBuKSB9LCBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gbiAtIHQgfSk7IHBkLmV2ZXJ5ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQgPSBNYXRoLmZsb29yKHQpLCBpc0Zpbml0ZSh0KSAmJiB0ID4gMCA/IHQgPiAxID8gZGQoZnVuY3Rpb24gKG4pIHsgbi5zZXRUaW1lKE1hdGguZmxvb3IobiAvIHQpICogdCkgfSwgZnVuY3Rpb24gKG4sIGUpIHsgbi5zZXRUaW1lKCtuICsgZSAqIHQpIH0sIGZ1bmN0aW9uIChuLCBlKSB7IHJldHVybiAoZSAtIG4pIC8gdCB9KSA6IHBkIDogbnVsbCB9OyB2YXIgdmQgPSBwZC5yYW5nZSwgZ2QgPSA2ZTQsIHlkID0gNjA0OGU1LCBfZCA9IGRkKGZ1bmN0aW9uICh0KSB7IHQuc2V0VGltZSh0IC0gdC5nZXRNaWxsaXNlY29uZHMoKSkgfSwgZnVuY3Rpb24gKHQsIG4pIHsgdC5zZXRUaW1lKCt0ICsgMWUzICogbikgfSwgZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIChuIC0gdCkgLyAxZTMgfSwgZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQuZ2V0VVRDU2Vjb25kcygpIH0pLCBiZCA9IF9kLnJhbmdlLCBtZCA9IGRkKGZ1bmN0aW9uICh0KSB7IHQuc2V0VGltZSh0IC0gdC5nZXRNaWxsaXNlY29uZHMoKSAtIDFlMyAqIHQuZ2V0U2Vjb25kcygpKSB9LCBmdW5jdGlvbiAodCwgbikgeyB0LnNldFRpbWUoK3QgKyBuICogZ2QpIH0sIGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiAobiAtIHQpIC8gZ2QgfSwgZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQuZ2V0TWludXRlcygpIH0pLCB4ZCA9IG1kLnJhbmdlLCB3ZCA9IGRkKGZ1bmN0aW9uICh0KSB7IHQuc2V0VGltZSh0IC0gdC5nZXRNaWxsaXNlY29uZHMoKSAtIDFlMyAqIHQuZ2V0U2Vjb25kcygpIC0gdC5nZXRNaW51dGVzKCkgKiBnZCkgfSwgZnVuY3Rpb24gKHQsIG4pIHsgdC5zZXRUaW1lKCt0ICsgMzZlNSAqIG4pIH0sIGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiAobiAtIHQpIC8gMzZlNSB9LCBmdW5jdGlvbiAodCkgeyByZXR1cm4gdC5nZXRIb3VycygpIH0pLCBNZCA9IHdkLnJhbmdlLCBOZCA9IGRkKGZ1bmN0aW9uICh0KSB7IHQuc2V0SG91cnMoMCwgMCwgMCwgMCkgfSwgZnVuY3Rpb24gKHQsIG4pIHsgdC5zZXREYXRlKHQuZ2V0RGF0ZSgpICsgbikgfSwgZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIChuIC0gdCAtIChuLmdldFRpbWV6b25lT2Zmc2V0KCkgLSB0LmdldFRpbWV6b25lT2Zmc2V0KCkpICogZ2QpIC8gODY0ZTUgfSwgZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQuZ2V0RGF0ZSgpIC0gMSB9KSwgVGQgPSBOZC5yYW5nZTsgZnVuY3Rpb24gQWQodCkgeyByZXR1cm4gZGQoZnVuY3Rpb24gKG4pIHsgbi5zZXREYXRlKG4uZ2V0RGF0ZSgpIC0gKG4uZ2V0RGF5KCkgKyA3IC0gdCkgJSA3KSwgbi5zZXRIb3VycygwLCAwLCAwLCAwKSB9LCBmdW5jdGlvbiAodCwgbikgeyB0LnNldERhdGUodC5nZXREYXRlKCkgKyA3ICogbikgfSwgZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIChuIC0gdCAtIChuLmdldFRpbWV6b25lT2Zmc2V0KCkgLSB0LmdldFRpbWV6b25lT2Zmc2V0KCkpICogZ2QpIC8geWQgfSkgfSB2YXIgU2QgPSBBZCgwKSwga2QgPSBBZCgxKSwgRWQgPSBBZCgyKSwgQ2QgPSBBZCgzKSwgUGQgPSBBZCg0KSwgemQgPSBBZCg1KSwgUmQgPSBBZCg2KSwgRGQgPSBTZC5yYW5nZSwgcWQgPSBrZC5yYW5nZSwgTGQgPSBFZC5yYW5nZSwgVWQgPSBDZC5yYW5nZSwgT2QgPSBQZC5yYW5nZSwgQmQgPSB6ZC5yYW5nZSwgRmQgPSBSZC5yYW5nZSwgWWQgPSBkZChmdW5jdGlvbiAodCkgeyB0LnNldERhdGUoMSksIHQuc2V0SG91cnMoMCwgMCwgMCwgMCkgfSwgZnVuY3Rpb24gKHQsIG4pIHsgdC5zZXRNb250aCh0LmdldE1vbnRoKCkgKyBuKSB9LCBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gbi5nZXRNb250aCgpIC0gdC5nZXRNb250aCgpICsgMTIgKiAobi5nZXRGdWxsWWVhcigpIC0gdC5nZXRGdWxsWWVhcigpKSB9LCBmdW5jdGlvbiAodCkgeyByZXR1cm4gdC5nZXRNb250aCgpIH0pLCBJZCA9IFlkLnJhbmdlLCBIZCA9IGRkKGZ1bmN0aW9uICh0KSB7IHQuc2V0TW9udGgoMCwgMSksIHQuc2V0SG91cnMoMCwgMCwgMCwgMCkgfSwgZnVuY3Rpb24gKHQsIG4pIHsgdC5zZXRGdWxsWWVhcih0LmdldEZ1bGxZZWFyKCkgKyBuKSB9LCBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gbi5nZXRGdWxsWWVhcigpIC0gdC5nZXRGdWxsWWVhcigpIH0sIGZ1bmN0aW9uICh0KSB7IHJldHVybiB0LmdldEZ1bGxZZWFyKCkgfSk7IEhkLmV2ZXJ5ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGlzRmluaXRlKHQgPSBNYXRoLmZsb29yKHQpKSAmJiB0ID4gMCA/IGRkKGZ1bmN0aW9uIChuKSB7IG4uc2V0RnVsbFllYXIoTWF0aC5mbG9vcihuLmdldEZ1bGxZZWFyKCkgLyB0KSAqIHQpLCBuLnNldE1vbnRoKDAsIDEpLCBuLnNldEhvdXJzKDAsIDAsIDAsIDApIH0sIGZ1bmN0aW9uIChuLCBlKSB7IG4uc2V0RnVsbFllYXIobi5nZXRGdWxsWWVhcigpICsgZSAqIHQpIH0pIDogbnVsbCB9OyB2YXIgamQgPSBIZC5yYW5nZSwgWGQgPSBkZChmdW5jdGlvbiAodCkgeyB0LnNldFVUQ1NlY29uZHMoMCwgMCkgfSwgZnVuY3Rpb24gKHQsIG4pIHsgdC5zZXRUaW1lKCt0ICsgbiAqIGdkKSB9LCBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gKG4gLSB0KSAvIGdkIH0sIGZ1bmN0aW9uICh0KSB7IHJldHVybiB0LmdldFVUQ01pbnV0ZXMoKSB9KSwgVmQgPSBYZC5yYW5nZSwgR2QgPSBkZChmdW5jdGlvbiAodCkgeyB0LnNldFVUQ01pbnV0ZXMoMCwgMCwgMCkgfSwgZnVuY3Rpb24gKHQsIG4pIHsgdC5zZXRUaW1lKCt0ICsgMzZlNSAqIG4pIH0sIGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiAobiAtIHQpIC8gMzZlNSB9LCBmdW5jdGlvbiAodCkgeyByZXR1cm4gdC5nZXRVVENIb3VycygpIH0pLCAkZCA9IEdkLnJhbmdlLCBXZCA9IGRkKGZ1bmN0aW9uICh0KSB7IHQuc2V0VVRDSG91cnMoMCwgMCwgMCwgMCkgfSwgZnVuY3Rpb24gKHQsIG4pIHsgdC5zZXRVVENEYXRlKHQuZ2V0VVRDRGF0ZSgpICsgbikgfSwgZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIChuIC0gdCkgLyA4NjRlNSB9LCBmdW5jdGlvbiAodCkgeyByZXR1cm4gdC5nZXRVVENEYXRlKCkgLSAxIH0pLCBaZCA9IFdkLnJhbmdlOyBmdW5jdGlvbiBRZCh0KSB7IHJldHVybiBkZChmdW5jdGlvbiAobikgeyBuLnNldFVUQ0RhdGUobi5nZXRVVENEYXRlKCkgLSAobi5nZXRVVENEYXkoKSArIDcgLSB0KSAlIDcpLCBuLnNldFVUQ0hvdXJzKDAsIDAsIDAsIDApIH0sIGZ1bmN0aW9uICh0LCBuKSB7IHQuc2V0VVRDRGF0ZSh0LmdldFVUQ0RhdGUoKSArIDcgKiBuKSB9LCBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gKG4gLSB0KSAvIHlkIH0pIH0gdmFyIEtkID0gUWQoMCksIEpkID0gUWQoMSksIHRwID0gUWQoMiksIG5wID0gUWQoMyksIGVwID0gUWQoNCksIHJwID0gUWQoNSksIGlwID0gUWQoNiksIG9wID0gS2QucmFuZ2UsIGFwID0gSmQucmFuZ2UsIHVwID0gdHAucmFuZ2UsIGNwID0gbnAucmFuZ2UsIGZwID0gZXAucmFuZ2UsIHNwID0gcnAucmFuZ2UsIGxwID0gaXAucmFuZ2UsIGhwID0gZGQoZnVuY3Rpb24gKHQpIHsgdC5zZXRVVENEYXRlKDEpLCB0LnNldFVUQ0hvdXJzKDAsIDAsIDAsIDApIH0sIGZ1bmN0aW9uICh0LCBuKSB7IHQuc2V0VVRDTW9udGgodC5nZXRVVENNb250aCgpICsgbikgfSwgZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIG4uZ2V0VVRDTW9udGgoKSAtIHQuZ2V0VVRDTW9udGgoKSArIDEyICogKG4uZ2V0VVRDRnVsbFllYXIoKSAtIHQuZ2V0VVRDRnVsbFllYXIoKSkgfSwgZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQuZ2V0VVRDTW9udGgoKSB9KSwgZHAgPSBocC5yYW5nZSwgcHAgPSBkZChmdW5jdGlvbiAodCkgeyB0LnNldFVUQ01vbnRoKDAsIDEpLCB0LnNldFVUQ0hvdXJzKDAsIDAsIDAsIDApIH0sIGZ1bmN0aW9uICh0LCBuKSB7IHQuc2V0VVRDRnVsbFllYXIodC5nZXRVVENGdWxsWWVhcigpICsgbikgfSwgZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIG4uZ2V0VVRDRnVsbFllYXIoKSAtIHQuZ2V0VVRDRnVsbFllYXIoKSB9LCBmdW5jdGlvbiAodCkgeyByZXR1cm4gdC5nZXRVVENGdWxsWWVhcigpIH0pOyBwcC5ldmVyeSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBpc0Zpbml0ZSh0ID0gTWF0aC5mbG9vcih0KSkgJiYgdCA+IDAgPyBkZChmdW5jdGlvbiAobikgeyBuLnNldFVUQ0Z1bGxZZWFyKE1hdGguZmxvb3Iobi5nZXRVVENGdWxsWWVhcigpIC8gdCkgKiB0KSwgbi5zZXRVVENNb250aCgwLCAxKSwgbi5zZXRVVENIb3VycygwLCAwLCAwLCAwKSB9LCBmdW5jdGlvbiAobiwgZSkgeyBuLnNldFVUQ0Z1bGxZZWFyKG4uZ2V0VVRDRnVsbFllYXIoKSArIGUgKiB0KSB9KSA6IG51bGwgfTsgdmFyIHZwID0gcHAucmFuZ2U7IGZ1bmN0aW9uIGdwKHQpIHsgaWYgKDAgPD0gdC55ICYmIHQueSA8IDEwMCkgeyB2YXIgbiA9IG5ldyBEYXRlKC0xLCB0Lm0sIHQuZCwgdC5ILCB0Lk0sIHQuUywgdC5MKTsgcmV0dXJuIG4uc2V0RnVsbFllYXIodC55KSwgbiB9IHJldHVybiBuZXcgRGF0ZSh0LnksIHQubSwgdC5kLCB0LkgsIHQuTSwgdC5TLCB0LkwpIH0gZnVuY3Rpb24geXAodCkgeyBpZiAoMCA8PSB0LnkgJiYgdC55IDwgMTAwKSB7IHZhciBuID0gbmV3IERhdGUoRGF0ZS5VVEMoLTEsIHQubSwgdC5kLCB0LkgsIHQuTSwgdC5TLCB0LkwpKTsgcmV0dXJuIG4uc2V0VVRDRnVsbFllYXIodC55KSwgbiB9IHJldHVybiBuZXcgRGF0ZShEYXRlLlVUQyh0LnksIHQubSwgdC5kLCB0LkgsIHQuTSwgdC5TLCB0LkwpKSB9IGZ1bmN0aW9uIF9wKHQsIG4sIGUpIHsgcmV0dXJuIHsgeTogdCwgbTogbiwgZDogZSwgSDogMCwgTTogMCwgUzogMCwgTDogMCB9IH0gZnVuY3Rpb24gYnAodCkgeyB2YXIgbiA9IHQuZGF0ZVRpbWUsIGUgPSB0LmRhdGUsIHIgPSB0LnRpbWUsIGkgPSB0LnBlcmlvZHMsIG8gPSB0LmRheXMsIGEgPSB0LnNob3J0RGF5cywgdSA9IHQubW9udGhzLCBjID0gdC5zaG9ydE1vbnRocywgZiA9IFNwKGkpLCBzID0ga3AoaSksIGwgPSBTcChvKSwgaCA9IGtwKG8pLCBkID0gU3AoYSksIHAgPSBrcChhKSwgdiA9IFNwKHUpLCBnID0ga3AodSksIHkgPSBTcChjKSwgXyA9IGtwKGMpLCBiID0geyBhOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gYVt0LmdldERheSgpXSB9LCBBOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gb1t0LmdldERheSgpXSB9LCBiOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gY1t0LmdldE1vbnRoKCldIH0sIEI6IGZ1bmN0aW9uICh0KSB7IHJldHVybiB1W3QuZ2V0TW9udGgoKV0gfSwgYzogbnVsbCwgZDogV3AsIGU6IFdwLCBmOiB0diwgSDogWnAsIEk6IFFwLCBqOiBLcCwgTDogSnAsIG06IG52LCBNOiBldiwgcDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGlbKyh0LmdldEhvdXJzKCkgPj0gMTIpXSB9LCBxOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gMSArIH5+KHQuZ2V0TW9udGgoKSAvIDMpIH0sIFE6IEN2LCBzOiBQdiwgUzogcnYsIHU6IGl2LCBVOiBvdiwgVjogYXYsIHc6IHV2LCBXOiBjdiwgeDogbnVsbCwgWDogbnVsbCwgeTogZnYsIFk6IHN2LCBaOiBsdiwgIiUiOiBFdiB9LCBtID0geyBhOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gYVt0LmdldFVUQ0RheSgpXSB9LCBBOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gb1t0LmdldFVUQ0RheSgpXSB9LCBiOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gY1t0LmdldFVUQ01vbnRoKCldIH0sIEI6IGZ1bmN0aW9uICh0KSB7IHJldHVybiB1W3QuZ2V0VVRDTW9udGgoKV0gfSwgYzogbnVsbCwgZDogaHYsIGU6IGh2LCBmOiB5diwgSDogZHYsIEk6IHB2LCBqOiB2diwgTDogZ3YsIG06IF92LCBNOiBidiwgcDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGlbKyh0LmdldFVUQ0hvdXJzKCkgPj0gMTIpXSB9LCBxOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gMSArIH5+KHQuZ2V0VVRDTW9udGgoKSAvIDMpIH0sIFE6IEN2LCBzOiBQdiwgUzogbXYsIHU6IHh2LCBVOiB3diwgVjogTXYsIHc6IE52LCBXOiBUdiwgeDogbnVsbCwgWDogbnVsbCwgeTogQXYsIFk6IFN2LCBaOiBrdiwgIiUiOiBFdiB9LCB4ID0geyBhOiBmdW5jdGlvbiAodCwgbiwgZSkgeyB2YXIgciA9IGQuZXhlYyhuLnNsaWNlKGUpKTsgcmV0dXJuIHIgPyAodC53ID0gcFtyWzBdLnRvTG93ZXJDYXNlKCldLCBlICsgclswXS5sZW5ndGgpIDogLTEgfSwgQTogZnVuY3Rpb24gKHQsIG4sIGUpIHsgdmFyIHIgPSBsLmV4ZWMobi5zbGljZShlKSk7IHJldHVybiByID8gKHQudyA9IGhbclswXS50b0xvd2VyQ2FzZSgpXSwgZSArIHJbMF0ubGVuZ3RoKSA6IC0xIH0sIGI6IGZ1bmN0aW9uICh0LCBuLCBlKSB7IHZhciByID0geS5leGVjKG4uc2xpY2UoZSkpOyByZXR1cm4gciA/ICh0Lm0gPSBfW3JbMF0udG9Mb3dlckNhc2UoKV0sIGUgKyByWzBdLmxlbmd0aCkgOiAtMSB9LCBCOiBmdW5jdGlvbiAodCwgbiwgZSkgeyB2YXIgciA9IHYuZXhlYyhuLnNsaWNlKGUpKTsgcmV0dXJuIHIgPyAodC5tID0gZ1tyWzBdLnRvTG93ZXJDYXNlKCldLCBlICsgclswXS5sZW5ndGgpIDogLTEgfSwgYzogZnVuY3Rpb24gKHQsIGUsIHIpIHsgcmV0dXJuIE4odCwgbiwgZSwgcikgfSwgZDogQnAsIGU6IEJwLCBmOiBYcCwgSDogWXAsIEk6IFlwLCBqOiBGcCwgTDoganAsIG06IE9wLCBNOiBJcCwgcDogZnVuY3Rpb24gKHQsIG4sIGUpIHsgdmFyIHIgPSBmLmV4ZWMobi5zbGljZShlKSk7IHJldHVybiByID8gKHQucCA9IHNbclswXS50b0xvd2VyQ2FzZSgpXSwgZSArIHJbMF0ubGVuZ3RoKSA6IC0xIH0sIHE6IFVwLCBROiBHcCwgczogJHAsIFM6IEhwLCB1OiBDcCwgVTogUHAsIFY6IHpwLCB3OiBFcCwgVzogUnAsIHg6IGZ1bmN0aW9uICh0LCBuLCByKSB7IHJldHVybiBOKHQsIGUsIG4sIHIpIH0sIFg6IGZ1bmN0aW9uICh0LCBuLCBlKSB7IHJldHVybiBOKHQsIHIsIG4sIGUpIH0sIHk6IHFwLCBZOiBEcCwgWjogTHAsICIlIjogVnAgfTsgZnVuY3Rpb24gdyh0LCBuKSB7IHJldHVybiBmdW5jdGlvbiAoZSkgeyB2YXIgciwgaSwgbywgYSA9IFtdLCB1ID0gLTEsIGMgPSAwLCBmID0gdC5sZW5ndGg7IGZvciAoZSBpbnN0YW5jZW9mIERhdGUgfHwgKGUgPSBuZXcgRGF0ZSgrZSkpOyArK3UgPCBmOykzNyA9PT0gdC5jaGFyQ29kZUF0KHUpICYmIChhLnB1c2godC5zbGljZShjLCB1KSksIG51bGwgIT0gKGkgPSB4cFtyID0gdC5jaGFyQXQoKyt1KV0pID8gciA9IHQuY2hhckF0KCsrdSkgOiBpID0gImUiID09PSByID8gIiAiIDogIjAiLCAobyA9IG5bcl0pICYmIChyID0gbyhlLCBpKSksIGEucHVzaChyKSwgYyA9IHUgKyAxKTsgcmV0dXJuIGEucHVzaCh0LnNsaWNlKGMsIHUpKSwgYS5qb2luKCIiKSB9IH0gZnVuY3Rpb24gTSh0LCBuKSB7IHJldHVybiBmdW5jdGlvbiAoZSkgeyB2YXIgciwgaSwgbyA9IF9wKDE5MDAsIHZvaWQgMCwgMSk7IGlmIChOKG8sIHQsIGUgKz0gIiIsIDApICE9IGUubGVuZ3RoKSByZXR1cm4gbnVsbDsgaWYgKCJRIiBpbiBvKSByZXR1cm4gbmV3IERhdGUoby5RKTsgaWYgKCJzIiBpbiBvKSByZXR1cm4gbmV3IERhdGUoMWUzICogby5zICsgKCJMIiBpbiBvID8gby5MIDogMCkpOyBpZiAoIW4gfHwgIloiIGluIG8gfHwgKG8uWiA9IDApLCAicCIgaW4gbyAmJiAoby5IID0gby5IICUgMTIgKyAxMiAqIG8ucCksIHZvaWQgMCA9PT0gby5tICYmIChvLm0gPSAicSIgaW4gbyA/IG8ucSA6IDApLCAiViIgaW4gbykgeyBpZiAoby5WIDwgMSB8fCBvLlYgPiA1MykgcmV0dXJuIG51bGw7ICJ3IiBpbiBvIHx8IChvLncgPSAxKSwgIloiIGluIG8gPyAoaSA9IChyID0geXAoX3Aoby55LCAwLCAxKSkpLmdldFVUQ0RheSgpLCByID0gaSA+IDQgfHwgMCA9PT0gaSA/IEpkLmNlaWwocikgOiBKZChyKSwgciA9IFdkLm9mZnNldChyLCA3ICogKG8uViAtIDEpKSwgby55ID0gci5nZXRVVENGdWxsWWVhcigpLCBvLm0gPSByLmdldFVUQ01vbnRoKCksIG8uZCA9IHIuZ2V0VVRDRGF0ZSgpICsgKG8udyArIDYpICUgNykgOiAoaSA9IChyID0gZ3AoX3Aoby55LCAwLCAxKSkpLmdldERheSgpLCByID0gaSA+IDQgfHwgMCA9PT0gaSA/IGtkLmNlaWwocikgOiBrZChyKSwgciA9IE5kLm9mZnNldChyLCA3ICogKG8uViAtIDEpKSwgby55ID0gci5nZXRGdWxsWWVhcigpLCBvLm0gPSByLmdldE1vbnRoKCksIG8uZCA9IHIuZ2V0RGF0ZSgpICsgKG8udyArIDYpICUgNykgfSBlbHNlICgiVyIgaW4gbyB8fCAiVSIgaW4gbykgJiYgKCJ3IiBpbiBvIHx8IChvLncgPSAidSIgaW4gbyA/IG8udSAlIDcgOiAiVyIgaW4gbyA/IDEgOiAwKSwgaSA9ICJaIiBpbiBvID8geXAoX3Aoby55LCAwLCAxKSkuZ2V0VVRDRGF5KCkgOiBncChfcChvLnksIDAsIDEpKS5nZXREYXkoKSwgby5tID0gMCwgby5kID0gIlciIGluIG8gPyAoby53ICsgNikgJSA3ICsgNyAqIG8uVyAtIChpICsgNSkgJSA3IDogby53ICsgNyAqIG8uVSAtIChpICsgNikgJSA3KTsgcmV0dXJuICJaIiBpbiBvID8gKG8uSCArPSBvLlogLyAxMDAgfCAwLCBvLk0gKz0gby5aICUgMTAwLCB5cChvKSkgOiBncChvKSB9IH0gZnVuY3Rpb24gTih0LCBuLCBlLCByKSB7IGZvciAodmFyIGksIG8sIGEgPSAwLCB1ID0gbi5sZW5ndGgsIGMgPSBlLmxlbmd0aDsgYSA8IHU7KSB7IGlmIChyID49IGMpIHJldHVybiAtMTsgaWYgKDM3ID09PSAoaSA9IG4uY2hhckNvZGVBdChhKyspKSkgeyBpZiAoaSA9IG4uY2hhckF0KGErKyksICEobyA9IHhbaSBpbiB4cCA/IG4uY2hhckF0KGErKykgOiBpXSkgfHwgKHIgPSBvKHQsIGUsIHIpKSA8IDApIHJldHVybiAtMSB9IGVsc2UgaWYgKGkgIT0gZS5jaGFyQ29kZUF0KHIrKykpIHJldHVybiAtMSB9IHJldHVybiByIH0gcmV0dXJuIGIueCA9IHcoZSwgYiksIGIuWCA9IHcociwgYiksIGIuYyA9IHcobiwgYiksIG0ueCA9IHcoZSwgbSksIG0uWCA9IHcociwgbSksIG0uYyA9IHcobiwgbSksIHsgZm9ybWF0OiBmdW5jdGlvbiAodCkgeyB2YXIgbiA9IHcodCArPSAiIiwgYik7IHJldHVybiBuLnRvU3RyaW5nID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdCB9LCBuIH0sIHBhcnNlOiBmdW5jdGlvbiAodCkgeyB2YXIgbiA9IE0odCArPSAiIiwgITEpOyByZXR1cm4gbi50b1N0cmluZyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHQgfSwgbiB9LCB1dGNGb3JtYXQ6IGZ1bmN0aW9uICh0KSB7IHZhciBuID0gdyh0ICs9ICIiLCBtKTsgcmV0dXJuIG4udG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB0IH0sIG4gfSwgdXRjUGFyc2U6IGZ1bmN0aW9uICh0KSB7IHZhciBuID0gTSh0ICs9ICIiLCAhMCk7IHJldHVybiBuLnRvU3RyaW5nID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdCB9LCBuIH0gfSB9IHZhciBtcCwgeHAgPSB7ICItIjogIiIsIF86ICIgIiwgMDogIjAiIH0sIHdwID0gL15ccypcZCsvLCBNcCA9IC9eJS8sIE5wID0gL1tcXF4kKis/fFtcXSgpLnt9XS9nOyBmdW5jdGlvbiBUcCh0LCBuLCBlKSB7IHZhciByID0gdCA8IDAgPyAiLSIgOiAiIiwgaSA9IChyID8gLXQgOiB0KSArICIiLCBvID0gaS5sZW5ndGg7IHJldHVybiByICsgKG8gPCBlID8gbmV3IEFycmF5KGUgLSBvICsgMSkuam9pbihuKSArIGkgOiBpKSB9IGZ1bmN0aW9uIEFwKHQpIHsgcmV0dXJuIHQucmVwbGFjZShOcCwgIlxcJCYiKSB9IGZ1bmN0aW9uIFNwKHQpIHsgcmV0dXJuIG5ldyBSZWdFeHAoIl4oPzoiICsgdC5tYXAoQXApLmpvaW4oInwiKSArICIpIiwgImkiKSB9IGZ1bmN0aW9uIGtwKHQpIHsgZm9yICh2YXIgbiA9IHt9LCBlID0gLTEsIHIgPSB0Lmxlbmd0aDsgKytlIDwgcjspblt0W2VdLnRvTG93ZXJDYXNlKCldID0gZTsgcmV0dXJuIG4gfSBmdW5jdGlvbiBFcCh0LCBuLCBlKSB7IHZhciByID0gd3AuZXhlYyhuLnNsaWNlKGUsIGUgKyAxKSk7IHJldHVybiByID8gKHQudyA9ICtyWzBdLCBlICsgclswXS5sZW5ndGgpIDogLTEgfSBmdW5jdGlvbiBDcCh0LCBuLCBlKSB7IHZhciByID0gd3AuZXhlYyhuLnNsaWNlKGUsIGUgKyAxKSk7IHJldHVybiByID8gKHQudSA9ICtyWzBdLCBlICsgclswXS5sZW5ndGgpIDogLTEgfSBmdW5jdGlvbiBQcCh0LCBuLCBlKSB7IHZhciByID0gd3AuZXhlYyhuLnNsaWNlKGUsIGUgKyAyKSk7IHJldHVybiByID8gKHQuVSA9ICtyWzBdLCBlICsgclswXS5sZW5ndGgpIDogLTEgfSBmdW5jdGlvbiB6cCh0LCBuLCBlKSB7IHZhciByID0gd3AuZXhlYyhuLnNsaWNlKGUsIGUgKyAyKSk7IHJldHVybiByID8gKHQuViA9ICtyWzBdLCBlICsgclswXS5sZW5ndGgpIDogLTEgfSBmdW5jdGlvbiBScCh0LCBuLCBlKSB7IHZhciByID0gd3AuZXhlYyhuLnNsaWNlKGUsIGUgKyAyKSk7IHJldHVybiByID8gKHQuVyA9ICtyWzBdLCBlICsgclswXS5sZW5ndGgpIDogLTEgfSBmdW5jdGlvbiBEcCh0LCBuLCBlKSB7IHZhciByID0gd3AuZXhlYyhuLnNsaWNlKGUsIGUgKyA0KSk7IHJldHVybiByID8gKHQueSA9ICtyWzBdLCBlICsgclswXS5sZW5ndGgpIDogLTEgfSBmdW5jdGlvbiBxcCh0LCBuLCBlKSB7IHZhciByID0gd3AuZXhlYyhuLnNsaWNlKGUsIGUgKyAyKSk7IHJldHVybiByID8gKHQueSA9ICtyWzBdICsgKCtyWzBdID4gNjggPyAxOTAwIDogMmUzKSwgZSArIHJbMF0ubGVuZ3RoKSA6IC0xIH0gZnVuY3Rpb24gTHAodCwgbiwgZSkgeyB2YXIgciA9IC9eKFopfChbKy1dXGRcZCkoPzo6PyhcZFxkKSk/Ly5leGVjKG4uc2xpY2UoZSwgZSArIDYpKTsgcmV0dXJuIHIgPyAodC5aID0gclsxXSA/IDAgOiAtKHJbMl0gKyAoclszXSB8fCAiMDAiKSksIGUgKyByWzBdLmxlbmd0aCkgOiAtMSB9IGZ1bmN0aW9uIFVwKHQsIG4sIGUpIHsgdmFyIHIgPSB3cC5leGVjKG4uc2xpY2UoZSwgZSArIDEpKTsgcmV0dXJuIHIgPyAodC5xID0gMyAqIHJbMF0gLSAzLCBlICsgclswXS5sZW5ndGgpIDogLTEgfSBmdW5jdGlvbiBPcCh0LCBuLCBlKSB7IHZhciByID0gd3AuZXhlYyhuLnNsaWNlKGUsIGUgKyAyKSk7IHJldHVybiByID8gKHQubSA9IHJbMF0gLSAxLCBlICsgclswXS5sZW5ndGgpIDogLTEgfSBmdW5jdGlvbiBCcCh0LCBuLCBlKSB7IHZhciByID0gd3AuZXhlYyhuLnNsaWNlKGUsIGUgKyAyKSk7IHJldHVybiByID8gKHQuZCA9ICtyWzBdLCBlICsgclswXS5sZW5ndGgpIDogLTEgfSBmdW5jdGlvbiBGcCh0LCBuLCBlKSB7IHZhciByID0gd3AuZXhlYyhuLnNsaWNlKGUsIGUgKyAzKSk7IHJldHVybiByID8gKHQubSA9IDAsIHQuZCA9ICtyWzBdLCBlICsgclswXS5sZW5ndGgpIDogLTEgfSBmdW5jdGlvbiBZcCh0LCBuLCBlKSB7IHZhciByID0gd3AuZXhlYyhuLnNsaWNlKGUsIGUgKyAyKSk7IHJldHVybiByID8gKHQuSCA9ICtyWzBdLCBlICsgclswXS5sZW5ndGgpIDogLTEgfSBmdW5jdGlvbiBJcCh0LCBuLCBlKSB7IHZhciByID0gd3AuZXhlYyhuLnNsaWNlKGUsIGUgKyAyKSk7IHJldHVybiByID8gKHQuTSA9ICtyWzBdLCBlICsgclswXS5sZW5ndGgpIDogLTEgfSBmdW5jdGlvbiBIcCh0LCBuLCBlKSB7IHZhciByID0gd3AuZXhlYyhuLnNsaWNlKGUsIGUgKyAyKSk7IHJldHVybiByID8gKHQuUyA9ICtyWzBdLCBlICsgclswXS5sZW5ndGgpIDogLTEgfSBmdW5jdGlvbiBqcCh0LCBuLCBlKSB7IHZhciByID0gd3AuZXhlYyhuLnNsaWNlKGUsIGUgKyAzKSk7IHJldHVybiByID8gKHQuTCA9ICtyWzBdLCBlICsgclswXS5sZW5ndGgpIDogLTEgfSBmdW5jdGlvbiBYcCh0LCBuLCBlKSB7IHZhciByID0gd3AuZXhlYyhuLnNsaWNlKGUsIGUgKyA2KSk7IHJldHVybiByID8gKHQuTCA9IE1hdGguZmxvb3IoclswXSAvIDFlMyksIGUgKyByWzBdLmxlbmd0aCkgOiAtMSB9IGZ1bmN0aW9uIFZwKHQsIG4sIGUpIHsgdmFyIHIgPSBNcC5leGVjKG4uc2xpY2UoZSwgZSArIDEpKTsgcmV0dXJuIHIgPyBlICsgclswXS5sZW5ndGggOiAtMSB9IGZ1bmN0aW9uIEdwKHQsIG4sIGUpIHsgdmFyIHIgPSB3cC5leGVjKG4uc2xpY2UoZSkpOyByZXR1cm4gciA/ICh0LlEgPSArclswXSwgZSArIHJbMF0ubGVuZ3RoKSA6IC0xIH0gZnVuY3Rpb24gJHAodCwgbiwgZSkgeyB2YXIgciA9IHdwLmV4ZWMobi5zbGljZShlKSk7IHJldHVybiByID8gKHQucyA9ICtyWzBdLCBlICsgclswXS5sZW5ndGgpIDogLTEgfSBmdW5jdGlvbiBXcCh0LCBuKSB7IHJldHVybiBUcCh0LmdldERhdGUoKSwgbiwgMikgfSBmdW5jdGlvbiBacCh0LCBuKSB7IHJldHVybiBUcCh0LmdldEhvdXJzKCksIG4sIDIpIH0gZnVuY3Rpb24gUXAodCwgbikgeyByZXR1cm4gVHAodC5nZXRIb3VycygpICUgMTIgfHwgMTIsIG4sIDIpIH0gZnVuY3Rpb24gS3AodCwgbikgeyByZXR1cm4gVHAoMSArIE5kLmNvdW50KEhkKHQpLCB0KSwgbiwgMykgfSBmdW5jdGlvbiBKcCh0LCBuKSB7IHJldHVybiBUcCh0LmdldE1pbGxpc2Vjb25kcygpLCBuLCAzKSB9IGZ1bmN0aW9uIHR2KHQsIG4pIHsgcmV0dXJuIEpwKHQsIG4pICsgIjAwMCIgfSBmdW5jdGlvbiBudih0LCBuKSB7IHJldHVybiBUcCh0LmdldE1vbnRoKCkgKyAxLCBuLCAyKSB9IGZ1bmN0aW9uIGV2KHQsIG4pIHsgcmV0dXJuIFRwKHQuZ2V0TWludXRlcygpLCBuLCAyKSB9IGZ1bmN0aW9uIHJ2KHQsIG4pIHsgcmV0dXJuIFRwKHQuZ2V0U2Vjb25kcygpLCBuLCAyKSB9IGZ1bmN0aW9uIGl2KHQpIHsgdmFyIG4gPSB0LmdldERheSgpOyByZXR1cm4gMCA9PT0gbiA/IDcgOiBuIH0gZnVuY3Rpb24gb3YodCwgbikgeyByZXR1cm4gVHAoU2QuY291bnQoSGQodCkgLSAxLCB0KSwgbiwgMikgfSBmdW5jdGlvbiBhdih0LCBuKSB7IHZhciBlID0gdC5nZXREYXkoKTsgcmV0dXJuIHQgPSBlID49IDQgfHwgMCA9PT0gZSA/IFBkKHQpIDogUGQuY2VpbCh0KSwgVHAoUGQuY291bnQoSGQodCksIHQpICsgKDQgPT09IEhkKHQpLmdldERheSgpKSwgbiwgMikgfSBmdW5jdGlvbiB1dih0KSB7IHJldHVybiB0LmdldERheSgpIH0gZnVuY3Rpb24gY3YodCwgbikgeyByZXR1cm4gVHAoa2QuY291bnQoSGQodCkgLSAxLCB0KSwgbiwgMikgfSBmdW5jdGlvbiBmdih0LCBuKSB7IHJldHVybiBUcCh0LmdldEZ1bGxZZWFyKCkgJSAxMDAsIG4sIDIpIH0gZnVuY3Rpb24gc3YodCwgbikgeyByZXR1cm4gVHAodC5nZXRGdWxsWWVhcigpICUgMWU0LCBuLCA0KSB9IGZ1bmN0aW9uIGx2KHQpIHsgdmFyIG4gPSB0LmdldFRpbWV6b25lT2Zmc2V0KCk7IHJldHVybiAobiA+IDAgPyAiLSIgOiAobiAqPSAtMSwgIisiKSkgKyBUcChuIC8gNjAgfCAwLCAiMCIsIDIpICsgVHAobiAlIDYwLCAiMCIsIDIpIH0gZnVuY3Rpb24gaHYodCwgbikgeyByZXR1cm4gVHAodC5nZXRVVENEYXRlKCksIG4sIDIpIH0gZnVuY3Rpb24gZHYodCwgbikgeyByZXR1cm4gVHAodC5nZXRVVENIb3VycygpLCBuLCAyKSB9IGZ1bmN0aW9uIHB2KHQsIG4pIHsgcmV0dXJuIFRwKHQuZ2V0VVRDSG91cnMoKSAlIDEyIHx8IDEyLCBuLCAyKSB9IGZ1bmN0aW9uIHZ2KHQsIG4pIHsgcmV0dXJuIFRwKDEgKyBXZC5jb3VudChwcCh0KSwgdCksIG4sIDMpIH0gZnVuY3Rpb24gZ3YodCwgbikgeyByZXR1cm4gVHAodC5nZXRVVENNaWxsaXNlY29uZHMoKSwgbiwgMykgfSBmdW5jdGlvbiB5dih0LCBuKSB7IHJldHVybiBndih0LCBuKSArICIwMDAiIH0gZnVuY3Rpb24gX3YodCwgbikgeyByZXR1cm4gVHAodC5nZXRVVENNb250aCgpICsgMSwgbiwgMikgfSBmdW5jdGlvbiBidih0LCBuKSB7IHJldHVybiBUcCh0LmdldFVUQ01pbnV0ZXMoKSwgbiwgMikgfSBmdW5jdGlvbiBtdih0LCBuKSB7IHJldHVybiBUcCh0LmdldFVUQ1NlY29uZHMoKSwgbiwgMikgfSBmdW5jdGlvbiB4dih0KSB7IHZhciBuID0gdC5nZXRVVENEYXkoKTsgcmV0dXJuIDAgPT09IG4gPyA3IDogbiB9IGZ1bmN0aW9uIHd2KHQsIG4pIHsgcmV0dXJuIFRwKEtkLmNvdW50KHBwKHQpIC0gMSwgdCksIG4sIDIpIH0gZnVuY3Rpb24gTXYodCwgbikgeyB2YXIgZSA9IHQuZ2V0VVRDRGF5KCk7IHJldHVybiB0ID0gZSA+PSA0IHx8IDAgPT09IGUgPyBlcCh0KSA6IGVwLmNlaWwodCksIFRwKGVwLmNvdW50KHBwKHQpLCB0KSArICg0ID09PSBwcCh0KS5nZXRVVENEYXkoKSksIG4sIDIpIH0gZnVuY3Rpb24gTnYodCkgeyByZXR1cm4gdC5nZXRVVENEYXkoKSB9IGZ1bmN0aW9uIFR2KHQsIG4pIHsgcmV0dXJuIFRwKEpkLmNvdW50KHBwKHQpIC0gMSwgdCksIG4sIDIpIH0gZnVuY3Rpb24gQXYodCwgbikgeyByZXR1cm4gVHAodC5nZXRVVENGdWxsWWVhcigpICUgMTAwLCBuLCAyKSB9IGZ1bmN0aW9uIFN2KHQsIG4pIHsgcmV0dXJuIFRwKHQuZ2V0VVRDRnVsbFllYXIoKSAlIDFlNCwgbiwgNCkgfSBmdW5jdGlvbiBrdigpIHsgcmV0dXJuICIrMDAwMCIgfSBmdW5jdGlvbiBFdigpIHsgcmV0dXJuICIlIiB9IGZ1bmN0aW9uIEN2KHQpIHsgcmV0dXJuICt0IH0gZnVuY3Rpb24gUHYodCkgeyByZXR1cm4gTWF0aC5mbG9vcigrdCAvIDFlMykgfSBmdW5jdGlvbiB6dihuKSB7IHJldHVybiBtcCA9IGJwKG4pLCB0LnRpbWVGb3JtYXQgPSBtcC5mb3JtYXQsIHQudGltZVBhcnNlID0gbXAucGFyc2UsIHQudXRjRm9ybWF0ID0gbXAudXRjRm9ybWF0LCB0LnV0Y1BhcnNlID0gbXAudXRjUGFyc2UsIG1wIH0genYoeyBkYXRlVGltZTogIiV4LCAlWCIsIGRhdGU6ICIlLW0vJS1kLyVZIiwgdGltZTogIiUtSTolTTolUyAlcCIsIHBlcmlvZHM6IFsiQU0iLCAiUE0iXSwgZGF5czogWyJTdW5kYXkiLCAiTW9uZGF5IiwgIlR1ZXNkYXkiLCAiV2VkbmVzZGF5IiwgIlRodXJzZGF5IiwgIkZyaWRheSIsICJTYXR1cmRheSJdLCBzaG9ydERheXM6IFsiU3VuIiwgIk1vbiIsICJUdWUiLCAiV2VkIiwgIlRodSIsICJGcmkiLCAiU2F0Il0sIG1vbnRoczogWyJKYW51YXJ5IiwgIkZlYnJ1YXJ5IiwgIk1hcmNoIiwgIkFwcmlsIiwgIk1heSIsICJKdW5lIiwgIkp1bHkiLCAiQXVndXN0IiwgIlNlcHRlbWJlciIsICJPY3RvYmVyIiwgIk5vdmVtYmVyIiwgIkRlY2VtYmVyIl0sIHNob3J0TW9udGhzOiBbIkphbiIsICJGZWIiLCAiTWFyIiwgIkFwciIsICJNYXkiLCAiSnVuIiwgIkp1bCIsICJBdWciLCAiU2VwIiwgIk9jdCIsICJOb3YiLCAiRGVjIl0gfSk7IHZhciBSdiA9IERhdGUucHJvdG90eXBlLnRvSVNPU3RyaW5nID8gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQudG9JU09TdHJpbmcoKSB9IDogdC51dGNGb3JtYXQoIiVZLSVtLSVkVCVIOiVNOiVTLiVMWiIpOyB2YXIgRHYgPSArbmV3IERhdGUoIjIwMDAtMDEtMDFUMDA6MDA6MDAuMDAwWiIpID8gZnVuY3Rpb24gKHQpIHsgdmFyIG4gPSBuZXcgRGF0ZSh0KTsgcmV0dXJuIGlzTmFOKG4pID8gbnVsbCA6IG4gfSA6IHQudXRjUGFyc2UoIiVZLSVtLSVkVCVIOiVNOiVTLiVMWiIpLCBxdiA9IDFlMywgTHYgPSA2MCAqIHF2LCBVdiA9IDYwICogTHYsIE92ID0gMjQgKiBVdiwgQnYgPSA3ICogT3YsIEZ2ID0gMzAgKiBPdiwgWXYgPSAzNjUgKiBPdjsgZnVuY3Rpb24gSXYodCkgeyByZXR1cm4gbmV3IERhdGUodCkgfSBmdW5jdGlvbiBIdih0KSB7IHJldHVybiB0IGluc3RhbmNlb2YgRGF0ZSA/ICt0IDogK25ldyBEYXRlKCt0KSB9IGZ1bmN0aW9uIGp2KHQsIG4sIHIsIGksIG8sIGEsIHUsIGMsIGYpIHsgdmFyIHMgPSBWaChCaCwgQmgpLCBsID0gcy5pbnZlcnQsIGggPSBzLmRvbWFpbiwgZCA9IGYoIi4lTCIpLCBwID0gZigiOiVTIiksIHYgPSBmKCIlSTolTSIpLCBnID0gZigiJUkgJXAiKSwgeSA9IGYoIiVhICVkIiksIF8gPSBmKCIlYiAlZCIpLCBiID0gZigiJUIiKSwgbSA9IGYoIiVZIiksIHggPSBbW3UsIDEsIHF2XSwgW3UsIDUsIDUgKiBxdl0sIFt1LCAxNSwgMTUgKiBxdl0sIFt1LCAzMCwgMzAgKiBxdl0sIFthLCAxLCBMdl0sIFthLCA1LCA1ICogTHZdLCBbYSwgMTUsIDE1ICogTHZdLCBbYSwgMzAsIDMwICogTHZdLCBbbywgMSwgVXZdLCBbbywgMywgMyAqIFV2XSwgW28sIDYsIDYgKiBVdl0sIFtvLCAxMiwgMTIgKiBVdl0sIFtpLCAxLCBPdl0sIFtpLCAyLCAyICogT3ZdLCBbciwgMSwgQnZdLCBbbiwgMSwgRnZdLCBbbiwgMywgMyAqIEZ2XSwgW3QsIDEsIFl2XV07IGZ1bmN0aW9uIE0oZSkgeyByZXR1cm4gKHUoZSkgPCBlID8gZCA6IGEoZSkgPCBlID8gcCA6IG8oZSkgPCBlID8gdiA6IGkoZSkgPCBlID8gZyA6IG4oZSkgPCBlID8gcihlKSA8IGUgPyB5IDogXyA6IHQoZSkgPCBlID8gYiA6IG0pKGUpIH0gZnVuY3Rpb24gTihuLCByLCBpLCBvKSB7IGlmIChudWxsID09IG4gJiYgKG4gPSAxMCksICJudW1iZXIiID09IHR5cGVvZiBuKSB7IHZhciBhID0gTWF0aC5hYnMoaSAtIHIpIC8gbiwgdSA9IGUoZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHRbMl0gfSkucmlnaHQoeCwgYSk7IHUgPT09IHgubGVuZ3RoID8gKG8gPSB3KHIgLyBZdiwgaSAvIFl2LCBuKSwgbiA9IHQpIDogdSA/IChvID0gKHUgPSB4W2EgLyB4W3UgLSAxXVsyXSA8IHhbdV1bMl0gLyBhID8gdSAtIDEgOiB1XSlbMV0sIG4gPSB1WzBdKSA6IChvID0gTWF0aC5tYXgodyhyLCBpLCBuKSwgMSksIG4gPSBjKSB9IHJldHVybiBudWxsID09IG8gPyBuIDogbi5ldmVyeShvKSB9IHJldHVybiBzLmludmVydCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBuZXcgRGF0ZShsKHQpKSB9LCBzLmRvbWFpbiA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gaCh6aC5jYWxsKHQsIEh2KSkgOiBoKCkubWFwKEl2KSB9LCBzLnRpY2tzID0gZnVuY3Rpb24gKHQsIG4pIHsgdmFyIGUsIHIgPSBoKCksIGkgPSByWzBdLCBvID0gcltyLmxlbmd0aCAtIDFdLCBhID0gbyA8IGk7IHJldHVybiBhICYmIChlID0gaSwgaSA9IG8sIG8gPSBlKSwgZSA9IChlID0gTih0LCBpLCBvLCBuKSkgPyBlLnJhbmdlKGksIG8gKyAxKSA6IFtdLCBhID8gZS5yZXZlcnNlKCkgOiBlIH0sIHMudGlja0Zvcm1hdCA9IGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiBudWxsID09IG4gPyBNIDogZihuKSB9LCBzLm5pY2UgPSBmdW5jdGlvbiAodCwgbikgeyB2YXIgZSA9IGgoKTsgcmV0dXJuICh0ID0gTih0LCBlWzBdLCBlW2UubGVuZ3RoIC0gMV0sIG4pKSA/IGgoV2goZSwgdCkpIDogcyB9LCBzLmNvcHkgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBqaChzLCBqdih0LCBuLCByLCBpLCBvLCBhLCB1LCBjLCBmKSkgfSwgcyB9IGZ1bmN0aW9uIFh2KCkgeyB2YXIgdCwgbiwgZSwgciwgaSwgbyA9IDAsIGEgPSAxLCB1ID0gQmgsIGMgPSAhMTsgZnVuY3Rpb24gZihuKSB7IHJldHVybiBpc05hTihuID0gK24pID8gaSA6IHUoMCA9PT0gZSA/IC41IDogKG4gPSAocihuKSAtIHQpICogZSwgYyA/IE1hdGgubWF4KDAsIE1hdGgubWluKDEsIG4pKSA6IG4pKSB9IHJldHVybiBmLmRvbWFpbiA9IGZ1bmN0aW9uIChpKSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHQgPSByKG8gPSAraVswXSksIG4gPSByKGEgPSAraVsxXSksIGUgPSB0ID09PSBuID8gMCA6IDEgLyAobiAtIHQpLCBmKSA6IFtvLCBhXSB9LCBmLmNsYW1wID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYyA9ICEhdCwgZikgOiBjIH0sIGYuaW50ZXJwb2xhdG9yID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodSA9IHQsIGYpIDogdSB9LCBmLnVua25vd24gPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChpID0gdCwgZikgOiBpIH0sIGZ1bmN0aW9uIChpKSB7IHJldHVybiByID0gaSwgdCA9IGkobyksIG4gPSBpKGEpLCBlID0gdCA9PT0gbiA/IDAgOiAxIC8gKG4gLSB0KSwgZiB9IH0gZnVuY3Rpb24gVnYodCwgbikgeyByZXR1cm4gbi5kb21haW4odC5kb21haW4oKSkuaW50ZXJwb2xhdG9yKHQuaW50ZXJwb2xhdG9yKCkpLmNsYW1wKHQuY2xhbXAoKSkudW5rbm93bih0LnVua25vd24oKSkgfSBmdW5jdGlvbiBHdigpIHsgdmFyIHQgPSBmZChYdigpKTsgcmV0dXJuIHQuY29weSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFZ2KHQsIEd2KCkpLmV4cG9uZW50KHQuZXhwb25lbnQoKSkgfSwgQ2guYXBwbHkodCwgYXJndW1lbnRzKSB9IGZ1bmN0aW9uICR2KCkgeyB2YXIgdCwgbiwgZSwgciwgaSwgbywgYSwgdSA9IDAsIGMgPSAuNSwgZiA9IDEsIHMgPSBCaCwgbCA9ICExOyBmdW5jdGlvbiBoKHQpIHsgcmV0dXJuIGlzTmFOKHQgPSArdCkgPyBhIDogKHQgPSAuNSArICgodCA9ICtvKHQpKSAtIG4pICogKHQgPCBuID8gciA6IGkpLCBzKGwgPyBNYXRoLm1heCgwLCBNYXRoLm1pbigxLCB0KSkgOiB0KSkgfSByZXR1cm4gaC5kb21haW4gPSBmdW5jdGlvbiAoYSkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0ID0gbyh1ID0gK2FbMF0pLCBuID0gbyhjID0gK2FbMV0pLCBlID0gbyhmID0gK2FbMl0pLCByID0gdCA9PT0gbiA/IDAgOiAuNSAvIChuIC0gdCksIGkgPSBuID09PSBlID8gMCA6IC41IC8gKGUgLSBuKSwgaCkgOiBbdSwgYywgZl0gfSwgaC5jbGFtcCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGwgPSAhIXQsIGgpIDogbCB9LCBoLmludGVycG9sYXRvciA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHMgPSB0LCBoKSA6IHMgfSwgaC51bmtub3duID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYSA9IHQsIGgpIDogYSB9LCBmdW5jdGlvbiAoYSkgeyByZXR1cm4gbyA9IGEsIHQgPSBhKHUpLCBuID0gYShjKSwgZSA9IGEoZiksIHIgPSB0ID09PSBuID8gMCA6IC41IC8gKG4gLSB0KSwgaSA9IG4gPT09IGUgPyAwIDogLjUgLyAoZSAtIG4pLCBoIH0gfSBmdW5jdGlvbiBXdigpIHsgdmFyIHQgPSBmZCgkdigpKTsgcmV0dXJuIHQuY29weSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFZ2KHQsIFd2KCkpLmV4cG9uZW50KHQuZXhwb25lbnQoKSkgfSwgQ2guYXBwbHkodCwgYXJndW1lbnRzKSB9IGZ1bmN0aW9uIFp2KHQpIHsgZm9yICh2YXIgbiA9IHQubGVuZ3RoIC8gNiB8IDAsIGUgPSBuZXcgQXJyYXkobiksIHIgPSAwOyByIDwgbjspZVtyXSA9ICIjIiArIHQuc2xpY2UoNiAqIHIsIDYgKiArK3IpOyByZXR1cm4gZSB9IHZhciBRdiA9IFp2KCIxZjc3YjRmZjdmMGUyY2EwMmNkNjI3Mjg5NDY3YmQ4YzU2NGJlMzc3YzI3ZjdmN2ZiY2JkMjIxN2JlY2YiKSwgS3YgPSBadigiN2ZjOTdmYmVhZWQ0ZmRjMDg2ZmZmZjk5Mzg2Y2IwZjAwMjdmYmY1YjE3NjY2NjY2IiksIEp2ID0gWnYoIjFiOWU3N2Q5NWYwMjc1NzBiM2U3Mjk4YTY2YTYxZWU2YWIwMmE2NzYxZDY2NjY2NiIpLCB0ZyA9IFp2KCJhNmNlZTMxZjc4YjRiMmRmOGEzM2EwMmNmYjlhOTllMzFhMWNmZGJmNmZmZjdmMDBjYWIyZDY2YTNkOWFmZmZmOTliMTU5MjgiKSwgbmcgPSBadigiZmJiNGFlYjNjZGUzY2NlYmM1ZGVjYmU0ZmVkOWE2ZmZmZmNjZTVkOGJkZmRkYWVjZjJmMmYyIiksIGVnID0gWnYoImIzZTJjZGZkY2RhY2NiZDVlOGY0Y2FlNGU2ZjVjOWZmZjJhZWYxZTJjY2NjY2NjYyIpLCByZyA9IFp2KCJlNDFhMWMzNzdlYjg0ZGFmNGE5ODRlYTNmZjdmMDBmZmZmMzNhNjU2MjhmNzgxYmY5OTk5OTkiKSwgaWcgPSBadigiNjZjMmE1ZmM4ZDYyOGRhMGNiZTc4YWMzYTZkODU0ZmZkOTJmZTVjNDk0YjNiM2IzIiksIG9nID0gWnYoIjhkZDNjN2ZmZmZiM2JlYmFkYWZiODA3MjgwYjFkM2ZkYjQ2MmIzZGU2OWZjY2RlNWQ5ZDlkOWJjODBiZGNjZWJjNWZmZWQ2ZiIpLCBhZyA9IFp2KCI0ZTc5YTdmMjhlMmNlMTU3NTk3NmI3YjI1OWExNGZlZGM5NDlhZjdhYTFmZjlkYTc5Yzc1NWZiYWIwYWIiKTsgZnVuY3Rpb24gdWcodCkgeyByZXR1cm4gcGUodFt0Lmxlbmd0aCAtIDFdKSB9IHZhciBjZyA9IG5ldyBBcnJheSgzKS5jb25jYXQoImQ4YjM2NWY1ZjVmNTVhYjRhYyIsICJhNjYxMWFkZmMyN2Q4MGNkYzEwMTg1NzEiLCAiYTY2MTFhZGZjMjdkZjVmNWY1ODBjZGMxMDE4NTcxIiwgIjhjNTEwYWQ4YjM2NWY2ZThjM2M3ZWFlNTVhYjRhYzAxNjY1ZSIsICI4YzUxMGFkOGIzNjVmNmU4YzNmNWY1ZjVjN2VhZTU1YWI0YWMwMTY2NWUiLCAiOGM1MTBhYmY4MTJkZGZjMjdkZjZlOGMzYzdlYWU1ODBjZGMxMzU5NzhmMDE2NjVlIiwgIjhjNTEwYWJmODEyZGRmYzI3ZGY2ZThjM2Y1ZjVmNWM3ZWFlNTgwY2RjMTM1OTc4ZjAxNjY1ZSIsICI1NDMwMDU4YzUxMGFiZjgxMmRkZmMyN2RmNmU4YzNjN2VhZTU4MGNkYzEzNTk3OGYwMTY2NWUwMDNjMzAiLCAiNTQzMDA1OGM1MTBhYmY4MTJkZGZjMjdkZjZlOGMzZjVmNWY1YzdlYWU1ODBjZGMxMzU5NzhmMDE2NjVlMDAzYzMwIikubWFwKFp2KSwgZmcgPSB1ZyhjZyksIHNnID0gbmV3IEFycmF5KDMpLmNvbmNhdCgiYWY4ZGMzZjdmN2Y3N2ZiZjdiIiwgIjdiMzI5NGMyYTVjZmE2ZGJhMDAwODgzNyIsICI3YjMyOTRjMmE1Y2ZmN2Y3ZjdhNmRiYTAwMDg4MzciLCAiNzYyYTgzYWY4ZGMzZTdkNGU4ZDlmMGQzN2ZiZjdiMWI3ODM3IiwgIjc2MmE4M2FmOGRjM2U3ZDRlOGY3ZjdmN2Q5ZjBkMzdmYmY3YjFiNzgzNyIsICI3NjJhODM5OTcwYWJjMmE1Y2ZlN2Q0ZThkOWYwZDNhNmRiYTA1YWFlNjExYjc4MzciLCAiNzYyYTgzOTk3MGFiYzJhNWNmZTdkNGU4ZjdmN2Y3ZDlmMGQzYTZkYmEwNWFhZTYxMWI3ODM3IiwgIjQwMDA0Yjc2MmE4Mzk5NzBhYmMyYTVjZmU3ZDRlOGQ5ZjBkM2E2ZGJhMDVhYWU2MTFiNzgzNzAwNDQxYiIsICI0MDAwNGI3NjJhODM5OTcwYWJjMmE1Y2ZlN2Q0ZThmN2Y3ZjdkOWYwZDNhNmRiYTA1YWFlNjExYjc4MzcwMDQ0MWIiKS5tYXAoWnYpLCBsZyA9IHVnKHNnKSwgaGcgPSBuZXcgQXJyYXkoMykuY29uY2F0KCJlOWEzYzlmN2Y3ZjdhMWQ3NmEiLCAiZDAxYzhiZjFiNmRhYjhlMTg2NGRhYzI2IiwgImQwMWM4YmYxYjZkYWY3ZjdmN2I4ZTE4NjRkYWMyNiIsICJjNTFiN2RlOWEzYzlmZGUwZWZlNmY1ZDBhMWQ3NmE0ZDkyMjEiLCAiYzUxYjdkZTlhM2M5ZmRlMGVmZjdmN2Y3ZTZmNWQwYTFkNzZhNGQ5MjIxIiwgImM1MWI3ZGRlNzdhZWYxYjZkYWZkZTBlZmU2ZjVkMGI4ZTE4NjdmYmM0MTRkOTIyMSIsICJjNTFiN2RkZTc3YWVmMWI2ZGFmZGUwZWZmN2Y3ZjdlNmY1ZDBiOGUxODY3ZmJjNDE0ZDkyMjEiLCAiOGUwMTUyYzUxYjdkZGU3N2FlZjFiNmRhZmRlMGVmZTZmNWQwYjhlMTg2N2ZiYzQxNGQ5MjIxMjc2NDE5IiwgIjhlMDE1MmM1MWI3ZGRlNzdhZWYxYjZkYWZkZTBlZmY3ZjdmN2U2ZjVkMGI4ZTE4NjdmYmM0MTRkOTIyMTI3NjQxOSIpLm1hcChadiksIGRnID0gdWcoaGcpLCBwZyA9IG5ldyBBcnJheSgzKS5jb25jYXQoIjk5OGVjM2Y3ZjdmN2YxYTM0MCIsICI1ZTNjOTliMmFiZDJmZGI4NjNlNjYxMDEiLCAiNWUzYzk5YjJhYmQyZjdmN2Y3ZmRiODYzZTY2MTAxIiwgIjU0Mjc4ODk5OGVjM2Q4ZGFlYmZlZTBiNmYxYTM0MGIzNTgwNiIsICI1NDI3ODg5OThlYzNkOGRhZWJmN2Y3ZjdmZWUwYjZmMWEzNDBiMzU4MDYiLCAiNTQyNzg4ODA3M2FjYjJhYmQyZDhkYWViZmVlMGI2ZmRiODYzZTA4MjE0YjM1ODA2IiwgIjU0Mjc4ODgwNzNhY2IyYWJkMmQ4ZGFlYmY3ZjdmN2ZlZTBiNmZkYjg2M2UwODIxNGIzNTgwNiIsICIyZDAwNGI1NDI3ODg4MDczYWNiMmFiZDJkOGRhZWJmZWUwYjZmZGI4NjNlMDgyMTRiMzU4MDY3ZjNiMDgiLCAiMmQwMDRiNTQyNzg4ODA3M2FjYjJhYmQyZDhkYWViZjdmN2Y3ZmVlMGI2ZmRiODYzZTA4MjE0YjM1ODA2N2YzYjA4IikubWFwKFp2KSwgdmcgPSB1ZyhwZyksIGdnID0gbmV3IEFycmF5KDMpLmNvbmNhdCgiZWY4YTYyZjdmN2Y3NjdhOWNmIiwgImNhMDAyMGY0YTU4MjkyYzVkZTA1NzFiMCIsICJjYTAwMjBmNGE1ODJmN2Y3Zjc5MmM1ZGUwNTcxYjAiLCAiYjIxODJiZWY4YTYyZmRkYmM3ZDFlNWYwNjdhOWNmMjE2NmFjIiwgImIyMTgyYmVmOGE2MmZkZGJjN2Y3ZjdmN2QxZTVmMDY3YTljZjIxNjZhYyIsICJiMjE4MmJkNjYwNGRmNGE1ODJmZGRiYzdkMWU1ZjA5MmM1ZGU0MzkzYzMyMTY2YWMiLCAiYjIxODJiZDY2MDRkZjRhNTgyZmRkYmM3ZjdmN2Y3ZDFlNWYwOTJjNWRlNDM5M2MzMjE2NmFjIiwgIjY3MDAxZmIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2QxZTVmMDkyYzVkZTQzOTNjMzIxNjZhYzA1MzA2MSIsICI2NzAwMWZiMjE4MmJkNjYwNGRmNGE1ODJmZGRiYzdmN2Y3ZjdkMWU1ZjA5MmM1ZGU0MzkzYzMyMTY2YWMwNTMwNjEiKS5tYXAoWnYpLCB5ZyA9IHVnKGdnKSwgX2cgPSBuZXcgQXJyYXkoMykuY29uY2F0KCJlZjhhNjJmZmZmZmY5OTk5OTkiLCAiY2EwMDIwZjRhNTgyYmFiYWJhNDA0MDQwIiwgImNhMDAyMGY0YTU4MmZmZmZmZmJhYmFiYTQwNDA0MCIsICJiMjE4MmJlZjhhNjJmZGRiYzdlMGUwZTA5OTk5OTk0ZDRkNGQiLCAiYjIxODJiZWY4YTYyZmRkYmM3ZmZmZmZmZTBlMGUwOTk5OTk5NGQ0ZDRkIiwgImIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2UwZTBlMGJhYmFiYTg3ODc4NzRkNGQ0ZCIsICJiMjE4MmJkNjYwNGRmNGE1ODJmZGRiYzdmZmZmZmZlMGUwZTBiYWJhYmE4Nzg3ODc0ZDRkNGQiLCAiNjcwMDFmYjIxODJiZDY2MDRkZjRhNTgyZmRkYmM3ZTBlMGUwYmFiYWJhODc4Nzg3NGQ0ZDRkMWExYTFhIiwgIjY3MDAxZmIyMTgyYmQ2NjA0ZGY0YTU4MmZkZGJjN2ZmZmZmZmUwZTBlMGJhYmFiYTg3ODc4NzRkNGQ0ZDFhMWExYSIpLm1hcChadiksIGJnID0gdWcoX2cpLCBtZyA9IG5ldyBBcnJheSgzKS5jb25jYXQoImZjOGQ1OWZmZmZiZjkxYmZkYiIsICJkNzE5MWNmZGFlNjFhYmQ5ZTkyYzdiYjYiLCAiZDcxOTFjZmRhZTYxZmZmZmJmYWJkOWU5MmM3YmI2IiwgImQ3MzAyN2ZjOGQ1OWZlZTA5MGUwZjNmODkxYmZkYjQ1NzViNCIsICJkNzMwMjdmYzhkNTlmZWUwOTBmZmZmYmZlMGYzZjg5MWJmZGI0NTc1YjQiLCAiZDczMDI3ZjQ2ZDQzZmRhZTYxZmVlMDkwZTBmM2Y4YWJkOWU5NzRhZGQxNDU3NWI0IiwgImQ3MzAyN2Y0NmQ0M2ZkYWU2MWZlZTA5MGZmZmZiZmUwZjNmOGFiZDllOTc0YWRkMTQ1NzViNCIsICJhNTAwMjZkNzMwMjdmNDZkNDNmZGFlNjFmZWUwOTBlMGYzZjhhYmQ5ZTk3NGFkZDE0NTc1YjQzMTM2OTUiLCAiYTUwMDI2ZDczMDI3ZjQ2ZDQzZmRhZTYxZmVlMDkwZmZmZmJmZTBmM2Y4YWJkOWU5NzRhZGQxNDU3NWI0MzEzNjk1IikubWFwKFp2KSwgeGcgPSB1ZyhtZyksIHdnID0gbmV3IEFycmF5KDMpLmNvbmNhdCgiZmM4ZDU5ZmZmZmJmOTFjZjYwIiwgImQ3MTkxY2ZkYWU2MWE2ZDk2YTFhOTY0MSIsICJkNzE5MWNmZGFlNjFmZmZmYmZhNmQ5NmExYTk2NDEiLCAiZDczMDI3ZmM4ZDU5ZmVlMDhiZDllZjhiOTFjZjYwMWE5ODUwIiwgImQ3MzAyN2ZjOGQ1OWZlZTA4YmZmZmZiZmQ5ZWY4YjkxY2Y2MDFhOTg1MCIsICJkNzMwMjdmNDZkNDNmZGFlNjFmZWUwOGJkOWVmOGJhNmQ5NmE2NmJkNjMxYTk4NTAiLCAiZDczMDI3ZjQ2ZDQzZmRhZTYxZmVlMDhiZmZmZmJmZDllZjhiYTZkOTZhNjZiZDYzMWE5ODUwIiwgImE1MDAyNmQ3MzAyN2Y0NmQ0M2ZkYWU2MWZlZTA4YmQ5ZWY4YmE2ZDk2YTY2YmQ2MzFhOTg1MDAwNjgzNyIsICJhNTAwMjZkNzMwMjdmNDZkNDNmZGFlNjFmZWUwOGJmZmZmYmZkOWVmOGJhNmQ5NmE2NmJkNjMxYTk4NTAwMDY4MzciKS5tYXAoWnYpLCBNZyA9IHVnKHdnKSwgTmcgPSBuZXcgQXJyYXkoMykuY29uY2F0KCJmYzhkNTlmZmZmYmY5OWQ1OTQiLCAiZDcxOTFjZmRhZTYxYWJkZGE0MmI4M2JhIiwgImQ3MTkxY2ZkYWU2MWZmZmZiZmFiZGRhNDJiODNiYSIsICJkNTNlNGZmYzhkNTlmZWUwOGJlNmY1OTg5OWQ1OTQzMjg4YmQiLCAiZDUzZTRmZmM4ZDU5ZmVlMDhiZmZmZmJmZTZmNTk4OTlkNTk0MzI4OGJkIiwgImQ1M2U0ZmY0NmQ0M2ZkYWU2MWZlZTA4YmU2ZjU5OGFiZGRhNDY2YzJhNTMyODhiZCIsICJkNTNlNGZmNDZkNDNmZGFlNjFmZWUwOGJmZmZmYmZlNmY1OThhYmRkYTQ2NmMyYTUzMjg4YmQiLCAiOWUwMTQyZDUzZTRmZjQ2ZDQzZmRhZTYxZmVlMDhiZTZmNTk4YWJkZGE0NjZjMmE1MzI4OGJkNWU0ZmEyIiwgIjllMDE0MmQ1M2U0ZmY0NmQ0M2ZkYWU2MWZlZTA4YmZmZmZiZmU2ZjU5OGFiZGRhNDY2YzJhNTMyODhiZDVlNGZhMiIpLm1hcChadiksIFRnID0gdWcoTmcpLCBBZyA9IG5ldyBBcnJheSgzKS5jb25jYXQoImU1ZjVmOTk5ZDhjOTJjYTI1ZiIsICJlZGY4ZmJiMmUyZTI2NmMyYTQyMzhiNDUiLCAiZWRmOGZiYjJlMmUyNjZjMmE0MmNhMjVmMDA2ZDJjIiwgImVkZjhmYmNjZWNlNjk5ZDhjOTY2YzJhNDJjYTI1ZjAwNmQyYyIsICJlZGY4ZmJjY2VjZTY5OWQ4Yzk2NmMyYTQ0MWFlNzYyMzhiNDUwMDU4MjQiLCAiZjdmY2ZkZTVmNWY5Y2NlY2U2OTlkOGM5NjZjMmE0NDFhZTc2MjM4YjQ1MDA1ODI0IiwgImY3ZmNmZGU1ZjVmOWNjZWNlNjk5ZDhjOTY2YzJhNDQxYWU3NjIzOGI0NTAwNmQyYzAwNDQxYiIpLm1hcChadiksIFNnID0gdWcoQWcpLCBrZyA9IG5ldyBBcnJheSgzKS5jb25jYXQoImUwZWNmNDllYmNkYTg4NTZhNyIsICJlZGY4ZmJiM2NkZTM4Yzk2YzY4ODQxOWQiLCAiZWRmOGZiYjNjZGUzOGM5NmM2ODg1NmE3ODEwZjdjIiwgImVkZjhmYmJmZDNlNjllYmNkYThjOTZjNjg4NTZhNzgxMGY3YyIsICJlZGY4ZmJiZmQzZTY5ZWJjZGE4Yzk2YzY4YzZiYjE4ODQxOWQ2ZTAxNmIiLCAiZjdmY2ZkZTBlY2Y0YmZkM2U2OWViY2RhOGM5NmM2OGM2YmIxODg0MTlkNmUwMTZiIiwgImY3ZmNmZGUwZWNmNGJmZDNlNjllYmNkYThjOTZjNjhjNmJiMTg4NDE5ZDgxMGY3YzRkMDA0YiIpLm1hcChadiksIEVnID0gdWcoa2cpLCBDZyA9IG5ldyBBcnJheSgzKS5jb25jYXQoImUwZjNkYmE4ZGRiNTQzYTJjYSIsICJmMGY5ZThiYWU0YmM3YmNjYzQyYjhjYmUiLCAiZjBmOWU4YmFlNGJjN2JjY2M0NDNhMmNhMDg2OGFjIiwgImYwZjllOGNjZWJjNWE4ZGRiNTdiY2NjNDQzYTJjYTA4NjhhYyIsICJmMGY5ZThjY2ViYzVhOGRkYjU3YmNjYzQ0ZWIzZDMyYjhjYmUwODU4OWUiLCAiZjdmY2YwZTBmM2RiY2NlYmM1YThkZGI1N2JjY2M0NGViM2QzMmI4Y2JlMDg1ODllIiwgImY3ZmNmMGUwZjNkYmNjZWJjNWE4ZGRiNTdiY2NjNDRlYjNkMzJiOGNiZTA4NjhhYzA4NDA4MSIpLm1hcChadiksIFBnID0gdWcoQ2cpLCB6ZyA9IG5ldyBBcnJheSgzKS5jb25jYXQoImZlZThjOGZkYmI4NGUzNGEzMyIsICJmZWYwZDlmZGNjOGFmYzhkNTlkNzMwMWYiLCAiZmVmMGQ5ZmRjYzhhZmM4ZDU5ZTM0YTMzYjMwMDAwIiwgImZlZjBkOWZkZDQ5ZWZkYmI4NGZjOGQ1OWUzNGEzM2IzMDAwMCIsICJmZWYwZDlmZGQ0OWVmZGJiODRmYzhkNTllZjY1NDhkNzMwMWY5OTAwMDAiLCAiZmZmN2VjZmVlOGM4ZmRkNDllZmRiYjg0ZmM4ZDU5ZWY2NTQ4ZDczMDFmOTkwMDAwIiwgImZmZjdlY2ZlZThjOGZkZDQ5ZWZkYmI4NGZjOGQ1OWVmNjU0OGQ3MzAxZmIzMDAwMDdmMDAwMCIpLm1hcChadiksIFJnID0gdWcoemcpLCBEZyA9IG5ldyBBcnJheSgzKS5jb25jYXQoImVjZTJmMGE2YmRkYjFjOTA5OSIsICJmNmVmZjdiZGM5ZTE2N2E5Y2YwMjgxOGEiLCAiZjZlZmY3YmRjOWUxNjdhOWNmMWM5MDk5MDE2YzU5IiwgImY2ZWZmN2QwZDFlNmE2YmRkYjY3YTljZjFjOTA5OTAxNmM1OSIsICJmNmVmZjdkMGQxZTZhNmJkZGI2N2E5Y2YzNjkwYzAwMjgxOGEwMTY0NTAiLCAiZmZmN2ZiZWNlMmYwZDBkMWU2YTZiZGRiNjdhOWNmMzY5MGMwMDI4MThhMDE2NDUwIiwgImZmZjdmYmVjZTJmMGQwZDFlNmE2YmRkYjY3YTljZjM2OTBjMDAyODE4YTAxNmM1OTAxNDYzNiIpLm1hcChadiksIHFnID0gdWcoRGcpLCBMZyA9IG5ldyBBcnJheSgzKS5jb25jYXQoImVjZTdmMmE2YmRkYjJiOGNiZSIsICJmMWVlZjZiZGM5ZTE3NGE5Y2YwNTcwYjAiLCAiZjFlZWY2YmRjOWUxNzRhOWNmMmI4Y2JlMDQ1YThkIiwgImYxZWVmNmQwZDFlNmE2YmRkYjc0YTljZjJiOGNiZTA0NWE4ZCIsICJmMWVlZjZkMGQxZTZhNmJkZGI3NGE5Y2YzNjkwYzAwNTcwYjAwMzRlN2IiLCAiZmZmN2ZiZWNlN2YyZDBkMWU2YTZiZGRiNzRhOWNmMzY5MGMwMDU3MGIwMDM0ZTdiIiwgImZmZjdmYmVjZTdmMmQwZDFlNmE2YmRkYjc0YTljZjM2OTBjMDA1NzBiMDA0NWE4ZDAyMzg1OCIpLm1hcChadiksIFVnID0gdWcoTGcpLCBPZyA9IG5ldyBBcnJheSgzKS5jb25jYXQoImU3ZTFlZmM5OTRjN2RkMWM3NyIsICJmMWVlZjZkN2I1ZDhkZjY1YjBjZTEyNTYiLCAiZjFlZWY2ZDdiNWQ4ZGY2NWIwZGQxYzc3OTgwMDQzIiwgImYxZWVmNmQ0YjlkYWM5OTRjN2RmNjViMGRkMWM3Nzk4MDA0MyIsICJmMWVlZjZkNGI5ZGFjOTk0YzdkZjY1YjBlNzI5OGFjZTEyNTY5MTAwM2YiLCAiZjdmNGY5ZTdlMWVmZDRiOWRhYzk5NGM3ZGY2NWIwZTcyOThhY2UxMjU2OTEwMDNmIiwgImY3ZjRmOWU3ZTFlZmQ0YjlkYWM5OTRjN2RmNjViMGU3Mjk4YWNlMTI1Njk4MDA0MzY3MDAxZiIpLm1hcChadiksIEJnID0gdWcoT2cpLCBGZyA9IG5ldyBBcnJheSgzKS5jb25jYXQoImZkZTBkZGZhOWZiNWM1MWI4YSIsICJmZWViZTJmYmI0YjlmNzY4YTFhZTAxN2UiLCAiZmVlYmUyZmJiNGI5Zjc2OGExYzUxYjhhN2EwMTc3IiwgImZlZWJlMmZjYzVjMGZhOWZiNWY3NjhhMWM1MWI4YTdhMDE3NyIsICJmZWViZTJmY2M1YzBmYTlmYjVmNzY4YTFkZDM0OTdhZTAxN2U3YTAxNzciLCAiZmZmN2YzZmRlMGRkZmNjNWMwZmE5ZmI1Zjc2OGExZGQzNDk3YWUwMTdlN2EwMTc3IiwgImZmZjdmM2ZkZTBkZGZjYzVjMGZhOWZiNWY3NjhhMWRkMzQ5N2FlMDE3ZTdhMDE3NzQ5MDA2YSIpLm1hcChadiksIFlnID0gdWcoRmcpLCBJZyA9IG5ldyBBcnJheSgzKS5jb25jYXQoImVkZjhiMTdmY2RiYjJjN2ZiOCIsICJmZmZmY2NhMWRhYjQ0MWI2YzQyMjVlYTgiLCAiZmZmZmNjYTFkYWI0NDFiNmM0MmM3ZmI4MjUzNDk0IiwgImZmZmZjY2M3ZTliNDdmY2RiYjQxYjZjNDJjN2ZiODI1MzQ5NCIsICJmZmZmY2NjN2U5YjQ3ZmNkYmI0MWI2YzQxZDkxYzAyMjVlYTgwYzJjODQiLCAiZmZmZmQ5ZWRmOGIxYzdlOWI0N2ZjZGJiNDFiNmM0MWQ5MWMwMjI1ZWE4MGMyYzg0IiwgImZmZmZkOWVkZjhiMWM3ZTliNDdmY2RiYjQxYjZjNDFkOTFjMDIyNWVhODI1MzQ5NDA4MWQ1OCIpLm1hcChadiksIEhnID0gdWcoSWcpLCBqZyA9IG5ldyBBcnJheSgzKS5jb25jYXQoImY3ZmNiOWFkZGQ4ZTMxYTM1NCIsICJmZmZmY2NjMmU2OTk3OGM2NzkyMzg0NDMiLCAiZmZmZmNjYzJlNjk5NzhjNjc5MzFhMzU0MDA2ODM3IiwgImZmZmZjY2Q5ZjBhM2FkZGQ4ZTc4YzY3OTMxYTM1NDAwNjgzNyIsICJmZmZmY2NkOWYwYTNhZGRkOGU3OGM2Nzk0MWFiNWQyMzg0NDMwMDVhMzIiLCAiZmZmZmU1ZjdmY2I5ZDlmMGEzYWRkZDhlNzhjNjc5NDFhYjVkMjM4NDQzMDA1YTMyIiwgImZmZmZlNWY3ZmNiOWQ5ZjBhM2FkZGQ4ZTc4YzY3OTQxYWI1ZDIzODQ0MzAwNjgzNzAwNDUyOSIpLm1hcChadiksIFhnID0gdWcoamcpLCBWZyA9IG5ldyBBcnJheSgzKS5jb25jYXQoImZmZjdiY2ZlYzQ0ZmQ5NWYwZSIsICJmZmZmZDRmZWQ5OGVmZTk5MjljYzRjMDIiLCAiZmZmZmQ0ZmVkOThlZmU5OTI5ZDk1ZjBlOTkzNDA0IiwgImZmZmZkNGZlZTM5MWZlYzQ0ZmZlOTkyOWQ5NWYwZTk5MzQwNCIsICJmZmZmZDRmZWUzOTFmZWM0NGZmZTk5MjllYzcwMTRjYzRjMDI4YzJkMDQiLCAiZmZmZmU1ZmZmN2JjZmVlMzkxZmVjNDRmZmU5OTI5ZWM3MDE0Y2M0YzAyOGMyZDA0IiwgImZmZmZlNWZmZjdiY2ZlZTM5MWZlYzQ0ZmZlOTkyOWVjNzAxNGNjNGMwMjk5MzQwNDY2MjUwNiIpLm1hcChadiksIEdnID0gdWcoVmcpLCAkZyA9IG5ldyBBcnJheSgzKS5jb25jYXQoImZmZWRhMGZlYjI0Y2YwM2IyMCIsICJmZmZmYjJmZWNjNWNmZDhkM2NlMzFhMWMiLCAiZmZmZmIyZmVjYzVjZmQ4ZDNjZjAzYjIwYmQwMDI2IiwgImZmZmZiMmZlZDk3NmZlYjI0Y2ZkOGQzY2YwM2IyMGJkMDAyNiIsICJmZmZmYjJmZWQ5NzZmZWIyNGNmZDhkM2NmYzRlMmFlMzFhMWNiMTAwMjYiLCAiZmZmZmNjZmZlZGEwZmVkOTc2ZmViMjRjZmQ4ZDNjZmM0ZTJhZTMxYTFjYjEwMDI2IiwgImZmZmZjY2ZmZWRhMGZlZDk3NmZlYjI0Y2ZkOGQzY2ZjNGUyYWUzMWExY2JkMDAyNjgwMDAyNiIpLm1hcChadiksIFdnID0gdWcoJGcpLCBaZyA9IG5ldyBBcnJheSgzKS5jb25jYXQoImRlZWJmNzllY2FlMTMxODJiZCIsICJlZmYzZmZiZGQ3ZTc2YmFlZDYyMTcxYjUiLCAiZWZmM2ZmYmRkN2U3NmJhZWQ2MzE4MmJkMDg1MTljIiwgImVmZjNmZmM2ZGJlZjllY2FlMTZiYWVkNjMxODJiZDA4NTE5YyIsICJlZmYzZmZjNmRiZWY5ZWNhZTE2YmFlZDY0MjkyYzYyMTcxYjUwODQ1OTQiLCAiZjdmYmZmZGVlYmY3YzZkYmVmOWVjYWUxNmJhZWQ2NDI5MmM2MjE3MWI1MDg0NTk0IiwgImY3ZmJmZmRlZWJmN2M2ZGJlZjllY2FlMTZiYWVkNjQyOTJjNjIxNzFiNTA4NTE5YzA4MzA2YiIpLm1hcChadiksIFFnID0gdWcoWmcpLCBLZyA9IG5ldyBBcnJheSgzKS5jb25jYXQoImU1ZjVlMGExZDk5YjMxYTM1NCIsICJlZGY4ZTliYWU0YjM3NGM0NzYyMzhiNDUiLCAiZWRmOGU5YmFlNGIzNzRjNDc2MzFhMzU0MDA2ZDJjIiwgImVkZjhlOWM3ZTljMGExZDk5Yjc0YzQ3NjMxYTM1NDAwNmQyYyIsICJlZGY4ZTljN2U5YzBhMWQ5OWI3NGM0NzY0MWFiNWQyMzhiNDUwMDVhMzIiLCAiZjdmY2Y1ZTVmNWUwYzdlOWMwYTFkOTliNzRjNDc2NDFhYjVkMjM4YjQ1MDA1YTMyIiwgImY3ZmNmNWU1ZjVlMGM3ZTljMGExZDk5Yjc0YzQ3NjQxYWI1ZDIzOGI0NTAwNmQyYzAwNDQxYiIpLm1hcChadiksIEpnID0gdWcoS2cpLCB0eSA9IG5ldyBBcnJheSgzKS5jb25jYXQoImYwZjBmMGJkYmRiZDYzNjM2MyIsICJmN2Y3ZjdjY2NjY2M5Njk2OTY1MjUyNTIiLCAiZjdmN2Y3Y2NjY2NjOTY5Njk2NjM2MzYzMjUyNTI1IiwgImY3ZjdmN2Q5ZDlkOWJkYmRiZDk2OTY5NjYzNjM2MzI1MjUyNSIsICJmN2Y3ZjdkOWQ5ZDliZGJkYmQ5Njk2OTY3MzczNzM1MjUyNTIyNTI1MjUiLCAiZmZmZmZmZjBmMGYwZDlkOWQ5YmRiZGJkOTY5Njk2NzM3MzczNTI1MjUyMjUyNTI1IiwgImZmZmZmZmYwZjBmMGQ5ZDlkOWJkYmRiZDk2OTY5NjczNzM3MzUyNTI1MjI1MjUyNTAwMDAwMCIpLm1hcChadiksIG55ID0gdWcodHkpLCBleSA9IG5ldyBBcnJheSgzKS5jb25jYXQoImVmZWRmNWJjYmRkYzc1NmJiMSIsICJmMmYwZjdjYmM5ZTI5ZTlhYzg2YTUxYTMiLCAiZjJmMGY3Y2JjOWUyOWU5YWM4NzU2YmIxNTQyNzhmIiwgImYyZjBmN2RhZGFlYmJjYmRkYzllOWFjODc1NmJiMTU0Mjc4ZiIsICJmMmYwZjdkYWRhZWJiY2JkZGM5ZTlhYzg4MDdkYmE2YTUxYTM0YTE0ODYiLCAiZmNmYmZkZWZlZGY1ZGFkYWViYmNiZGRjOWU5YWM4ODA3ZGJhNmE1MWEzNGExNDg2IiwgImZjZmJmZGVmZWRmNWRhZGFlYmJjYmRkYzllOWFjODgwN2RiYTZhNTFhMzU0Mjc4ZjNmMDA3ZCIpLm1hcChadiksIHJ5ID0gdWcoZXkpLCBpeSA9IG5ldyBBcnJheSgzKS5jb25jYXQoImZlZTBkMmZjOTI3MmRlMmQyNiIsICJmZWU1ZDlmY2FlOTFmYjZhNGFjYjE4MWQiLCAiZmVlNWQ5ZmNhZTkxZmI2YTRhZGUyZDI2YTUwZjE1IiwgImZlZTVkOWZjYmJhMWZjOTI3MmZiNmE0YWRlMmQyNmE1MGYxNSIsICJmZWU1ZDlmY2JiYTFmYzkyNzJmYjZhNGFlZjNiMmNjYjE4MWQ5OTAwMGQiLCAiZmZmNWYwZmVlMGQyZmNiYmExZmM5MjcyZmI2YTRhZWYzYjJjY2IxODFkOTkwMDBkIiwgImZmZjVmMGZlZTBkMmZjYmJhMWZjOTI3MmZiNmE0YWVmM2IyY2NiMTgxZGE1MGYxNTY3MDAwZCIpLm1hcChadiksIG95ID0gdWcoaXkpLCBheSA9IG5ldyBBcnJheSgzKS5jb25jYXQoImZlZTZjZWZkYWU2YmU2NTUwZCIsICJmZWVkZGVmZGJlODVmZDhkM2NkOTQ3MDEiLCAiZmVlZGRlZmRiZTg1ZmQ4ZDNjZTY1NTBkYTYzNjAzIiwgImZlZWRkZWZkZDBhMmZkYWU2YmZkOGQzY2U2NTUwZGE2MzYwMyIsICJmZWVkZGVmZGQwYTJmZGFlNmJmZDhkM2NmMTY5MTNkOTQ4MDE4YzJkMDQiLCAiZmZmNWViZmVlNmNlZmRkMGEyZmRhZTZiZmQ4ZDNjZjE2OTEzZDk0ODAxOGMyZDA0IiwgImZmZjVlYmZlZTZjZWZkZDBhMmZkYWU2YmZkOGQzY2YxNjkxM2Q5NDgwMWE2MzYwMzdmMjcwNCIpLm1hcChadiksIHV5ID0gdWcoYXkpOyB2YXIgY3kgPSBRZShlZSgzMDAsIC41LCAwKSwgZWUoLTI0MCwgLjUsIDEpKSwgZnkgPSBRZShlZSgtMTAwLCAuNzUsIC4zNSksIGVlKDgwLCAxLjUsIC44KSksIHN5ID0gUWUoZWUoMjYwLCAuNzUsIC4zNSksIGVlKDgwLCAxLjUsIC44KSksIGx5ID0gZWUoKTsgdmFyIGh5ID0gX24oKSwgZHkgPSBNYXRoLlBJIC8gMywgcHkgPSAyICogTWF0aC5QSSAvIDM7IGZ1bmN0aW9uIHZ5KHQpIHsgdmFyIG4gPSB0Lmxlbmd0aDsgcmV0dXJuIGZ1bmN0aW9uIChlKSB7IHJldHVybiB0W01hdGgubWF4KDAsIE1hdGgubWluKG4gLSAxLCBNYXRoLmZsb29yKGUgKiBuKSkpXSB9IH0gdmFyIGd5ID0gdnkoWnYoIjQ0MDE1NDQ0MDI1NjQ1MDQ1NzQ1MDU1OTQ2MDc1YTQ2MDg1YzQ2MGE1ZDQ2MGI1ZTQ3MGQ2MDQ3MGU2MTQ3MTA2MzQ3MTE2NDQ3MTM2NTQ4MTQ2NzQ4MTY2ODQ4MTc2OTQ4MTg2YTQ4MWE2YzQ4MWI2ZDQ4MWM2ZTQ4MWQ2ZjQ4MWY3MDQ4MjA3MTQ4MjE3MzQ4MjM3NDQ4MjQ3NTQ4MjU3NjQ4MjY3NzQ4Mjg3ODQ4Mjk3OTQ3MmE3YTQ3MmM3YTQ3MmQ3YjQ3MmU3YzQ3MmY3ZDQ2MzA3ZTQ2MzI3ZTQ2MzM3ZjQ2MzQ4MDQ1MzU4MTQ1Mzc4MTQ1Mzg4MjQ0Mzk4MzQ0M2E4MzQ0M2I4NDQzM2Q4NDQzM2U4NTQyM2Y4NTQyNDA4NjQyNDE4NjQxNDI4NzQxNDQ4NzQwNDU4ODQwNDY4ODNmNDc4ODNmNDg4OTNlNDk4OTNlNGE4OTNlNGM4YTNkNGQ4YTNkNGU4YTNjNGY4YTNjNTA4YjNiNTE4YjNiNTI4YjNhNTM4YjNhNTQ4YzM5NTU4YzM5NTY4YzM4NTg4YzM4NTk4YzM3NWE4YzM3NWI4ZDM2NWM4ZDM2NWQ4ZDM1NWU4ZDM1NWY4ZDM0NjA4ZDM0NjE4ZDMzNjI4ZDMzNjM4ZDMyNjQ4ZTMyNjU4ZTMxNjY4ZTMxNjc4ZTMxNjg4ZTMwNjk4ZTMwNmE4ZTJmNmI4ZTJmNmM4ZTJlNmQ4ZTJlNmU4ZTJlNmY4ZTJkNzA4ZTJkNzE4ZTJjNzE4ZTJjNzI4ZTJjNzM4ZTJiNzQ4ZTJiNzU4ZTJhNzY4ZTJhNzc4ZTJhNzg4ZTI5Nzk4ZTI5N2E4ZTI5N2I4ZTI4N2M4ZTI4N2Q4ZTI3N2U4ZTI3N2Y4ZTI3ODA4ZTI2ODE4ZTI2ODI4ZTI2ODI4ZTI1ODM4ZTI1ODQ4ZTI1ODU4ZTI0ODY4ZTI0ODc4ZTIzODg4ZTIzODk4ZTIzOGE4ZDIyOGI4ZDIyOGM4ZDIyOGQ4ZDIxOGU4ZDIxOGY4ZDIxOTA4ZDIxOTE4YzIwOTI4YzIwOTI4YzIwOTM4YzFmOTQ4YzFmOTU4YjFmOTY4YjFmOTc4YjFmOTg4YjFmOTk4YTFmOWE4YTFlOWI4YTFlOWM4OTFlOWQ4OTFmOWU4OTFmOWY4ODFmYTA4ODFmYTE4ODFmYTE4NzFmYTI4NzIwYTM4NjIwYTQ4NjIxYTU4NTIxYTY4NTIyYTc4NTIyYTg4NDIzYTk4MzI0YWE4MzI1YWI4MjI1YWM4MjI2YWQ4MTI3YWQ4MTI4YWU4MDI5YWY3ZjJhYjA3ZjJjYjE3ZTJkYjI3ZDJlYjM3YzJmYjQ3YzMxYjU3YjMyYjY3YTM0YjY3OTM1Yjc3OTM3Yjg3ODM4Yjk3NzNhYmE3NjNiYmI3NTNkYmM3NDNmYmM3MzQwYmQ3MjQyYmU3MTQ0YmY3MDQ2YzA2ZjQ4YzE2ZTRhYzE2ZDRjYzI2YzRlYzM2YjUwYzQ2YTUyYzU2OTU0YzU2ODU2YzY2NzU4Yzc2NTVhYzg2NDVjYzg2MzVlYzk2MjYwY2E2MDYzY2I1ZjY1Y2I1ZTY3Y2M1YzY5Y2Q1YjZjY2Q1YTZlY2U1ODcwY2Y1NzczZDA1Njc1ZDA1NDc3ZDE1MzdhZDE1MTdjZDI1MDdmZDM0ZTgxZDM0ZDg0ZDQ0Yjg2ZDU0OTg5ZDU0ODhiZDY0NjhlZDY0NTkwZDc0MzkzZDc0MTk1ZDg0MDk4ZDgzZTliZDkzYzlkZDkzYmEwZGEzOWEyZGEzN2E1ZGIzNmE4ZGIzNGFhZGMzMmFkZGMzMGIwZGQyZmIyZGQyZGI1ZGUyYmI4ZGUyOWJhZGUyOGJkZGYyNmMwZGYyNWMyZGYyM2M1ZTAyMWM4ZTAyMGNhZTExZmNkZTExZGQwZTExY2QyZTIxYmQ1ZTIxYWQ4ZTIxOWRhZTMxOWRkZTMxOGRmZTMxOGUyZTQxOGU1ZTQxOWU3ZTQxOWVhZTUxYWVjZTUxYmVmZTUxY2YxZTUxZGY0ZTYxZWY2ZTYyMGY4ZTYyMWZiZTcyM2ZkZTcyNSIpKSwgeXkgPSB2eShadigiMDAwMDA0MDEwMDA1MDEwMTA2MDEwMTA4MDIwMTA5MDIwMjBiMDIwMjBkMDMwMzBmMDMwMzEyMDQwNDE0MDUwNDE2MDYwNTE4MDYwNTFhMDcwNjFjMDgwNzFlMDkwNzIwMGEwODIyMGIwOTI0MGMwOTI2MGQwYTI5MGUwYjJiMTAwYjJkMTEwYzJmMTIwZDMxMTMwZDM0MTQwZTM2MTUwZTM4MTYwZjNiMTgwZjNkMTkxMDNmMWExMDQyMWMxMDQ0MWQxMTQ3MWUxMTQ5MjAxMTRiMjExMTRlMjIxMTUwMjQxMjUzMjUxMjU1MjcxMjU4MjkxMTVhMmExMTVjMmMxMTVmMmQxMTYxMmYxMTYzMzExMTY1MzMxMDY3MzQxMDY5MzYxMDZiMzgxMDZjMzkwZjZlM2IwZjcwM2QwZjcxM2YwZjcyNDAwZjc0NDIwZjc1NDQwZjc2NDUxMDc3NDcxMDc4NDkxMDc4NGExMDc5NGMxMTdhNGUxMTdiNGYxMjdiNTExMjdjNTIxMzdjNTQxMzdkNTYxNDdkNTcxNTdlNTkxNTdlNWExNjdlNWMxNjdmNWQxNzdmNWYxODdmNjAxODgwNjIxOTgwNjQxYTgwNjUxYTgwNjcxYjgwNjgxYzgxNmExYzgxNmIxZDgxNmQxZDgxNmUxZTgxNzAxZjgxNzIxZjgxNzMyMDgxNzUyMTgxNzYyMTgxNzgyMjgxNzkyMjgyN2IyMzgyN2MyMzgyN2UyNDgyODAyNTgyODEyNTgxODMyNjgxODQyNjgxODYyNzgxODgyNzgxODkyODgxOGIyOTgxOGMyOTgxOGUyYTgxOTAyYTgxOTEyYjgxOTMyYjgwOTQyYzgwOTYyYzgwOTgyZDgwOTkyZDgwOWIyZTdmOWMyZTdmOWUyZjdmYTAyZjdmYTEzMDdlYTMzMDdlYTUzMTdlYTYzMTdkYTgzMjdkYWEzMzdkYWIzMzdjYWQzNDdjYWUzNDdiYjAzNTdiYjIzNTdiYjMzNjdhYjUzNjdhYjczNzc5YjgzNzc5YmEzODc4YmMzOTc4YmQzOTc3YmYzYTc3YzAzYTc2YzIzYjc1YzQzYzc1YzUzYzc0YzczZDczYzgzZTczY2EzZTcyY2MzZjcxY2Q0MDcxY2Y0MDcwZDA0MTZmZDI0MjZmZDM0MzZlZDU0NDZkZDY0NTZjZDg0NTZjZDk0NjZiZGI0NzZhZGM0ODY5ZGU0OTY4ZGY0YTY4ZTA0YzY3ZTI0ZDY2ZTM0ZTY1ZTQ0ZjY0ZTU1MDY0ZTc1MjYzZTg1MzYyZTk1NDYyZWE1NjYxZWI1NzYwZWM1ODYwZWQ1YTVmZWU1YjVlZWY1ZDVlZjA1ZjVlZjE2MDVkZjI2MjVkZjI2NDVjZjM2NTVjZjQ2NzVjZjQ2OTVjZjU2YjVjZjY2YzVjZjY2ZTVjZjc3MDVjZjc3MjVjZjg3NDVjZjg3NjVjZjk3ODVkZjk3OTVkZjk3YjVkZmE3ZDVlZmE3ZjVlZmE4MTVmZmI4MzVmZmI4NTYwZmI4NzYxZmM4OTYxZmM4YTYyZmM4YzYzZmM4ZTY0ZmM5MDY1ZmQ5MjY2ZmQ5NDY3ZmQ5NjY4ZmQ5ODY5ZmQ5YTZhZmQ5YjZiZmU5ZDZjZmU5ZjZkZmVhMTZlZmVhMzZmZmVhNTcxZmVhNzcyZmVhOTczZmVhYTc0ZmVhYzc2ZmVhZTc3ZmViMDc4ZmViMjdhZmViNDdiZmViNjdjZmViNzdlZmViOTdmZmViYjgxZmViZDgyZmViZjg0ZmVjMTg1ZmVjMjg3ZmVjNDg4ZmVjNjhhZmVjODhjZmVjYThkZmVjYzhmZmVjZDkwZmVjZjkyZmVkMTk0ZmVkMzk1ZmVkNTk3ZmVkNzk5ZmVkODlhZmRkYTljZmRkYzllZmRkZWEwZmRlMGExZmRlMmEzZmRlM2E1ZmRlNWE3ZmRlN2E5ZmRlOWFhZmRlYmFjZmNlY2FlZmNlZWIwZmNmMGIyZmNmMmI0ZmNmNGI2ZmNmNmI4ZmNmN2I5ZmNmOWJiZmNmYmJkZmNmZGJmIikpLCBfeSA9IHZ5KFp2KCIwMDAwMDQwMTAwMDUwMTAxMDYwMTAxMDgwMjAxMGEwMjAyMGMwMjAyMGUwMzAyMTAwNDAzMTIwNDAzMTQwNTA0MTcwNjA0MTkwNzA1MWIwODA1MWQwOTA2MWYwYTA3MjIwYjA3MjQwYzA4MjYwZDA4MjkwZTA5MmIxMDA5MmQxMTBhMzAxMjBhMzIxNDBiMzQxNTBiMzcxNjBiMzkxODBjM2MxOTBjM2UxYjBjNDExYzBjNDMxZTBjNDUxZjBjNDgyMTBjNGEyMzBjNGMyNDBjNGYyNjBjNTEyODBiNTMyOTBiNTUyYjBiNTcyZDBiNTkyZjBhNWIzMTBhNWMzMjBhNWUzNDBhNWYzNjA5NjEzODA5NjIzOTA5NjMzYjA5NjQzZDA5NjUzZTA5NjY0MDBhNjc0MjBhNjg0NDBhNjg0NTBhNjk0NzBiNmE0OTBiNmE0YTBjNmI0YzBjNmI0ZDBkNmM0ZjBkNmM1MTBlNmM1MjBlNmQ1NDBmNmQ1NTBmNmQ1NzEwNmU1OTEwNmU1YTExNmU1YzEyNmU1ZDEyNmU1ZjEzNmU2MTEzNmU2MjE0NmU2NDE1NmU2NTE1NmU2NzE2NmU2OTE2NmU2YTE3NmU2YzE4NmU2ZDE4NmU2ZjE5NmU3MTE5NmU3MjFhNmU3NDFhNmU3NTFiNmU3NzFjNmQ3ODFjNmQ3YTFkNmQ3YzFkNmQ3ZDFlNmQ3ZjFlNmM4MDFmNmM4MjIwNmM4NDIwNmI4NTIxNmI4NzIxNmI4ODIyNmE4YTIyNmE4YzIzNjk4ZDIzNjk4ZjI0Njk5MDI1Njg5MjI1Njg5MzI2Njc5NTI2Njc5NzI3NjY5ODI3NjY5YTI4NjU5YjI5NjQ5ZDI5NjQ5ZjJhNjNhMDJhNjNhMjJiNjJhMzJjNjFhNTJjNjBhNjJkNjBhODJlNWZhOTJlNWVhYjJmNWVhZDMwNWRhZTMwNWNiMDMxNWJiMTMyNWFiMzMyNWFiNDMzNTliNjM0NThiNzM1NTdiOTM1NTZiYTM2NTViYzM3NTRiZDM4NTNiZjM5NTJjMDNhNTFjMTNhNTBjMzNiNGZjNDNjNGVjNjNkNGRjNzNlNGNjODNmNGJjYTQwNGFjYjQxNDljYzQyNDhjZTQzNDdjZjQ0NDZkMDQ1NDVkMjQ2NDRkMzQ3NDNkNDQ4NDJkNTRhNDFkNzRiM2ZkODRjM2VkOTRkM2RkYTRlM2NkYjUwM2JkZDUxM2FkZTUyMzhkZjUzMzdlMDU1MzZlMTU2MzVlMjU3MzRlMzU5MzNlNDVhMzFlNTVjMzBlNjVkMmZlNzVlMmVlODYwMmRlOTYxMmJlYTYzMmFlYjY0MjllYjY2MjhlYzY3MjZlZDY5MjVlZTZhMjRlZjZjMjNlZjZlMjFmMDZmMjBmMTcxMWZmMTczMWRmMjc0MWNmMzc2MWJmMzc4MTlmNDc5MThmNTdiMTdmNTdkMTVmNjdlMTRmNjgwMTNmNzgyMTJmNzg0MTBmODg1MGZmODg3MGVmODg5MGNmOThiMGJmOThjMGFmOThlMDlmYTkwMDhmYTkyMDdmYTk0MDdmYjk2MDZmYjk3MDZmYjk5MDZmYjliMDZmYjlkMDdmYzlmMDdmY2ExMDhmY2EzMDlmY2E1MGFmY2E2MGNmY2E4MGRmY2FhMGZmY2FjMTFmY2FlMTJmY2IwMTRmY2IyMTZmY2I0MThmYmI2MWFmYmI4MWRmYmJhMWZmYmJjMjFmYmJlMjNmYWMwMjZmYWMyMjhmYWM0MmFmYWM2MmRmOWM3MmZmOWM5MzJmOWNiMzVmOGNkMzdmOGNmM2FmN2QxM2RmN2QzNDBmNmQ1NDNmNmQ3NDZmNWQ5NDlmNWRiNGNmNGRkNGZmNGRmNTNmNGUxNTZmM2UzNWFmM2U1NWRmMmU2NjFmMmU4NjVmMmVhNjlmMWVjNmRmMWVkNzFmMWVmNzVmMWYxNzlmMmYyN2RmMmY0ODJmM2Y1ODZmM2Y2OGFmNGY4OGVmNWY5OTJmNmZhOTZmOGZiOWFmOWZjOWRmYWZkYTFmY2ZmYTQiKSksIGJ5ID0gdnkoWnYoIjBkMDg4NzEwMDc4ODEzMDc4OTE2MDc4YTE5MDY4YzFiMDY4ZDFkMDY4ZTIwMDY4ZjIyMDY5MDI0MDY5MTI2MDU5MTI4MDU5MjJhMDU5MzJjMDU5NDJlMDU5NTJmMDU5NjMxMDU5NzMzMDU5NzM1MDQ5ODM3MDQ5OTM4MDQ5YTNhMDQ5YTNjMDQ5YjNlMDQ5YzNmMDQ5YzQxMDQ5ZDQzMDM5ZTQ0MDM5ZTQ2MDM5ZjQ4MDM5ZjQ5MDNhMDRiMDNhMTRjMDJhMTRlMDJhMjUwMDJhMjUxMDJhMzUzMDJhMzU1MDJhNDU2MDFhNDU4MDFhNDU5MDFhNTViMDFhNTVjMDFhNjVlMDFhNjYwMDFhNjYxMDBhNzYzMDBhNzY0MDBhNzY2MDBhNzY3MDBhODY5MDBhODZhMDBhODZjMDBhODZlMDBhODZmMDBhODcxMDBhODcyMDFhODc0MDFhODc1MDFhODc3MDFhODc4MDFhODdhMDJhODdiMDJhODdkMDNhODdlMDNhODgwMDRhODgxMDRhNzgzMDVhNzg0MDVhNzg2MDZhNjg3MDdhNjg4MDhhNjhhMDlhNThiMGFhNThkMGJhNThlMGNhNDhmMGRhNDkxMGVhMzkyMGZhMzk0MTBhMjk1MTFhMTk2MTNhMTk4MTRhMDk5MTU5ZjlhMTY5ZjljMTc5ZTlkMTg5ZDllMTk5ZGEwMWE5Y2ExMWI5YmEyMWQ5YWEzMWU5YWE1MWY5OWE2MjA5OGE3MjE5N2E4MjI5NmFhMjM5NWFiMjQ5NGFjMjY5NGFkMjc5M2FlMjg5MmIwMjk5MWIxMmE5MGIyMmI4ZmIzMmM4ZWI0MmU4ZGI1MmY4Y2I2MzA4YmI3MzE4YWI4MzI4OWJhMzM4OGJiMzQ4OGJjMzU4N2JkMzc4NmJlMzg4NWJmMzk4NGMwM2E4M2MxM2I4MmMyM2M4MWMzM2Q4MGM0M2U3ZmM1NDA3ZWM2NDE3ZGM3NDI3Y2M4NDM3YmM5NDQ3YWNhNDU3YWNiNDY3OWNjNDc3OGNjNDk3N2NkNGE3NmNlNGI3NWNmNGM3NGQwNGQ3M2QxNGU3MmQyNGY3MWQzNTE3MWQ0NTI3MGQ1NTM2ZmQ1NTQ2ZWQ2NTU2ZGQ3NTY2Y2Q4NTc2YmQ5NTg2YWRhNWE2YWRhNWI2OWRiNWM2OGRjNWQ2N2RkNWU2NmRlNWY2NWRlNjE2NGRmNjI2M2UwNjM2M2UxNjQ2MmUyNjU2MWUyNjY2MGUzNjg1ZmU0Njk1ZWU1NmE1ZGU1NmI1ZGU2NmM1Y2U3NmU1YmU3NmY1YWU4NzA1OWU5NzE1OGU5NzI1N2VhNzQ1N2ViNzU1NmViNzY1NWVjNzc1NGVkNzk1M2VkN2E1MmVlN2I1MWVmN2M1MWVmN2U1MGYwN2Y0ZmYwODA0ZWYxODE0ZGYxODM0Y2YyODQ0YmYzODU0YmYzODc0YWY0ODg0OWY0ODk0OGY1OGI0N2Y1OGM0NmY2OGQ0NWY2OGY0NGY3OTA0NGY3OTE0M2Y3OTM0MmY4OTQ0MWY4OTU0MGY5OTczZmY5OTgzZWY5OWEzZWZhOWIzZGZhOWMzY2ZhOWUzYmZiOWYzYWZiYTEzOWZiYTIzOGZjYTMzOGZjYTUzN2ZjYTYzNmZjYTgzNWZjYTkzNGZkYWIzM2ZkYWMzM2ZkYWUzMmZkYWYzMWZkYjEzMGZkYjIyZmZkYjQyZmZkYjUyZWZlYjcyZGZlYjgyY2ZlYmEyY2ZlYmIyYmZlYmQyYWZlYmUyYWZlYzAyOWZkYzIyOWZkYzMyOGZkYzUyN2ZkYzYyN2ZkYzgyN2ZkY2EyNmZkY2IyNmZjY2QyNWZjY2UyNWZjZDAyNWZjZDIyNWZiZDMyNGZiZDUyNGZiZDcyNGZhZDgyNGZhZGEyNGY5ZGMyNGY5ZGQyNWY4ZGYyNWY4ZTEyNWY3ZTIyNWY3ZTQyNWY2ZTYyNmY2ZTgyNmY1ZTkyNmY1ZWIyN2Y0ZWQyN2YzZWUyN2YzZjAyN2YyZjIyN2YxZjQyNmYxZjUyNWYwZjcyNGYwZjkyMSIpKTsgZnVuY3Rpb24gbXkodCkgeyByZXR1cm4gZnVuY3Rpb24gKCkgeyByZXR1cm4gdCB9IH0gdmFyIHh5ID0gTWF0aC5hYnMsIHd5ID0gTWF0aC5hdGFuMiwgTXkgPSBNYXRoLmNvcywgTnkgPSBNYXRoLm1heCwgVHkgPSBNYXRoLm1pbiwgQXkgPSBNYXRoLnNpbiwgU3kgPSBNYXRoLnNxcnQsIGt5ID0gMWUtMTIsIEV5ID0gTWF0aC5QSSwgQ3kgPSBFeSAvIDIsIFB5ID0gMiAqIEV5OyBmdW5jdGlvbiB6eSh0KSB7IHJldHVybiB0ID49IDEgPyBDeSA6IHQgPD0gLTEgPyAtQ3kgOiBNYXRoLmFzaW4odCkgfSBmdW5jdGlvbiBSeSh0KSB7IHJldHVybiB0LmlubmVyUmFkaXVzIH0gZnVuY3Rpb24gRHkodCkgeyByZXR1cm4gdC5vdXRlclJhZGl1cyB9IGZ1bmN0aW9uIHF5KHQpIHsgcmV0dXJuIHQuc3RhcnRBbmdsZSB9IGZ1bmN0aW9uIEx5KHQpIHsgcmV0dXJuIHQuZW5kQW5nbGUgfSBmdW5jdGlvbiBVeSh0KSB7IHJldHVybiB0ICYmIHQucGFkQW5nbGUgfSBmdW5jdGlvbiBPeSh0LCBuLCBlLCByLCBpLCBvLCBhKSB7IHZhciB1ID0gdCAtIGUsIGMgPSBuIC0gciwgZiA9IChhID8gbyA6IC1vKSAvIFN5KHUgKiB1ICsgYyAqIGMpLCBzID0gZiAqIGMsIGwgPSAtZiAqIHUsIGggPSB0ICsgcywgZCA9IG4gKyBsLCBwID0gZSArIHMsIHYgPSByICsgbCwgZyA9IChoICsgcCkgLyAyLCB5ID0gKGQgKyB2KSAvIDIsIF8gPSBwIC0gaCwgYiA9IHYgLSBkLCBtID0gXyAqIF8gKyBiICogYiwgeCA9IGkgLSBvLCB3ID0gaCAqIHYgLSBwICogZCwgTSA9IChiIDwgMCA/IC0xIDogMSkgKiBTeShOeSgwLCB4ICogeCAqIG0gLSB3ICogdykpLCBOID0gKHcgKiBiIC0gXyAqIE0pIC8gbSwgVCA9ICgtdyAqIF8gLSBiICogTSkgLyBtLCBBID0gKHcgKiBiICsgXyAqIE0pIC8gbSwgUyA9ICgtdyAqIF8gKyBiICogTSkgLyBtLCBrID0gTiAtIGcsIEUgPSBUIC0geSwgQyA9IEEgLSBnLCBQID0gUyAtIHk7IHJldHVybiBrICogayArIEUgKiBFID4gQyAqIEMgKyBQICogUCAmJiAoTiA9IEEsIFQgPSBTKSwgeyBjeDogTiwgY3k6IFQsIHgwMTogLXMsIHkwMTogLWwsIHgxMTogTiAqIChpIC8geCAtIDEpLCB5MTE6IFQgKiAoaSAvIHggLSAxKSB9IH0gZnVuY3Rpb24gQnkodCkgeyB0aGlzLl9jb250ZXh0ID0gdCB9IGZ1bmN0aW9uIEZ5KHQpIHsgcmV0dXJuIG5ldyBCeSh0KSB9IGZ1bmN0aW9uIFl5KHQpIHsgcmV0dXJuIHRbMF0gfSBmdW5jdGlvbiBJeSh0KSB7IHJldHVybiB0WzFdIH0gZnVuY3Rpb24gSHkoKSB7IHZhciB0ID0gWXksIG4gPSBJeSwgZSA9IG15KCEwKSwgciA9IG51bGwsIGkgPSBGeSwgbyA9IG51bGw7IGZ1bmN0aW9uIGEoYSkgeyB2YXIgdSwgYywgZiwgcyA9IGEubGVuZ3RoLCBsID0gITE7IGZvciAobnVsbCA9PSByICYmIChvID0gaShmID0gbm8oKSkpLCB1ID0gMDsgdSA8PSBzOyArK3UpISh1IDwgcyAmJiBlKGMgPSBhW3VdLCB1LCBhKSkgPT09IGwgJiYgKChsID0gIWwpID8gby5saW5lU3RhcnQoKSA6IG8ubGluZUVuZCgpKSwgbCAmJiBvLnBvaW50KCt0KGMsIHUsIGEpLCArbihjLCB1LCBhKSk7IGlmIChmKSByZXR1cm4gbyA9IG51bGwsIGYgKyAiIiB8fCBudWxsIH0gcmV0dXJuIGEueCA9IGZ1bmN0aW9uIChuKSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHQgPSAiZnVuY3Rpb24iID09IHR5cGVvZiBuID8gbiA6IG15KCtuKSwgYSkgOiB0IH0sIGEueSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG4gPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IG15KCt0KSwgYSkgOiBuIH0sIGEuZGVmaW5lZCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGUgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IG15KCEhdCksIGEpIDogZSB9LCBhLmN1cnZlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoaSA9IHQsIG51bGwgIT0gciAmJiAobyA9IGkocikpLCBhKSA6IGkgfSwgYS5jb250ZXh0ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobnVsbCA9PSB0ID8gciA9IG8gPSBudWxsIDogbyA9IGkociA9IHQpLCBhKSA6IHIgfSwgYSB9IGZ1bmN0aW9uIGp5KCkgeyB2YXIgdCA9IFl5LCBuID0gbnVsbCwgZSA9IG15KDApLCByID0gSXksIGkgPSBteSghMCksIG8gPSBudWxsLCBhID0gRnksIHUgPSBudWxsOyBmdW5jdGlvbiBjKGMpIHsgdmFyIGYsIHMsIGwsIGgsIGQsIHAgPSBjLmxlbmd0aCwgdiA9ICExLCBnID0gbmV3IEFycmF5KHApLCB5ID0gbmV3IEFycmF5KHApOyBmb3IgKG51bGwgPT0gbyAmJiAodSA9IGEoZCA9IG5vKCkpKSwgZiA9IDA7IGYgPD0gcDsgKytmKSB7IGlmICghKGYgPCBwICYmIGkoaCA9IGNbZl0sIGYsIGMpKSA9PT0gdikgaWYgKHYgPSAhdikgcyA9IGYsIHUuYXJlYVN0YXJ0KCksIHUubGluZVN0YXJ0KCk7IGVsc2UgeyBmb3IgKHUubGluZUVuZCgpLCB1LmxpbmVTdGFydCgpLCBsID0gZiAtIDE7IGwgPj0gczsgLS1sKXUucG9pbnQoZ1tsXSwgeVtsXSk7IHUubGluZUVuZCgpLCB1LmFyZWFFbmQoKSB9IHYgJiYgKGdbZl0gPSArdChoLCBmLCBjKSwgeVtmXSA9ICtlKGgsIGYsIGMpLCB1LnBvaW50KG4gPyArbihoLCBmLCBjKSA6IGdbZl0sIHIgPyArcihoLCBmLCBjKSA6IHlbZl0pKSB9IGlmIChkKSByZXR1cm4gdSA9IG51bGwsIGQgKyAiIiB8fCBudWxsIH0gZnVuY3Rpb24gZigpIHsgcmV0dXJuIEh5KCkuZGVmaW5lZChpKS5jdXJ2ZShhKS5jb250ZXh0KG8pIH0gcmV0dXJuIGMueCA9IGZ1bmN0aW9uIChlKSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHQgPSAiZnVuY3Rpb24iID09IHR5cGVvZiBlID8gZSA6IG15KCtlKSwgbiA9IG51bGwsIGMpIDogdCB9LCBjLngwID0gZnVuY3Rpb24gKG4pIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodCA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIG4gPyBuIDogbXkoK24pLCBjKSA6IHQgfSwgYy54MSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG4gPSBudWxsID09IHQgPyBudWxsIDogImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBteSgrdCksIGMpIDogbiB9LCBjLnkgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChlID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBteSgrdCksIHIgPSBudWxsLCBjKSA6IGUgfSwgYy55MCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGUgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IG15KCt0KSwgYykgOiBlIH0sIGMueTEgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyID0gbnVsbCA9PSB0ID8gbnVsbCA6ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogbXkoK3QpLCBjKSA6IHIgfSwgYy5saW5lWDAgPSBjLmxpbmVZMCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGYoKS54KHQpLnkoZSkgfSwgYy5saW5lWTEgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBmKCkueCh0KS55KHIpIH0sIGMubGluZVgxID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gZigpLngobikueShlKSB9LCBjLmRlZmluZWQgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChpID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBteSghIXQpLCBjKSA6IGkgfSwgYy5jdXJ2ZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGEgPSB0LCBudWxsICE9IG8gJiYgKHUgPSBhKG8pKSwgYykgOiBhIH0sIGMuY29udGV4dCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG51bGwgPT0gdCA/IG8gPSB1ID0gbnVsbCA6IHUgPSBhKG8gPSB0KSwgYykgOiBvIH0sIGMgfSBmdW5jdGlvbiBYeSh0LCBuKSB7IHJldHVybiBuIDwgdCA/IC0xIDogbiA+IHQgPyAxIDogbiA+PSB0ID8gMCA6IE5hTiB9IGZ1bmN0aW9uIFZ5KHQpIHsgcmV0dXJuIHQgfSBCeS5wcm90b3R5cGUgPSB7IGFyZWFTdGFydDogZnVuY3Rpb24gKCkgeyB0aGlzLl9saW5lID0gMCB9LCBhcmVhRW5kOiBmdW5jdGlvbiAoKSB7IHRoaXMuX2xpbmUgPSBOYU4gfSwgbGluZVN0YXJ0OiBmdW5jdGlvbiAoKSB7IHRoaXMuX3BvaW50ID0gMCB9LCBsaW5lRW5kOiBmdW5jdGlvbiAoKSB7ICh0aGlzLl9saW5lIHx8IDAgIT09IHRoaXMuX2xpbmUgJiYgMSA9PT0gdGhpcy5fcG9pbnQpICYmIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCksIHRoaXMuX2xpbmUgPSAxIC0gdGhpcy5fbGluZSB9LCBwb2ludDogZnVuY3Rpb24gKHQsIG4pIHsgc3dpdGNoICh0ID0gK3QsIG4gPSArbiwgdGhpcy5fcG9pbnQpIHsgY2FzZSAwOiB0aGlzLl9wb2ludCA9IDEsIHRoaXMuX2xpbmUgPyB0aGlzLl9jb250ZXh0LmxpbmVUbyh0LCBuKSA6IHRoaXMuX2NvbnRleHQubW92ZVRvKHQsIG4pOyBicmVhazsgY2FzZSAxOiB0aGlzLl9wb2ludCA9IDI7IGRlZmF1bHQ6IHRoaXMuX2NvbnRleHQubGluZVRvKHQsIG4pIH0gfSB9OyB2YXIgR3kgPSBXeShGeSk7IGZ1bmN0aW9uICR5KHQpIHsgdGhpcy5fY3VydmUgPSB0IH0gZnVuY3Rpb24gV3kodCkgeyBmdW5jdGlvbiBuKG4pIHsgcmV0dXJuIG5ldyAkeSh0KG4pKSB9IHJldHVybiBuLl9jdXJ2ZSA9IHQsIG4gfSBmdW5jdGlvbiBaeSh0KSB7IHZhciBuID0gdC5jdXJ2ZTsgcmV0dXJuIHQuYW5nbGUgPSB0LngsIGRlbGV0ZSB0LngsIHQucmFkaXVzID0gdC55LCBkZWxldGUgdC55LCB0LmN1cnZlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyBuKFd5KHQpKSA6IG4oKS5fY3VydmUgfSwgdCB9IGZ1bmN0aW9uIFF5KCkgeyByZXR1cm4gWnkoSHkoKS5jdXJ2ZShHeSkpIH0gZnVuY3Rpb24gS3koKSB7IHZhciB0ID0gankoKS5jdXJ2ZShHeSksIG4gPSB0LmN1cnZlLCBlID0gdC5saW5lWDAsIHIgPSB0LmxpbmVYMSwgaSA9IHQubGluZVkwLCBvID0gdC5saW5lWTE7IHJldHVybiB0LmFuZ2xlID0gdC54LCBkZWxldGUgdC54LCB0LnN0YXJ0QW5nbGUgPSB0LngwLCBkZWxldGUgdC54MCwgdC5lbmRBbmdsZSA9IHQueDEsIGRlbGV0ZSB0LngxLCB0LnJhZGl1cyA9IHQueSwgZGVsZXRlIHQueSwgdC5pbm5lclJhZGl1cyA9IHQueTAsIGRlbGV0ZSB0LnkwLCB0Lm91dGVyUmFkaXVzID0gdC55MSwgZGVsZXRlIHQueTEsIHQubGluZVN0YXJ0QW5nbGUgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBaeShlKCkpIH0sIGRlbGV0ZSB0LmxpbmVYMCwgdC5saW5lRW5kQW5nbGUgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBaeShyKCkpIH0sIGRlbGV0ZSB0LmxpbmVYMSwgdC5saW5lSW5uZXJSYWRpdXMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBaeShpKCkpIH0sIGRlbGV0ZSB0LmxpbmVZMCwgdC5saW5lT3V0ZXJSYWRpdXMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBaeShvKCkpIH0sIGRlbGV0ZSB0LmxpbmVZMSwgdC5jdXJ2ZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gbihXeSh0KSkgOiBuKCkuX2N1cnZlIH0sIHQgfSBmdW5jdGlvbiBKeSh0LCBuKSB7IHJldHVybiBbKG4gPSArbikgKiBNYXRoLmNvcyh0IC09IE1hdGguUEkgLyAyKSwgbiAqIE1hdGguc2luKHQpXSB9ICR5LnByb3RvdHlwZSA9IHsgYXJlYVN0YXJ0OiBmdW5jdGlvbiAoKSB7IHRoaXMuX2N1cnZlLmFyZWFTdGFydCgpIH0sIGFyZWFFbmQ6IGZ1bmN0aW9uICgpIHsgdGhpcy5fY3VydmUuYXJlYUVuZCgpIH0sIGxpbmVTdGFydDogZnVuY3Rpb24gKCkgeyB0aGlzLl9jdXJ2ZS5saW5lU3RhcnQoKSB9LCBsaW5lRW5kOiBmdW5jdGlvbiAoKSB7IHRoaXMuX2N1cnZlLmxpbmVFbmQoKSB9LCBwb2ludDogZnVuY3Rpb24gKHQsIG4pIHsgdGhpcy5fY3VydmUucG9pbnQobiAqIE1hdGguc2luKHQpLCBuICogLU1hdGguY29zKHQpKSB9IH07IHZhciB0XyA9IEFycmF5LnByb3RvdHlwZS5zbGljZTsgZnVuY3Rpb24gbl8odCkgeyByZXR1cm4gdC5zb3VyY2UgfSBmdW5jdGlvbiBlXyh0KSB7IHJldHVybiB0LnRhcmdldCB9IGZ1bmN0aW9uIHJfKHQpIHsgdmFyIG4gPSBuXywgZSA9IGVfLCByID0gWXksIGkgPSBJeSwgbyA9IG51bGw7IGZ1bmN0aW9uIGEoKSB7IHZhciBhLCB1ID0gdF8uY2FsbChhcmd1bWVudHMpLCBjID0gbi5hcHBseSh0aGlzLCB1KSwgZiA9IGUuYXBwbHkodGhpcywgdSk7IGlmIChvIHx8IChvID0gYSA9IG5vKCkpLCB0KG8sICtyLmFwcGx5KHRoaXMsICh1WzBdID0gYywgdSkpLCAraS5hcHBseSh0aGlzLCB1KSwgK3IuYXBwbHkodGhpcywgKHVbMF0gPSBmLCB1KSksICtpLmFwcGx5KHRoaXMsIHUpKSwgYSkgcmV0dXJuIG8gPSBudWxsLCBhICsgIiIgfHwgbnVsbCB9IHJldHVybiBhLnNvdXJjZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG4gPSB0LCBhKSA6IG4gfSwgYS50YXJnZXQgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChlID0gdCwgYSkgOiBlIH0sIGEueCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHIgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IG15KCt0KSwgYSkgOiByIH0sIGEueSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGkgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IG15KCt0KSwgYSkgOiBpIH0sIGEuY29udGV4dCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG8gPSBudWxsID09IHQgPyBudWxsIDogdCwgYSkgOiBvIH0sIGEgfSBmdW5jdGlvbiBpXyh0LCBuLCBlLCByLCBpKSB7IHQubW92ZVRvKG4sIGUpLCB0LmJlemllckN1cnZlVG8obiA9IChuICsgcikgLyAyLCBlLCBuLCBpLCByLCBpKSB9IGZ1bmN0aW9uIG9fKHQsIG4sIGUsIHIsIGkpIHsgdC5tb3ZlVG8obiwgZSksIHQuYmV6aWVyQ3VydmVUbyhuLCBlID0gKGUgKyBpKSAvIDIsIHIsIGUsIHIsIGkpIH0gZnVuY3Rpb24gYV8odCwgbiwgZSwgciwgaSkgeyB2YXIgbyA9IEp5KG4sIGUpLCBhID0gSnkobiwgZSA9IChlICsgaSkgLyAyKSwgdSA9IEp5KHIsIGUpLCBjID0gSnkociwgaSk7IHQubW92ZVRvKG9bMF0sIG9bMV0pLCB0LmJlemllckN1cnZlVG8oYVswXSwgYVsxXSwgdVswXSwgdVsxXSwgY1swXSwgY1sxXSkgfSB2YXIgdV8gPSB7IGRyYXc6IGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlID0gTWF0aC5zcXJ0KG4gLyBFeSk7IHQubW92ZVRvKGUsIDApLCB0LmFyYygwLCAwLCBlLCAwLCBQeSkgfSB9LCBjXyA9IHsgZHJhdzogZnVuY3Rpb24gKHQsIG4pIHsgdmFyIGUgPSBNYXRoLnNxcnQobiAvIDUpIC8gMjsgdC5tb3ZlVG8oLTMgKiBlLCAtZSksIHQubGluZVRvKC1lLCAtZSksIHQubGluZVRvKC1lLCAtMyAqIGUpLCB0LmxpbmVUbyhlLCAtMyAqIGUpLCB0LmxpbmVUbyhlLCAtZSksIHQubGluZVRvKDMgKiBlLCAtZSksIHQubGluZVRvKDMgKiBlLCBlKSwgdC5saW5lVG8oZSwgZSksIHQubGluZVRvKGUsIDMgKiBlKSwgdC5saW5lVG8oLWUsIDMgKiBlKSwgdC5saW5lVG8oLWUsIGUpLCB0LmxpbmVUbygtMyAqIGUsIGUpLCB0LmNsb3NlUGF0aCgpIH0gfSwgZl8gPSBNYXRoLnNxcnQoMSAvIDMpLCBzXyA9IDIgKiBmXywgbF8gPSB7IGRyYXc6IGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlID0gTWF0aC5zcXJ0KG4gLyBzXyksIHIgPSBlICogZl87IHQubW92ZVRvKDAsIC1lKSwgdC5saW5lVG8ociwgMCksIHQubGluZVRvKDAsIGUpLCB0LmxpbmVUbygtciwgMCksIHQuY2xvc2VQYXRoKCkgfSB9LCBoXyA9IE1hdGguc2luKEV5IC8gMTApIC8gTWF0aC5zaW4oNyAqIEV5IC8gMTApLCBkXyA9IE1hdGguc2luKFB5IC8gMTApICogaF8sIHBfID0gLU1hdGguY29zKFB5IC8gMTApICogaF8sIHZfID0geyBkcmF3OiBmdW5jdGlvbiAodCwgbikgeyB2YXIgZSA9IE1hdGguc3FydCguODkwODEzMDkxNTI5Mjg1MiAqIG4pLCByID0gZF8gKiBlLCBpID0gcF8gKiBlOyB0Lm1vdmVUbygwLCAtZSksIHQubGluZVRvKHIsIGkpOyBmb3IgKHZhciBvID0gMTsgbyA8IDU7ICsrbykgeyB2YXIgYSA9IFB5ICogbyAvIDUsIHUgPSBNYXRoLmNvcyhhKSwgYyA9IE1hdGguc2luKGEpOyB0LmxpbmVUbyhjICogZSwgLXUgKiBlKSwgdC5saW5lVG8odSAqIHIgLSBjICogaSwgYyAqIHIgKyB1ICogaSkgfSB0LmNsb3NlUGF0aCgpIH0gfSwgZ18gPSB7IGRyYXc6IGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlID0gTWF0aC5zcXJ0KG4pLCByID0gLWUgLyAyOyB0LnJlY3QociwgciwgZSwgZSkgfSB9LCB5XyA9IE1hdGguc3FydCgzKSwgX18gPSB7IGRyYXc6IGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlID0gLU1hdGguc3FydChuIC8gKDMgKiB5XykpOyB0Lm1vdmVUbygwLCAyICogZSksIHQubGluZVRvKC15XyAqIGUsIC1lKSwgdC5saW5lVG8oeV8gKiBlLCAtZSksIHQuY2xvc2VQYXRoKCkgfSB9LCBiXyA9IE1hdGguc3FydCgzKSAvIDIsIG1fID0gMSAvIE1hdGguc3FydCgxMiksIHhfID0gMyAqIChtXyAvIDIgKyAxKSwgd18gPSB7IGRyYXc6IGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlID0gTWF0aC5zcXJ0KG4gLyB4XyksIHIgPSBlIC8gMiwgaSA9IGUgKiBtXywgbyA9IHIsIGEgPSBlICogbV8gKyBlLCB1ID0gLW8sIGMgPSBhOyB0Lm1vdmVUbyhyLCBpKSwgdC5saW5lVG8obywgYSksIHQubGluZVRvKHUsIGMpLCB0LmxpbmVUbygtLjUgKiByIC0gYl8gKiBpLCBiXyAqIHIgKyAtLjUgKiBpKSwgdC5saW5lVG8oLS41ICogbyAtIGJfICogYSwgYl8gKiBvICsgLS41ICogYSksIHQubGluZVRvKC0uNSAqIHUgLSBiXyAqIGMsIGJfICogdSArIC0uNSAqIGMpLCB0LmxpbmVUbygtLjUgKiByICsgYl8gKiBpLCAtLjUgKiBpIC0gYl8gKiByKSwgdC5saW5lVG8oLS41ICogbyArIGJfICogYSwgLS41ICogYSAtIGJfICogbyksIHQubGluZVRvKC0uNSAqIHUgKyBiXyAqIGMsIC0uNSAqIGMgLSBiXyAqIHUpLCB0LmNsb3NlUGF0aCgpIH0gfSwgTV8gPSBbdV8sIGNfLCBsXywgZ18sIHZfLCBfXywgd19dOyBmdW5jdGlvbiBOXygpIHsgfSBmdW5jdGlvbiBUXyh0LCBuLCBlKSB7IHQuX2NvbnRleHQuYmV6aWVyQ3VydmVUbygoMiAqIHQuX3gwICsgdC5feDEpIC8gMywgKDIgKiB0Ll95MCArIHQuX3kxKSAvIDMsICh0Ll94MCArIDIgKiB0Ll94MSkgLyAzLCAodC5feTAgKyAyICogdC5feTEpIC8gMywgKHQuX3gwICsgNCAqIHQuX3gxICsgbikgLyA2LCAodC5feTAgKyA0ICogdC5feTEgKyBlKSAvIDYpIH0gZnVuY3Rpb24gQV8odCkgeyB0aGlzLl9jb250ZXh0ID0gdCB9IGZ1bmN0aW9uIFNfKHQpIHsgdGhpcy5fY29udGV4dCA9IHQgfSBmdW5jdGlvbiBrXyh0KSB7IHRoaXMuX2NvbnRleHQgPSB0IH0gZnVuY3Rpb24gRV8odCwgbikgeyB0aGlzLl9iYXNpcyA9IG5ldyBBXyh0KSwgdGhpcy5fYmV0YSA9IG4gfSBBXy5wcm90b3R5cGUgPSB7IGFyZWFTdGFydDogZnVuY3Rpb24gKCkgeyB0aGlzLl9saW5lID0gMCB9LCBhcmVhRW5kOiBmdW5jdGlvbiAoKSB7IHRoaXMuX2xpbmUgPSBOYU4gfSwgbGluZVN0YXJ0OiBmdW5jdGlvbiAoKSB7IHRoaXMuX3gwID0gdGhpcy5feDEgPSB0aGlzLl95MCA9IHRoaXMuX3kxID0gTmFOLCB0aGlzLl9wb2ludCA9IDAgfSwgbGluZUVuZDogZnVuY3Rpb24gKCkgeyBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7IGNhc2UgMzogVF8odGhpcywgdGhpcy5feDEsIHRoaXMuX3kxKTsgY2FzZSAyOiB0aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94MSwgdGhpcy5feTEpIH0odGhpcy5fbGluZSB8fCAwICE9PSB0aGlzLl9saW5lICYmIDEgPT09IHRoaXMuX3BvaW50KSAmJiB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpLCB0aGlzLl9saW5lID0gMSAtIHRoaXMuX2xpbmUgfSwgcG9pbnQ6IGZ1bmN0aW9uICh0LCBuKSB7IHN3aXRjaCAodCA9ICt0LCBuID0gK24sIHRoaXMuX3BvaW50KSB7IGNhc2UgMDogdGhpcy5fcG9pbnQgPSAxLCB0aGlzLl9saW5lID8gdGhpcy5fY29udGV4dC5saW5lVG8odCwgbikgOiB0aGlzLl9jb250ZXh0Lm1vdmVUbyh0LCBuKTsgYnJlYWs7IGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyOyBicmVhazsgY2FzZSAyOiB0aGlzLl9wb2ludCA9IDMsIHRoaXMuX2NvbnRleHQubGluZVRvKCg1ICogdGhpcy5feDAgKyB0aGlzLl94MSkgLyA2LCAoNSAqIHRoaXMuX3kwICsgdGhpcy5feTEpIC8gNik7IGRlZmF1bHQ6IFRfKHRoaXMsIHQsIG4pIH10aGlzLl94MCA9IHRoaXMuX3gxLCB0aGlzLl94MSA9IHQsIHRoaXMuX3kwID0gdGhpcy5feTEsIHRoaXMuX3kxID0gbiB9IH0sIFNfLnByb3RvdHlwZSA9IHsgYXJlYVN0YXJ0OiBOXywgYXJlYUVuZDogTl8sIGxpbmVTdGFydDogZnVuY3Rpb24gKCkgeyB0aGlzLl94MCA9IHRoaXMuX3gxID0gdGhpcy5feDIgPSB0aGlzLl94MyA9IHRoaXMuX3g0ID0gdGhpcy5feTAgPSB0aGlzLl95MSA9IHRoaXMuX3kyID0gdGhpcy5feTMgPSB0aGlzLl95NCA9IE5hTiwgdGhpcy5fcG9pbnQgPSAwIH0sIGxpbmVFbmQ6IGZ1bmN0aW9uICgpIHsgc3dpdGNoICh0aGlzLl9wb2ludCkgeyBjYXNlIDE6IHRoaXMuX2NvbnRleHQubW92ZVRvKHRoaXMuX3gyLCB0aGlzLl95MiksIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7IGJyZWFrOyBjYXNlIDI6IHRoaXMuX2NvbnRleHQubW92ZVRvKCh0aGlzLl94MiArIDIgKiB0aGlzLl94MykgLyAzLCAodGhpcy5feTIgKyAyICogdGhpcy5feTMpIC8gMyksIHRoaXMuX2NvbnRleHQubGluZVRvKCh0aGlzLl94MyArIDIgKiB0aGlzLl94MikgLyAzLCAodGhpcy5feTMgKyAyICogdGhpcy5feTIpIC8gMyksIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7IGJyZWFrOyBjYXNlIDM6IHRoaXMucG9pbnQodGhpcy5feDIsIHRoaXMuX3kyKSwgdGhpcy5wb2ludCh0aGlzLl94MywgdGhpcy5feTMpLCB0aGlzLnBvaW50KHRoaXMuX3g0LCB0aGlzLl95NCkgfSB9LCBwb2ludDogZnVuY3Rpb24gKHQsIG4pIHsgc3dpdGNoICh0ID0gK3QsIG4gPSArbiwgdGhpcy5fcG9pbnQpIHsgY2FzZSAwOiB0aGlzLl9wb2ludCA9IDEsIHRoaXMuX3gyID0gdCwgdGhpcy5feTIgPSBuOyBicmVhazsgY2FzZSAxOiB0aGlzLl9wb2ludCA9IDIsIHRoaXMuX3gzID0gdCwgdGhpcy5feTMgPSBuOyBicmVhazsgY2FzZSAyOiB0aGlzLl9wb2ludCA9IDMsIHRoaXMuX3g0ID0gdCwgdGhpcy5feTQgPSBuLCB0aGlzLl9jb250ZXh0Lm1vdmVUbygodGhpcy5feDAgKyA0ICogdGhpcy5feDEgKyB0KSAvIDYsICh0aGlzLl95MCArIDQgKiB0aGlzLl95MSArIG4pIC8gNik7IGJyZWFrOyBkZWZhdWx0OiBUXyh0aGlzLCB0LCBuKSB9dGhpcy5feDAgPSB0aGlzLl94MSwgdGhpcy5feDEgPSB0LCB0aGlzLl95MCA9IHRoaXMuX3kxLCB0aGlzLl95MSA9IG4gfSB9LCBrXy5wcm90b3R5cGUgPSB7IGFyZWFTdGFydDogZnVuY3Rpb24gKCkgeyB0aGlzLl9saW5lID0gMCB9LCBhcmVhRW5kOiBmdW5jdGlvbiAoKSB7IHRoaXMuX2xpbmUgPSBOYU4gfSwgbGluZVN0YXJ0OiBmdW5jdGlvbiAoKSB7IHRoaXMuX3gwID0gdGhpcy5feDEgPSB0aGlzLl95MCA9IHRoaXMuX3kxID0gTmFOLCB0aGlzLl9wb2ludCA9IDAgfSwgbGluZUVuZDogZnVuY3Rpb24gKCkgeyAodGhpcy5fbGluZSB8fCAwICE9PSB0aGlzLl9saW5lICYmIDMgPT09IHRoaXMuX3BvaW50KSAmJiB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpLCB0aGlzLl9saW5lID0gMSAtIHRoaXMuX2xpbmUgfSwgcG9pbnQ6IGZ1bmN0aW9uICh0LCBuKSB7IHN3aXRjaCAodCA9ICt0LCBuID0gK24sIHRoaXMuX3BvaW50KSB7IGNhc2UgMDogdGhpcy5fcG9pbnQgPSAxOyBicmVhazsgY2FzZSAxOiB0aGlzLl9wb2ludCA9IDI7IGJyZWFrOyBjYXNlIDI6IHRoaXMuX3BvaW50ID0gMzsgdmFyIGUgPSAodGhpcy5feDAgKyA0ICogdGhpcy5feDEgKyB0KSAvIDYsIHIgPSAodGhpcy5feTAgKyA0ICogdGhpcy5feTEgKyBuKSAvIDY7IHRoaXMuX2xpbmUgPyB0aGlzLl9jb250ZXh0LmxpbmVUbyhlLCByKSA6IHRoaXMuX2NvbnRleHQubW92ZVRvKGUsIHIpOyBicmVhazsgY2FzZSAzOiB0aGlzLl9wb2ludCA9IDQ7IGRlZmF1bHQ6IFRfKHRoaXMsIHQsIG4pIH10aGlzLl94MCA9IHRoaXMuX3gxLCB0aGlzLl94MSA9IHQsIHRoaXMuX3kwID0gdGhpcy5feTEsIHRoaXMuX3kxID0gbiB9IH0sIEVfLnByb3RvdHlwZSA9IHsgbGluZVN0YXJ0OiBmdW5jdGlvbiAoKSB7IHRoaXMuX3ggPSBbXSwgdGhpcy5feSA9IFtdLCB0aGlzLl9iYXNpcy5saW5lU3RhcnQoKSB9LCBsaW5lRW5kOiBmdW5jdGlvbiAoKSB7IHZhciB0ID0gdGhpcy5feCwgbiA9IHRoaXMuX3ksIGUgPSB0Lmxlbmd0aCAtIDE7IGlmIChlID4gMCkgZm9yICh2YXIgciwgaSA9IHRbMF0sIG8gPSBuWzBdLCBhID0gdFtlXSAtIGksIHUgPSBuW2VdIC0gbywgYyA9IC0xOyArK2MgPD0gZTspciA9IGMgLyBlLCB0aGlzLl9iYXNpcy5wb2ludCh0aGlzLl9iZXRhICogdFtjXSArICgxIC0gdGhpcy5fYmV0YSkgKiAoaSArIHIgKiBhKSwgdGhpcy5fYmV0YSAqIG5bY10gKyAoMSAtIHRoaXMuX2JldGEpICogKG8gKyByICogdSkpOyB0aGlzLl94ID0gdGhpcy5feSA9IG51bGwsIHRoaXMuX2Jhc2lzLmxpbmVFbmQoKSB9LCBwb2ludDogZnVuY3Rpb24gKHQsIG4pIHsgdGhpcy5feC5wdXNoKCt0KSwgdGhpcy5feS5wdXNoKCtuKSB9IH07IHZhciBDXyA9IGZ1bmN0aW9uIHQobikgeyBmdW5jdGlvbiBlKHQpIHsgcmV0dXJuIDEgPT09IG4gPyBuZXcgQV8odCkgOiBuZXcgRV8odCwgbikgfSByZXR1cm4gZS5iZXRhID0gZnVuY3Rpb24gKG4pIHsgcmV0dXJuIHQoK24pIH0sIGUgfSguODUpOyBmdW5jdGlvbiBQXyh0LCBuLCBlKSB7IHQuX2NvbnRleHQuYmV6aWVyQ3VydmVUbyh0Ll94MSArIHQuX2sgKiAodC5feDIgLSB0Ll94MCksIHQuX3kxICsgdC5fayAqICh0Ll95MiAtIHQuX3kwKSwgdC5feDIgKyB0Ll9rICogKHQuX3gxIC0gbiksIHQuX3kyICsgdC5fayAqICh0Ll95MSAtIGUpLCB0Ll94MiwgdC5feTIpIH0gZnVuY3Rpb24gel8odCwgbikgeyB0aGlzLl9jb250ZXh0ID0gdCwgdGhpcy5fayA9ICgxIC0gbikgLyA2IH0gel8ucHJvdG90eXBlID0geyBhcmVhU3RhcnQ6IGZ1bmN0aW9uICgpIHsgdGhpcy5fbGluZSA9IDAgfSwgYXJlYUVuZDogZnVuY3Rpb24gKCkgeyB0aGlzLl9saW5lID0gTmFOIH0sIGxpbmVTdGFydDogZnVuY3Rpb24gKCkgeyB0aGlzLl94MCA9IHRoaXMuX3gxID0gdGhpcy5feDIgPSB0aGlzLl95MCA9IHRoaXMuX3kxID0gdGhpcy5feTIgPSBOYU4sIHRoaXMuX3BvaW50ID0gMCB9LCBsaW5lRW5kOiBmdW5jdGlvbiAoKSB7IHN3aXRjaCAodGhpcy5fcG9pbnQpIHsgY2FzZSAyOiB0aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94MiwgdGhpcy5feTIpOyBicmVhazsgY2FzZSAzOiBQXyh0aGlzLCB0aGlzLl94MSwgdGhpcy5feTEpIH0odGhpcy5fbGluZSB8fCAwICE9PSB0aGlzLl9saW5lICYmIDEgPT09IHRoaXMuX3BvaW50KSAmJiB0aGlzLl9jb250ZXh0LmNsb3NlUGF0aCgpLCB0aGlzLl9saW5lID0gMSAtIHRoaXMuX2xpbmUgfSwgcG9pbnQ6IGZ1bmN0aW9uICh0LCBuKSB7IHN3aXRjaCAodCA9ICt0LCBuID0gK24sIHRoaXMuX3BvaW50KSB7IGNhc2UgMDogdGhpcy5fcG9pbnQgPSAxLCB0aGlzLl9saW5lID8gdGhpcy5fY29udGV4dC5saW5lVG8odCwgbikgOiB0aGlzLl9jb250ZXh0Lm1vdmVUbyh0LCBuKTsgYnJlYWs7IGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyLCB0aGlzLl94MSA9IHQsIHRoaXMuX3kxID0gbjsgYnJlYWs7IGNhc2UgMjogdGhpcy5fcG9pbnQgPSAzOyBkZWZhdWx0OiBQXyh0aGlzLCB0LCBuKSB9dGhpcy5feDAgPSB0aGlzLl94MSwgdGhpcy5feDEgPSB0aGlzLl94MiwgdGhpcy5feDIgPSB0LCB0aGlzLl95MCA9IHRoaXMuX3kxLCB0aGlzLl95MSA9IHRoaXMuX3kyLCB0aGlzLl95MiA9IG4gfSB9OyB2YXIgUl8gPSBmdW5jdGlvbiB0KG4pIHsgZnVuY3Rpb24gZSh0KSB7IHJldHVybiBuZXcgel8odCwgbikgfSByZXR1cm4gZS50ZW5zaW9uID0gZnVuY3Rpb24gKG4pIHsgcmV0dXJuIHQoK24pIH0sIGUgfSgwKTsgZnVuY3Rpb24gRF8odCwgbikgeyB0aGlzLl9jb250ZXh0ID0gdCwgdGhpcy5fayA9ICgxIC0gbikgLyA2IH0gRF8ucHJvdG90eXBlID0geyBhcmVhU3RhcnQ6IE5fLCBhcmVhRW5kOiBOXywgbGluZVN0YXJ0OiBmdW5jdGlvbiAoKSB7IHRoaXMuX3gwID0gdGhpcy5feDEgPSB0aGlzLl94MiA9IHRoaXMuX3gzID0gdGhpcy5feDQgPSB0aGlzLl94NSA9IHRoaXMuX3kwID0gdGhpcy5feTEgPSB0aGlzLl95MiA9IHRoaXMuX3kzID0gdGhpcy5feTQgPSB0aGlzLl95NSA9IE5hTiwgdGhpcy5fcG9pbnQgPSAwIH0sIGxpbmVFbmQ6IGZ1bmN0aW9uICgpIHsgc3dpdGNoICh0aGlzLl9wb2ludCkgeyBjYXNlIDE6IHRoaXMuX2NvbnRleHQubW92ZVRvKHRoaXMuX3gzLCB0aGlzLl95MyksIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7IGJyZWFrOyBjYXNlIDI6IHRoaXMuX2NvbnRleHQubGluZVRvKHRoaXMuX3gzLCB0aGlzLl95MyksIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCk7IGJyZWFrOyBjYXNlIDM6IHRoaXMucG9pbnQodGhpcy5feDMsIHRoaXMuX3kzKSwgdGhpcy5wb2ludCh0aGlzLl94NCwgdGhpcy5feTQpLCB0aGlzLnBvaW50KHRoaXMuX3g1LCB0aGlzLl95NSkgfSB9LCBwb2ludDogZnVuY3Rpb24gKHQsIG4pIHsgc3dpdGNoICh0ID0gK3QsIG4gPSArbiwgdGhpcy5fcG9pbnQpIHsgY2FzZSAwOiB0aGlzLl9wb2ludCA9IDEsIHRoaXMuX3gzID0gdCwgdGhpcy5feTMgPSBuOyBicmVhazsgY2FzZSAxOiB0aGlzLl9wb2ludCA9IDIsIHRoaXMuX2NvbnRleHQubW92ZVRvKHRoaXMuX3g0ID0gdCwgdGhpcy5feTQgPSBuKTsgYnJlYWs7IGNhc2UgMjogdGhpcy5fcG9pbnQgPSAzLCB0aGlzLl94NSA9IHQsIHRoaXMuX3k1ID0gbjsgYnJlYWs7IGRlZmF1bHQ6IFBfKHRoaXMsIHQsIG4pIH10aGlzLl94MCA9IHRoaXMuX3gxLCB0aGlzLl94MSA9IHRoaXMuX3gyLCB0aGlzLl94MiA9IHQsIHRoaXMuX3kwID0gdGhpcy5feTEsIHRoaXMuX3kxID0gdGhpcy5feTIsIHRoaXMuX3kyID0gbiB9IH07IHZhciBxXyA9IGZ1bmN0aW9uIHQobikgeyBmdW5jdGlvbiBlKHQpIHsgcmV0dXJuIG5ldyBEXyh0LCBuKSB9IHJldHVybiBlLnRlbnNpb24gPSBmdW5jdGlvbiAobikgeyByZXR1cm4gdCgrbikgfSwgZSB9KDApOyBmdW5jdGlvbiBMXyh0LCBuKSB7IHRoaXMuX2NvbnRleHQgPSB0LCB0aGlzLl9rID0gKDEgLSBuKSAvIDYgfSBMXy5wcm90b3R5cGUgPSB7IGFyZWFTdGFydDogZnVuY3Rpb24gKCkgeyB0aGlzLl9saW5lID0gMCB9LCBhcmVhRW5kOiBmdW5jdGlvbiAoKSB7IHRoaXMuX2xpbmUgPSBOYU4gfSwgbGluZVN0YXJ0OiBmdW5jdGlvbiAoKSB7IHRoaXMuX3gwID0gdGhpcy5feDEgPSB0aGlzLl94MiA9IHRoaXMuX3kwID0gdGhpcy5feTEgPSB0aGlzLl95MiA9IE5hTiwgdGhpcy5fcG9pbnQgPSAwIH0sIGxpbmVFbmQ6IGZ1bmN0aW9uICgpIHsgKHRoaXMuX2xpbmUgfHwgMCAhPT0gdGhpcy5fbGluZSAmJiAzID09PSB0aGlzLl9wb2ludCkgJiYgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKSwgdGhpcy5fbGluZSA9IDEgLSB0aGlzLl9saW5lIH0sIHBvaW50OiBmdW5jdGlvbiAodCwgbikgeyBzd2l0Y2ggKHQgPSArdCwgbiA9ICtuLCB0aGlzLl9wb2ludCkgeyBjYXNlIDA6IHRoaXMuX3BvaW50ID0gMTsgYnJlYWs7IGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyOyBicmVhazsgY2FzZSAyOiB0aGlzLl9wb2ludCA9IDMsIHRoaXMuX2xpbmUgPyB0aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94MiwgdGhpcy5feTIpIDogdGhpcy5fY29udGV4dC5tb3ZlVG8odGhpcy5feDIsIHRoaXMuX3kyKTsgYnJlYWs7IGNhc2UgMzogdGhpcy5fcG9pbnQgPSA0OyBkZWZhdWx0OiBQXyh0aGlzLCB0LCBuKSB9dGhpcy5feDAgPSB0aGlzLl94MSwgdGhpcy5feDEgPSB0aGlzLl94MiwgdGhpcy5feDIgPSB0LCB0aGlzLl95MCA9IHRoaXMuX3kxLCB0aGlzLl95MSA9IHRoaXMuX3kyLCB0aGlzLl95MiA9IG4gfSB9OyB2YXIgVV8gPSBmdW5jdGlvbiB0KG4pIHsgZnVuY3Rpb24gZSh0KSB7IHJldHVybiBuZXcgTF8odCwgbikgfSByZXR1cm4gZS50ZW5zaW9uID0gZnVuY3Rpb24gKG4pIHsgcmV0dXJuIHQoK24pIH0sIGUgfSgwKTsgZnVuY3Rpb24gT18odCwgbiwgZSkgeyB2YXIgciA9IHQuX3gxLCBpID0gdC5feTEsIG8gPSB0Ll94MiwgYSA9IHQuX3kyOyBpZiAodC5fbDAxX2EgPiBreSkgeyB2YXIgdSA9IDIgKiB0Ll9sMDFfMmEgKyAzICogdC5fbDAxX2EgKiB0Ll9sMTJfYSArIHQuX2wxMl8yYSwgYyA9IDMgKiB0Ll9sMDFfYSAqICh0Ll9sMDFfYSArIHQuX2wxMl9hKTsgciA9IChyICogdSAtIHQuX3gwICogdC5fbDEyXzJhICsgdC5feDIgKiB0Ll9sMDFfMmEpIC8gYywgaSA9IChpICogdSAtIHQuX3kwICogdC5fbDEyXzJhICsgdC5feTIgKiB0Ll9sMDFfMmEpIC8gYyB9IGlmICh0Ll9sMjNfYSA+IGt5KSB7IHZhciBmID0gMiAqIHQuX2wyM18yYSArIDMgKiB0Ll9sMjNfYSAqIHQuX2wxMl9hICsgdC5fbDEyXzJhLCBzID0gMyAqIHQuX2wyM19hICogKHQuX2wyM19hICsgdC5fbDEyX2EpOyBvID0gKG8gKiBmICsgdC5feDEgKiB0Ll9sMjNfMmEgLSBuICogdC5fbDEyXzJhKSAvIHMsIGEgPSAoYSAqIGYgKyB0Ll95MSAqIHQuX2wyM18yYSAtIGUgKiB0Ll9sMTJfMmEpIC8gcyB9IHQuX2NvbnRleHQuYmV6aWVyQ3VydmVUbyhyLCBpLCBvLCBhLCB0Ll94MiwgdC5feTIpIH0gZnVuY3Rpb24gQl8odCwgbikgeyB0aGlzLl9jb250ZXh0ID0gdCwgdGhpcy5fYWxwaGEgPSBuIH0gQl8ucHJvdG90eXBlID0geyBhcmVhU3RhcnQ6IGZ1bmN0aW9uICgpIHsgdGhpcy5fbGluZSA9IDAgfSwgYXJlYUVuZDogZnVuY3Rpb24gKCkgeyB0aGlzLl9saW5lID0gTmFOIH0sIGxpbmVTdGFydDogZnVuY3Rpb24gKCkgeyB0aGlzLl94MCA9IHRoaXMuX3gxID0gdGhpcy5feDIgPSB0aGlzLl95MCA9IHRoaXMuX3kxID0gdGhpcy5feTIgPSBOYU4sIHRoaXMuX2wwMV9hID0gdGhpcy5fbDEyX2EgPSB0aGlzLl9sMjNfYSA9IHRoaXMuX2wwMV8yYSA9IHRoaXMuX2wxMl8yYSA9IHRoaXMuX2wyM18yYSA9IHRoaXMuX3BvaW50ID0gMCB9LCBsaW5lRW5kOiBmdW5jdGlvbiAoKSB7IHN3aXRjaCAodGhpcy5fcG9pbnQpIHsgY2FzZSAyOiB0aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94MiwgdGhpcy5feTIpOyBicmVhazsgY2FzZSAzOiB0aGlzLnBvaW50KHRoaXMuX3gyLCB0aGlzLl95MikgfSh0aGlzLl9saW5lIHx8IDAgIT09IHRoaXMuX2xpbmUgJiYgMSA9PT0gdGhpcy5fcG9pbnQpICYmIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCksIHRoaXMuX2xpbmUgPSAxIC0gdGhpcy5fbGluZSB9LCBwb2ludDogZnVuY3Rpb24gKHQsIG4pIHsgaWYgKHQgPSArdCwgbiA9ICtuLCB0aGlzLl9wb2ludCkgeyB2YXIgZSA9IHRoaXMuX3gyIC0gdCwgciA9IHRoaXMuX3kyIC0gbjsgdGhpcy5fbDIzX2EgPSBNYXRoLnNxcnQodGhpcy5fbDIzXzJhID0gTWF0aC5wb3coZSAqIGUgKyByICogciwgdGhpcy5fYWxwaGEpKSB9IHN3aXRjaCAodGhpcy5fcG9pbnQpIHsgY2FzZSAwOiB0aGlzLl9wb2ludCA9IDEsIHRoaXMuX2xpbmUgPyB0aGlzLl9jb250ZXh0LmxpbmVUbyh0LCBuKSA6IHRoaXMuX2NvbnRleHQubW92ZVRvKHQsIG4pOyBicmVhazsgY2FzZSAxOiB0aGlzLl9wb2ludCA9IDI7IGJyZWFrOyBjYXNlIDI6IHRoaXMuX3BvaW50ID0gMzsgZGVmYXVsdDogT18odGhpcywgdCwgbikgfXRoaXMuX2wwMV9hID0gdGhpcy5fbDEyX2EsIHRoaXMuX2wxMl9hID0gdGhpcy5fbDIzX2EsIHRoaXMuX2wwMV8yYSA9IHRoaXMuX2wxMl8yYSwgdGhpcy5fbDEyXzJhID0gdGhpcy5fbDIzXzJhLCB0aGlzLl94MCA9IHRoaXMuX3gxLCB0aGlzLl94MSA9IHRoaXMuX3gyLCB0aGlzLl94MiA9IHQsIHRoaXMuX3kwID0gdGhpcy5feTEsIHRoaXMuX3kxID0gdGhpcy5feTIsIHRoaXMuX3kyID0gbiB9IH07IHZhciBGXyA9IGZ1bmN0aW9uIHQobikgeyBmdW5jdGlvbiBlKHQpIHsgcmV0dXJuIG4gPyBuZXcgQl8odCwgbikgOiBuZXcgel8odCwgMCkgfSByZXR1cm4gZS5hbHBoYSA9IGZ1bmN0aW9uIChuKSB7IHJldHVybiB0KCtuKSB9LCBlIH0oLjUpOyBmdW5jdGlvbiBZXyh0LCBuKSB7IHRoaXMuX2NvbnRleHQgPSB0LCB0aGlzLl9hbHBoYSA9IG4gfSBZXy5wcm90b3R5cGUgPSB7IGFyZWFTdGFydDogTl8sIGFyZWFFbmQ6IE5fLCBsaW5lU3RhcnQ6IGZ1bmN0aW9uICgpIHsgdGhpcy5feDAgPSB0aGlzLl94MSA9IHRoaXMuX3gyID0gdGhpcy5feDMgPSB0aGlzLl94NCA9IHRoaXMuX3g1ID0gdGhpcy5feTAgPSB0aGlzLl95MSA9IHRoaXMuX3kyID0gdGhpcy5feTMgPSB0aGlzLl95NCA9IHRoaXMuX3k1ID0gTmFOLCB0aGlzLl9sMDFfYSA9IHRoaXMuX2wxMl9hID0gdGhpcy5fbDIzX2EgPSB0aGlzLl9sMDFfMmEgPSB0aGlzLl9sMTJfMmEgPSB0aGlzLl9sMjNfMmEgPSB0aGlzLl9wb2ludCA9IDAgfSwgbGluZUVuZDogZnVuY3Rpb24gKCkgeyBzd2l0Y2ggKHRoaXMuX3BvaW50KSB7IGNhc2UgMTogdGhpcy5fY29udGV4dC5tb3ZlVG8odGhpcy5feDMsIHRoaXMuX3kzKSwgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTsgYnJlYWs7IGNhc2UgMjogdGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feDMsIHRoaXMuX3kzKSwgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKTsgYnJlYWs7IGNhc2UgMzogdGhpcy5wb2ludCh0aGlzLl94MywgdGhpcy5feTMpLCB0aGlzLnBvaW50KHRoaXMuX3g0LCB0aGlzLl95NCksIHRoaXMucG9pbnQodGhpcy5feDUsIHRoaXMuX3k1KSB9IH0sIHBvaW50OiBmdW5jdGlvbiAodCwgbikgeyBpZiAodCA9ICt0LCBuID0gK24sIHRoaXMuX3BvaW50KSB7IHZhciBlID0gdGhpcy5feDIgLSB0LCByID0gdGhpcy5feTIgLSBuOyB0aGlzLl9sMjNfYSA9IE1hdGguc3FydCh0aGlzLl9sMjNfMmEgPSBNYXRoLnBvdyhlICogZSArIHIgKiByLCB0aGlzLl9hbHBoYSkpIH0gc3dpdGNoICh0aGlzLl9wb2ludCkgeyBjYXNlIDA6IHRoaXMuX3BvaW50ID0gMSwgdGhpcy5feDMgPSB0LCB0aGlzLl95MyA9IG47IGJyZWFrOyBjYXNlIDE6IHRoaXMuX3BvaW50ID0gMiwgdGhpcy5fY29udGV4dC5tb3ZlVG8odGhpcy5feDQgPSB0LCB0aGlzLl95NCA9IG4pOyBicmVhazsgY2FzZSAyOiB0aGlzLl9wb2ludCA9IDMsIHRoaXMuX3g1ID0gdCwgdGhpcy5feTUgPSBuOyBicmVhazsgZGVmYXVsdDogT18odGhpcywgdCwgbikgfXRoaXMuX2wwMV9hID0gdGhpcy5fbDEyX2EsIHRoaXMuX2wxMl9hID0gdGhpcy5fbDIzX2EsIHRoaXMuX2wwMV8yYSA9IHRoaXMuX2wxMl8yYSwgdGhpcy5fbDEyXzJhID0gdGhpcy5fbDIzXzJhLCB0aGlzLl94MCA9IHRoaXMuX3gxLCB0aGlzLl94MSA9IHRoaXMuX3gyLCB0aGlzLl94MiA9IHQsIHRoaXMuX3kwID0gdGhpcy5feTEsIHRoaXMuX3kxID0gdGhpcy5feTIsIHRoaXMuX3kyID0gbiB9IH07IHZhciBJXyA9IGZ1bmN0aW9uIHQobikgeyBmdW5jdGlvbiBlKHQpIHsgcmV0dXJuIG4gPyBuZXcgWV8odCwgbikgOiBuZXcgRF8odCwgMCkgfSByZXR1cm4gZS5hbHBoYSA9IGZ1bmN0aW9uIChuKSB7IHJldHVybiB0KCtuKSB9LCBlIH0oLjUpOyBmdW5jdGlvbiBIXyh0LCBuKSB7IHRoaXMuX2NvbnRleHQgPSB0LCB0aGlzLl9hbHBoYSA9IG4gfSBIXy5wcm90b3R5cGUgPSB7IGFyZWFTdGFydDogZnVuY3Rpb24gKCkgeyB0aGlzLl9saW5lID0gMCB9LCBhcmVhRW5kOiBmdW5jdGlvbiAoKSB7IHRoaXMuX2xpbmUgPSBOYU4gfSwgbGluZVN0YXJ0OiBmdW5jdGlvbiAoKSB7IHRoaXMuX3gwID0gdGhpcy5feDEgPSB0aGlzLl94MiA9IHRoaXMuX3kwID0gdGhpcy5feTEgPSB0aGlzLl95MiA9IE5hTiwgdGhpcy5fbDAxX2EgPSB0aGlzLl9sMTJfYSA9IHRoaXMuX2wyM19hID0gdGhpcy5fbDAxXzJhID0gdGhpcy5fbDEyXzJhID0gdGhpcy5fbDIzXzJhID0gdGhpcy5fcG9pbnQgPSAwIH0sIGxpbmVFbmQ6IGZ1bmN0aW9uICgpIHsgKHRoaXMuX2xpbmUgfHwgMCAhPT0gdGhpcy5fbGluZSAmJiAzID09PSB0aGlzLl9wb2ludCkgJiYgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKSwgdGhpcy5fbGluZSA9IDEgLSB0aGlzLl9saW5lIH0sIHBvaW50OiBmdW5jdGlvbiAodCwgbikgeyBpZiAodCA9ICt0LCBuID0gK24sIHRoaXMuX3BvaW50KSB7IHZhciBlID0gdGhpcy5feDIgLSB0LCByID0gdGhpcy5feTIgLSBuOyB0aGlzLl9sMjNfYSA9IE1hdGguc3FydCh0aGlzLl9sMjNfMmEgPSBNYXRoLnBvdyhlICogZSArIHIgKiByLCB0aGlzLl9hbHBoYSkpIH0gc3dpdGNoICh0aGlzLl9wb2ludCkgeyBjYXNlIDA6IHRoaXMuX3BvaW50ID0gMTsgYnJlYWs7IGNhc2UgMTogdGhpcy5fcG9pbnQgPSAyOyBicmVhazsgY2FzZSAyOiB0aGlzLl9wb2ludCA9IDMsIHRoaXMuX2xpbmUgPyB0aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94MiwgdGhpcy5feTIpIDogdGhpcy5fY29udGV4dC5tb3ZlVG8odGhpcy5feDIsIHRoaXMuX3kyKTsgYnJlYWs7IGNhc2UgMzogdGhpcy5fcG9pbnQgPSA0OyBkZWZhdWx0OiBPXyh0aGlzLCB0LCBuKSB9dGhpcy5fbDAxX2EgPSB0aGlzLl9sMTJfYSwgdGhpcy5fbDEyX2EgPSB0aGlzLl9sMjNfYSwgdGhpcy5fbDAxXzJhID0gdGhpcy5fbDEyXzJhLCB0aGlzLl9sMTJfMmEgPSB0aGlzLl9sMjNfMmEsIHRoaXMuX3gwID0gdGhpcy5feDEsIHRoaXMuX3gxID0gdGhpcy5feDIsIHRoaXMuX3gyID0gdCwgdGhpcy5feTAgPSB0aGlzLl95MSwgdGhpcy5feTEgPSB0aGlzLl95MiwgdGhpcy5feTIgPSBuIH0gfTsgdmFyIGpfID0gZnVuY3Rpb24gdChuKSB7IGZ1bmN0aW9uIGUodCkgeyByZXR1cm4gbiA/IG5ldyBIXyh0LCBuKSA6IG5ldyBMXyh0LCAwKSB9IHJldHVybiBlLmFscGhhID0gZnVuY3Rpb24gKG4pIHsgcmV0dXJuIHQoK24pIH0sIGUgfSguNSk7IGZ1bmN0aW9uIFhfKHQpIHsgdGhpcy5fY29udGV4dCA9IHQgfSBmdW5jdGlvbiBWXyh0KSB7IHJldHVybiB0IDwgMCA/IC0xIDogMSB9IGZ1bmN0aW9uIEdfKHQsIG4sIGUpIHsgdmFyIHIgPSB0Ll94MSAtIHQuX3gwLCBpID0gbiAtIHQuX3gxLCBvID0gKHQuX3kxIC0gdC5feTApIC8gKHIgfHwgaSA8IDAgJiYgLTApLCBhID0gKGUgLSB0Ll95MSkgLyAoaSB8fCByIDwgMCAmJiAtMCksIHUgPSAobyAqIGkgKyBhICogcikgLyAociArIGkpOyByZXR1cm4gKFZfKG8pICsgVl8oYSkpICogTWF0aC5taW4oTWF0aC5hYnMobyksIE1hdGguYWJzKGEpLCAuNSAqIE1hdGguYWJzKHUpKSB8fCAwIH0gZnVuY3Rpb24gJF8odCwgbikgeyB2YXIgZSA9IHQuX3gxIC0gdC5feDA7IHJldHVybiBlID8gKDMgKiAodC5feTEgLSB0Ll95MCkgLyBlIC0gbikgLyAyIDogbiB9IGZ1bmN0aW9uIFdfKHQsIG4sIGUpIHsgdmFyIHIgPSB0Ll94MCwgaSA9IHQuX3kwLCBvID0gdC5feDEsIGEgPSB0Ll95MSwgdSA9IChvIC0gcikgLyAzOyB0Ll9jb250ZXh0LmJlemllckN1cnZlVG8ociArIHUsIGkgKyB1ICogbiwgbyAtIHUsIGEgLSB1ICogZSwgbywgYSkgfSBmdW5jdGlvbiBaXyh0KSB7IHRoaXMuX2NvbnRleHQgPSB0IH0gZnVuY3Rpb24gUV8odCkgeyB0aGlzLl9jb250ZXh0ID0gbmV3IEtfKHQpIH0gZnVuY3Rpb24gS18odCkgeyB0aGlzLl9jb250ZXh0ID0gdCB9IGZ1bmN0aW9uIEpfKHQpIHsgdGhpcy5fY29udGV4dCA9IHQgfSBmdW5jdGlvbiB0Yih0KSB7IHZhciBuLCBlLCByID0gdC5sZW5ndGggLSAxLCBpID0gbmV3IEFycmF5KHIpLCBvID0gbmV3IEFycmF5KHIpLCBhID0gbmV3IEFycmF5KHIpOyBmb3IgKGlbMF0gPSAwLCBvWzBdID0gMiwgYVswXSA9IHRbMF0gKyAyICogdFsxXSwgbiA9IDE7IG4gPCByIC0gMTsgKytuKWlbbl0gPSAxLCBvW25dID0gNCwgYVtuXSA9IDQgKiB0W25dICsgMiAqIHRbbiArIDFdOyBmb3IgKGlbciAtIDFdID0gMiwgb1tyIC0gMV0gPSA3LCBhW3IgLSAxXSA9IDggKiB0W3IgLSAxXSArIHRbcl0sIG4gPSAxOyBuIDwgcjsgKytuKWUgPSBpW25dIC8gb1tuIC0gMV0sIG9bbl0gLT0gZSwgYVtuXSAtPSBlICogYVtuIC0gMV07IGZvciAoaVtyIC0gMV0gPSBhW3IgLSAxXSAvIG9bciAtIDFdLCBuID0gciAtIDI7IG4gPj0gMDsgLS1uKWlbbl0gPSAoYVtuXSAtIGlbbiArIDFdKSAvIG9bbl07IGZvciAob1tyIC0gMV0gPSAodFtyXSArIGlbciAtIDFdKSAvIDIsIG4gPSAwOyBuIDwgciAtIDE7ICsrbilvW25dID0gMiAqIHRbbiArIDFdIC0gaVtuICsgMV07IHJldHVybiBbaSwgb10gfSBmdW5jdGlvbiBuYih0LCBuKSB7IHRoaXMuX2NvbnRleHQgPSB0LCB0aGlzLl90ID0gbiB9IGZ1bmN0aW9uIGViKHQsIG4pIHsgaWYgKChpID0gdC5sZW5ndGgpID4gMSkgZm9yICh2YXIgZSwgciwgaSwgbyA9IDEsIGEgPSB0W25bMF1dLCB1ID0gYS5sZW5ndGg7IG8gPCBpOyArK28pZm9yIChyID0gYSwgYSA9IHRbbltvXV0sIGUgPSAwOyBlIDwgdTsgKytlKWFbZV1bMV0gKz0gYVtlXVswXSA9IGlzTmFOKHJbZV1bMV0pID8gcltlXVswXSA6IHJbZV1bMV0gfSBmdW5jdGlvbiByYih0KSB7IGZvciAodmFyIG4gPSB0Lmxlbmd0aCwgZSA9IG5ldyBBcnJheShuKTsgLS1uID49IDA7KWVbbl0gPSBuOyByZXR1cm4gZSB9IGZ1bmN0aW9uIGliKHQsIG4pIHsgcmV0dXJuIHRbbl0gfSBmdW5jdGlvbiBvYih0KSB7IHZhciBuID0gdC5tYXAoYWIpOyByZXR1cm4gcmIodCkuc29ydChmdW5jdGlvbiAodCwgZSkgeyByZXR1cm4gblt0XSAtIG5bZV0gfSkgfSBmdW5jdGlvbiBhYih0KSB7IGZvciAodmFyIG4sIGUgPSAtMSwgciA9IDAsIGkgPSB0Lmxlbmd0aCwgbyA9IC0xIC8gMDsgKytlIDwgaTspKG4gPSArdFtlXVsxXSkgPiBvICYmIChvID0gbiwgciA9IGUpOyByZXR1cm4gciB9IGZ1bmN0aW9uIHViKHQpIHsgdmFyIG4gPSB0Lm1hcChjYik7IHJldHVybiByYih0KS5zb3J0KGZ1bmN0aW9uICh0LCBlKSB7IHJldHVybiBuW3RdIC0gbltlXSB9KSB9IGZ1bmN0aW9uIGNiKHQpIHsgZm9yICh2YXIgbiwgZSA9IDAsIHIgPSAtMSwgaSA9IHQubGVuZ3RoOyArK3IgPCBpOykobiA9ICt0W3JdWzFdKSAmJiAoZSArPSBuKTsgcmV0dXJuIGUgfSBmdW5jdGlvbiBmYih0KSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiB0IH0gfSBmdW5jdGlvbiBzYih0KSB7IHJldHVybiB0WzBdIH0gZnVuY3Rpb24gbGIodCkgeyByZXR1cm4gdFsxXSB9IGZ1bmN0aW9uIGhiKCkgeyB0aGlzLl8gPSBudWxsIH0gZnVuY3Rpb24gZGIodCkgeyB0LlUgPSB0LkMgPSB0LkwgPSB0LlIgPSB0LlAgPSB0Lk4gPSBudWxsIH0gZnVuY3Rpb24gcGIodCwgbikgeyB2YXIgZSA9IG4sIHIgPSBuLlIsIGkgPSBlLlU7IGkgPyBpLkwgPT09IGUgPyBpLkwgPSByIDogaS5SID0gciA6IHQuXyA9IHIsIHIuVSA9IGksIGUuVSA9IHIsIGUuUiA9IHIuTCwgZS5SICYmIChlLlIuVSA9IGUpLCByLkwgPSBlIH0gZnVuY3Rpb24gdmIodCwgbikgeyB2YXIgZSA9IG4sIHIgPSBuLkwsIGkgPSBlLlU7IGkgPyBpLkwgPT09IGUgPyBpLkwgPSByIDogaS5SID0gciA6IHQuXyA9IHIsIHIuVSA9IGksIGUuVSA9IHIsIGUuTCA9IHIuUiwgZS5MICYmIChlLkwuVSA9IGUpLCByLlIgPSBlIH0gZnVuY3Rpb24gZ2IodCkgeyBmb3IgKDsgdC5MOyl0ID0gdC5MOyByZXR1cm4gdCB9IGZ1bmN0aW9uIHliKHQsIG4sIGUsIHIpIHsgdmFyIGkgPSBbbnVsbCwgbnVsbF0sIG8gPSBZYi5wdXNoKGkpIC0gMTsgcmV0dXJuIGkubGVmdCA9IHQsIGkucmlnaHQgPSBuLCBlICYmIGJiKGksIHQsIG4sIGUpLCByICYmIGJiKGksIG4sIHQsIHIpLCBCYlt0LmluZGV4XS5oYWxmZWRnZXMucHVzaChvKSwgQmJbbi5pbmRleF0uaGFsZmVkZ2VzLnB1c2gobyksIGkgfSBmdW5jdGlvbiBfYih0LCBuLCBlKSB7IHZhciByID0gW24sIGVdOyByZXR1cm4gci5sZWZ0ID0gdCwgciB9IGZ1bmN0aW9uIGJiKHQsIG4sIGUsIHIpIHsgdFswXSB8fCB0WzFdID8gdC5sZWZ0ID09PSBlID8gdFsxXSA9IHIgOiB0WzBdID0gciA6ICh0WzBdID0gciwgdC5sZWZ0ID0gbiwgdC5yaWdodCA9IGUpIH0gZnVuY3Rpb24gbWIodCwgbiwgZSwgciwgaSkgeyB2YXIgbywgYSA9IHRbMF0sIHUgPSB0WzFdLCBjID0gYVswXSwgZiA9IGFbMV0sIHMgPSAwLCBsID0gMSwgaCA9IHVbMF0gLSBjLCBkID0gdVsxXSAtIGY7IGlmIChvID0gbiAtIGMsIGggfHwgIShvID4gMCkpIHsgaWYgKG8gLz0gaCwgaCA8IDApIHsgaWYgKG8gPCBzKSByZXR1cm47IG8gPCBsICYmIChsID0gbykgfSBlbHNlIGlmIChoID4gMCkgeyBpZiAobyA+IGwpIHJldHVybjsgbyA+IHMgJiYgKHMgPSBvKSB9IGlmIChvID0gciAtIGMsIGggfHwgIShvIDwgMCkpIHsgaWYgKG8gLz0gaCwgaCA8IDApIHsgaWYgKG8gPiBsKSByZXR1cm47IG8gPiBzICYmIChzID0gbykgfSBlbHNlIGlmIChoID4gMCkgeyBpZiAobyA8IHMpIHJldHVybjsgbyA8IGwgJiYgKGwgPSBvKSB9IGlmIChvID0gZSAtIGYsIGQgfHwgIShvID4gMCkpIHsgaWYgKG8gLz0gZCwgZCA8IDApIHsgaWYgKG8gPCBzKSByZXR1cm47IG8gPCBsICYmIChsID0gbykgfSBlbHNlIGlmIChkID4gMCkgeyBpZiAobyA+IGwpIHJldHVybjsgbyA+IHMgJiYgKHMgPSBvKSB9IGlmIChvID0gaSAtIGYsIGQgfHwgIShvIDwgMCkpIHsgaWYgKG8gLz0gZCwgZCA8IDApIHsgaWYgKG8gPiBsKSByZXR1cm47IG8gPiBzICYmIChzID0gbykgfSBlbHNlIGlmIChkID4gMCkgeyBpZiAobyA8IHMpIHJldHVybjsgbyA8IGwgJiYgKGwgPSBvKSB9IHJldHVybiAhKHMgPiAwIHx8IGwgPCAxKSB8fCAocyA+IDAgJiYgKHRbMF0gPSBbYyArIHMgKiBoLCBmICsgcyAqIGRdKSwgbCA8IDEgJiYgKHRbMV0gPSBbYyArIGwgKiBoLCBmICsgbCAqIGRdKSwgITApIH0gfSB9IH0gfSBmdW5jdGlvbiB4Yih0LCBuLCBlLCByLCBpKSB7IHZhciBvID0gdFsxXTsgaWYgKG8pIHJldHVybiAhMDsgdmFyIGEsIHUsIGMgPSB0WzBdLCBmID0gdC5sZWZ0LCBzID0gdC5yaWdodCwgbCA9IGZbMF0sIGggPSBmWzFdLCBkID0gc1swXSwgcCA9IHNbMV0sIHYgPSAobCArIGQpIC8gMiwgZyA9IChoICsgcCkgLyAyOyBpZiAocCA9PT0gaCkgeyBpZiAodiA8IG4gfHwgdiA+PSByKSByZXR1cm47IGlmIChsID4gZCkgeyBpZiAoYykgeyBpZiAoY1sxXSA+PSBpKSByZXR1cm4gfSBlbHNlIGMgPSBbdiwgZV07IG8gPSBbdiwgaV0gfSBlbHNlIHsgaWYgKGMpIHsgaWYgKGNbMV0gPCBlKSByZXR1cm4gfSBlbHNlIGMgPSBbdiwgaV07IG8gPSBbdiwgZV0gfSB9IGVsc2UgaWYgKHUgPSBnIC0gKGEgPSAobCAtIGQpIC8gKHAgLSBoKSkgKiB2LCBhIDwgLTEgfHwgYSA+IDEpIGlmIChsID4gZCkgeyBpZiAoYykgeyBpZiAoY1sxXSA+PSBpKSByZXR1cm4gfSBlbHNlIGMgPSBbKGUgLSB1KSAvIGEsIGVdOyBvID0gWyhpIC0gdSkgLyBhLCBpXSB9IGVsc2UgeyBpZiAoYykgeyBpZiAoY1sxXSA8IGUpIHJldHVybiB9IGVsc2UgYyA9IFsoaSAtIHUpIC8gYSwgaV07IG8gPSBbKGUgLSB1KSAvIGEsIGVdIH0gZWxzZSBpZiAoaCA8IHApIHsgaWYgKGMpIHsgaWYgKGNbMF0gPj0gcikgcmV0dXJuIH0gZWxzZSBjID0gW24sIGEgKiBuICsgdV07IG8gPSBbciwgYSAqIHIgKyB1XSB9IGVsc2UgeyBpZiAoYykgeyBpZiAoY1swXSA8IG4pIHJldHVybiB9IGVsc2UgYyA9IFtyLCBhICogciArIHVdOyBvID0gW24sIGEgKiBuICsgdV0gfSByZXR1cm4gdFswXSA9IGMsIHRbMV0gPSBvLCAhMCB9IGZ1bmN0aW9uIHdiKHQsIG4pIHsgdmFyIGUgPSB0LnNpdGUsIHIgPSBuLmxlZnQsIGkgPSBuLnJpZ2h0OyByZXR1cm4gZSA9PT0gaSAmJiAoaSA9IHIsIHIgPSBlKSwgaSA/IE1hdGguYXRhbjIoaVsxXSAtIHJbMV0sIGlbMF0gLSByWzBdKSA6IChlID09PSByID8gKHIgPSBuWzFdLCBpID0gblswXSkgOiAociA9IG5bMF0sIGkgPSBuWzFdKSwgTWF0aC5hdGFuMihyWzBdIC0gaVswXSwgaVsxXSAtIHJbMV0pKSB9IGZ1bmN0aW9uIE1iKHQsIG4pIHsgcmV0dXJuIG5bKyhuLmxlZnQgIT09IHQuc2l0ZSldIH0gZnVuY3Rpb24gTmIodCwgbikgeyByZXR1cm4gblsrKG4ubGVmdCA9PT0gdC5zaXRlKV0gfSBYXy5wcm90b3R5cGUgPSB7IGFyZWFTdGFydDogTl8sIGFyZWFFbmQ6IE5fLCBsaW5lU3RhcnQ6IGZ1bmN0aW9uICgpIHsgdGhpcy5fcG9pbnQgPSAwIH0sIGxpbmVFbmQ6IGZ1bmN0aW9uICgpIHsgdGhpcy5fcG9pbnQgJiYgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKSB9LCBwb2ludDogZnVuY3Rpb24gKHQsIG4pIHsgdCA9ICt0LCBuID0gK24sIHRoaXMuX3BvaW50ID8gdGhpcy5fY29udGV4dC5saW5lVG8odCwgbikgOiAodGhpcy5fcG9pbnQgPSAxLCB0aGlzLl9jb250ZXh0Lm1vdmVUbyh0LCBuKSkgfSB9LCBaXy5wcm90b3R5cGUgPSB7IGFyZWFTdGFydDogZnVuY3Rpb24gKCkgeyB0aGlzLl9saW5lID0gMCB9LCBhcmVhRW5kOiBmdW5jdGlvbiAoKSB7IHRoaXMuX2xpbmUgPSBOYU4gfSwgbGluZVN0YXJ0OiBmdW5jdGlvbiAoKSB7IHRoaXMuX3gwID0gdGhpcy5feDEgPSB0aGlzLl95MCA9IHRoaXMuX3kxID0gdGhpcy5fdDAgPSBOYU4sIHRoaXMuX3BvaW50ID0gMCB9LCBsaW5lRW5kOiBmdW5jdGlvbiAoKSB7IHN3aXRjaCAodGhpcy5fcG9pbnQpIHsgY2FzZSAyOiB0aGlzLl9jb250ZXh0LmxpbmVUbyh0aGlzLl94MSwgdGhpcy5feTEpOyBicmVhazsgY2FzZSAzOiBXXyh0aGlzLCB0aGlzLl90MCwgJF8odGhpcywgdGhpcy5fdDApKSB9KHRoaXMuX2xpbmUgfHwgMCAhPT0gdGhpcy5fbGluZSAmJiAxID09PSB0aGlzLl9wb2ludCkgJiYgdGhpcy5fY29udGV4dC5jbG9zZVBhdGgoKSwgdGhpcy5fbGluZSA9IDEgLSB0aGlzLl9saW5lIH0sIHBvaW50OiBmdW5jdGlvbiAodCwgbikgeyB2YXIgZSA9IE5hTjsgaWYgKG4gPSArbiwgKHQgPSArdCkgIT09IHRoaXMuX3gxIHx8IG4gIT09IHRoaXMuX3kxKSB7IHN3aXRjaCAodGhpcy5fcG9pbnQpIHsgY2FzZSAwOiB0aGlzLl9wb2ludCA9IDEsIHRoaXMuX2xpbmUgPyB0aGlzLl9jb250ZXh0LmxpbmVUbyh0LCBuKSA6IHRoaXMuX2NvbnRleHQubW92ZVRvKHQsIG4pOyBicmVhazsgY2FzZSAxOiB0aGlzLl9wb2ludCA9IDI7IGJyZWFrOyBjYXNlIDI6IHRoaXMuX3BvaW50ID0gMywgV18odGhpcywgJF8odGhpcywgZSA9IEdfKHRoaXMsIHQsIG4pKSwgZSk7IGJyZWFrOyBkZWZhdWx0OiBXXyh0aGlzLCB0aGlzLl90MCwgZSA9IEdfKHRoaXMsIHQsIG4pKSB9dGhpcy5feDAgPSB0aGlzLl94MSwgdGhpcy5feDEgPSB0LCB0aGlzLl95MCA9IHRoaXMuX3kxLCB0aGlzLl95MSA9IG4sIHRoaXMuX3QwID0gZSB9IH0gfSwgKFFfLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoWl8ucHJvdG90eXBlKSkucG9pbnQgPSBmdW5jdGlvbiAodCwgbikgeyBaXy5wcm90b3R5cGUucG9pbnQuY2FsbCh0aGlzLCBuLCB0KSB9LCBLXy5wcm90b3R5cGUgPSB7IG1vdmVUbzogZnVuY3Rpb24gKHQsIG4pIHsgdGhpcy5fY29udGV4dC5tb3ZlVG8obiwgdCkgfSwgY2xvc2VQYXRoOiBmdW5jdGlvbiAoKSB7IHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCkgfSwgbGluZVRvOiBmdW5jdGlvbiAodCwgbikgeyB0aGlzLl9jb250ZXh0LmxpbmVUbyhuLCB0KSB9LCBiZXppZXJDdXJ2ZVRvOiBmdW5jdGlvbiAodCwgbiwgZSwgciwgaSwgbykgeyB0aGlzLl9jb250ZXh0LmJlemllckN1cnZlVG8obiwgdCwgciwgZSwgbywgaSkgfSB9LCBKXy5wcm90b3R5cGUgPSB7IGFyZWFTdGFydDogZnVuY3Rpb24gKCkgeyB0aGlzLl9saW5lID0gMCB9LCBhcmVhRW5kOiBmdW5jdGlvbiAoKSB7IHRoaXMuX2xpbmUgPSBOYU4gfSwgbGluZVN0YXJ0OiBmdW5jdGlvbiAoKSB7IHRoaXMuX3ggPSBbXSwgdGhpcy5feSA9IFtdIH0sIGxpbmVFbmQ6IGZ1bmN0aW9uICgpIHsgdmFyIHQgPSB0aGlzLl94LCBuID0gdGhpcy5feSwgZSA9IHQubGVuZ3RoOyBpZiAoZSkgaWYgKHRoaXMuX2xpbmUgPyB0aGlzLl9jb250ZXh0LmxpbmVUbyh0WzBdLCBuWzBdKSA6IHRoaXMuX2NvbnRleHQubW92ZVRvKHRbMF0sIG5bMF0pLCAyID09PSBlKSB0aGlzLl9jb250ZXh0LmxpbmVUbyh0WzFdLCBuWzFdKTsgZWxzZSBmb3IgKHZhciByID0gdGIodCksIGkgPSB0YihuKSwgbyA9IDAsIGEgPSAxOyBhIDwgZTsgKytvLCArK2EpdGhpcy5fY29udGV4dC5iZXppZXJDdXJ2ZVRvKHJbMF1bb10sIGlbMF1bb10sIHJbMV1bb10sIGlbMV1bb10sIHRbYV0sIG5bYV0pOyAodGhpcy5fbGluZSB8fCAwICE9PSB0aGlzLl9saW5lICYmIDEgPT09IGUpICYmIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCksIHRoaXMuX2xpbmUgPSAxIC0gdGhpcy5fbGluZSwgdGhpcy5feCA9IHRoaXMuX3kgPSBudWxsIH0sIHBvaW50OiBmdW5jdGlvbiAodCwgbikgeyB0aGlzLl94LnB1c2goK3QpLCB0aGlzLl95LnB1c2goK24pIH0gfSwgbmIucHJvdG90eXBlID0geyBhcmVhU3RhcnQ6IGZ1bmN0aW9uICgpIHsgdGhpcy5fbGluZSA9IDAgfSwgYXJlYUVuZDogZnVuY3Rpb24gKCkgeyB0aGlzLl9saW5lID0gTmFOIH0sIGxpbmVTdGFydDogZnVuY3Rpb24gKCkgeyB0aGlzLl94ID0gdGhpcy5feSA9IE5hTiwgdGhpcy5fcG9pbnQgPSAwIH0sIGxpbmVFbmQ6IGZ1bmN0aW9uICgpIHsgMCA8IHRoaXMuX3QgJiYgdGhpcy5fdCA8IDEgJiYgMiA9PT0gdGhpcy5fcG9pbnQgJiYgdGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feCwgdGhpcy5feSksICh0aGlzLl9saW5lIHx8IDAgIT09IHRoaXMuX2xpbmUgJiYgMSA9PT0gdGhpcy5fcG9pbnQpICYmIHRoaXMuX2NvbnRleHQuY2xvc2VQYXRoKCksIHRoaXMuX2xpbmUgPj0gMCAmJiAodGhpcy5fdCA9IDEgLSB0aGlzLl90LCB0aGlzLl9saW5lID0gMSAtIHRoaXMuX2xpbmUpIH0sIHBvaW50OiBmdW5jdGlvbiAodCwgbikgeyBzd2l0Y2ggKHQgPSArdCwgbiA9ICtuLCB0aGlzLl9wb2ludCkgeyBjYXNlIDA6IHRoaXMuX3BvaW50ID0gMSwgdGhpcy5fbGluZSA/IHRoaXMuX2NvbnRleHQubGluZVRvKHQsIG4pIDogdGhpcy5fY29udGV4dC5tb3ZlVG8odCwgbik7IGJyZWFrOyBjYXNlIDE6IHRoaXMuX3BvaW50ID0gMjsgZGVmYXVsdDogaWYgKHRoaXMuX3QgPD0gMCkgdGhpcy5fY29udGV4dC5saW5lVG8odGhpcy5feCwgbiksIHRoaXMuX2NvbnRleHQubGluZVRvKHQsIG4pOyBlbHNlIHsgdmFyIGUgPSB0aGlzLl94ICogKDEgLSB0aGlzLl90KSArIHQgKiB0aGlzLl90OyB0aGlzLl9jb250ZXh0LmxpbmVUbyhlLCB0aGlzLl95KSwgdGhpcy5fY29udGV4dC5saW5lVG8oZSwgbikgfSB9dGhpcy5feCA9IHQsIHRoaXMuX3kgPSBuIH0gfSwgaGIucHJvdG90eXBlID0geyBjb25zdHJ1Y3RvcjogaGIsIGluc2VydDogZnVuY3Rpb24gKHQsIG4pIHsgdmFyIGUsIHIsIGk7IGlmICh0KSB7IGlmIChuLlAgPSB0LCBuLk4gPSB0Lk4sIHQuTiAmJiAodC5OLlAgPSBuKSwgdC5OID0gbiwgdC5SKSB7IGZvciAodCA9IHQuUjsgdC5MOyl0ID0gdC5MOyB0LkwgPSBuIH0gZWxzZSB0LlIgPSBuOyBlID0gdCB9IGVsc2UgdGhpcy5fID8gKHQgPSBnYih0aGlzLl8pLCBuLlAgPSBudWxsLCBuLk4gPSB0LCB0LlAgPSB0LkwgPSBuLCBlID0gdCkgOiAobi5QID0gbi5OID0gbnVsbCwgdGhpcy5fID0gbiwgZSA9IG51bGwpOyBmb3IgKG4uTCA9IG4uUiA9IG51bGwsIG4uVSA9IGUsIG4uQyA9ICEwLCB0ID0gbjsgZSAmJiBlLkM7KWUgPT09IChyID0gZS5VKS5MID8gKGkgPSByLlIpICYmIGkuQyA/IChlLkMgPSBpLkMgPSAhMSwgci5DID0gITAsIHQgPSByKSA6ICh0ID09PSBlLlIgJiYgKHBiKHRoaXMsIGUpLCBlID0gKHQgPSBlKS5VKSwgZS5DID0gITEsIHIuQyA9ICEwLCB2Yih0aGlzLCByKSkgOiAoaSA9IHIuTCkgJiYgaS5DID8gKGUuQyA9IGkuQyA9ICExLCByLkMgPSAhMCwgdCA9IHIpIDogKHQgPT09IGUuTCAmJiAodmIodGhpcywgZSksIGUgPSAodCA9IGUpLlUpLCBlLkMgPSAhMSwgci5DID0gITAsIHBiKHRoaXMsIHIpKSwgZSA9IHQuVTsgdGhpcy5fLkMgPSAhMSB9LCByZW1vdmU6IGZ1bmN0aW9uICh0KSB7IHQuTiAmJiAodC5OLlAgPSB0LlApLCB0LlAgJiYgKHQuUC5OID0gdC5OKSwgdC5OID0gdC5QID0gbnVsbDsgdmFyIG4sIGUsIHIsIGkgPSB0LlUsIG8gPSB0LkwsIGEgPSB0LlI7IGlmIChlID0gbyA/IGEgPyBnYihhKSA6IG8gOiBhLCBpID8gaS5MID09PSB0ID8gaS5MID0gZSA6IGkuUiA9IGUgOiB0aGlzLl8gPSBlLCBvICYmIGEgPyAociA9IGUuQywgZS5DID0gdC5DLCBlLkwgPSBvLCBvLlUgPSBlLCBlICE9PSBhID8gKGkgPSBlLlUsIGUuVSA9IHQuVSwgdCA9IGUuUiwgaS5MID0gdCwgZS5SID0gYSwgYS5VID0gZSkgOiAoZS5VID0gaSwgaSA9IGUsIHQgPSBlLlIpKSA6IChyID0gdC5DLCB0ID0gZSksIHQgJiYgKHQuVSA9IGkpLCAhcikgaWYgKHQgJiYgdC5DKSB0LkMgPSAhMTsgZWxzZSB7IGRvIHsgaWYgKHQgPT09IHRoaXMuXykgYnJlYWs7IGlmICh0ID09PSBpLkwpIHsgaWYgKChuID0gaS5SKS5DICYmIChuLkMgPSAhMSwgaS5DID0gITAsIHBiKHRoaXMsIGkpLCBuID0gaS5SKSwgbi5MICYmIG4uTC5DIHx8IG4uUiAmJiBuLlIuQykgeyBuLlIgJiYgbi5SLkMgfHwgKG4uTC5DID0gITEsIG4uQyA9ICEwLCB2Yih0aGlzLCBuKSwgbiA9IGkuUiksIG4uQyA9IGkuQywgaS5DID0gbi5SLkMgPSAhMSwgcGIodGhpcywgaSksIHQgPSB0aGlzLl87IGJyZWFrIH0gfSBlbHNlIGlmICgobiA9IGkuTCkuQyAmJiAobi5DID0gITEsIGkuQyA9ICEwLCB2Yih0aGlzLCBpKSwgbiA9IGkuTCksIG4uTCAmJiBuLkwuQyB8fCBuLlIgJiYgbi5SLkMpIHsgbi5MICYmIG4uTC5DIHx8IChuLlIuQyA9ICExLCBuLkMgPSAhMCwgcGIodGhpcywgbiksIG4gPSBpLkwpLCBuLkMgPSBpLkMsIGkuQyA9IG4uTC5DID0gITEsIHZiKHRoaXMsIGkpLCB0ID0gdGhpcy5fOyBicmVhayB9IG4uQyA9ICEwLCB0ID0gaSwgaSA9IGkuVSB9IHdoaWxlICghdC5DKTsgdCAmJiAodC5DID0gITEpIH0gfSB9OyB2YXIgVGIsIEFiID0gW107IGZ1bmN0aW9uIFNiKCkgeyBkYih0aGlzKSwgdGhpcy54ID0gdGhpcy55ID0gdGhpcy5hcmMgPSB0aGlzLnNpdGUgPSB0aGlzLmN5ID0gbnVsbCB9IGZ1bmN0aW9uIGtiKHQpIHsgdmFyIG4gPSB0LlAsIGUgPSB0Lk47IGlmIChuICYmIGUpIHsgdmFyIHIgPSBuLnNpdGUsIGkgPSB0LnNpdGUsIG8gPSBlLnNpdGU7IGlmIChyICE9PSBvKSB7IHZhciBhID0gaVswXSwgdSA9IGlbMV0sIGMgPSByWzBdIC0gYSwgZiA9IHJbMV0gLSB1LCBzID0gb1swXSAtIGEsIGwgPSBvWzFdIC0gdSwgaCA9IDIgKiAoYyAqIGwgLSBmICogcyk7IGlmICghKGggPj0gLUhiKSkgeyB2YXIgZCA9IGMgKiBjICsgZiAqIGYsIHAgPSBzICogcyArIGwgKiBsLCB2ID0gKGwgKiBkIC0gZiAqIHApIC8gaCwgZyA9IChjICogcCAtIHMgKiBkKSAvIGgsIHkgPSBBYi5wb3AoKSB8fCBuZXcgU2I7IHkuYXJjID0gdCwgeS5zaXRlID0gaSwgeS54ID0gdiArIGEsIHkueSA9ICh5LmN5ID0gZyArIHUpICsgTWF0aC5zcXJ0KHYgKiB2ICsgZyAqIGcpLCB0LmNpcmNsZSA9IHk7IGZvciAodmFyIF8gPSBudWxsLCBiID0gRmIuXzsgYjspaWYgKHkueSA8IGIueSB8fCB5LnkgPT09IGIueSAmJiB5LnggPD0gYi54KSB7IGlmICghYi5MKSB7IF8gPSBiLlA7IGJyZWFrIH0gYiA9IGIuTCB9IGVsc2UgeyBpZiAoIWIuUikgeyBfID0gYjsgYnJlYWsgfSBiID0gYi5SIH0gRmIuaW5zZXJ0KF8sIHkpLCBfIHx8IChUYiA9IHkpIH0gfSB9IH0gZnVuY3Rpb24gRWIodCkgeyB2YXIgbiA9IHQuY2lyY2xlOyBuICYmIChuLlAgfHwgKFRiID0gbi5OKSwgRmIucmVtb3ZlKG4pLCBBYi5wdXNoKG4pLCBkYihuKSwgdC5jaXJjbGUgPSBudWxsKSB9IHZhciBDYiA9IFtdOyBmdW5jdGlvbiBQYigpIHsgZGIodGhpcyksIHRoaXMuZWRnZSA9IHRoaXMuc2l0ZSA9IHRoaXMuY2lyY2xlID0gbnVsbCB9IGZ1bmN0aW9uIHpiKHQpIHsgdmFyIG4gPSBDYi5wb3AoKSB8fCBuZXcgUGI7IHJldHVybiBuLnNpdGUgPSB0LCBuIH0gZnVuY3Rpb24gUmIodCkgeyBFYih0KSwgT2IucmVtb3ZlKHQpLCBDYi5wdXNoKHQpLCBkYih0KSB9IGZ1bmN0aW9uIERiKHQpIHsgdmFyIG4gPSB0LmNpcmNsZSwgZSA9IG4ueCwgciA9IG4uY3ksIGkgPSBbZSwgcl0sIG8gPSB0LlAsIGEgPSB0Lk4sIHUgPSBbdF07IFJiKHQpOyBmb3IgKHZhciBjID0gbzsgYy5jaXJjbGUgJiYgTWF0aC5hYnMoZSAtIGMuY2lyY2xlLngpIDwgSWIgJiYgTWF0aC5hYnMociAtIGMuY2lyY2xlLmN5KSA8IEliOylvID0gYy5QLCB1LnVuc2hpZnQoYyksIFJiKGMpLCBjID0gbzsgdS51bnNoaWZ0KGMpLCBFYihjKTsgZm9yICh2YXIgZiA9IGE7IGYuY2lyY2xlICYmIE1hdGguYWJzKGUgLSBmLmNpcmNsZS54KSA8IEliICYmIE1hdGguYWJzKHIgLSBmLmNpcmNsZS5jeSkgPCBJYjspYSA9IGYuTiwgdS5wdXNoKGYpLCBSYihmKSwgZiA9IGE7IHUucHVzaChmKSwgRWIoZik7IHZhciBzLCBsID0gdS5sZW5ndGg7IGZvciAocyA9IDE7IHMgPCBsOyArK3MpZiA9IHVbc10sIGMgPSB1W3MgLSAxXSwgYmIoZi5lZGdlLCBjLnNpdGUsIGYuc2l0ZSwgaSk7IGMgPSB1WzBdLCAoZiA9IHVbbCAtIDFdKS5lZGdlID0geWIoYy5zaXRlLCBmLnNpdGUsIG51bGwsIGkpLCBrYihjKSwga2IoZikgfSBmdW5jdGlvbiBxYih0KSB7IGZvciAodmFyIG4sIGUsIHIsIGksIG8gPSB0WzBdLCBhID0gdFsxXSwgdSA9IE9iLl87IHU7KWlmICgociA9IExiKHUsIGEpIC0gbykgPiBJYikgdSA9IHUuTDsgZWxzZSB7IGlmICghKChpID0gbyAtIFViKHUsIGEpKSA+IEliKSkgeyByID4gLUliID8gKG4gPSB1LlAsIGUgPSB1KSA6IGkgPiAtSWIgPyAobiA9IHUsIGUgPSB1Lk4pIDogbiA9IGUgPSB1OyBicmVhayB9IGlmICghdS5SKSB7IG4gPSB1OyBicmVhayB9IHUgPSB1LlIgfSAhZnVuY3Rpb24gKHQpIHsgQmJbdC5pbmRleF0gPSB7IHNpdGU6IHQsIGhhbGZlZGdlczogW10gfSB9KHQpOyB2YXIgYyA9IHpiKHQpOyBpZiAoT2IuaW5zZXJ0KG4sIGMpLCBuIHx8IGUpIHsgaWYgKG4gPT09IGUpIHJldHVybiBFYihuKSwgZSA9IHpiKG4uc2l0ZSksIE9iLmluc2VydChjLCBlKSwgYy5lZGdlID0gZS5lZGdlID0geWIobi5zaXRlLCBjLnNpdGUpLCBrYihuKSwgdm9pZCBrYihlKTsgaWYgKGUpIHsgRWIobiksIEViKGUpOyB2YXIgZiA9IG4uc2l0ZSwgcyA9IGZbMF0sIGwgPSBmWzFdLCBoID0gdFswXSAtIHMsIGQgPSB0WzFdIC0gbCwgcCA9IGUuc2l0ZSwgdiA9IHBbMF0gLSBzLCBnID0gcFsxXSAtIGwsIHkgPSAyICogKGggKiBnIC0gZCAqIHYpLCBfID0gaCAqIGggKyBkICogZCwgYiA9IHYgKiB2ICsgZyAqIGcsIG0gPSBbKGcgKiBfIC0gZCAqIGIpIC8geSArIHMsIChoICogYiAtIHYgKiBfKSAvIHkgKyBsXTsgYmIoZS5lZGdlLCBmLCBwLCBtKSwgYy5lZGdlID0geWIoZiwgdCwgbnVsbCwgbSksIGUuZWRnZSA9IHliKHQsIHAsIG51bGwsIG0pLCBrYihuKSwga2IoZSkgfSBlbHNlIGMuZWRnZSA9IHliKG4uc2l0ZSwgYy5zaXRlKSB9IH0gZnVuY3Rpb24gTGIodCwgbikgeyB2YXIgZSA9IHQuc2l0ZSwgciA9IGVbMF0sIGkgPSBlWzFdLCBvID0gaSAtIG47IGlmICghbykgcmV0dXJuIHI7IHZhciBhID0gdC5QOyBpZiAoIWEpIHJldHVybiAtMSAvIDA7IHZhciB1ID0gKGUgPSBhLnNpdGUpWzBdLCBjID0gZVsxXSwgZiA9IGMgLSBuOyBpZiAoIWYpIHJldHVybiB1OyB2YXIgcyA9IHUgLSByLCBsID0gMSAvIG8gLSAxIC8gZiwgaCA9IHMgLyBmOyByZXR1cm4gbCA/ICgtaCArIE1hdGguc3FydChoICogaCAtIDIgKiBsICogKHMgKiBzIC8gKC0yICogZikgLSBjICsgZiAvIDIgKyBpIC0gbyAvIDIpKSkgLyBsICsgciA6IChyICsgdSkgLyAyIH0gZnVuY3Rpb24gVWIodCwgbikgeyB2YXIgZSA9IHQuTjsgaWYgKGUpIHJldHVybiBMYihlLCBuKTsgdmFyIHIgPSB0LnNpdGU7IHJldHVybiByWzFdID09PSBuID8gclswXSA6IDEgLyAwIH0gdmFyIE9iLCBCYiwgRmIsIFliLCBJYiA9IDFlLTYsIEhiID0gMWUtMTI7IGZ1bmN0aW9uIGpiKHQsIG4sIGUpIHsgcmV0dXJuICh0WzBdIC0gZVswXSkgKiAoblsxXSAtIHRbMV0pIC0gKHRbMF0gLSBuWzBdKSAqIChlWzFdIC0gdFsxXSkgfSBmdW5jdGlvbiBYYih0LCBuKSB7IHJldHVybiBuWzFdIC0gdFsxXSB8fCBuWzBdIC0gdFswXSB9IGZ1bmN0aW9uIFZiKHQsIG4pIHsgdmFyIGUsIHIsIGksIG8gPSB0LnNvcnQoWGIpLnBvcCgpOyBmb3IgKFliID0gW10sIEJiID0gbmV3IEFycmF5KHQubGVuZ3RoKSwgT2IgPSBuZXcgaGIsIEZiID0gbmV3IGhiOyA7KWlmIChpID0gVGIsIG8gJiYgKCFpIHx8IG9bMV0gPCBpLnkgfHwgb1sxXSA9PT0gaS55ICYmIG9bMF0gPCBpLngpKSBvWzBdID09PSBlICYmIG9bMV0gPT09IHIgfHwgKHFiKG8pLCBlID0gb1swXSwgciA9IG9bMV0pLCBvID0gdC5wb3AoKTsgZWxzZSB7IGlmICghaSkgYnJlYWs7IERiKGkuYXJjKSB9IGlmIChmdW5jdGlvbiAoKSB7IGZvciAodmFyIHQsIG4sIGUsIHIsIGkgPSAwLCBvID0gQmIubGVuZ3RoOyBpIDwgbzsgKytpKWlmICgodCA9IEJiW2ldKSAmJiAociA9IChuID0gdC5oYWxmZWRnZXMpLmxlbmd0aCkpIHsgdmFyIGEgPSBuZXcgQXJyYXkociksIHUgPSBuZXcgQXJyYXkocik7IGZvciAoZSA9IDA7IGUgPCByOyArK2UpYVtlXSA9IGUsIHVbZV0gPSB3Yih0LCBZYltuW2VdXSk7IGZvciAoYS5zb3J0KGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiB1W25dIC0gdVt0XSB9KSwgZSA9IDA7IGUgPCByOyArK2UpdVtlXSA9IG5bYVtlXV07IGZvciAoZSA9IDA7IGUgPCByOyArK2UpbltlXSA9IHVbZV0gfSB9KCksIG4pIHsgdmFyIGEgPSArblswXVswXSwgdSA9ICtuWzBdWzFdLCBjID0gK25bMV1bMF0sIGYgPSArblsxXVsxXTsgIWZ1bmN0aW9uICh0LCBuLCBlLCByKSB7IGZvciAodmFyIGksIG8gPSBZYi5sZW5ndGg7IG8tLTspeGIoaSA9IFliW29dLCB0LCBuLCBlLCByKSAmJiBtYihpLCB0LCBuLCBlLCByKSAmJiAoTWF0aC5hYnMoaVswXVswXSAtIGlbMV1bMF0pID4gSWIgfHwgTWF0aC5hYnMoaVswXVsxXSAtIGlbMV1bMV0pID4gSWIpIHx8IGRlbGV0ZSBZYltvXSB9KGEsIHUsIGMsIGYpLCBmdW5jdGlvbiAodCwgbiwgZSwgcikgeyB2YXIgaSwgbywgYSwgdSwgYywgZiwgcywgbCwgaCwgZCwgcCwgdiwgZyA9IEJiLmxlbmd0aCwgeSA9ICEwOyBmb3IgKGkgPSAwOyBpIDwgZzsgKytpKWlmIChvID0gQmJbaV0pIHsgZm9yIChhID0gby5zaXRlLCB1ID0gKGMgPSBvLmhhbGZlZGdlcykubGVuZ3RoOyB1LS07KVliW2NbdV1dIHx8IGMuc3BsaWNlKHUsIDEpOyBmb3IgKHUgPSAwLCBmID0gYy5sZW5ndGg7IHUgPCBmOylwID0gKGQgPSBOYihvLCBZYltjW3VdXSkpWzBdLCB2ID0gZFsxXSwgbCA9IChzID0gTWIobywgWWJbY1srK3UgJSBmXV0pKVswXSwgaCA9IHNbMV0sIChNYXRoLmFicyhwIC0gbCkgPiBJYiB8fCBNYXRoLmFicyh2IC0gaCkgPiBJYikgJiYgKGMuc3BsaWNlKHUsIDAsIFliLnB1c2goX2IoYSwgZCwgTWF0aC5hYnMocCAtIHQpIDwgSWIgJiYgciAtIHYgPiBJYiA/IFt0LCBNYXRoLmFicyhsIC0gdCkgPCBJYiA/IGggOiByXSA6IE1hdGguYWJzKHYgLSByKSA8IEliICYmIGUgLSBwID4gSWIgPyBbTWF0aC5hYnMoaCAtIHIpIDwgSWIgPyBsIDogZSwgcl0gOiBNYXRoLmFicyhwIC0gZSkgPCBJYiAmJiB2IC0gbiA+IEliID8gW2UsIE1hdGguYWJzKGwgLSBlKSA8IEliID8gaCA6IG5dIDogTWF0aC5hYnModiAtIG4pIDwgSWIgJiYgcCAtIHQgPiBJYiA/IFtNYXRoLmFicyhoIC0gbikgPCBJYiA/IGwgOiB0LCBuXSA6IG51bGwpKSAtIDEpLCArK2YpOyBmICYmICh5ID0gITEpIH0gaWYgKHkpIHsgdmFyIF8sIGIsIG0sIHggPSAxIC8gMDsgZm9yIChpID0gMCwgeSA9IG51bGw7IGkgPCBnOyArK2kpKG8gPSBCYltpXSkgJiYgKG0gPSAoXyA9IChhID0gby5zaXRlKVswXSAtIHQpICogXyArIChiID0gYVsxXSAtIG4pICogYikgPCB4ICYmICh4ID0gbSwgeSA9IG8pOyBpZiAoeSkgeyB2YXIgdyA9IFt0LCBuXSwgTSA9IFt0LCByXSwgTiA9IFtlLCByXSwgVCA9IFtlLCBuXTsgeS5oYWxmZWRnZXMucHVzaChZYi5wdXNoKF9iKGEgPSB5LnNpdGUsIHcsIE0pKSAtIDEsIFliLnB1c2goX2IoYSwgTSwgTikpIC0gMSwgWWIucHVzaChfYihhLCBOLCBUKSkgLSAxLCBZYi5wdXNoKF9iKGEsIFQsIHcpKSAtIDEpIH0gfSBmb3IgKGkgPSAwOyBpIDwgZzsgKytpKShvID0gQmJbaV0pICYmIChvLmhhbGZlZGdlcy5sZW5ndGggfHwgZGVsZXRlIEJiW2ldKSB9KGEsIHUsIGMsIGYpIH0gdGhpcy5lZGdlcyA9IFliLCB0aGlzLmNlbGxzID0gQmIsIE9iID0gRmIgPSBZYiA9IEJiID0gbnVsbCB9IGZ1bmN0aW9uIEdiKHQpIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHQgfSB9IGZ1bmN0aW9uICRiKHQsIG4sIGUpIHsgdGhpcy50YXJnZXQgPSB0LCB0aGlzLnR5cGUgPSBuLCB0aGlzLnRyYW5zZm9ybSA9IGUgfSBmdW5jdGlvbiBXYih0LCBuLCBlKSB7IHRoaXMuayA9IHQsIHRoaXMueCA9IG4sIHRoaXMueSA9IGUgfSBWYi5wcm90b3R5cGUgPSB7IGNvbnN0cnVjdG9yOiBWYiwgcG9seWdvbnM6IGZ1bmN0aW9uICgpIHsgdmFyIHQgPSB0aGlzLmVkZ2VzOyByZXR1cm4gdGhpcy5jZWxscy5tYXAoZnVuY3Rpb24gKG4pIHsgdmFyIGUgPSBuLmhhbGZlZGdlcy5tYXAoZnVuY3Rpb24gKGUpIHsgcmV0dXJuIE1iKG4sIHRbZV0pIH0pOyByZXR1cm4gZS5kYXRhID0gbi5zaXRlLmRhdGEsIGUgfSkgfSwgdHJpYW5nbGVzOiBmdW5jdGlvbiAoKSB7IHZhciB0ID0gW10sIG4gPSB0aGlzLmVkZ2VzOyByZXR1cm4gdGhpcy5jZWxscy5mb3JFYWNoKGZ1bmN0aW9uIChlLCByKSB7IGlmIChvID0gKGkgPSBlLmhhbGZlZGdlcykubGVuZ3RoKSBmb3IgKHZhciBpLCBvLCBhLCB1ID0gZS5zaXRlLCBjID0gLTEsIGYgPSBuW2lbbyAtIDFdXSwgcyA9IGYubGVmdCA9PT0gdSA/IGYucmlnaHQgOiBmLmxlZnQ7ICsrYyA8IG87KWEgPSBzLCBzID0gKGYgPSBuW2lbY11dKS5sZWZ0ID09PSB1ID8gZi5yaWdodCA6IGYubGVmdCwgYSAmJiBzICYmIHIgPCBhLmluZGV4ICYmIHIgPCBzLmluZGV4ICYmIGpiKHUsIGEsIHMpIDwgMCAmJiB0LnB1c2goW3UuZGF0YSwgYS5kYXRhLCBzLmRhdGFdKSB9KSwgdCB9LCBsaW5rczogZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpcy5lZGdlcy5maWx0ZXIoZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQucmlnaHQgfSkubWFwKGZ1bmN0aW9uICh0KSB7IHJldHVybiB7IHNvdXJjZTogdC5sZWZ0LmRhdGEsIHRhcmdldDogdC5yaWdodC5kYXRhIH0gfSkgfSwgZmluZDogZnVuY3Rpb24gKHQsIG4sIGUpIHsgZm9yICh2YXIgciwgaSwgbyA9IHRoaXMsIGEgPSBvLl9mb3VuZCB8fCAwLCB1ID0gby5jZWxscy5sZW5ndGg7ICEoaSA9IG8uY2VsbHNbYV0pOylpZiAoKythID49IHUpIHJldHVybiBudWxsOyB2YXIgYyA9IHQgLSBpLnNpdGVbMF0sIGYgPSBuIC0gaS5zaXRlWzFdLCBzID0gYyAqIGMgKyBmICogZjsgZG8geyBpID0gby5jZWxsc1tyID0gYV0sIGEgPSBudWxsLCBpLmhhbGZlZGdlcy5mb3JFYWNoKGZ1bmN0aW9uIChlKSB7IHZhciByID0gby5lZGdlc1tlXSwgdSA9IHIubGVmdDsgaWYgKHUgIT09IGkuc2l0ZSAmJiB1IHx8ICh1ID0gci5yaWdodCkpIHsgdmFyIGMgPSB0IC0gdVswXSwgZiA9IG4gLSB1WzFdLCBsID0gYyAqIGMgKyBmICogZjsgbCA8IHMgJiYgKHMgPSBsLCBhID0gdS5pbmRleCkgfSB9KSB9IHdoaWxlIChudWxsICE9PSBhKTsgcmV0dXJuIG8uX2ZvdW5kID0gciwgbnVsbCA9PSBlIHx8IHMgPD0gZSAqIGUgPyBpLnNpdGUgOiBudWxsIH0gfSwgV2IucHJvdG90eXBlID0geyBjb25zdHJ1Y3RvcjogV2IsIHNjYWxlOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gMSA9PT0gdCA/IHRoaXMgOiBuZXcgV2IodGhpcy5rICogdCwgdGhpcy54LCB0aGlzLnkpIH0sIHRyYW5zbGF0ZTogZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIDAgPT09IHQgJiAwID09PSBuID8gdGhpcyA6IG5ldyBXYih0aGlzLmssIHRoaXMueCArIHRoaXMuayAqIHQsIHRoaXMueSArIHRoaXMuayAqIG4pIH0sIGFwcGx5OiBmdW5jdGlvbiAodCkgeyByZXR1cm4gW3RbMF0gKiB0aGlzLmsgKyB0aGlzLngsIHRbMV0gKiB0aGlzLmsgKyB0aGlzLnldIH0sIGFwcGx5WDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQgKiB0aGlzLmsgKyB0aGlzLnggfSwgYXBwbHlZOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gdCAqIHRoaXMuayArIHRoaXMueSB9LCBpbnZlcnQ6IGZ1bmN0aW9uICh0KSB7IHJldHVybiBbKHRbMF0gLSB0aGlzLngpIC8gdGhpcy5rLCAodFsxXSAtIHRoaXMueSkgLyB0aGlzLmtdIH0sIGludmVydFg6IGZ1bmN0aW9uICh0KSB7IHJldHVybiAodCAtIHRoaXMueCkgLyB0aGlzLmsgfSwgaW52ZXJ0WTogZnVuY3Rpb24gKHQpIHsgcmV0dXJuICh0IC0gdGhpcy55KSAvIHRoaXMuayB9LCByZXNjYWxlWDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQuY29weSgpLmRvbWFpbih0LnJhbmdlKCkubWFwKHRoaXMuaW52ZXJ0WCwgdGhpcykubWFwKHQuaW52ZXJ0LCB0KSkgfSwgcmVzY2FsZVk6IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0LmNvcHkoKS5kb21haW4odC5yYW5nZSgpLm1hcCh0aGlzLmludmVydFksIHRoaXMpLm1hcCh0LmludmVydCwgdCkpIH0sIHRvU3RyaW5nOiBmdW5jdGlvbiAoKSB7IHJldHVybiAidHJhbnNsYXRlKCIgKyB0aGlzLnggKyAiLCIgKyB0aGlzLnkgKyAiKSBzY2FsZSgiICsgdGhpcy5rICsgIikiIH0gfTsgdmFyIFpiID0gbmV3IFdiKDEsIDAsIDApOyBmdW5jdGlvbiBRYih0KSB7IGZvciAoOyAhdC5fX3pvb207KWlmICghKHQgPSB0LnBhcmVudE5vZGUpKSByZXR1cm4gWmI7IHJldHVybiB0Ll9fem9vbSB9IGZ1bmN0aW9uIEtiKCkgeyB0LmV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpIH0gZnVuY3Rpb24gSmIoKSB7IHQuZXZlbnQucHJldmVudERlZmF1bHQoKSwgdC5ldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKSB9IGZ1bmN0aW9uIHRtKCkgeyByZXR1cm4gIXQuZXZlbnQuY3RybEtleSAmJiAhdC5ldmVudC5idXR0b24gfSBmdW5jdGlvbiBubSgpIHsgdmFyIHQgPSB0aGlzOyByZXR1cm4gdCBpbnN0YW5jZW9mIFNWR0VsZW1lbnQgPyAodCA9IHQub3duZXJTVkdFbGVtZW50IHx8IHQpLmhhc0F0dHJpYnV0ZSgidmlld0JveCIpID8gW1sodCA9IHQudmlld0JveC5iYXNlVmFsKS54LCB0LnldLCBbdC54ICsgdC53aWR0aCwgdC55ICsgdC5oZWlnaHRdXSA6IFtbMCwgMF0sIFt0LndpZHRoLmJhc2VWYWwudmFsdWUsIHQuaGVpZ2h0LmJhc2VWYWwudmFsdWVdXSA6IFtbMCwgMF0sIFt0LmNsaWVudFdpZHRoLCB0LmNsaWVudEhlaWdodF1dIH0gZnVuY3Rpb24gZW0oKSB7IHJldHVybiB0aGlzLl9fem9vbSB8fCBaYiB9IGZ1bmN0aW9uIHJtKCkgeyByZXR1cm4gLXQuZXZlbnQuZGVsdGFZICogKDEgPT09IHQuZXZlbnQuZGVsdGFNb2RlID8gLjA1IDogdC5ldmVudC5kZWx0YU1vZGUgPyAxIDogLjAwMikgfSBmdW5jdGlvbiBpbSgpIHsgcmV0dXJuIG5hdmlnYXRvci5tYXhUb3VjaFBvaW50cyB8fCAib250b3VjaHN0YXJ0IiBpbiB0aGlzIH0gZnVuY3Rpb24gb20odCwgbiwgZSkgeyB2YXIgciA9IHQuaW52ZXJ0WChuWzBdWzBdKSAtIGVbMF1bMF0sIGkgPSB0LmludmVydFgoblsxXVswXSkgLSBlWzFdWzBdLCBvID0gdC5pbnZlcnRZKG5bMF1bMV0pIC0gZVswXVsxXSwgYSA9IHQuaW52ZXJ0WShuWzFdWzFdKSAtIGVbMV1bMV07IHJldHVybiB0LnRyYW5zbGF0ZShpID4gciA/IChyICsgaSkgLyAyIDogTWF0aC5taW4oMCwgcikgfHwgTWF0aC5tYXgoMCwgaSksIGEgPiBvID8gKG8gKyBhKSAvIDIgOiBNYXRoLm1pbigwLCBvKSB8fCBNYXRoLm1heCgwLCBhKSkgfSBRYi5wcm90b3R5cGUgPSBXYi5wcm90b3R5cGUsIHQuRm9ybWF0U3BlY2lmaWVyID0gQmEsIHQuYWN0aXZlID0gZnVuY3Rpb24gKHQsIG4pIHsgdmFyIGUsIHIsIGkgPSB0Ll9fdHJhbnNpdGlvbjsgaWYgKGkpIGZvciAociBpbiBuID0gbnVsbCA9PSBuID8gbnVsbCA6IG4gKyAiIiwgaSkgaWYgKChlID0gaVtyXSkuc3RhdGUgPiB4ciAmJiBlLm5hbWUgPT09IG4pIHJldHVybiBuZXcgVXIoW1t0XV0sIHlpLCBuLCArcik7IHJldHVybiBudWxsIH0sIHQuYXJjID0gZnVuY3Rpb24gKCkgeyB2YXIgdCA9IFJ5LCBuID0gRHksIGUgPSBteSgwKSwgciA9IG51bGwsIGkgPSBxeSwgbyA9IEx5LCBhID0gVXksIHUgPSBudWxsOyBmdW5jdGlvbiBjKCkgeyB2YXIgYywgZiwgcyA9ICt0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksIGwgPSArbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpLCBoID0gaS5hcHBseSh0aGlzLCBhcmd1bWVudHMpIC0gQ3ksIGQgPSBvLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgLSBDeSwgcCA9IHh5KGQgLSBoKSwgdiA9IGQgPiBoOyBpZiAodSB8fCAodSA9IGMgPSBubygpKSwgbCA8IHMgJiYgKGYgPSBsLCBsID0gcywgcyA9IGYpLCBsID4ga3kpIGlmIChwID4gUHkgLSBreSkgdS5tb3ZlVG8obCAqIE15KGgpLCBsICogQXkoaCkpLCB1LmFyYygwLCAwLCBsLCBoLCBkLCAhdiksIHMgPiBreSAmJiAodS5tb3ZlVG8ocyAqIE15KGQpLCBzICogQXkoZCkpLCB1LmFyYygwLCAwLCBzLCBkLCBoLCB2KSk7IGVsc2UgeyB2YXIgZywgeSwgXyA9IGgsIGIgPSBkLCBtID0gaCwgeCA9IGQsIHcgPSBwLCBNID0gcCwgTiA9IGEuYXBwbHkodGhpcywgYXJndW1lbnRzKSAvIDIsIFQgPSBOID4ga3kgJiYgKHIgPyArci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIDogU3kocyAqIHMgKyBsICogbCkpLCBBID0gVHkoeHkobCAtIHMpIC8gMiwgK2UuYXBwbHkodGhpcywgYXJndW1lbnRzKSksIFMgPSBBLCBrID0gQTsgaWYgKFQgPiBreSkgeyB2YXIgRSA9IHp5KFQgLyBzICogQXkoTikpLCBDID0genkoVCAvIGwgKiBBeShOKSk7ICh3IC09IDIgKiBFKSA+IGt5ID8gKG0gKz0gRSAqPSB2ID8gMSA6IC0xLCB4IC09IEUpIDogKHcgPSAwLCBtID0geCA9IChoICsgZCkgLyAyKSwgKE0gLT0gMiAqIEMpID4ga3kgPyAoXyArPSBDICo9IHYgPyAxIDogLTEsIGIgLT0gQykgOiAoTSA9IDAsIF8gPSBiID0gKGggKyBkKSAvIDIpIH0gdmFyIFAgPSBsICogTXkoXyksIHogPSBsICogQXkoXyksIFIgPSBzICogTXkoeCksIEQgPSBzICogQXkoeCk7IGlmIChBID4ga3kpIHsgdmFyIHEsIEwgPSBsICogTXkoYiksIFUgPSBsICogQXkoYiksIE8gPSBzICogTXkobSksIEIgPSBzICogQXkobSk7IGlmIChwIDwgRXkgJiYgKHEgPSBmdW5jdGlvbiAodCwgbiwgZSwgciwgaSwgbywgYSwgdSkgeyB2YXIgYyA9IGUgLSB0LCBmID0gciAtIG4sIHMgPSBhIC0gaSwgbCA9IHUgLSBvLCBoID0gbCAqIGMgLSBzICogZjsgaWYgKCEoaCAqIGggPCBreSkpIHJldHVybiBbdCArIChoID0gKHMgKiAobiAtIG8pIC0gbCAqICh0IC0gaSkpIC8gaCkgKiBjLCBuICsgaCAqIGZdIH0oUCwgeiwgTywgQiwgTCwgVSwgUiwgRCkpKSB7IHZhciBGID0gUCAtIHFbMF0sIFkgPSB6IC0gcVsxXSwgSSA9IEwgLSBxWzBdLCBIID0gVSAtIHFbMV0sIGogPSAxIC8gQXkoZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQgPiAxID8gMCA6IHQgPCAtMSA/IEV5IDogTWF0aC5hY29zKHQpIH0oKEYgKiBJICsgWSAqIEgpIC8gKFN5KEYgKiBGICsgWSAqIFkpICogU3koSSAqIEkgKyBIICogSCkpKSAvIDIpLCBYID0gU3kocVswXSAqIHFbMF0gKyBxWzFdICogcVsxXSk7IFMgPSBUeShBLCAocyAtIFgpIC8gKGogLSAxKSksIGsgPSBUeShBLCAobCAtIFgpIC8gKGogKyAxKSkgfSB9IE0gPiBreSA/IGsgPiBreSA/IChnID0gT3koTywgQiwgUCwgeiwgbCwgaywgdiksIHkgPSBPeShMLCBVLCBSLCBELCBsLCBrLCB2KSwgdS5tb3ZlVG8oZy5jeCArIGcueDAxLCBnLmN5ICsgZy55MDEpLCBrIDwgQSA/IHUuYXJjKGcuY3gsIGcuY3ksIGssIHd5KGcueTAxLCBnLngwMSksIHd5KHkueTAxLCB5LngwMSksICF2KSA6ICh1LmFyYyhnLmN4LCBnLmN5LCBrLCB3eShnLnkwMSwgZy54MDEpLCB3eShnLnkxMSwgZy54MTEpLCAhdiksIHUuYXJjKDAsIDAsIGwsIHd5KGcuY3kgKyBnLnkxMSwgZy5jeCArIGcueDExKSwgd3koeS5jeSArIHkueTExLCB5LmN4ICsgeS54MTEpLCAhdiksIHUuYXJjKHkuY3gsIHkuY3ksIGssIHd5KHkueTExLCB5LngxMSksIHd5KHkueTAxLCB5LngwMSksICF2KSkpIDogKHUubW92ZVRvKFAsIHopLCB1LmFyYygwLCAwLCBsLCBfLCBiLCAhdikpIDogdS5tb3ZlVG8oUCwgeiksIHMgPiBreSAmJiB3ID4ga3kgPyBTID4ga3kgPyAoZyA9IE95KFIsIEQsIEwsIFUsIHMsIC1TLCB2KSwgeSA9IE95KFAsIHosIE8sIEIsIHMsIC1TLCB2KSwgdS5saW5lVG8oZy5jeCArIGcueDAxLCBnLmN5ICsgZy55MDEpLCBTIDwgQSA/IHUuYXJjKGcuY3gsIGcuY3ksIFMsIHd5KGcueTAxLCBnLngwMSksIHd5KHkueTAxLCB5LngwMSksICF2KSA6ICh1LmFyYyhnLmN4LCBnLmN5LCBTLCB3eShnLnkwMSwgZy54MDEpLCB3eShnLnkxMSwgZy54MTEpLCAhdiksIHUuYXJjKDAsIDAsIHMsIHd5KGcuY3kgKyBnLnkxMSwgZy5jeCArIGcueDExKSwgd3koeS5jeSArIHkueTExLCB5LmN4ICsgeS54MTEpLCB2KSwgdS5hcmMoeS5jeCwgeS5jeSwgUywgd3koeS55MTEsIHkueDExKSwgd3koeS55MDEsIHkueDAxKSwgIXYpKSkgOiB1LmFyYygwLCAwLCBzLCB4LCBtLCB2KSA6IHUubGluZVRvKFIsIEQpIH0gZWxzZSB1Lm1vdmVUbygwLCAwKTsgaWYgKHUuY2xvc2VQYXRoKCksIGMpIHJldHVybiB1ID0gbnVsbCwgYyArICIiIHx8IG51bGwgfSByZXR1cm4gYy5jZW50cm9pZCA9IGZ1bmN0aW9uICgpIHsgdmFyIGUgPSAoK3QuYXBwbHkodGhpcywgYXJndW1lbnRzKSArICtuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIC8gMiwgciA9ICgraS5hcHBseSh0aGlzLCBhcmd1bWVudHMpICsgK28uYXBwbHkodGhpcywgYXJndW1lbnRzKSkgLyAyIC0gRXkgLyAyOyByZXR1cm4gW015KHIpICogZSwgQXkocikgKiBlXSB9LCBjLmlubmVyUmFkaXVzID0gZnVuY3Rpb24gKG4pIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodCA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIG4gPyBuIDogbXkoK24pLCBjKSA6IHQgfSwgYy5vdXRlclJhZGl1cyA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG4gPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IG15KCt0KSwgYykgOiBuIH0sIGMuY29ybmVyUmFkaXVzID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZSA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogbXkoK3QpLCBjKSA6IGUgfSwgYy5wYWRSYWRpdXMgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyID0gbnVsbCA9PSB0ID8gbnVsbCA6ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogbXkoK3QpLCBjKSA6IHIgfSwgYy5zdGFydEFuZ2xlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoaSA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogbXkoK3QpLCBjKSA6IGkgfSwgYy5lbmRBbmdsZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG8gPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IG15KCt0KSwgYykgOiBvIH0sIGMucGFkQW5nbGUgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChhID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBteSgrdCksIGMpIDogYSB9LCBjLmNvbnRleHQgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh1ID0gbnVsbCA9PSB0ID8gbnVsbCA6IHQsIGMpIDogdSB9LCBjIH0sIHQuYXJlYSA9IGp5LCB0LmFyZWFSYWRpYWwgPSBLeSwgdC5hc2NlbmRpbmcgPSBuLCB0LmF1dG9UeXBlID0gZnVuY3Rpb24gKHQpIHsgZm9yICh2YXIgbiBpbiB0KSB7IHZhciBlLCByLCBpID0gdFtuXS50cmltKCk7IGlmIChpKSBpZiAoInRydWUiID09PSBpKSBpID0gITA7IGVsc2UgaWYgKCJmYWxzZSIgPT09IGkpIGkgPSAhMTsgZWxzZSBpZiAoIk5hTiIgPT09IGkpIGkgPSBOYU47IGVsc2UgaWYgKGlzTmFOKGUgPSAraSkpIHsgaWYgKCEociA9IGkubWF0Y2goL14oWy0rXVxkezJ9KT9cZHs0fSgtXGR7Mn0oLVxkezJ9KT8pPyhUXGR7Mn06XGR7Mn0oOlxkezJ9KFwuXGR7M30pPyk/KFp8Wy0rXVxkezJ9OlxkezJ9KT8pPyQvKSkpIGNvbnRpbnVlOyByYSAmJiByWzRdICYmICFyWzddICYmIChpID0gaS5yZXBsYWNlKC8tL2csICIvIikucmVwbGFjZSgvVC8sICIgIikpLCBpID0gbmV3IERhdGUoaSkgfSBlbHNlIGkgPSBlOyBlbHNlIGkgPSBudWxsOyB0W25dID0gaSB9IHJldHVybiB0IH0sIHQuYXhpc0JvdHRvbSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBGKEQsIHQpIH0sIHQuYXhpc0xlZnQgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gRihxLCB0KSB9LCB0LmF4aXNSaWdodCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBGKFIsIHQpIH0sIHQuYXhpc1RvcCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBGKHosIHQpIH0sIHQuYmlzZWN0ID0gaSwgdC5iaXNlY3RMZWZ0ID0gbywgdC5iaXNlY3RSaWdodCA9IGksIHQuYmlzZWN0b3IgPSBlLCB0LmJsb2IgPSBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gZmV0Y2godCwgbikudGhlbihpYSkgfSwgdC5icnVzaCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFlpKENpKSB9LCB0LmJydXNoU2VsZWN0aW9uID0gZnVuY3Rpb24gKHQpIHsgdmFyIG4gPSB0Ll9fYnJ1c2g7IHJldHVybiBuID8gbi5kaW0ub3V0cHV0KG4uc2VsZWN0aW9uKSA6IG51bGwgfSwgdC5icnVzaFggPSBmdW5jdGlvbiAoKSB7IHJldHVybiBZaShraSkgfSwgdC5icnVzaFkgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBZaShFaSkgfSwgdC5idWZmZXIgPSBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gZmV0Y2godCwgbikudGhlbihvYSkgfSwgdC5jaG9yZCA9IGZ1bmN0aW9uICgpIHsgdmFyIHQgPSAwLCBuID0gbnVsbCwgZSA9IG51bGwsIHIgPSBudWxsOyBmdW5jdGlvbiBpKGkpIHsgdmFyIG8sIGEsIHUsIGMsIGYsIHMsIGwgPSBpLmxlbmd0aCwgaCA9IFtdLCBkID0gZyhsKSwgcCA9IFtdLCB2ID0gW10sIHkgPSB2Lmdyb3VwcyA9IG5ldyBBcnJheShsKSwgXyA9IG5ldyBBcnJheShsICogbCk7IGZvciAobyA9IDAsIGYgPSAtMTsgKytmIDwgbDspIHsgZm9yIChhID0gMCwgcyA9IC0xOyArK3MgPCBsOylhICs9IGlbZl1bc107IGgucHVzaChhKSwgcC5wdXNoKGcobCkpLCBvICs9IGEgfSBmb3IgKG4gJiYgZC5zb3J0KGZ1bmN0aW9uICh0LCBlKSB7IHJldHVybiBuKGhbdF0sIGhbZV0pIH0pLCBlICYmIHAuZm9yRWFjaChmdW5jdGlvbiAodCwgbikgeyB0LnNvcnQoZnVuY3Rpb24gKHQsIHIpIHsgcmV0dXJuIGUoaVtuXVt0XSwgaVtuXVtyXSkgfSkgfSksIGMgPSAobyA9IEdpKDAsIFZpIC0gdCAqIGwpIC8gbykgPyB0IDogVmkgLyBsLCBhID0gMCwgZiA9IC0xOyArK2YgPCBsOykgeyBmb3IgKHUgPSBhLCBzID0gLTE7ICsrcyA8IGw7KSB7IHZhciBiID0gZFtmXSwgbSA9IHBbYl1bc10sIHggPSBpW2JdW21dLCB3ID0gYSwgTSA9IGEgKz0geCAqIG87IF9bbSAqIGwgKyBiXSA9IHsgaW5kZXg6IGIsIHN1YmluZGV4OiBtLCBzdGFydEFuZ2xlOiB3LCBlbmRBbmdsZTogTSwgdmFsdWU6IHggfSB9IHlbYl0gPSB7IGluZGV4OiBiLCBzdGFydEFuZ2xlOiB1LCBlbmRBbmdsZTogYSwgdmFsdWU6IGhbYl0gfSwgYSArPSBjIH0gZm9yIChmID0gLTE7ICsrZiA8IGw7KWZvciAocyA9IGYgLSAxOyArK3MgPCBsOykgeyB2YXIgTiA9IF9bcyAqIGwgKyBmXSwgVCA9IF9bZiAqIGwgKyBzXTsgKE4udmFsdWUgfHwgVC52YWx1ZSkgJiYgdi5wdXNoKE4udmFsdWUgPCBULnZhbHVlID8geyBzb3VyY2U6IFQsIHRhcmdldDogTiB9IDogeyBzb3VyY2U6IE4sIHRhcmdldDogVCB9KSB9IHJldHVybiByID8gdi5zb3J0KHIpIDogdiB9IHJldHVybiBpLnBhZEFuZ2xlID0gZnVuY3Rpb24gKG4pIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodCA9IEdpKDAsIG4pLCBpKSA6IHQgfSwgaS5zb3J0R3JvdXBzID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobiA9IHQsIGkpIDogbiB9LCBpLnNvcnRTdWJncm91cHMgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChlID0gdCwgaSkgOiBlIH0sIGkuc29ydENob3JkcyA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG51bGwgPT0gdCA/IHIgPSBudWxsIDogKHIgPSAkaSh0KSkuXyA9IHQsIGkpIDogciAmJiByLl8gfSwgaSB9LCB0LmNsaWVudFBvaW50ID0gT3QsIHQuY2x1c3RlciA9IGZ1bmN0aW9uICgpIHsgdmFyIHQgPSBObCwgbiA9IDEsIGUgPSAxLCByID0gITE7IGZ1bmN0aW9uIGkoaSkgeyB2YXIgbywgYSA9IDA7IGkuZWFjaEFmdGVyKGZ1bmN0aW9uIChuKSB7IHZhciBlID0gbi5jaGlsZHJlbjsgZSA/IChuLnggPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gdC5yZWR1Y2UoVGwsIDApIC8gdC5sZW5ndGggfShlKSwgbi55ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIDEgKyB0LnJlZHVjZShBbCwgMCkgfShlKSkgOiAobi54ID0gbyA/IGEgKz0gdChuLCBvKSA6IDAsIG4ueSA9IDAsIG8gPSBuKSB9KTsgdmFyIHUgPSBmdW5jdGlvbiAodCkgeyBmb3IgKHZhciBuOyBuID0gdC5jaGlsZHJlbjspdCA9IG5bMF07IHJldHVybiB0IH0oaSksIGMgPSBmdW5jdGlvbiAodCkgeyBmb3IgKHZhciBuOyBuID0gdC5jaGlsZHJlbjspdCA9IG5bbi5sZW5ndGggLSAxXTsgcmV0dXJuIHQgfShpKSwgZiA9IHUueCAtIHQodSwgYykgLyAyLCBzID0gYy54ICsgdChjLCB1KSAvIDI7IHJldHVybiBpLmVhY2hBZnRlcihyID8gZnVuY3Rpb24gKHQpIHsgdC54ID0gKHQueCAtIGkueCkgKiBuLCB0LnkgPSAoaS55IC0gdC55KSAqIGUgfSA6IGZ1bmN0aW9uICh0KSB7IHQueCA9ICh0LnggLSBmKSAvIChzIC0gZikgKiBuLCB0LnkgPSAoMSAtIChpLnkgPyB0LnkgLyBpLnkgOiAxKSkgKiBlIH0pIH0gcmV0dXJuIGkuc2VwYXJhdGlvbiA9IGZ1bmN0aW9uIChuKSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHQgPSBuLCBpKSA6IHQgfSwgaS5zaXplID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAociA9ICExLCBuID0gK3RbMF0sIGUgPSArdFsxXSwgaSkgOiByID8gbnVsbCA6IFtuLCBlXSB9LCBpLm5vZGVTaXplID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAociA9ICEwLCBuID0gK3RbMF0sIGUgPSArdFsxXSwgaSkgOiByID8gW24sIGVdIDogbnVsbCB9LCBpIH0sIHQuY29sb3IgPSBwbiwgdC5jb250b3VyRGVuc2l0eSA9IGZ1bmN0aW9uICgpIHsgdmFyIHQgPSBrbywgbiA9IEVvLCBlID0gQ28sIHIgPSA5NjAsIGkgPSA1MDAsIG8gPSAyMCwgYSA9IDIsIHUgPSAzICogbywgYyA9IHIgKyAyICogdSA+PiBhLCBmID0gaSArIDIgKiB1ID4+IGEsIHMgPSBibygyMCk7IGZ1bmN0aW9uIGwocikgeyB2YXIgaSA9IG5ldyBGbG9hdDMyQXJyYXkoYyAqIGYpLCBsID0gbmV3IEZsb2F0MzJBcnJheShjICogZik7IHIuZm9yRWFjaChmdW5jdGlvbiAociwgbywgcykgeyB2YXIgbCA9ICt0KHIsIG8sIHMpICsgdSA+PiBhLCBoID0gK24ociwgbywgcykgKyB1ID4+IGEsIGQgPSArZShyLCBvLCBzKTsgbCA+PSAwICYmIGwgPCBjICYmIGggPj0gMCAmJiBoIDwgZiAmJiAoaVtsICsgaCAqIGNdICs9IGQpIH0pLCBBbyh7IHdpZHRoOiBjLCBoZWlnaHQ6IGYsIGRhdGE6IGkgfSwgeyB3aWR0aDogYywgaGVpZ2h0OiBmLCBkYXRhOiBsIH0sIG8gPj4gYSksIFNvKHsgd2lkdGg6IGMsIGhlaWdodDogZiwgZGF0YTogbCB9LCB7IHdpZHRoOiBjLCBoZWlnaHQ6IGYsIGRhdGE6IGkgfSwgbyA+PiBhKSwgQW8oeyB3aWR0aDogYywgaGVpZ2h0OiBmLCBkYXRhOiBpIH0sIHsgd2lkdGg6IGMsIGhlaWdodDogZiwgZGF0YTogbCB9LCBvID4+IGEpLCBTbyh7IHdpZHRoOiBjLCBoZWlnaHQ6IGYsIGRhdGE6IGwgfSwgeyB3aWR0aDogYywgaGVpZ2h0OiBmLCBkYXRhOiBpIH0sIG8gPj4gYSksIEFvKHsgd2lkdGg6IGMsIGhlaWdodDogZiwgZGF0YTogaSB9LCB7IHdpZHRoOiBjLCBoZWlnaHQ6IGYsIGRhdGE6IGwgfSwgbyA+PiBhKSwgU28oeyB3aWR0aDogYywgaGVpZ2h0OiBmLCBkYXRhOiBsIH0sIHsgd2lkdGg6IGMsIGhlaWdodDogZiwgZGF0YTogaSB9LCBvID4+IGEpOyB2YXIgZCA9IHMoaSk7IGlmICghQXJyYXkuaXNBcnJheShkKSkgeyB2YXIgcCA9IFQoaSk7IGQgPSB3KDAsIHAsIGQpLCAoZCA9IGcoMCwgTWF0aC5mbG9vcihwIC8gZCkgKiBkLCBkKSkuc2hpZnQoKSB9IHJldHVybiBUbygpLnRocmVzaG9sZHMoZCkuc2l6ZShbYywgZl0pKGkpLm1hcChoKSB9IGZ1bmN0aW9uIGgodCkgeyByZXR1cm4gdC52YWx1ZSAqPSBNYXRoLnBvdygyLCAtMiAqIGEpLCB0LmNvb3JkaW5hdGVzLmZvckVhY2goZCksIHQgfSBmdW5jdGlvbiBkKHQpIHsgdC5mb3JFYWNoKHApIH0gZnVuY3Rpb24gcCh0KSB7IHQuZm9yRWFjaCh2KSB9IGZ1bmN0aW9uIHYodCkgeyB0WzBdID0gdFswXSAqIE1hdGgucG93KDIsIGEpIC0gdSwgdFsxXSA9IHRbMV0gKiBNYXRoLnBvdygyLCBhKSAtIHUgfSBmdW5jdGlvbiB5KCkgeyByZXR1cm4gYyA9IHIgKyAyICogKHUgPSAzICogbykgPj4gYSwgZiA9IGkgKyAyICogdSA+PiBhLCBsIH0gcmV0dXJuIGwueCA9IGZ1bmN0aW9uIChuKSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHQgPSAiZnVuY3Rpb24iID09IHR5cGVvZiBuID8gbiA6IGJvKCtuKSwgbCkgOiB0IH0sIGwueSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG4gPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IGJvKCt0KSwgbCkgOiBuIH0sIGwud2VpZ2h0ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZSA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogYm8oK3QpLCBsKSA6IGUgfSwgbC5zaXplID0gZnVuY3Rpb24gKHQpIHsgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gW3IsIGldOyB2YXIgbiA9IE1hdGguY2VpbCh0WzBdKSwgZSA9IE1hdGguY2VpbCh0WzFdKTsgaWYgKCEobiA+PSAwIHx8IG4gPj0gMCkpIHRocm93IG5ldyBFcnJvcigiaW52YWxpZCBzaXplIik7IHJldHVybiByID0gbiwgaSA9IGUsIHkoKSB9LCBsLmNlbGxTaXplID0gZnVuY3Rpb24gKHQpIHsgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gMSA8PCBhOyBpZiAoISgodCA9ICt0KSA+PSAxKSkgdGhyb3cgbmV3IEVycm9yKCJpbnZhbGlkIGNlbGwgc2l6ZSIpOyByZXR1cm4gYSA9IE1hdGguZmxvb3IoTWF0aC5sb2codCkgLyBNYXRoLkxOMiksIHkoKSB9LCBsLnRocmVzaG9sZHMgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBBcnJheS5pc0FycmF5KHQpID8gYm8oeW8uY2FsbCh0KSkgOiBibyh0KSwgbCkgOiBzIH0sIGwuYmFuZHdpZHRoID0gZnVuY3Rpb24gKHQpIHsgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gTWF0aC5zcXJ0KG8gKiAobyArIDEpKTsgaWYgKCEoKHQgPSArdCkgPj0gMCkpIHRocm93IG5ldyBFcnJvcigiaW52YWxpZCBiYW5kd2lkdGgiKTsgcmV0dXJuIG8gPSBNYXRoLnJvdW5kKChNYXRoLnNxcnQoNCAqIHQgKiB0ICsgMSkgLSAxKSAvIDIpLCB5KCkgfSwgbCB9LCB0LmNvbnRvdXJzID0gVG8sIHQuY3JlYXRlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIFJ0KFoodCkuY2FsbChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpKSB9LCB0LmNyZWF0b3IgPSBaLCB0LmNyb3NzID0gZnVuY3Rpb24gKHQsIG4sIGUpIHsgdmFyIHIsIGksIG8sIHUsIGMgPSB0Lmxlbmd0aCwgZiA9IG4ubGVuZ3RoLCBzID0gbmV3IEFycmF5KGMgKiBmKTsgZm9yIChudWxsID09IGUgJiYgKGUgPSBhKSwgciA9IG8gPSAwOyByIDwgYzsgKytyKWZvciAodSA9IHRbcl0sIGkgPSAwOyBpIDwgZjsgKytpLCArK28pc1tvXSA9IGUodSwgbltpXSk7IHJldHVybiBzIH0sIHQuY3N2ID0gZmEsIHQuY3N2Rm9ybWF0ID0gam8sIHQuY3N2Rm9ybWF0Qm9keSA9IFhvLCB0LmNzdkZvcm1hdFJvdyA9IEdvLCB0LmNzdkZvcm1hdFJvd3MgPSBWbywgdC5jc3ZGb3JtYXRWYWx1ZSA9ICRvLCB0LmNzdlBhcnNlID0gSW8sIHQuY3N2UGFyc2VSb3dzID0gSG8sIHQuY3ViZWhlbGl4ID0gZWUsIHQuY3VydmVCYXNpcyA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBuZXcgQV8odCkgfSwgdC5jdXJ2ZUJhc2lzQ2xvc2VkID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIG5ldyBTXyh0KSB9LCB0LmN1cnZlQmFzaXNPcGVuID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIG5ldyBrXyh0KSB9LCB0LmN1cnZlQnVuZGxlID0gQ18sIHQuY3VydmVDYXJkaW5hbCA9IFJfLCB0LmN1cnZlQ2FyZGluYWxDbG9zZWQgPSBxXywgdC5jdXJ2ZUNhcmRpbmFsT3BlbiA9IFVfLCB0LmN1cnZlQ2F0bXVsbFJvbSA9IEZfLCB0LmN1cnZlQ2F0bXVsbFJvbUNsb3NlZCA9IElfLCB0LmN1cnZlQ2F0bXVsbFJvbU9wZW4gPSBqXywgdC5jdXJ2ZUxpbmVhciA9IEZ5LCB0LmN1cnZlTGluZWFyQ2xvc2VkID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIG5ldyBYXyh0KSB9LCB0LmN1cnZlTW9ub3RvbmVYID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIG5ldyBaXyh0KSB9LCB0LmN1cnZlTW9ub3RvbmVZID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIG5ldyBRXyh0KSB9LCB0LmN1cnZlTmF0dXJhbCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBuZXcgSl8odCkgfSwgdC5jdXJ2ZVN0ZXAgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gbmV3IG5iKHQsIC41KSB9LCB0LmN1cnZlU3RlcEFmdGVyID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIG5ldyBuYih0LCAxKSB9LCB0LmN1cnZlU3RlcEJlZm9yZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBuZXcgbmIodCwgMCkgfSwgdC5jdXN0b21FdmVudCA9IGt0LCB0LmRlc2NlbmRpbmcgPSBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gbiA8IHQgPyAtMSA6IG4gPiB0ID8gMSA6IG4gPj0gdCA/IDAgOiBOYU4gfSwgdC5kZXZpYXRpb24gPSBmLCB0LmRpc3BhdGNoID0gSSwgdC5kcmFnID0gZnVuY3Rpb24gKCkgeyB2YXIgbiwgZSwgciwgaSwgbyA9IEd0LCBhID0gJHQsIHUgPSBXdCwgYyA9IFp0LCBmID0ge30sIHMgPSBJKCJzdGFydCIsICJkcmFnIiwgImVuZCIpLCBsID0gMCwgaCA9IDA7IGZ1bmN0aW9uIGQodCkgeyB0Lm9uKCJtb3VzZWRvd24uZHJhZyIsIHApLmZpbHRlcihjKS5vbigidG91Y2hzdGFydC5kcmFnIiwgeSkub24oInRvdWNobW92ZS5kcmFnIiwgXykub24oInRvdWNoZW5kLmRyYWcgdG91Y2hjYW5jZWwuZHJhZyIsIGIpLnN0eWxlKCJ0b3VjaC1hY3Rpb24iLCAibm9uZSIpLnN0eWxlKCItd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3IiLCAicmdiYSgwLDAsMCwwKSIpIH0gZnVuY3Rpb24gcCgpIHsgaWYgKCFpICYmIG8uYXBwbHkodGhpcywgYXJndW1lbnRzKSkgeyB2YXIgdSA9IG0oIm1vdXNlIiwgYS5hcHBseSh0aGlzLCBhcmd1bWVudHMpLCBCdCwgdGhpcywgYXJndW1lbnRzKTsgdSAmJiAoUnQodC5ldmVudC52aWV3KS5vbigibW91c2Vtb3ZlLmRyYWciLCB2LCAhMCkub24oIm1vdXNldXAuZHJhZyIsIGcsICEwKSwgSHQodC5ldmVudC52aWV3KSwgWXQoKSwgciA9ICExLCBuID0gdC5ldmVudC5jbGllbnRYLCBlID0gdC5ldmVudC5jbGllbnRZLCB1KCJzdGFydCIpKSB9IH0gZnVuY3Rpb24gdigpIHsgaWYgKEl0KCksICFyKSB7IHZhciBpID0gdC5ldmVudC5jbGllbnRYIC0gbiwgbyA9IHQuZXZlbnQuY2xpZW50WSAtIGU7IHIgPSBpICogaSArIG8gKiBvID4gaCB9IGYubW91c2UoImRyYWciKSB9IGZ1bmN0aW9uIGcoKSB7IFJ0KHQuZXZlbnQudmlldykub24oIm1vdXNlbW92ZS5kcmFnIG1vdXNldXAuZHJhZyIsIG51bGwpLCBqdCh0LmV2ZW50LnZpZXcsIHIpLCBJdCgpLCBmLm1vdXNlKCJlbmQiKSB9IGZ1bmN0aW9uIHkoKSB7IGlmIChvLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIHsgdmFyIG4sIGUsIHIgPSB0LmV2ZW50LmNoYW5nZWRUb3VjaGVzLCBpID0gYS5hcHBseSh0aGlzLCBhcmd1bWVudHMpLCB1ID0gci5sZW5ndGg7IGZvciAobiA9IDA7IG4gPCB1OyArK24pKGUgPSBtKHJbbl0uaWRlbnRpZmllciwgaSwgRnQsIHRoaXMsIGFyZ3VtZW50cykpICYmIChZdCgpLCBlKCJzdGFydCIpKSB9IH0gZnVuY3Rpb24gXygpIHsgdmFyIG4sIGUsIHIgPSB0LmV2ZW50LmNoYW5nZWRUb3VjaGVzLCBpID0gci5sZW5ndGg7IGZvciAobiA9IDA7IG4gPCBpOyArK24pKGUgPSBmW3Jbbl0uaWRlbnRpZmllcl0pICYmIChJdCgpLCBlKCJkcmFnIikpIH0gZnVuY3Rpb24gYigpIHsgdmFyIG4sIGUsIHIgPSB0LmV2ZW50LmNoYW5nZWRUb3VjaGVzLCBvID0gci5sZW5ndGg7IGZvciAoaSAmJiBjbGVhclRpbWVvdXQoaSksIGkgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsgaSA9IG51bGwgfSwgNTAwKSwgbiA9IDA7IG4gPCBvOyArK24pKGUgPSBmW3Jbbl0uaWRlbnRpZmllcl0pICYmIChZdCgpLCBlKCJlbmQiKSkgfSBmdW5jdGlvbiBtKG4sIGUsIHIsIGksIG8pIHsgdmFyIGEsIGMsIGgsIHAgPSByKGUsIG4pLCB2ID0gcy5jb3B5KCk7IGlmIChrdChuZXcgVnQoZCwgImJlZm9yZXN0YXJ0IiwgYSwgbiwgbCwgcFswXSwgcFsxXSwgMCwgMCwgdiksIGZ1bmN0aW9uICgpIHsgcmV0dXJuIG51bGwgIT0gKHQuZXZlbnQuc3ViamVjdCA9IGEgPSB1LmFwcGx5KGksIG8pKSAmJiAoYyA9IGEueCAtIHBbMF0gfHwgMCwgaCA9IGEueSAtIHBbMV0gfHwgMCwgITApIH0pKSByZXR1cm4gZnVuY3Rpb24gdCh1KSB7IHZhciBzLCBnID0gcDsgc3dpdGNoICh1KSB7IGNhc2UgInN0YXJ0IjogZltuXSA9IHQsIHMgPSBsKys7IGJyZWFrOyBjYXNlICJlbmQiOiBkZWxldGUgZltuXSwgLS1sOyBjYXNlICJkcmFnIjogcCA9IHIoZSwgbiksIHMgPSBsIH1rdChuZXcgVnQoZCwgdSwgYSwgbiwgcywgcFswXSArIGMsIHBbMV0gKyBoLCBwWzBdIC0gZ1swXSwgcFsxXSAtIGdbMV0sIHYpLCB2LmFwcGx5LCB2LCBbdSwgaSwgb10pIH0gfSByZXR1cm4gZC5maWx0ZXIgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChvID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBYdCghIXQpLCBkKSA6IG8gfSwgZC5jb250YWluZXIgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChhID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBYdCh0KSwgZCkgOiBhIH0sIGQuc3ViamVjdCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHUgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IFh0KHQpLCBkKSA6IHUgfSwgZC50b3VjaGFibGUgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChjID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBYdCghIXQpLCBkKSA6IGMgfSwgZC5vbiA9IGZ1bmN0aW9uICgpIHsgdmFyIHQgPSBzLm9uLmFwcGx5KHMsIGFyZ3VtZW50cyk7IHJldHVybiB0ID09PSBzID8gZCA6IHQgfSwgZC5jbGlja0Rpc3RhbmNlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoaCA9ICh0ID0gK3QpICogdCwgZCkgOiBNYXRoLnNxcnQoaCkgfSwgZCB9LCB0LmRyYWdEaXNhYmxlID0gSHQsIHQuZHJhZ0VuYWJsZSA9IGp0LCB0LmRzdiA9IGZ1bmN0aW9uICh0LCBuLCBlLCByKSB7IDMgPT09IGFyZ3VtZW50cy5sZW5ndGggJiYgImZ1bmN0aW9uIiA9PSB0eXBlb2YgZSAmJiAociA9IGUsIGUgPSB2b2lkIDApOyB2YXIgaSA9IEZvKHQpOyByZXR1cm4gdWEobiwgZSkudGhlbihmdW5jdGlvbiAodCkgeyByZXR1cm4gaS5wYXJzZSh0LCByKSB9KSB9LCB0LmRzdkZvcm1hdCA9IEZvLCB0LmVhc2VCYWNrID0gc2ksIHQuZWFzZUJhY2tJbiA9IGNpLCB0LmVhc2VCYWNrSW5PdXQgPSBzaSwgdC5lYXNlQmFja091dCA9IGZpLCB0LmVhc2VCb3VuY2UgPSB1aSwgdC5lYXNlQm91bmNlSW4gPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gMSAtIHVpKDEgLSB0KSB9LCB0LmVhc2VCb3VuY2VJbk91dCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiAoKHQgKj0gMikgPD0gMSA/IDEgLSB1aSgxIC0gdCkgOiB1aSh0IC0gMSkgKyAxKSAvIDIgfSwgdC5lYXNlQm91bmNlT3V0ID0gdWksIHQuZWFzZUNpcmNsZSA9IFpyLCB0LmVhc2VDaXJjbGVJbiA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiAxIC0gTWF0aC5zcXJ0KDEgLSB0ICogdCkgfSwgdC5lYXNlQ2lyY2xlSW5PdXQgPSBaciwgdC5lYXNlQ2lyY2xlT3V0ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIE1hdGguc3FydCgxIC0gLS10ICogdCkgfSwgdC5lYXNlQ3ViaWMgPSBJciwgdC5lYXNlQ3ViaWNJbiA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0ICogdCAqIHQgfSwgdC5lYXNlQ3ViaWNJbk91dCA9IElyLCB0LmVhc2VDdWJpY091dCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiAtLXQgKiB0ICogdCArIDEgfSwgdC5lYXNlRWxhc3RpYyA9IGRpLCB0LmVhc2VFbGFzdGljSW4gPSBoaSwgdC5lYXNlRWxhc3RpY0luT3V0ID0gcGksIHQuZWFzZUVsYXN0aWNPdXQgPSBkaSwgdC5lYXNlRXhwID0gV3IsIHQuZWFzZUV4cEluID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIE1hdGgucG93KDIsIDEwICogdCAtIDEwKSB9LCB0LmVhc2VFeHBJbk91dCA9IFdyLCB0LmVhc2VFeHBPdXQgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gMSAtIE1hdGgucG93KDIsIC0xMCAqIHQpIH0sIHQuZWFzZUxpbmVhciA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiArdCB9LCB0LmVhc2VQb2x5ID0gWHIsIHQuZWFzZVBvbHlJbiA9IEhyLCB0LmVhc2VQb2x5SW5PdXQgPSBYciwgdC5lYXNlUG9seU91dCA9IGpyLCB0LmVhc2VRdWFkID0gWXIsIHQuZWFzZVF1YWRJbiA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0ICogdCB9LCB0LmVhc2VRdWFkSW5PdXQgPSBZciwgdC5lYXNlUXVhZE91dCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0ICogKDIgLSB0KSB9LCB0LmVhc2VTaW4gPSAkciwgdC5lYXNlU2luSW4gPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gMSAtIE1hdGguY29zKHQgKiBHcikgfSwgdC5lYXNlU2luSW5PdXQgPSAkciwgdC5lYXNlU2luT3V0ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIE1hdGguc2luKHQgKiBHcikgfSwgdC5lbnRyaWVzID0gZnVuY3Rpb24gKHQpIHsgdmFyIG4gPSBbXTsgZm9yICh2YXIgZSBpbiB0KSBuLnB1c2goeyBrZXk6IGUsIHZhbHVlOiB0W2VdIH0pOyByZXR1cm4gbiB9LCB0LmV4dGVudCA9IHMsIHQuZm9yY2VDZW50ZXIgPSBmdW5jdGlvbiAodCwgbikgeyB2YXIgZTsgZnVuY3Rpb24gcigpIHsgdmFyIHIsIGksIG8gPSBlLmxlbmd0aCwgYSA9IDAsIHUgPSAwOyBmb3IgKHIgPSAwOyByIDwgbzsgKytyKWEgKz0gKGkgPSBlW3JdKS54LCB1ICs9IGkueTsgZm9yIChhID0gYSAvIG8gLSB0LCB1ID0gdSAvIG8gLSBuLCByID0gMDsgciA8IG87ICsrcikoaSA9IGVbcl0pLnggLT0gYSwgaS55IC09IHUgfSByZXR1cm4gbnVsbCA9PSB0ICYmICh0ID0gMCksIG51bGwgPT0gbiAmJiAobiA9IDApLCByLmluaXRpYWxpemUgPSBmdW5jdGlvbiAodCkgeyBlID0gdCB9LCByLnggPSBmdW5jdGlvbiAobikgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0ID0gK24sIHIpIDogdCB9LCByLnkgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChuID0gK3QsIHIpIDogbiB9LCByIH0sIHQuZm9yY2VDb2xsaWRlID0gZnVuY3Rpb24gKHQpIHsgdmFyIG4sIGUsIHIgPSAxLCBpID0gMTsgZnVuY3Rpb24gbygpIHsgZm9yICh2YXIgdCwgbywgdSwgYywgZiwgcywgbCwgaCA9IG4ubGVuZ3RoLCBkID0gMDsgZCA8IGk7ICsrZClmb3IgKG8gPSB3YShuLCBBYSwgU2EpLnZpc2l0QWZ0ZXIoYSksIHQgPSAwOyB0IDwgaDsgKyt0KXUgPSBuW3RdLCBzID0gZVt1LmluZGV4XSwgbCA9IHMgKiBzLCBjID0gdS54ICsgdS52eCwgZiA9IHUueSArIHUudnksIG8udmlzaXQocCk7IGZ1bmN0aW9uIHAodCwgbiwgZSwgaSwgbykgeyB2YXIgYSA9IHQuZGF0YSwgaCA9IHQuciwgZCA9IHMgKyBoOyBpZiAoIWEpIHJldHVybiBuID4gYyArIGQgfHwgaSA8IGMgLSBkIHx8IGUgPiBmICsgZCB8fCBvIDwgZiAtIGQ7IGlmIChhLmluZGV4ID4gdS5pbmRleCkgeyB2YXIgcCA9IGMgLSBhLnggLSBhLnZ4LCB2ID0gZiAtIGEueSAtIGEudnksIGcgPSBwICogcCArIHYgKiB2OyBnIDwgZCAqIGQgJiYgKDAgPT09IHAgJiYgKGcgKz0gKHAgPSB5YSgpKSAqIHApLCAwID09PSB2ICYmIChnICs9ICh2ID0geWEoKSkgKiB2KSwgZyA9IChkIC0gKGcgPSBNYXRoLnNxcnQoZykpKSAvIGcgKiByLCB1LnZ4ICs9IChwICo9IGcpICogKGQgPSAoaCAqPSBoKSAvIChsICsgaCkpLCB1LnZ5ICs9ICh2ICo9IGcpICogZCwgYS52eCAtPSBwICogKGQgPSAxIC0gZCksIGEudnkgLT0gdiAqIGQpIH0gfSB9IGZ1bmN0aW9uIGEodCkgeyBpZiAodC5kYXRhKSByZXR1cm4gdC5yID0gZVt0LmRhdGEuaW5kZXhdOyBmb3IgKHZhciBuID0gdC5yID0gMDsgbiA8IDQ7ICsrbil0W25dICYmIHRbbl0uciA+IHQuciAmJiAodC5yID0gdFtuXS5yKSB9IGZ1bmN0aW9uIHUoKSB7IGlmIChuKSB7IHZhciByLCBpLCBvID0gbi5sZW5ndGg7IGZvciAoZSA9IG5ldyBBcnJheShvKSwgciA9IDA7IHIgPCBvOyArK3IpaSA9IG5bcl0sIGVbaS5pbmRleF0gPSArdChpLCByLCBuKSB9IH0gcmV0dXJuICJmdW5jdGlvbiIgIT0gdHlwZW9mIHQgJiYgKHQgPSBnYShudWxsID09IHQgPyAxIDogK3QpKSwgby5pbml0aWFsaXplID0gZnVuY3Rpb24gKHQpIHsgbiA9IHQsIHUoKSB9LCBvLml0ZXJhdGlvbnMgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChpID0gK3QsIG8pIDogaSB9LCBvLnN0cmVuZ3RoID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAociA9ICt0LCBvKSA6IHIgfSwgby5yYWRpdXMgPSBmdW5jdGlvbiAobikgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0ID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgbiA/IG4gOiBnYSgrbiksIHUoKSwgbykgOiB0IH0sIG8gfSwgdC5mb3JjZUxpbmsgPSBmdW5jdGlvbiAodCkgeyB2YXIgbiwgZSwgciwgaSwgbywgYSA9IGthLCB1ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIDEgLyBNYXRoLm1pbihpW3Quc291cmNlLmluZGV4XSwgaVt0LnRhcmdldC5pbmRleF0pIH0sIGMgPSBnYSgzMCksIGYgPSAxOyBmdW5jdGlvbiBzKHIpIHsgZm9yICh2YXIgaSA9IDAsIGEgPSB0Lmxlbmd0aDsgaSA8IGY7ICsraSlmb3IgKHZhciB1LCBjLCBzLCBsLCBoLCBkLCBwLCB2ID0gMDsgdiA8IGE7ICsrdiljID0gKHUgPSB0W3ZdKS5zb3VyY2UsIGwgPSAocyA9IHUudGFyZ2V0KS54ICsgcy52eCAtIGMueCAtIGMudnggfHwgeWEoKSwgaCA9IHMueSArIHMudnkgLSBjLnkgLSBjLnZ5IHx8IHlhKCksIGwgKj0gZCA9ICgoZCA9IE1hdGguc3FydChsICogbCArIGggKiBoKSkgLSBlW3ZdKSAvIGQgKiByICogblt2XSwgaCAqPSBkLCBzLnZ4IC09IGwgKiAocCA9IG9bdl0pLCBzLnZ5IC09IGggKiBwLCBjLnZ4ICs9IGwgKiAocCA9IDEgLSBwKSwgYy52eSArPSBoICogcCB9IGZ1bmN0aW9uIGwoKSB7IGlmIChyKSB7IHZhciB1LCBjLCBmID0gci5sZW5ndGgsIHMgPSB0Lmxlbmd0aCwgbCA9IGNvKHIsIGEpOyBmb3IgKHUgPSAwLCBpID0gbmV3IEFycmF5KGYpOyB1IDwgczsgKyt1KShjID0gdFt1XSkuaW5kZXggPSB1LCAib2JqZWN0IiAhPSB0eXBlb2YgYy5zb3VyY2UgJiYgKGMuc291cmNlID0gRWEobCwgYy5zb3VyY2UpKSwgIm9iamVjdCIgIT0gdHlwZW9mIGMudGFyZ2V0ICYmIChjLnRhcmdldCA9IEVhKGwsIGMudGFyZ2V0KSksIGlbYy5zb3VyY2UuaW5kZXhdID0gKGlbYy5zb3VyY2UuaW5kZXhdIHx8IDApICsgMSwgaVtjLnRhcmdldC5pbmRleF0gPSAoaVtjLnRhcmdldC5pbmRleF0gfHwgMCkgKyAxOyBmb3IgKHUgPSAwLCBvID0gbmV3IEFycmF5KHMpOyB1IDwgczsgKyt1KWMgPSB0W3VdLCBvW3VdID0gaVtjLnNvdXJjZS5pbmRleF0gLyAoaVtjLnNvdXJjZS5pbmRleF0gKyBpW2MudGFyZ2V0LmluZGV4XSk7IG4gPSBuZXcgQXJyYXkocyksIGgoKSwgZSA9IG5ldyBBcnJheShzKSwgZCgpIH0gfSBmdW5jdGlvbiBoKCkgeyBpZiAocikgZm9yICh2YXIgZSA9IDAsIGkgPSB0Lmxlbmd0aDsgZSA8IGk7ICsrZSluW2VdID0gK3UodFtlXSwgZSwgdCkgfSBmdW5jdGlvbiBkKCkgeyBpZiAocikgZm9yICh2YXIgbiA9IDAsIGkgPSB0Lmxlbmd0aDsgbiA8IGk7ICsrbillW25dID0gK2ModFtuXSwgbiwgdCkgfSByZXR1cm4gbnVsbCA9PSB0ICYmICh0ID0gW10pLCBzLmluaXRpYWxpemUgPSBmdW5jdGlvbiAodCkgeyByID0gdCwgbCgpIH0sIHMubGlua3MgPSBmdW5jdGlvbiAobikgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0ID0gbiwgbCgpLCBzKSA6IHQgfSwgcy5pZCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGEgPSB0LCBzKSA6IGEgfSwgcy5pdGVyYXRpb25zID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZiA9ICt0LCBzKSA6IGYgfSwgcy5zdHJlbmd0aCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHUgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IGdhKCt0KSwgaCgpLCBzKSA6IHUgfSwgcy5kaXN0YW5jZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGMgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IGdhKCt0KSwgZCgpLCBzKSA6IGMgfSwgcyB9LCB0LmZvcmNlTWFueUJvZHkgPSBmdW5jdGlvbiAoKSB7IHZhciB0LCBuLCBlLCByLCBpID0gZ2EoLTMwKSwgbyA9IDEsIGEgPSAxIC8gMCwgdSA9IC44MTsgZnVuY3Rpb24gYyhyKSB7IHZhciBpLCBvID0gdC5sZW5ndGgsIGEgPSB3YSh0LCBDYSwgUGEpLnZpc2l0QWZ0ZXIocyk7IGZvciAoZSA9IHIsIGkgPSAwOyBpIDwgbzsgKytpKW4gPSB0W2ldLCBhLnZpc2l0KGwpIH0gZnVuY3Rpb24gZigpIHsgaWYgKHQpIHsgdmFyIG4sIGUsIG8gPSB0Lmxlbmd0aDsgZm9yIChyID0gbmV3IEFycmF5KG8pLCBuID0gMDsgbiA8IG87ICsrbillID0gdFtuXSwgcltlLmluZGV4XSA9ICtpKGUsIG4sIHQpIH0gfSBmdW5jdGlvbiBzKHQpIHsgdmFyIG4sIGUsIGksIG8sIGEsIHUgPSAwLCBjID0gMDsgaWYgKHQubGVuZ3RoKSB7IGZvciAoaSA9IG8gPSBhID0gMDsgYSA8IDQ7ICsrYSkobiA9IHRbYV0pICYmIChlID0gTWF0aC5hYnMobi52YWx1ZSkpICYmICh1ICs9IG4udmFsdWUsIGMgKz0gZSwgaSArPSBlICogbi54LCBvICs9IGUgKiBuLnkpOyB0LnggPSBpIC8gYywgdC55ID0gbyAvIGMgfSBlbHNlIHsgKG4gPSB0KS54ID0gbi5kYXRhLngsIG4ueSA9IG4uZGF0YS55OyBkbyB7IHUgKz0gcltuLmRhdGEuaW5kZXhdIH0gd2hpbGUgKG4gPSBuLm5leHQpIH0gdC52YWx1ZSA9IHUgfSBmdW5jdGlvbiBsKHQsIGksIGMsIGYpIHsgaWYgKCF0LnZhbHVlKSByZXR1cm4gITA7IHZhciBzID0gdC54IC0gbi54LCBsID0gdC55IC0gbi55LCBoID0gZiAtIGksIGQgPSBzICogcyArIGwgKiBsOyBpZiAoaCAqIGggLyB1IDwgZCkgcmV0dXJuIGQgPCBhICYmICgwID09PSBzICYmIChkICs9IChzID0geWEoKSkgKiBzKSwgMCA9PT0gbCAmJiAoZCArPSAobCA9IHlhKCkpICogbCksIGQgPCBvICYmIChkID0gTWF0aC5zcXJ0KG8gKiBkKSksIG4udnggKz0gcyAqIHQudmFsdWUgKiBlIC8gZCwgbi52eSArPSBsICogdC52YWx1ZSAqIGUgLyBkKSwgITA7IGlmICghKHQubGVuZ3RoIHx8IGQgPj0gYSkpIHsgKHQuZGF0YSAhPT0gbiB8fCB0Lm5leHQpICYmICgwID09PSBzICYmIChkICs9IChzID0geWEoKSkgKiBzKSwgMCA9PT0gbCAmJiAoZCArPSAobCA9IHlhKCkpICogbCksIGQgPCBvICYmIChkID0gTWF0aC5zcXJ0KG8gKiBkKSkpOyBkbyB7IHQuZGF0YSAhPT0gbiAmJiAoaCA9IHJbdC5kYXRhLmluZGV4XSAqIGUgLyBkLCBuLnZ4ICs9IHMgKiBoLCBuLnZ5ICs9IGwgKiBoKSB9IHdoaWxlICh0ID0gdC5uZXh0KSB9IH0gcmV0dXJuIGMuaW5pdGlhbGl6ZSA9IGZ1bmN0aW9uIChuKSB7IHQgPSBuLCBmKCkgfSwgYy5zdHJlbmd0aCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGkgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IGdhKCt0KSwgZigpLCBjKSA6IGkgfSwgYy5kaXN0YW5jZU1pbiA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG8gPSB0ICogdCwgYykgOiBNYXRoLnNxcnQobykgfSwgYy5kaXN0YW5jZU1heCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGEgPSB0ICogdCwgYykgOiBNYXRoLnNxcnQoYSkgfSwgYy50aGV0YSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHUgPSB0ICogdCwgYykgOiBNYXRoLnNxcnQodSkgfSwgYyB9LCB0LmZvcmNlUmFkaWFsID0gZnVuY3Rpb24gKHQsIG4sIGUpIHsgdmFyIHIsIGksIG8sIGEgPSBnYSguMSk7IGZ1bmN0aW9uIHUodCkgeyBmb3IgKHZhciBhID0gMCwgdSA9IHIubGVuZ3RoOyBhIDwgdTsgKythKSB7IHZhciBjID0gclthXSwgZiA9IGMueCAtIG4gfHwgMWUtNiwgcyA9IGMueSAtIGUgfHwgMWUtNiwgbCA9IE1hdGguc3FydChmICogZiArIHMgKiBzKSwgaCA9IChvW2FdIC0gbCkgKiBpW2FdICogdCAvIGw7IGMudnggKz0gZiAqIGgsIGMudnkgKz0gcyAqIGggfSB9IGZ1bmN0aW9uIGMoKSB7IGlmIChyKSB7IHZhciBuLCBlID0gci5sZW5ndGg7IGZvciAoaSA9IG5ldyBBcnJheShlKSwgbyA9IG5ldyBBcnJheShlKSwgbiA9IDA7IG4gPCBlOyArK24pb1tuXSA9ICt0KHJbbl0sIG4sIHIpLCBpW25dID0gaXNOYU4ob1tuXSkgPyAwIDogK2EocltuXSwgbiwgcikgfSB9IHJldHVybiAiZnVuY3Rpb24iICE9IHR5cGVvZiB0ICYmICh0ID0gZ2EoK3QpKSwgbnVsbCA9PSBuICYmIChuID0gMCksIG51bGwgPT0gZSAmJiAoZSA9IDApLCB1LmluaXRpYWxpemUgPSBmdW5jdGlvbiAodCkgeyByID0gdCwgYygpIH0sIHUuc3RyZW5ndGggPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChhID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBnYSgrdCksIGMoKSwgdSkgOiBhIH0sIHUucmFkaXVzID0gZnVuY3Rpb24gKG4pIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodCA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIG4gPyBuIDogZ2EoK24pLCBjKCksIHUpIDogdCB9LCB1LnggPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChuID0gK3QsIHUpIDogbiB9LCB1LnkgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChlID0gK3QsIHUpIDogZSB9LCB1IH0sIHQuZm9yY2VTaW11bGF0aW9uID0gZnVuY3Rpb24gKHQpIHsgdmFyIG4sIGUgPSAxLCByID0gLjAwMSwgaSA9IDEgLSBNYXRoLnBvdyhyLCAxIC8gMzAwKSwgbyA9IDAsIGEgPSAuNiwgdSA9IGNvKCksIGMgPSBocihzKSwgZiA9IEkoInRpY2siLCAiZW5kIik7IGZ1bmN0aW9uIHMoKSB7IGwoKSwgZi5jYWxsKCJ0aWNrIiwgbiksIGUgPCByICYmIChjLnN0b3AoKSwgZi5jYWxsKCJlbmQiLCBuKSkgfSBmdW5jdGlvbiBsKHIpIHsgdmFyIGMsIGYsIHMgPSB0Lmxlbmd0aDsgdm9pZCAwID09PSByICYmIChyID0gMSk7IGZvciAodmFyIGwgPSAwOyBsIDwgcjsgKytsKWZvciAoZSArPSAobyAtIGUpICogaSwgdS5lYWNoKGZ1bmN0aW9uICh0KSB7IHQoZSkgfSksIGMgPSAwOyBjIDwgczsgKytjKW51bGwgPT0gKGYgPSB0W2NdKS5meCA/IGYueCArPSBmLnZ4ICo9IGEgOiAoZi54ID0gZi5meCwgZi52eCA9IDApLCBudWxsID09IGYuZnkgPyBmLnkgKz0gZi52eSAqPSBhIDogKGYueSA9IGYuZnksIGYudnkgPSAwKTsgcmV0dXJuIG4gfSBmdW5jdGlvbiBoKCkgeyBmb3IgKHZhciBuLCBlID0gMCwgciA9IHQubGVuZ3RoOyBlIDwgcjsgKytlKSB7IGlmICgobiA9IHRbZV0pLmluZGV4ID0gZSwgbnVsbCAhPSBuLmZ4ICYmIChuLnggPSBuLmZ4KSwgbnVsbCAhPSBuLmZ5ICYmIChuLnkgPSBuLmZ5KSwgaXNOYU4obi54KSB8fCBpc05hTihuLnkpKSB7IHZhciBpID0gemEgKiBNYXRoLnNxcnQoZSksIG8gPSBlICogUmE7IG4ueCA9IGkgKiBNYXRoLmNvcyhvKSwgbi55ID0gaSAqIE1hdGguc2luKG8pIH0gKGlzTmFOKG4udngpIHx8IGlzTmFOKG4udnkpKSAmJiAobi52eCA9IG4udnkgPSAwKSB9IH0gZnVuY3Rpb24gZChuKSB7IHJldHVybiBuLmluaXRpYWxpemUgJiYgbi5pbml0aWFsaXplKHQpLCBuIH0gcmV0dXJuIG51bGwgPT0gdCAmJiAodCA9IFtdKSwgaCgpLCBuID0geyB0aWNrOiBsLCByZXN0YXJ0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBjLnJlc3RhcnQocyksIG4gfSwgc3RvcDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYy5zdG9wKCksIG4gfSwgbm9kZXM6IGZ1bmN0aW9uIChlKSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHQgPSBlLCBoKCksIHUuZWFjaChkKSwgbikgOiB0IH0sIGFscGhhOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChlID0gK3QsIG4pIDogZSB9LCBhbHBoYU1pbjogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAociA9ICt0LCBuKSA6IHIgfSwgYWxwaGFEZWNheTogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoaSA9ICt0LCBuKSA6ICtpIH0sIGFscGhhVGFyZ2V0OiBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChvID0gK3QsIG4pIDogbyB9LCB2ZWxvY2l0eURlY2F5OiBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChhID0gMSAtIHQsIG4pIDogMSAtIGEgfSwgZm9yY2U6IGZ1bmN0aW9uICh0LCBlKSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID4gMSA/IChudWxsID09IGUgPyB1LnJlbW92ZSh0KSA6IHUuc2V0KHQsIGQoZSkpLCBuKSA6IHUuZ2V0KHQpIH0sIGZpbmQ6IGZ1bmN0aW9uIChuLCBlLCByKSB7IHZhciBpLCBvLCBhLCB1LCBjLCBmID0gMCwgcyA9IHQubGVuZ3RoOyBmb3IgKG51bGwgPT0gciA/IHIgPSAxIC8gMCA6IHIgKj0gciwgZiA9IDA7IGYgPCBzOyArK2YpKGEgPSAoaSA9IG4gLSAodSA9IHRbZl0pLngpICogaSArIChvID0gZSAtIHUueSkgKiBvKSA8IHIgJiYgKGMgPSB1LCByID0gYSk7IHJldHVybiBjIH0sIG9uOiBmdW5jdGlvbiAodCwgZSkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyAoZi5vbih0LCBlKSwgbikgOiBmLm9uKHQpIH0gfSB9LCB0LmZvcmNlWCA9IGZ1bmN0aW9uICh0KSB7IHZhciBuLCBlLCByLCBpID0gZ2EoLjEpOyBmdW5jdGlvbiBvKHQpIHsgZm9yICh2YXIgaSwgbyA9IDAsIGEgPSBuLmxlbmd0aDsgbyA8IGE7ICsrbykoaSA9IG5bb10pLnZ4ICs9IChyW29dIC0gaS54KSAqIGVbb10gKiB0IH0gZnVuY3Rpb24gYSgpIHsgaWYgKG4pIHsgdmFyIG8sIGEgPSBuLmxlbmd0aDsgZm9yIChlID0gbmV3IEFycmF5KGEpLCByID0gbmV3IEFycmF5KGEpLCBvID0gMDsgbyA8IGE7ICsrbyllW29dID0gaXNOYU4ocltvXSA9ICt0KG5bb10sIG8sIG4pKSA/IDAgOiAraShuW29dLCBvLCBuKSB9IH0gcmV0dXJuICJmdW5jdGlvbiIgIT0gdHlwZW9mIHQgJiYgKHQgPSBnYShudWxsID09IHQgPyAwIDogK3QpKSwgby5pbml0aWFsaXplID0gZnVuY3Rpb24gKHQpIHsgbiA9IHQsIGEoKSB9LCBvLnN0cmVuZ3RoID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoaSA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogZ2EoK3QpLCBhKCksIG8pIDogaSB9LCBvLnggPSBmdW5jdGlvbiAobikgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0ID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgbiA/IG4gOiBnYSgrbiksIGEoKSwgbykgOiB0IH0sIG8gfSwgdC5mb3JjZVkgPSBmdW5jdGlvbiAodCkgeyB2YXIgbiwgZSwgciwgaSA9IGdhKC4xKTsgZnVuY3Rpb24gbyh0KSB7IGZvciAodmFyIGksIG8gPSAwLCBhID0gbi5sZW5ndGg7IG8gPCBhOyArK28pKGkgPSBuW29dKS52eSArPSAocltvXSAtIGkueSkgKiBlW29dICogdCB9IGZ1bmN0aW9uIGEoKSB7IGlmIChuKSB7IHZhciBvLCBhID0gbi5sZW5ndGg7IGZvciAoZSA9IG5ldyBBcnJheShhKSwgciA9IG5ldyBBcnJheShhKSwgbyA9IDA7IG8gPCBhOyArK28pZVtvXSA9IGlzTmFOKHJbb10gPSArdChuW29dLCBvLCBuKSkgPyAwIDogK2kobltvXSwgbywgbikgfSB9IHJldHVybiAiZnVuY3Rpb24iICE9IHR5cGVvZiB0ICYmICh0ID0gZ2EobnVsbCA9PSB0ID8gMCA6ICt0KSksIG8uaW5pdGlhbGl6ZSA9IGZ1bmN0aW9uICh0KSB7IG4gPSB0LCBhKCkgfSwgby5zdHJlbmd0aCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGkgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IGdhKCt0KSwgYSgpLCBvKSA6IGkgfSwgby55ID0gZnVuY3Rpb24gKG4pIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodCA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIG4gPyBuIDogZ2EoK24pLCBhKCksIG8pIDogdCB9LCBvIH0sIHQuZm9ybWF0RGVmYXVsdExvY2FsZSA9IEdhLCB0LmZvcm1hdExvY2FsZSA9IFZhLCB0LmZvcm1hdFNwZWNpZmllciA9IE9hLCB0Lmdlb0FsYmVycyA9IGVsLCB0Lmdlb0FsYmVyc1VzYSA9IGZ1bmN0aW9uICgpIHsgdmFyIHQsIG4sIGUsIHIsIGksIG8sIGEgPSBlbCgpLCB1ID0gbmwoKS5yb3RhdGUoWzE1NCwgMF0pLmNlbnRlcihbLTIsIDU4LjVdKS5wYXJhbGxlbHMoWzU1LCA2NV0pLCBjID0gbmwoKS5yb3RhdGUoWzE1NywgMF0pLmNlbnRlcihbLTMsIDE5LjldKS5wYXJhbGxlbHMoWzgsIDE4XSksIGYgPSB7IHBvaW50OiBmdW5jdGlvbiAodCwgbikgeyBvID0gW3QsIG5dIH0gfTsgZnVuY3Rpb24gcyh0KSB7IHZhciBuID0gdFswXSwgYSA9IHRbMV07IHJldHVybiBvID0gbnVsbCwgZS5wb2ludChuLCBhKSwgbyB8fCAoci5wb2ludChuLCBhKSwgbykgfHwgKGkucG9pbnQobiwgYSksIG8pIH0gZnVuY3Rpb24gbCgpIHsgcmV0dXJuIHQgPSBuID0gbnVsbCwgcyB9IHJldHVybiBzLmludmVydCA9IGZ1bmN0aW9uICh0KSB7IHZhciBuID0gYS5zY2FsZSgpLCBlID0gYS50cmFuc2xhdGUoKSwgciA9ICh0WzBdIC0gZVswXSkgLyBuLCBpID0gKHRbMV0gLSBlWzFdKSAvIG47IHJldHVybiAoaSA+PSAuMTIgJiYgaSA8IC4yMzQgJiYgciA+PSAtLjQyNSAmJiByIDwgLS4yMTQgPyB1IDogaSA+PSAuMTY2ICYmIGkgPCAuMjM0ICYmIHIgPj0gLS4yMTQgJiYgciA8IC0uMTE1ID8gYyA6IGEpLmludmVydCh0KSB9LCBzLnN0cmVhbSA9IGZ1bmN0aW9uIChlKSB7IHJldHVybiB0ICYmIG4gPT09IGUgPyB0IDogKHIgPSBbYS5zdHJlYW0obiA9IGUpLCB1LnN0cmVhbShlKSwgYy5zdHJlYW0oZSldLCBpID0gci5sZW5ndGgsIHQgPSB7IHBvaW50OiBmdW5jdGlvbiAodCwgbikgeyBmb3IgKHZhciBlID0gLTE7ICsrZSA8IGk7KXJbZV0ucG9pbnQodCwgbikgfSwgc3BoZXJlOiBmdW5jdGlvbiAoKSB7IGZvciAodmFyIHQgPSAtMTsgKyt0IDwgaTspclt0XS5zcGhlcmUoKSB9LCBsaW5lU3RhcnQ6IGZ1bmN0aW9uICgpIHsgZm9yICh2YXIgdCA9IC0xOyArK3QgPCBpOylyW3RdLmxpbmVTdGFydCgpIH0sIGxpbmVFbmQ6IGZ1bmN0aW9uICgpIHsgZm9yICh2YXIgdCA9IC0xOyArK3QgPCBpOylyW3RdLmxpbmVFbmQoKSB9LCBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uICgpIHsgZm9yICh2YXIgdCA9IC0xOyArK3QgPCBpOylyW3RdLnBvbHlnb25TdGFydCgpIH0sIHBvbHlnb25FbmQ6IGZ1bmN0aW9uICgpIHsgZm9yICh2YXIgdCA9IC0xOyArK3QgPCBpOylyW3RdLnBvbHlnb25FbmQoKSB9IH0pOyB2YXIgciwgaSB9LCBzLnByZWNpc2lvbiA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGEucHJlY2lzaW9uKHQpLCB1LnByZWNpc2lvbih0KSwgYy5wcmVjaXNpb24odCksIGwoKSkgOiBhLnByZWNpc2lvbigpIH0sIHMuc2NhbGUgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChhLnNjYWxlKHQpLCB1LnNjYWxlKC4zNSAqIHQpLCBjLnNjYWxlKHQpLCBzLnRyYW5zbGF0ZShhLnRyYW5zbGF0ZSgpKSkgOiBhLnNjYWxlKCkgfSwgcy50cmFuc2xhdGUgPSBmdW5jdGlvbiAodCkgeyBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBhLnRyYW5zbGF0ZSgpOyB2YXIgbiA9IGEuc2NhbGUoKSwgbyA9ICt0WzBdLCBzID0gK3RbMV07IHJldHVybiBlID0gYS50cmFuc2xhdGUodCkuY2xpcEV4dGVudChbW28gLSAuNDU1ICogbiwgcyAtIC4yMzggKiBuXSwgW28gKyAuNDU1ICogbiwgcyArIC4yMzggKiBuXV0pLnN0cmVhbShmKSwgciA9IHUudHJhbnNsYXRlKFtvIC0gLjMwNyAqIG4sIHMgKyAuMjAxICogbl0pLmNsaXBFeHRlbnQoW1tvIC0gLjQyNSAqIG4gKyBudSwgcyArIC4xMiAqIG4gKyBudV0sIFtvIC0gLjIxNCAqIG4gLSBudSwgcyArIC4yMzQgKiBuIC0gbnVdXSkuc3RyZWFtKGYpLCBpID0gYy50cmFuc2xhdGUoW28gLSAuMjA1ICogbiwgcyArIC4yMTIgKiBuXSkuY2xpcEV4dGVudChbW28gLSAuMjE0ICogbiArIG51LCBzICsgLjE2NiAqIG4gKyBudV0sIFtvIC0gLjExNSAqIG4gLSBudSwgcyArIC4yMzQgKiBuIC0gbnVdXSkuc3RyZWFtKGYpLCBsKCkgfSwgcy5maXRFeHRlbnQgPSBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gSXMocywgdCwgbikgfSwgcy5maXRTaXplID0gZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIEhzKHMsIHQsIG4pIH0sIHMuZml0V2lkdGggPSBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4ganMocywgdCwgbikgfSwgcy5maXRIZWlnaHQgPSBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gWHMocywgdCwgbikgfSwgcy5zY2FsZSgxMDcwKSB9LCB0Lmdlb0FyZWEgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gVXUucmVzZXQoKSwgQ3UodCwgT3UpLCAyICogVXUgfSwgdC5nZW9BemltdXRoYWxFcXVhbEFyZWEgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBRcyhvbCkuc2NhbGUoMTI0Ljc1KS5jbGlwQW5nbGUoMTc5Ljk5OSkgfSwgdC5nZW9BemltdXRoYWxFcXVhbEFyZWFSYXcgPSBvbCwgdC5nZW9BemltdXRoYWxFcXVpZGlzdGFudCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFFzKGFsKS5zY2FsZSg3OS40MTg4KS5jbGlwQW5nbGUoMTc5Ljk5OSkgfSwgdC5nZW9BemltdXRoYWxFcXVpZGlzdGFudFJhdyA9IGFsLCB0Lmdlb0JvdW5kcyA9IGZ1bmN0aW9uICh0KSB7IHZhciBuLCBlLCByLCBpLCBvLCBhLCB1OyBpZiAoSnUgPSBLdSA9IC0oWnUgPSBRdSA9IDEgLyAwKSwgaWMgPSBbXSwgQ3UodCwgTWMpLCBlID0gaWMubGVuZ3RoKSB7IGZvciAoaWMuc29ydCh6YyksIG4gPSAxLCBvID0gW3IgPSBpY1swXV07IG4gPCBlOyArK24pUmMociwgKGkgPSBpY1tuXSlbMF0pIHx8IFJjKHIsIGlbMV0pID8gKFBjKHJbMF0sIGlbMV0pID4gUGMoclswXSwgclsxXSkgJiYgKHJbMV0gPSBpWzFdKSwgUGMoaVswXSwgclsxXSkgPiBQYyhyWzBdLCByWzFdKSAmJiAoclswXSA9IGlbMF0pKSA6IG8ucHVzaChyID0gaSk7IGZvciAoYSA9IC0xIC8gMCwgbiA9IDAsIHIgPSBvW2UgPSBvLmxlbmd0aCAtIDFdOyBuIDw9IGU7IHIgPSBpLCArK24paSA9IG9bbl0sICh1ID0gUGMoclsxXSwgaVswXSkpID4gYSAmJiAoYSA9IHUsIFp1ID0gaVswXSwgS3UgPSByWzFdKSB9IHJldHVybiBpYyA9IG9jID0gbnVsbCwgWnUgPT09IDEgLyAwIHx8IFF1ID09PSAxIC8gMCA/IFtbTmFOLCBOYU5dLCBbTmFOLCBOYU5dXSA6IFtbWnUsIFF1XSwgW0t1LCBKdV1dIH0sIHQuZ2VvQ2VudHJvaWQgPSBmdW5jdGlvbiAodCkgeyBhYyA9IHVjID0gY2MgPSBmYyA9IHNjID0gbGMgPSBoYyA9IGRjID0gcGMgPSB2YyA9IGdjID0gMCwgQ3UodCwgRGMpOyB2YXIgbiA9IHBjLCBlID0gdmMsIHIgPSBnYywgaSA9IG4gKiBuICsgZSAqIGUgKyByICogcjsgcmV0dXJuIGkgPCBldSAmJiAobiA9IGxjLCBlID0gaGMsIHIgPSBkYywgdWMgPCBudSAmJiAobiA9IGNjLCBlID0gZmMsIHIgPSBzYyksIChpID0gbiAqIG4gKyBlICogZSArIHIgKiByKSA8IGV1KSA/IFtOYU4sIE5hTl0gOiBbbHUoZSwgbikgKiB1dSwgd3UociAvIGJ1KGkpKSAqIHV1XSB9LCB0Lmdlb0NpcmNsZSA9IGZ1bmN0aW9uICgpIHsgdmFyIHQsIG4sIGUgPSBYYyhbMCwgMF0pLCByID0gWGMoOTApLCBpID0gWGMoNiksIG8gPSB7IHBvaW50OiBmdW5jdGlvbiAoZSwgcikgeyB0LnB1c2goZSA9IG4oZSwgcikpLCBlWzBdICo9IHV1LCBlWzFdICo9IHV1IH0gfTsgZnVuY3Rpb24gYSgpIHsgdmFyIGEgPSBlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksIHUgPSByLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgKiBjdSwgYyA9IGkuYXBwbHkodGhpcywgYXJndW1lbnRzKSAqIGN1OyByZXR1cm4gdCA9IFtdLCBuID0gJGMoLWFbMF0gKiBjdSwgLWFbMV0gKiBjdSwgMCkuaW52ZXJ0LCBKYyhvLCB1LCBjLCAxKSwgYSA9IHsgdHlwZTogIlBvbHlnb24iLCBjb29yZGluYXRlczogW3RdIH0sIHQgPSBuID0gbnVsbCwgYSB9IHJldHVybiBhLmNlbnRlciA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGUgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IFhjKFsrdFswXSwgK3RbMV1dKSwgYSkgOiBlIH0sIGEucmFkaXVzID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAociA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogWGMoK3QpLCBhKSA6IHIgfSwgYS5wcmVjaXNpb24gPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChpID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBYYygrdCksIGEpIDogaSB9LCBhIH0sIHQuZ2VvQ2xpcEFudGltZXJpZGlhbiA9IGRmLCB0Lmdlb0NsaXBDaXJjbGUgPSBwZiwgdC5nZW9DbGlwRXh0ZW50ID0gZnVuY3Rpb24gKCkgeyB2YXIgdCwgbiwgZSwgciA9IDAsIGkgPSAwLCBvID0gOTYwLCBhID0gNTAwOyByZXR1cm4gZSA9IHsgc3RyZWFtOiBmdW5jdGlvbiAoZSkgeyByZXR1cm4gdCAmJiBuID09PSBlID8gdCA6IHQgPSB5ZihyLCBpLCBvLCBhKShuID0gZSkgfSwgZXh0ZW50OiBmdW5jdGlvbiAodSkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyID0gK3VbMF1bMF0sIGkgPSArdVswXVsxXSwgbyA9ICt1WzFdWzBdLCBhID0gK3VbMV1bMV0sIHQgPSBuID0gbnVsbCwgZSkgOiBbW3IsIGldLCBbbywgYV1dIH0gfSB9LCB0Lmdlb0NsaXBSZWN0YW5nbGUgPSB5ZiwgdC5nZW9Db25pY0NvbmZvcm1hbCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEpzKHNsKS5zY2FsZSgxMDkuNSkucGFyYWxsZWxzKFszMCwgMzBdKSB9LCB0Lmdlb0NvbmljQ29uZm9ybWFsUmF3ID0gc2wsIHQuZ2VvQ29uaWNFcXVhbEFyZWEgPSBubCwgdC5nZW9Db25pY0VxdWFsQXJlYVJhdyA9IHRsLCB0Lmdlb0NvbmljRXF1aWRpc3RhbnQgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBKcyhobCkuc2NhbGUoMTMxLjE1NCkuY2VudGVyKFswLCAxMy45Mzg5XSkgfSwgdC5nZW9Db25pY0VxdWlkaXN0YW50UmF3ID0gaGwsIHQuZ2VvQ29udGFpbnMgPSBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gKHQgJiYgQ2YuaGFzT3duUHJvcGVydHkodC50eXBlKSA/IENmW3QudHlwZV0gOiB6ZikodCwgbikgfSwgdC5nZW9EaXN0YW5jZSA9IEVmLCB0Lmdlb0VxdWFsRWFydGggPSBmdW5jdGlvbiAoKSB7IHJldHVybiBRcyhfbCkuc2NhbGUoMTc3LjE1OCkgfSwgdC5nZW9FcXVhbEVhcnRoUmF3ID0gX2wsIHQuZ2VvRXF1aXJlY3Rhbmd1bGFyID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gUXMobGwpLnNjYWxlKDE1Mi42MykgfSwgdC5nZW9FcXVpcmVjdGFuZ3VsYXJSYXcgPSBsbCwgdC5nZW9Hbm9tb25pYyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFFzKGJsKS5zY2FsZSgxNDQuMDQ5KS5jbGlwQW5nbGUoNjApIH0sIHQuZ2VvR25vbW9uaWNSYXcgPSBibCwgdC5nZW9HcmF0aWN1bGUgPSBGZiwgdC5nZW9HcmF0aWN1bGUxMCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEZmKCkoKSB9LCB0Lmdlb0lkZW50aXR5ID0gZnVuY3Rpb24gKCkgeyB2YXIgdCwgbiwgZSwgciwgaSwgbywgYSwgdSA9IDEsIGMgPSAwLCBmID0gMCwgcyA9IDEsIGwgPSAxLCBoID0gMCwgZCA9IG51bGwsIHAgPSAxLCB2ID0gMSwgZyA9IEJzKHsgcG9pbnQ6IGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlID0gYihbdCwgbl0pOyB0aGlzLnN0cmVhbS5wb2ludChlWzBdLCBlWzFdKSB9IH0pLCB5ID0gWWY7IGZ1bmN0aW9uIF8oKSB7IHJldHVybiBwID0gdSAqIHMsIHYgPSB1ICogbCwgbyA9IGEgPSBudWxsLCBiIH0gZnVuY3Rpb24gYihlKSB7IHZhciByID0gZVswXSAqIHAsIGkgPSBlWzFdICogdjsgaWYgKGgpIHsgdmFyIG8gPSBpICogdCAtIHIgKiBuOyByID0gciAqIHQgKyBpICogbiwgaSA9IG8gfSByZXR1cm4gW3IgKyBjLCBpICsgZl0gfSByZXR1cm4gYi5pbnZlcnQgPSBmdW5jdGlvbiAoZSkgeyB2YXIgciA9IGVbMF0gLSBjLCBpID0gZVsxXSAtIGY7IGlmIChoKSB7IHZhciBvID0gaSAqIHQgKyByICogbjsgciA9IHIgKiB0IC0gaSAqIG4sIGkgPSBvIH0gcmV0dXJuIFtyIC8gcCwgaSAvIHZdIH0sIGIuc3RyZWFtID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIG8gJiYgYSA9PT0gdCA/IG8gOiBvID0gZyh5KGEgPSB0KSkgfSwgYi5wb3N0Y2xpcCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHkgPSB0LCBkID0gZSA9IHIgPSBpID0gbnVsbCwgXygpKSA6IHkgfSwgYi5jbGlwRXh0ZW50ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeSA9IG51bGwgPT0gdCA/IChkID0gZSA9IHIgPSBpID0gbnVsbCwgWWYpIDogeWYoZCA9ICt0WzBdWzBdLCBlID0gK3RbMF1bMV0sIHIgPSArdFsxXVswXSwgaSA9ICt0WzFdWzFdKSwgXygpKSA6IG51bGwgPT0gZCA/IG51bGwgOiBbW2QsIGVdLCBbciwgaV1dIH0sIGIuc2NhbGUgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh1ID0gK3QsIF8oKSkgOiB1IH0sIGIudHJhbnNsYXRlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYyA9ICt0WzBdLCBmID0gK3RbMV0sIF8oKSkgOiBbYywgZl0gfSwgYi5hbmdsZSA9IGZ1bmN0aW9uIChlKSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG4gPSB5dShoID0gZSAlIDM2MCAqIGN1KSwgdCA9IGh1KGgpLCBfKCkpIDogaCAqIHV1IH0sIGIucmVmbGVjdFggPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChzID0gdCA/IC0xIDogMSwgXygpKSA6IHMgPCAwIH0sIGIucmVmbGVjdFkgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChsID0gdCA/IC0xIDogMSwgXygpKSA6IGwgPCAwIH0sIGIuZml0RXh0ZW50ID0gZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIElzKGIsIHQsIG4pIH0sIGIuZml0U2l6ZSA9IGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiBIcyhiLCB0LCBuKSB9LCBiLmZpdFdpZHRoID0gZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIGpzKGIsIHQsIG4pIH0sIGIuZml0SGVpZ2h0ID0gZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIFhzKGIsIHQsIG4pIH0sIGIgfSwgdC5nZW9JbnRlcnBvbGF0ZSA9IGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlID0gdFswXSAqIGN1LCByID0gdFsxXSAqIGN1LCBpID0gblswXSAqIGN1LCBvID0gblsxXSAqIGN1LCBhID0gaHUociksIHUgPSB5dShyKSwgYyA9IGh1KG8pLCBmID0geXUobyksIHMgPSBhICogaHUoZSksIGwgPSBhICogeXUoZSksIGggPSBjICogaHUoaSksIGQgPSBjICogeXUoaSksIHAgPSAyICogd3UoYnUoTXUobyAtIHIpICsgYSAqIGMgKiBNdShpIC0gZSkpKSwgdiA9IHl1KHApLCBnID0gcCA/IGZ1bmN0aW9uICh0KSB7IHZhciBuID0geXUodCAqPSBwKSAvIHYsIGUgPSB5dShwIC0gdCkgLyB2LCByID0gZSAqIHMgKyBuICogaCwgaSA9IGUgKiBsICsgbiAqIGQsIG8gPSBlICogdSArIG4gKiBmOyByZXR1cm4gW2x1KGksIHIpICogdXUsIGx1KG8sIGJ1KHIgKiByICsgaSAqIGkpKSAqIHV1XSB9IDogZnVuY3Rpb24gKCkgeyByZXR1cm4gW2UgKiB1dSwgciAqIHV1XSB9OyByZXR1cm4gZy5kaXN0YW5jZSA9IHAsIGcgfSwgdC5nZW9MZW5ndGggPSBBZiwgdC5nZW9NZXJjYXRvciA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNsKHVsKS5zY2FsZSg5NjEgLyBhdSkgfSwgdC5nZW9NZXJjYXRvclJhdyA9IHVsLCB0Lmdlb05hdHVyYWxFYXJ0aDEgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBRcyhtbCkuc2NhbGUoMTc1LjI5NSkgfSwgdC5nZW9OYXR1cmFsRWFydGgxUmF3ID0gbWwsIHQuZ2VvT3J0aG9ncmFwaGljID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gUXMoeGwpLnNjYWxlKDI0OS41KS5jbGlwQW5nbGUoOTAgKyBudSkgfSwgdC5nZW9PcnRob2dyYXBoaWNSYXcgPSB4bCwgdC5nZW9QYXRoID0gZnVuY3Rpb24gKHQsIG4pIHsgdmFyIGUsIHIsIGkgPSA0LjU7IGZ1bmN0aW9uIG8odCkgeyByZXR1cm4gdCAmJiAoImZ1bmN0aW9uIiA9PSB0eXBlb2YgaSAmJiByLnBvaW50UmFkaXVzKCtpLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpLCBDdSh0LCBlKHIpKSksIHIucmVzdWx0KCkgfSByZXR1cm4gby5hcmVhID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIEN1KHQsIGUoJGYpKSwgJGYucmVzdWx0KCkgfSwgby5tZWFzdXJlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIEN1KHQsIGUoRHMpKSwgRHMucmVzdWx0KCkgfSwgby5ib3VuZHMgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gQ3UodCwgZShycykpLCBycy5yZXN1bHQoKSB9LCBvLmNlbnRyb2lkID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIEN1KHQsIGUoeXMpKSwgeXMucmVzdWx0KCkgfSwgby5wcm9qZWN0aW9uID0gZnVuY3Rpb24gKG4pIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZSA9IG51bGwgPT0gbiA/ICh0ID0gbnVsbCwgWWYpIDogKHQgPSBuKS5zdHJlYW0sIG8pIDogdCB9LCBvLmNvbnRleHQgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyID0gbnVsbCA9PSB0ID8gKG4gPSBudWxsLCBuZXcgVXMpIDogbmV3IFNzKG4gPSB0KSwgImZ1bmN0aW9uIiAhPSB0eXBlb2YgaSAmJiByLnBvaW50UmFkaXVzKGkpLCBvKSA6IG4gfSwgby5wb2ludFJhZGl1cyA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGkgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IChyLnBvaW50UmFkaXVzKCt0KSwgK3QpLCBvKSA6IGkgfSwgby5wcm9qZWN0aW9uKHQpLmNvbnRleHQobikgfSwgdC5nZW9Qcm9qZWN0aW9uID0gUXMsIHQuZ2VvUHJvamVjdGlvbk11dGF0b3IgPSBLcywgdC5nZW9Sb3RhdGlvbiA9IEtjLCB0Lmdlb1N0ZXJlb2dyYXBoaWMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBRcyh3bCkuc2NhbGUoMjUwKS5jbGlwQW5nbGUoMTQyKSB9LCB0Lmdlb1N0ZXJlb2dyYXBoaWNSYXcgPSB3bCwgdC5nZW9TdHJlYW0gPSBDdSwgdC5nZW9UcmFuc2Zvcm0gPSBmdW5jdGlvbiAodCkgeyByZXR1cm4geyBzdHJlYW06IEJzKHQpIH0gfSwgdC5nZW9UcmFuc3ZlcnNlTWVyY2F0b3IgPSBmdW5jdGlvbiAoKSB7IHZhciB0ID0gY2woTWwpLCBuID0gdC5jZW50ZXIsIGUgPSB0LnJvdGF0ZTsgcmV0dXJuIHQuY2VudGVyID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyBuKFstdFsxXSwgdFswXV0pIDogWyh0ID0gbigpKVsxXSwgLXRbMF1dIH0sIHQucm90YXRlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyBlKFt0WzBdLCB0WzFdLCB0Lmxlbmd0aCA+IDIgPyB0WzJdICsgOTAgOiA5MF0pIDogWyh0ID0gZSgpKVswXSwgdFsxXSwgdFsyXSAtIDkwXSB9LCBlKFswLCAwLCA5MF0pLnNjYWxlKDE1OS4xNTUpIH0sIHQuZ2VvVHJhbnN2ZXJzZU1lcmNhdG9yUmF3ID0gTWwsIHQuZ3JheSA9IGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiBuZXcgQm4odCwgMCwgMCwgbnVsbCA9PSBuID8gMSA6IG4pIH0sIHQuaGNsID0gWG4sIHQuaGllcmFyY2h5ID0ga2wsIHQuaGlzdG9ncmFtID0gZnVuY3Rpb24gKCkgeyB2YXIgdCA9IHYsIG4gPSBzLCBlID0gTTsgZnVuY3Rpb24gcihyKSB7IHZhciBvLCBhLCB1ID0gci5sZW5ndGgsIGMgPSBuZXcgQXJyYXkodSk7IGZvciAobyA9IDA7IG8gPCB1OyArK28pY1tvXSA9IHQocltvXSwgbywgcik7IHZhciBmID0gbihjKSwgcyA9IGZbMF0sIGwgPSBmWzFdLCBoID0gZShjLCBzLCBsKTsgQXJyYXkuaXNBcnJheShoKSB8fCAoaCA9IHcocywgbCwgaCksIGggPSBnKE1hdGguY2VpbChzIC8gaCkgKiBoLCBsLCBoKSk7IGZvciAodmFyIGQgPSBoLmxlbmd0aDsgaFswXSA8PSBzOyloLnNoaWZ0KCksIC0tZDsgZm9yICg7IGhbZCAtIDFdID4gbDspaC5wb3AoKSwgLS1kOyB2YXIgcCwgdiA9IG5ldyBBcnJheShkICsgMSk7IGZvciAobyA9IDA7IG8gPD0gZDsgKytvKShwID0gdltvXSA9IFtdKS54MCA9IG8gPiAwID8gaFtvIC0gMV0gOiBzLCBwLngxID0gbyA8IGQgPyBoW29dIDogbDsgZm9yIChvID0gMDsgbyA8IHU7ICsrbylzIDw9IChhID0gY1tvXSkgJiYgYSA8PSBsICYmIHZbaShoLCBhLCAwLCBkKV0ucHVzaChyW29dKTsgcmV0dXJuIHYgfSByZXR1cm4gci52YWx1ZSA9IGZ1bmN0aW9uIChuKSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHQgPSAiZnVuY3Rpb24iID09IHR5cGVvZiBuID8gbiA6IHAobiksIHIpIDogdCB9LCByLmRvbWFpbiA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG4gPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IHAoW3RbMF0sIHRbMV1dKSwgcikgOiBuIH0sIHIudGhyZXNob2xkcyA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGUgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IEFycmF5LmlzQXJyYXkodCkgPyBwKGguY2FsbCh0KSkgOiBwKHQpLCByKSA6IGUgfSwgciB9LCB0LmhzbCA9IFRuLCB0Lmh0bWwgPSBwYSwgdC5pbWFnZSA9IGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAoZSwgcikgeyB2YXIgaSA9IG5ldyBJbWFnZTsgZm9yICh2YXIgbyBpbiBuKSBpW29dID0gbltvXTsgaS5vbmVycm9yID0gciwgaS5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7IGUoaSkgfSwgaS5zcmMgPSB0IH0pIH0sIHQuaW50ZXJwb2xhdGUgPSBUZSwgdC5pbnRlcnBvbGF0ZUFycmF5ID0gZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuICh5ZShuKSA/IGdlIDogX2UpKHQsIG4pIH0sIHQuaW50ZXJwb2xhdGVCYXNpcyA9IG9lLCB0LmludGVycG9sYXRlQmFzaXNDbG9zZWQgPSBhZSwgdC5pbnRlcnBvbGF0ZUJsdWVzID0gUWcsIHQuaW50ZXJwb2xhdGVCckJHID0gZmcsIHQuaW50ZXJwb2xhdGVCdUduID0gU2csIHQuaW50ZXJwb2xhdGVCdVB1ID0gRWcsIHQuaW50ZXJwb2xhdGVDaXZpZGlzID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQgPSBNYXRoLm1heCgwLCBNYXRoLm1pbigxLCB0KSksICJyZ2IoIiArIE1hdGgubWF4KDAsIE1hdGgubWluKDI1NSwgTWF0aC5yb3VuZCgtNC41NCAtIHQgKiAoMzUuMzQgLSB0ICogKDIzODEuNzMgLSB0ICogKDY0MDIuNyAtIHQgKiAoNzAyNC43MiAtIDI3MTAuNTcgKiB0KSkpKSkpKSArICIsICIgKyBNYXRoLm1heCgwLCBNYXRoLm1pbigyNTUsIE1hdGgucm91bmQoMzIuNDkgKyB0ICogKDE3MC43MyArIHQgKiAoNTIuODIgLSB0ICogKDEzMS40NiAtIHQgKiAoMTc2LjU4IC0gNjcuMzcgKiB0KSkpKSkpKSArICIsICIgKyBNYXRoLm1heCgwLCBNYXRoLm1pbigyNTUsIE1hdGgucm91bmQoODEuMjQgKyB0ICogKDQ0Mi4zNiAtIHQgKiAoMjQ4Mi40MyAtIHQgKiAoNjE2Ny4yNCAtIHQgKiAoNjYxNC45NCAtIDI0NzUuNjcgKiB0KSkpKSkpKSArICIpIiB9LCB0LmludGVycG9sYXRlQ29vbCA9IHN5LCB0LmludGVycG9sYXRlQ3ViZWhlbGl4ID0gWmUsIHQuaW50ZXJwb2xhdGVDdWJlaGVsaXhEZWZhdWx0ID0gY3ksIHQuaW50ZXJwb2xhdGVDdWJlaGVsaXhMb25nID0gUWUsIHQuaW50ZXJwb2xhdGVEYXRlID0gYmUsIHQuaW50ZXJwb2xhdGVEaXNjcmV0ZSA9IGZ1bmN0aW9uICh0KSB7IHZhciBuID0gdC5sZW5ndGg7IHJldHVybiBmdW5jdGlvbiAoZSkgeyByZXR1cm4gdFtNYXRoLm1heCgwLCBNYXRoLm1pbihuIC0gMSwgTWF0aC5mbG9vcihlICogbikpKV0gfSB9LCB0LmludGVycG9sYXRlR25CdSA9IFBnLCB0LmludGVycG9sYXRlR3JlZW5zID0gSmcsIHQuaW50ZXJwb2xhdGVHcmV5cyA9IG55LCB0LmludGVycG9sYXRlSGNsID0gR2UsIHQuaW50ZXJwb2xhdGVIY2xMb25nID0gJGUsIHQuaW50ZXJwb2xhdGVIc2wgPSBqZSwgdC5pbnRlcnBvbGF0ZUhzbExvbmcgPSBYZSwgdC5pbnRlcnBvbGF0ZUh1ZSA9IGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlID0gZmUoK3QsICtuKTsgcmV0dXJuIGZ1bmN0aW9uICh0KSB7IHZhciBuID0gZSh0KTsgcmV0dXJuIG4gLSAzNjAgKiBNYXRoLmZsb29yKG4gLyAzNjApIH0gfSwgdC5pbnRlcnBvbGF0ZUluZmVybm8gPSBfeSwgdC5pbnRlcnBvbGF0ZUxhYiA9IGZ1bmN0aW9uICh0LCBuKSB7IHZhciBlID0gbGUoKHQgPSBPbih0KSkubCwgKG4gPSBPbihuKSkubCksIHIgPSBsZSh0LmEsIG4uYSksIGkgPSBsZSh0LmIsIG4uYiksIG8gPSBsZSh0Lm9wYWNpdHksIG4ub3BhY2l0eSk7IHJldHVybiBmdW5jdGlvbiAobikgeyByZXR1cm4gdC5sID0gZShuKSwgdC5hID0gcihuKSwgdC5iID0gaShuKSwgdC5vcGFjaXR5ID0gbyhuKSwgdCArICIiIH0gfSwgdC5pbnRlcnBvbGF0ZU1hZ21hID0geXksIHQuaW50ZXJwb2xhdGVOdW1iZXIgPSBtZSwgdC5pbnRlcnBvbGF0ZU51bWJlckFycmF5ID0gZ2UsIHQuaW50ZXJwb2xhdGVPYmplY3QgPSB4ZSwgdC5pbnRlcnBvbGF0ZU9yUmQgPSBSZywgdC5pbnRlcnBvbGF0ZU9yYW5nZXMgPSB1eSwgdC5pbnRlcnBvbGF0ZVBSR24gPSBsZywgdC5pbnRlcnBvbGF0ZVBpWUcgPSBkZywgdC5pbnRlcnBvbGF0ZVBsYXNtYSA9IGJ5LCB0LmludGVycG9sYXRlUHVCdSA9IFVnLCB0LmludGVycG9sYXRlUHVCdUduID0gcWcsIHQuaW50ZXJwb2xhdGVQdU9yID0gdmcsIHQuaW50ZXJwb2xhdGVQdVJkID0gQmcsIHQuaW50ZXJwb2xhdGVQdXJwbGVzID0gcnksIHQuaW50ZXJwb2xhdGVSYWluYm93ID0gZnVuY3Rpb24gKHQpIHsgKHQgPCAwIHx8IHQgPiAxKSAmJiAodCAtPSBNYXRoLmZsb29yKHQpKTsgdmFyIG4gPSBNYXRoLmFicyh0IC0gLjUpOyByZXR1cm4gbHkuaCA9IDM2MCAqIHQgLSAxMDAsIGx5LnMgPSAxLjUgLSAxLjUgKiBuLCBseS5sID0gLjggLSAuOSAqIG4sIGx5ICsgIiIgfSwgdC5pbnRlcnBvbGF0ZVJkQnUgPSB5ZywgdC5pbnRlcnBvbGF0ZVJkR3kgPSBiZywgdC5pbnRlcnBvbGF0ZVJkUHUgPSBZZywgdC5pbnRlcnBvbGF0ZVJkWWxCdSA9IHhnLCB0LmludGVycG9sYXRlUmRZbEduID0gTWcsIHQuaW50ZXJwb2xhdGVSZWRzID0gb3ksIHQuaW50ZXJwb2xhdGVSZ2IgPSBoZSwgdC5pbnRlcnBvbGF0ZVJnYkJhc2lzID0gcGUsIHQuaW50ZXJwb2xhdGVSZ2JCYXNpc0Nsb3NlZCA9IHZlLCB0LmludGVycG9sYXRlUm91bmQgPSBBZSwgdC5pbnRlcnBvbGF0ZVNpbmVib3cgPSBmdW5jdGlvbiAodCkgeyB2YXIgbjsgcmV0dXJuIHQgPSAoLjUgLSB0KSAqIE1hdGguUEksIGh5LnIgPSAyNTUgKiAobiA9IE1hdGguc2luKHQpKSAqIG4sIGh5LmcgPSAyNTUgKiAobiA9IE1hdGguc2luKHQgKyBkeSkpICogbiwgaHkuYiA9IDI1NSAqIChuID0gTWF0aC5zaW4odCArIHB5KSkgKiBuLCBoeSArICIiIH0sIHQuaW50ZXJwb2xhdGVTcGVjdHJhbCA9IFRnLCB0LmludGVycG9sYXRlU3RyaW5nID0gTmUsIHQuaW50ZXJwb2xhdGVUcmFuc2Zvcm1Dc3MgPSBxZSwgdC5pbnRlcnBvbGF0ZVRyYW5zZm9ybVN2ZyA9IExlLCB0LmludGVycG9sYXRlVHVyYm8gPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gdCA9IE1hdGgubWF4KDAsIE1hdGgubWluKDEsIHQpKSwgInJnYigiICsgTWF0aC5tYXgoMCwgTWF0aC5taW4oMjU1LCBNYXRoLnJvdW5kKDM0LjYxICsgdCAqICgxMTcyLjMzIC0gdCAqICgxMDc5My41NiAtIHQgKiAoMzMzMDAuMTIgLSB0ICogKDM4Mzk0LjQ5IC0gMTQ4MjUuMDUgKiB0KSkpKSkpKSArICIsICIgKyBNYXRoLm1heCgwLCBNYXRoLm1pbigyNTUsIE1hdGgucm91bmQoMjMuMzEgKyB0ICogKDU1Ny4zMyArIHQgKiAoMTIyNS4zMyAtIHQgKiAoMzU3NC45NiAtIHQgKiAoMTA3My43NyArIDcwNy41NiAqIHQpKSkpKSkpICsgIiwgIiArIE1hdGgubWF4KDAsIE1hdGgubWluKDI1NSwgTWF0aC5yb3VuZCgyNy4yICsgdCAqICgzMjExLjEgLSB0ICogKDE1MzI3Ljk3IC0gdCAqICgyNzgxNCAtIHQgKiAoMjI1NjkuMTggLSA2ODM4LjY2ICogdCkpKSkpKSkgKyAiKSIgfSwgdC5pbnRlcnBvbGF0ZVZpcmlkaXMgPSBneSwgdC5pbnRlcnBvbGF0ZVdhcm0gPSBmeSwgdC5pbnRlcnBvbGF0ZVlsR24gPSBYZywgdC5pbnRlcnBvbGF0ZVlsR25CdSA9IEhnLCB0LmludGVycG9sYXRlWWxPckJyID0gR2csIHQuaW50ZXJwb2xhdGVZbE9yUmQgPSBXZywgdC5pbnRlcnBvbGF0ZVpvb20gPSBJZSwgdC5pbnRlcnJ1cHQgPSBQciwgdC5pbnRlcnZhbCA9IGZ1bmN0aW9uICh0LCBuLCBlKSB7IHZhciByID0gbmV3IGxyLCBpID0gbjsgcmV0dXJuIG51bGwgPT0gbiA/IChyLnJlc3RhcnQodCwgbiwgZSksIHIpIDogKG4gPSArbiwgZSA9IG51bGwgPT0gZSA/IGZyKCkgOiArZSwgci5yZXN0YXJ0KGZ1bmN0aW9uIG8oYSkgeyBhICs9IGksIHIucmVzdGFydChvLCBpICs9IG4sIGUpLCB0KGEpIH0sIG4sIGUpLCByKSB9LCB0Lmlzb0Zvcm1hdCA9IFJ2LCB0Lmlzb1BhcnNlID0gRHYsIHQuanNvbiA9IGZ1bmN0aW9uICh0LCBuKSB7IHJldHVybiBmZXRjaCh0LCBuKS50aGVuKGxhKSB9LCB0LmtleXMgPSBmdW5jdGlvbiAodCkgeyB2YXIgbiA9IFtdOyBmb3IgKHZhciBlIGluIHQpIG4ucHVzaChlKTsgcmV0dXJuIG4gfSwgdC5sYWIgPSBPbiwgdC5sY2ggPSBmdW5jdGlvbiAodCwgbiwgZSwgcikgeyByZXR1cm4gMSA9PT0gYXJndW1lbnRzLmxlbmd0aCA/IGpuKHQpIDogbmV3IFZuKGUsIG4sIHQsIG51bGwgPT0gciA/IDEgOiByKSB9LCB0LmxpbmUgPSBIeSwgdC5saW5lUmFkaWFsID0gUXksIHQubGlua0hvcml6b250YWwgPSBmdW5jdGlvbiAoKSB7IHJldHVybiByXyhpXykgfSwgdC5saW5rUmFkaWFsID0gZnVuY3Rpb24gKCkgeyB2YXIgdCA9IHJfKGFfKTsgcmV0dXJuIHQuYW5nbGUgPSB0LngsIGRlbGV0ZSB0LngsIHQucmFkaXVzID0gdC55LCBkZWxldGUgdC55LCB0IH0sIHQubGlua1ZlcnRpY2FsID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gcl8ob18pIH0sIHQubG9jYWwgPSBxdCwgdC5tYXAgPSBjbywgdC5tYXRjaGVyID0gbnQsIHQubWF4ID0gVCwgdC5tZWFuID0gZnVuY3Rpb24gKHQsIG4pIHsgdmFyIGUsIHIgPSB0Lmxlbmd0aCwgaSA9IHIsIG8gPSAtMSwgYSA9IDA7IGlmIChudWxsID09IG4pIGZvciAoOyArK28gPCByOylpc05hTihlID0gdSh0W29dKSkgPyAtLWkgOiBhICs9IGU7IGVsc2UgZm9yICg7ICsrbyA8IHI7KWlzTmFOKGUgPSB1KG4odFtvXSwgbywgdCkpKSA/IC0taSA6IGEgKz0gZTsgaWYgKGkpIHJldHVybiBhIC8gaSB9LCB0Lm1lZGlhbiA9IGZ1bmN0aW9uICh0LCBlKSB7IHZhciByLCBpID0gdC5sZW5ndGgsIG8gPSAtMSwgYSA9IFtdOyBpZiAobnVsbCA9PSBlKSBmb3IgKDsgKytvIDwgaTspaXNOYU4ociA9IHUodFtvXSkpIHx8IGEucHVzaChyKTsgZWxzZSBmb3IgKDsgKytvIDwgaTspaXNOYU4ociA9IHUoZSh0W29dLCBvLCB0KSkpIHx8IGEucHVzaChyKTsgcmV0dXJuIE4oYS5zb3J0KG4pLCAuNSkgfSwgdC5tZXJnZSA9IEEsIHQubWluID0gUywgdC5tb3VzZSA9IEJ0LCB0Lm5hbWVzcGFjZSA9IFcsIHQubmFtZXNwYWNlcyA9ICQsIHQubmVzdCA9IGZ1bmN0aW9uICgpIHsgdmFyIHQsIG4sIGUsIHIgPSBbXSwgaSA9IFtdOyBmdW5jdGlvbiBvKGUsIGksIGEsIHUpIHsgaWYgKGkgPj0gci5sZW5ndGgpIHJldHVybiBudWxsICE9IHQgJiYgZS5zb3J0KHQpLCBudWxsICE9IG4gPyBuKGUpIDogZTsgZm9yICh2YXIgYywgZiwgcywgbCA9IC0xLCBoID0gZS5sZW5ndGgsIGQgPSByW2krK10sIHAgPSBjbygpLCB2ID0gYSgpOyArK2wgPCBoOykocyA9IHAuZ2V0KGMgPSBkKGYgPSBlW2xdKSArICIiKSkgPyBzLnB1c2goZikgOiBwLnNldChjLCBbZl0pOyByZXR1cm4gcC5lYWNoKGZ1bmN0aW9uICh0LCBuKSB7IHUodiwgbiwgbyh0LCBpLCBhLCB1KSkgfSksIHYgfSByZXR1cm4gZSA9IHsgb2JqZWN0OiBmdW5jdGlvbiAodCkgeyByZXR1cm4gbyh0LCAwLCBmbywgc28pIH0sIG1hcDogZnVuY3Rpb24gKHQpIHsgcmV0dXJuIG8odCwgMCwgbG8sIGhvKSB9LCBlbnRyaWVzOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gZnVuY3Rpb24gdChlLCBvKSB7IGlmICgrK28gPiByLmxlbmd0aCkgcmV0dXJuIGU7IHZhciBhLCB1ID0gaVtvIC0gMV07IHJldHVybiBudWxsICE9IG4gJiYgbyA+PSByLmxlbmd0aCA/IGEgPSBlLmVudHJpZXMoKSA6IChhID0gW10sIGUuZWFjaChmdW5jdGlvbiAobiwgZSkgeyBhLnB1c2goeyBrZXk6IGUsIHZhbHVlczogdChuLCBvKSB9KSB9KSksIG51bGwgIT0gdSA/IGEuc29ydChmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gdSh0LmtleSwgbi5rZXkpIH0pIDogYSB9KG8odCwgMCwgbG8sIGhvKSwgMCkgfSwga2V5OiBmdW5jdGlvbiAodCkgeyByZXR1cm4gci5wdXNoKHQpLCBlIH0sIHNvcnRLZXlzOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gaVtyLmxlbmd0aCAtIDFdID0gdCwgZSB9LCBzb3J0VmFsdWVzOiBmdW5jdGlvbiAobikgeyByZXR1cm4gdCA9IG4sIGUgfSwgcm9sbHVwOiBmdW5jdGlvbiAodCkgeyByZXR1cm4gbiA9IHQsIGUgfSB9IH0sIHQubm93ID0gZnIsIHQucGFjayA9IGZ1bmN0aW9uICgpIHsgdmFyIHQgPSBudWxsLCBuID0gMSwgZSA9IDEsIHIgPSBXbDsgZnVuY3Rpb24gaShpKSB7IHJldHVybiBpLnggPSBuIC8gMiwgaS55ID0gZSAvIDIsIHQgPyBpLmVhY2hCZWZvcmUoS2wodCkpLmVhY2hBZnRlcihKbChyLCAuNSkpLmVhY2hCZWZvcmUodGgoMSkpIDogaS5lYWNoQmVmb3JlKEtsKFFsKSkuZWFjaEFmdGVyKEpsKFdsLCAxKSkuZWFjaEFmdGVyKEpsKHIsIGkuciAvIE1hdGgubWluKG4sIGUpKSkuZWFjaEJlZm9yZSh0aChNYXRoLm1pbihuLCBlKSAvICgyICogaS5yKSkpLCBpIH0gcmV0dXJuIGkucmFkaXVzID0gZnVuY3Rpb24gKG4pIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodCA9IEdsKG4pLCBpKSA6IHQgfSwgaS5zaXplID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobiA9ICt0WzBdLCBlID0gK3RbMV0sIGkpIDogW24sIGVdIH0sIGkucGFkZGluZyA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHIgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IFpsKCt0KSwgaSkgOiByIH0sIGkgfSwgdC5wYWNrRW5jbG9zZSA9IERsLCB0LnBhY2tTaWJsaW5ncyA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBWbCh0KSwgdCB9LCB0LnBhaXJzID0gZnVuY3Rpb24gKHQsIG4pIHsgbnVsbCA9PSBuICYmIChuID0gYSk7IGZvciAodmFyIGUgPSAwLCByID0gdC5sZW5ndGggLSAxLCBpID0gdFswXSwgbyA9IG5ldyBBcnJheShyIDwgMCA/IDAgOiByKTsgZSA8IHI7KW9bZV0gPSBuKGksIGkgPSB0WysrZV0pOyByZXR1cm4gbyB9LCB0LnBhcnRpdGlvbiA9IGZ1bmN0aW9uICgpIHsgdmFyIHQgPSAxLCBuID0gMSwgZSA9IDAsIHIgPSAhMTsgZnVuY3Rpb24gaShpKSB7IHZhciBvID0gaS5oZWlnaHQgKyAxOyByZXR1cm4gaS54MCA9IGkueTAgPSBlLCBpLngxID0gdCwgaS55MSA9IG4gLyBvLCBpLmVhY2hCZWZvcmUoZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIGZ1bmN0aW9uIChyKSB7IHIuY2hpbGRyZW4gJiYgZWgociwgci54MCwgdCAqIChyLmRlcHRoICsgMSkgLyBuLCByLngxLCB0ICogKHIuZGVwdGggKyAyKSAvIG4pOyB2YXIgaSA9IHIueDAsIG8gPSByLnkwLCBhID0gci54MSAtIGUsIHUgPSByLnkxIC0gZTsgYSA8IGkgJiYgKGkgPSBhID0gKGkgKyBhKSAvIDIpLCB1IDwgbyAmJiAobyA9IHUgPSAobyArIHUpIC8gMiksIHIueDAgPSBpLCByLnkwID0gbywgci54MSA9IGEsIHIueTEgPSB1IH0gfShuLCBvKSksIHIgJiYgaS5lYWNoQmVmb3JlKG5oKSwgaSB9IHJldHVybiBpLnJvdW5kID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAociA9ICEhdCwgaSkgOiByIH0sIGkuc2l6ZSA9IGZ1bmN0aW9uIChlKSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHQgPSArZVswXSwgbiA9ICtlWzFdLCBpKSA6IFt0LCBuXSB9LCBpLnBhZGRpbmcgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChlID0gK3QsIGkpIDogZSB9LCBpIH0sIHQucGF0aCA9IG5vLCB0LnBlcm11dGUgPSBmdW5jdGlvbiAodCwgbikgeyBmb3IgKHZhciBlID0gbi5sZW5ndGgsIHIgPSBuZXcgQXJyYXkoZSk7IGUtLTspcltlXSA9IHRbbltlXV07IHJldHVybiByIH0sIHQucGllID0gZnVuY3Rpb24gKCkgeyB2YXIgdCA9IFZ5LCBuID0gWHksIGUgPSBudWxsLCByID0gbXkoMCksIGkgPSBteShQeSksIG8gPSBteSgwKTsgZnVuY3Rpb24gYShhKSB7IHZhciB1LCBjLCBmLCBzLCBsLCBoID0gYS5sZW5ndGgsIGQgPSAwLCBwID0gbmV3IEFycmF5KGgpLCB2ID0gbmV3IEFycmF5KGgpLCBnID0gK3IuYXBwbHkodGhpcywgYXJndW1lbnRzKSwgeSA9IE1hdGgubWluKFB5LCBNYXRoLm1heCgtUHksIGkuYXBwbHkodGhpcywgYXJndW1lbnRzKSAtIGcpKSwgXyA9IE1hdGgubWluKE1hdGguYWJzKHkpIC8gaCwgby5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSwgYiA9IF8gKiAoeSA8IDAgPyAtMSA6IDEpOyBmb3IgKHUgPSAwOyB1IDwgaDsgKyt1KShsID0gdltwW3VdID0gdV0gPSArdChhW3VdLCB1LCBhKSkgPiAwICYmIChkICs9IGwpOyBmb3IgKG51bGwgIT0gbiA/IHAuc29ydChmdW5jdGlvbiAodCwgZSkgeyByZXR1cm4gbih2W3RdLCB2W2VdKSB9KSA6IG51bGwgIT0gZSAmJiBwLnNvcnQoZnVuY3Rpb24gKHQsIG4pIHsgcmV0dXJuIGUoYVt0XSwgYVtuXSkgfSksIHUgPSAwLCBmID0gZCA/ICh5IC0gaCAqIGIpIC8gZCA6IDA7IHUgPCBoOyArK3UsIGcgPSBzKWMgPSBwW3VdLCBzID0gZyArICgobCA9IHZbY10pID4gMCA/IGwgKiBmIDogMCkgKyBiLCB2W2NdID0geyBkYXRhOiBhW2NdLCBpbmRleDogdSwgdmFsdWU6IGwsIHN0YXJ0QW5nbGU6IGcsIGVuZEFuZ2xlOiBzLCBwYWRBbmdsZTogXyB9OyByZXR1cm4gdiB9IHJldHVybiBhLnZhbHVlID0gZnVuY3Rpb24gKG4pIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodCA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIG4gPyBuIDogbXkoK24pLCBhKSA6IHQgfSwgYS5zb3J0VmFsdWVzID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobiA9IHQsIGUgPSBudWxsLCBhKSA6IG4gfSwgYS5zb3J0ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZSA9IHQsIG4gPSBudWxsLCBhKSA6IGUgfSwgYS5zdGFydEFuZ2xlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAociA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogbXkoK3QpLCBhKSA6IHIgfSwgYS5lbmRBbmdsZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGkgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IG15KCt0KSwgYSkgOiBpIH0sIGEucGFkQW5nbGUgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChvID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBteSgrdCksIGEpIDogbyB9LCBhIH0sIHQucGllY2V3aXNlID0gZnVuY3Rpb24gKHQsIG4pIHsgZm9yICh2YXIgZSA9IDAsIHIgPSBuLmxlbmd0aCAtIDEsIGkgPSBuWzBdLCBvID0gbmV3IEFycmF5KHIgPCAwID8gMCA6IHIpOyBlIDwgcjspb1tlXSA9IHQoaSwgaSA9IG5bKytlXSk7IHJldHVybiBmdW5jdGlvbiAodCkgeyB2YXIgbiA9IE1hdGgubWF4KDAsIE1hdGgubWluKHIgLSAxLCBNYXRoLmZsb29yKHQgKj0gcikpKTsgcmV0dXJuIG9bbl0odCAtIG4pIH0gfSwgdC5wb2ludFJhZGlhbCA9IEp5LCB0LnBvbHlnb25BcmVhID0gZnVuY3Rpb24gKHQpIHsgZm9yICh2YXIgbiwgZSA9IC0xLCByID0gdC5sZW5ndGgsIGkgPSB0W3IgLSAxXSwgbyA9IDA7ICsrZSA8IHI7KW4gPSBpLCBpID0gdFtlXSwgbyArPSBuWzFdICogaVswXSAtIG5bMF0gKiBpWzFdOyByZXR1cm4gbyAvIDIgfSwgdC5wb2x5Z29uQ2VudHJvaWQgPSBmdW5jdGlvbiAodCkgeyBmb3IgKHZhciBuLCBlLCByID0gLTEsIGkgPSB0Lmxlbmd0aCwgbyA9IDAsIGEgPSAwLCB1ID0gdFtpIC0gMV0sIGMgPSAwOyArK3IgPCBpOyluID0gdSwgdSA9IHRbcl0sIGMgKz0gZSA9IG5bMF0gKiB1WzFdIC0gdVswXSAqIG5bMV0sIG8gKz0gKG5bMF0gKyB1WzBdKSAqIGUsIGEgKz0gKG5bMV0gKyB1WzFdKSAqIGU7IHJldHVybiBbbyAvIChjICo9IDMpLCBhIC8gY10gfSwgdC5wb2x5Z29uQ29udGFpbnMgPSBmdW5jdGlvbiAodCwgbikgeyBmb3IgKHZhciBlLCByLCBpID0gdC5sZW5ndGgsIG8gPSB0W2kgLSAxXSwgYSA9IG5bMF0sIHUgPSBuWzFdLCBjID0gb1swXSwgZiA9IG9bMV0sIHMgPSAhMSwgbCA9IDA7IGwgPCBpOyArK2wpZSA9IChvID0gdFtsXSlbMF0sIChyID0gb1sxXSkgPiB1ICE9IGYgPiB1ICYmIGEgPCAoYyAtIGUpICogKHUgLSByKSAvIChmIC0gcikgKyBlICYmIChzID0gIXMpLCBjID0gZSwgZiA9IHI7IHJldHVybiBzIH0sIHQucG9seWdvbkh1bGwgPSBmdW5jdGlvbiAodCkgeyBpZiAoKGUgPSB0Lmxlbmd0aCkgPCAzKSByZXR1cm4gbnVsbDsgdmFyIG4sIGUsIHIgPSBuZXcgQXJyYXkoZSksIGkgPSBuZXcgQXJyYXkoZSk7IGZvciAobiA9IDA7IG4gPCBlOyArK24pcltuXSA9IFsrdFtuXVswXSwgK3Rbbl1bMV0sIG5dOyBmb3IgKHIuc29ydChtaCksIG4gPSAwOyBuIDwgZTsgKytuKWlbbl0gPSBbcltuXVswXSwgLXJbbl1bMV1dOyB2YXIgbyA9IHhoKHIpLCBhID0geGgoaSksIHUgPSBhWzBdID09PSBvWzBdLCBjID0gYVthLmxlbmd0aCAtIDFdID09PSBvW28ubGVuZ3RoIC0gMV0sIGYgPSBbXTsgZm9yIChuID0gby5sZW5ndGggLSAxOyBuID49IDA7IC0tbilmLnB1c2godFtyW29bbl1dWzJdXSk7IGZvciAobiA9ICt1OyBuIDwgYS5sZW5ndGggLSBjOyArK24pZi5wdXNoKHRbclthW25dXVsyXV0pOyByZXR1cm4gZiB9LCB0LnBvbHlnb25MZW5ndGggPSBmdW5jdGlvbiAodCkgeyBmb3IgKHZhciBuLCBlLCByID0gLTEsIGkgPSB0Lmxlbmd0aCwgbyA9IHRbaSAtIDFdLCBhID0gb1swXSwgdSA9IG9bMV0sIGMgPSAwOyArK3IgPCBpOyluID0gYSwgZSA9IHUsIG4gLT0gYSA9IChvID0gdFtyXSlbMF0sIGUgLT0gdSA9IG9bMV0sIGMgKz0gTWF0aC5zcXJ0KG4gKiBuICsgZSAqIGUpOyByZXR1cm4gYyB9LCB0LnByZWNpc2lvbkZpeGVkID0gJGEsIHQucHJlY2lzaW9uUHJlZml4ID0gV2EsIHQucHJlY2lzaW9uUm91bmQgPSBaYSwgdC5xdWFkdHJlZSA9IHdhLCB0LnF1YW50aWxlID0gTiwgdC5xdWFudGl6ZSA9IGZ1bmN0aW9uICh0LCBuKSB7IGZvciAodmFyIGUgPSBuZXcgQXJyYXkobiksIHIgPSAwOyByIDwgbjsgKytyKWVbcl0gPSB0KHIgLyAobiAtIDEpKTsgcmV0dXJuIGUgfSwgdC5yYWRpYWxBcmVhID0gS3ksIHQucmFkaWFsTGluZSA9IFF5LCB0LnJhbmRvbUJhdGVzID0gU2gsIHQucmFuZG9tRXhwb25lbnRpYWwgPSBraCwgdC5yYW5kb21JcndpbkhhbGwgPSBBaCwgdC5yYW5kb21Mb2dOb3JtYWwgPSBUaCwgdC5yYW5kb21Ob3JtYWwgPSBOaCwgdC5yYW5kb21Vbmlmb3JtID0gTWgsIHQucmFuZ2UgPSBnLCB0LnJnYiA9IF9uLCB0LnJpYmJvbiA9IGZ1bmN0aW9uICgpIHsgdmFyIHQgPSBlbywgbiA9IHJvLCBlID0gaW8sIHIgPSBvbywgaSA9IGFvLCBvID0gbnVsbDsgZnVuY3Rpb24gYSgpIHsgdmFyIGEsIHUgPSBXaS5jYWxsKGFyZ3VtZW50cyksIGMgPSB0LmFwcGx5KHRoaXMsIHUpLCBmID0gbi5hcHBseSh0aGlzLCB1KSwgcyA9ICtlLmFwcGx5KHRoaXMsICh1WzBdID0gYywgdSkpLCBsID0gci5hcHBseSh0aGlzLCB1KSAtIFhpLCBoID0gaS5hcHBseSh0aGlzLCB1KSAtIFhpLCBkID0gcyAqIElpKGwpLCBwID0gcyAqIEhpKGwpLCB2ID0gK2UuYXBwbHkodGhpcywgKHVbMF0gPSBmLCB1KSksIGcgPSByLmFwcGx5KHRoaXMsIHUpIC0gWGksIHkgPSBpLmFwcGx5KHRoaXMsIHUpIC0gWGk7IGlmIChvIHx8IChvID0gYSA9IG5vKCkpLCBvLm1vdmVUbyhkLCBwKSwgby5hcmMoMCwgMCwgcywgbCwgaCksIGwgPT09IGcgJiYgaCA9PT0geSB8fCAoby5xdWFkcmF0aWNDdXJ2ZVRvKDAsIDAsIHYgKiBJaShnKSwgdiAqIEhpKGcpKSwgby5hcmMoMCwgMCwgdiwgZywgeSkpLCBvLnF1YWRyYXRpY0N1cnZlVG8oMCwgMCwgZCwgcCksIG8uY2xvc2VQYXRoKCksIGEpIHJldHVybiBvID0gbnVsbCwgYSArICIiIHx8IG51bGwgfSByZXR1cm4gYS5yYWRpdXMgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChlID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBaaSgrdCksIGEpIDogZSB9LCBhLnN0YXJ0QW5nbGUgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgdCA/IHQgOiBaaSgrdCksIGEpIDogciB9LCBhLmVuZEFuZ2xlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoaSA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogWmkoK3QpLCBhKSA6IGkgfSwgYS5zb3VyY2UgPSBmdW5jdGlvbiAobikgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0ID0gbiwgYSkgOiB0IH0sIGEudGFyZ2V0ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobiA9IHQsIGEpIDogbiB9LCBhLmNvbnRleHQgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChvID0gbnVsbCA9PSB0ID8gbnVsbCA6IHQsIGEpIDogbyB9LCBhIH0sIHQuc2NhbGVCYW5kID0gTGgsIHQuc2NhbGVEaXZlcmdpbmcgPSBmdW5jdGlvbiB0KCkgeyB2YXIgbiA9ICRoKCR2KCkoQmgpKTsgcmV0dXJuIG4uY29weSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFZ2KG4sIHQoKSkgfSwgQ2guYXBwbHkobiwgYXJndW1lbnRzKSB9LCB0LnNjYWxlRGl2ZXJnaW5nTG9nID0gZnVuY3Rpb24gdCgpIHsgdmFyIG4gPSBlZCgkdigpKS5kb21haW4oWy4xLCAxLCAxMF0pOyByZXR1cm4gbi5jb3B5ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gVnYobiwgdCgpKS5iYXNlKG4uYmFzZSgpKSB9LCBDaC5hcHBseShuLCBhcmd1bWVudHMpIH0sIHQuc2NhbGVEaXZlcmdpbmdQb3cgPSBXdiwgdC5zY2FsZURpdmVyZ2luZ1NxcnQgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBXdi5hcHBseShudWxsLCBhcmd1bWVudHMpLmV4cG9uZW50KC41KSB9LCB0LnNjYWxlRGl2ZXJnaW5nU3ltbG9nID0gZnVuY3Rpb24gdCgpIHsgdmFyIG4gPSBvZCgkdigpKTsgcmV0dXJuIG4uY29weSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFZ2KG4sIHQoKSkuY29uc3RhbnQobi5jb25zdGFudCgpKSB9LCBDaC5hcHBseShuLCBhcmd1bWVudHMpIH0sIHQuc2NhbGVJZGVudGl0eSA9IGZ1bmN0aW9uIHQobikgeyB2YXIgZTsgZnVuY3Rpb24gcih0KSB7IHJldHVybiBpc05hTih0ID0gK3QpID8gZSA6IHQgfSByZXR1cm4gci5pbnZlcnQgPSByLCByLmRvbWFpbiA9IHIucmFuZ2UgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChuID0gemguY2FsbCh0LCBVaCksIHIpIDogbi5zbGljZSgpIH0sIHIudW5rbm93biA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGUgPSB0LCByKSA6IGUgfSwgci5jb3B5ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdChuKS51bmtub3duKGUpIH0sIG4gPSBhcmd1bWVudHMubGVuZ3RoID8gemguY2FsbChuLCBVaCkgOiBbMCwgMV0sICRoKHIpIH0sIHQuc2NhbGVJbXBsaWNpdCA9IERoLCB0LnNjYWxlTGluZWFyID0gZnVuY3Rpb24gdCgpIHsgdmFyIG4gPSBWaChCaCwgQmgpOyByZXR1cm4gbi5jb3B5ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gamgobiwgdCgpKSB9LCBFaC5hcHBseShuLCBhcmd1bWVudHMpLCAkaChuKSB9LCB0LnNjYWxlTG9nID0gZnVuY3Rpb24gdCgpIHsgdmFyIG4gPSBlZChYaCgpKS5kb21haW4oWzEsIDEwXSk7IHJldHVybiBuLmNvcHkgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBqaChuLCB0KCkpLmJhc2Uobi5iYXNlKCkpIH0sIEVoLmFwcGx5KG4sIGFyZ3VtZW50cyksIG4gfSwgdC5zY2FsZU9yZGluYWwgPSBxaCwgdC5zY2FsZVBvaW50ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gZnVuY3Rpb24gdChuKSB7IHZhciBlID0gbi5jb3B5OyByZXR1cm4gbi5wYWRkaW5nID0gbi5wYWRkaW5nT3V0ZXIsIGRlbGV0ZSBuLnBhZGRpbmdJbm5lciwgZGVsZXRlIG4ucGFkZGluZ091dGVyLCBuLmNvcHkgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB0KGUoKSkgfSwgbiB9KExoLmFwcGx5KG51bGwsIGFyZ3VtZW50cykucGFkZGluZ0lubmVyKDEpKSB9LCB0LnNjYWxlUG93ID0gc2QsIHQuc2NhbGVRdWFudGlsZSA9IGZ1bmN0aW9uIHQoKSB7IHZhciBlLCByID0gW10sIG8gPSBbXSwgYSA9IFtdOyBmdW5jdGlvbiB1KCkgeyB2YXIgdCA9IDAsIG4gPSBNYXRoLm1heCgxLCBvLmxlbmd0aCk7IGZvciAoYSA9IG5ldyBBcnJheShuIC0gMSk7ICsrdCA8IG47KWFbdCAtIDFdID0gTihyLCB0IC8gbik7IHJldHVybiBjIH0gZnVuY3Rpb24gYyh0KSB7IHJldHVybiBpc05hTih0ID0gK3QpID8gZSA6IG9baShhLCB0KV0gfSByZXR1cm4gYy5pbnZlcnRFeHRlbnQgPSBmdW5jdGlvbiAodCkgeyB2YXIgbiA9IG8uaW5kZXhPZih0KTsgcmV0dXJuIG4gPCAwID8gW05hTiwgTmFOXSA6IFtuID4gMCA/IGFbbiAtIDFdIDogclswXSwgbiA8IGEubGVuZ3RoID8gYVtuXSA6IHJbci5sZW5ndGggLSAxXV0gfSwgYy5kb21haW4gPSBmdW5jdGlvbiAodCkgeyBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiByLnNsaWNlKCk7IHIgPSBbXTsgZm9yICh2YXIgZSwgaSA9IDAsIG8gPSB0Lmxlbmd0aDsgaSA8IG87ICsraSludWxsID09IChlID0gdFtpXSkgfHwgaXNOYU4oZSA9ICtlKSB8fCByLnB1c2goZSk7IHJldHVybiByLnNvcnQobiksIHUoKSB9LCBjLnJhbmdlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobyA9IFJoLmNhbGwodCksIHUoKSkgOiBvLnNsaWNlKCkgfSwgYy51bmtub3duID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZSA9IHQsIGMpIDogZSB9LCBjLnF1YW50aWxlcyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGEuc2xpY2UoKSB9LCBjLmNvcHkgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB0KCkuZG9tYWluKHIpLnJhbmdlKG8pLnVua25vd24oZSkgfSwgRWguYXBwbHkoYywgYXJndW1lbnRzKSB9LCB0LnNjYWxlUXVhbnRpemUgPSBmdW5jdGlvbiB0KCkgeyB2YXIgbiwgZSA9IDAsIHIgPSAxLCBvID0gMSwgYSA9IFsuNV0sIHUgPSBbMCwgMV07IGZ1bmN0aW9uIGModCkgeyByZXR1cm4gdCA8PSB0ID8gdVtpKGEsIHQsIDAsIG8pXSA6IG4gfSBmdW5jdGlvbiBmKCkgeyB2YXIgdCA9IC0xOyBmb3IgKGEgPSBuZXcgQXJyYXkobyk7ICsrdCA8IG87KWFbdF0gPSAoKHQgKyAxKSAqIHIgLSAodCAtIG8pICogZSkgLyAobyArIDEpOyByZXR1cm4gYyB9IHJldHVybiBjLmRvbWFpbiA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGUgPSArdFswXSwgciA9ICt0WzFdLCBmKCkpIDogW2UsIHJdIH0sIGMucmFuZ2UgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChvID0gKHUgPSBSaC5jYWxsKHQpKS5sZW5ndGggLSAxLCBmKCkpIDogdS5zbGljZSgpIH0sIGMuaW52ZXJ0RXh0ZW50ID0gZnVuY3Rpb24gKHQpIHsgdmFyIG4gPSB1LmluZGV4T2YodCk7IHJldHVybiBuIDwgMCA/IFtOYU4sIE5hTl0gOiBuIDwgMSA/IFtlLCBhWzBdXSA6IG4gPj0gbyA/IFthW28gLSAxXSwgcl0gOiBbYVtuIC0gMV0sIGFbbl1dIH0sIGMudW5rbm93biA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG4gPSB0LCBjKSA6IGMgfSwgYy50aHJlc2hvbGRzID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gYS5zbGljZSgpIH0sIGMuY29weSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHQoKS5kb21haW4oW2UsIHJdKS5yYW5nZSh1KS51bmtub3duKG4pIH0sIEVoLmFwcGx5KCRoKGMpLCBhcmd1bWVudHMpIH0sIHQuc2NhbGVTZXF1ZW50aWFsID0gZnVuY3Rpb24gdCgpIHsgdmFyIG4gPSAkaChYdigpKEJoKSk7IHJldHVybiBuLmNvcHkgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBWdihuLCB0KCkpIH0sIENoLmFwcGx5KG4sIGFyZ3VtZW50cykgfSwgdC5zY2FsZVNlcXVlbnRpYWxMb2cgPSBmdW5jdGlvbiB0KCkgeyB2YXIgbiA9IGVkKFh2KCkpLmRvbWFpbihbMSwgMTBdKTsgcmV0dXJuIG4uY29weSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFZ2KG4sIHQoKSkuYmFzZShuLmJhc2UoKSkgfSwgQ2guYXBwbHkobiwgYXJndW1lbnRzKSB9LCB0LnNjYWxlU2VxdWVudGlhbFBvdyA9IEd2LCB0LnNjYWxlU2VxdWVudGlhbFF1YW50aWxlID0gZnVuY3Rpb24gdCgpIHsgdmFyIGUgPSBbXSwgciA9IEJoOyBmdW5jdGlvbiBvKHQpIHsgaWYgKCFpc05hTih0ID0gK3QpKSByZXR1cm4gcigoaShlLCB0KSAtIDEpIC8gKGUubGVuZ3RoIC0gMSkpIH0gcmV0dXJuIG8uZG9tYWluID0gZnVuY3Rpb24gKHQpIHsgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZS5zbGljZSgpOyBlID0gW107IGZvciAodmFyIHIsIGkgPSAwLCBhID0gdC5sZW5ndGg7IGkgPCBhOyArK2kpbnVsbCA9PSAociA9IHRbaV0pIHx8IGlzTmFOKHIgPSArcikgfHwgZS5wdXNoKHIpOyByZXR1cm4gZS5zb3J0KG4pLCBvIH0sIG8uaW50ZXJwb2xhdG9yID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAociA9IHQsIG8pIDogciB9LCBvLmNvcHkgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB0KHIpLmRvbWFpbihlKSB9LCBDaC5hcHBseShvLCBhcmd1bWVudHMpIH0sIHQuc2NhbGVTZXF1ZW50aWFsU3FydCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEd2LmFwcGx5KG51bGwsIGFyZ3VtZW50cykuZXhwb25lbnQoLjUpIH0sIHQuc2NhbGVTZXF1ZW50aWFsU3ltbG9nID0gZnVuY3Rpb24gdCgpIHsgdmFyIG4gPSBvZChYdigpKTsgcmV0dXJuIG4uY29weSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFZ2KG4sIHQoKSkuY29uc3RhbnQobi5jb25zdGFudCgpKSB9LCBDaC5hcHBseShuLCBhcmd1bWVudHMpIH0sIHQuc2NhbGVTcXJ0ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gc2QuYXBwbHkobnVsbCwgYXJndW1lbnRzKS5leHBvbmVudCguNSkgfSwgdC5zY2FsZVN5bWxvZyA9IGZ1bmN0aW9uIHQoKSB7IHZhciBuID0gb2QoWGgoKSk7IHJldHVybiBuLmNvcHkgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBqaChuLCB0KCkpLmNvbnN0YW50KG4uY29uc3RhbnQoKSkgfSwgRWguYXBwbHkobiwgYXJndW1lbnRzKSB9LCB0LnNjYWxlVGhyZXNob2xkID0gZnVuY3Rpb24gdCgpIHsgdmFyIG4sIGUgPSBbLjVdLCByID0gWzAsIDFdLCBvID0gMTsgZnVuY3Rpb24gYSh0KSB7IHJldHVybiB0IDw9IHQgPyByW2koZSwgdCwgMCwgbyldIDogbiB9IHJldHVybiBhLmRvbWFpbiA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGUgPSBSaC5jYWxsKHQpLCBvID0gTWF0aC5taW4oZS5sZW5ndGgsIHIubGVuZ3RoIC0gMSksIGEpIDogZS5zbGljZSgpIH0sIGEucmFuZ2UgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChyID0gUmguY2FsbCh0KSwgbyA9IE1hdGgubWluKGUubGVuZ3RoLCByLmxlbmd0aCAtIDEpLCBhKSA6IHIuc2xpY2UoKSB9LCBhLmludmVydEV4dGVudCA9IGZ1bmN0aW9uICh0KSB7IHZhciBuID0gci5pbmRleE9mKHQpOyByZXR1cm4gW2VbbiAtIDFdLCBlW25dXSB9LCBhLnVua25vd24gPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChuID0gdCwgYSkgOiBuIH0sIGEuY29weSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHQoKS5kb21haW4oZSkucmFuZ2UocikudW5rbm93bihuKSB9LCBFaC5hcHBseShhLCBhcmd1bWVudHMpIH0sIHQuc2NhbGVUaW1lID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gRWguYXBwbHkoanYoSGQsIFlkLCBTZCwgTmQsIHdkLCBtZCwgX2QsIHBkLCB0LnRpbWVGb3JtYXQpLmRvbWFpbihbbmV3IERhdGUoMmUzLCAwLCAxKSwgbmV3IERhdGUoMmUzLCAwLCAyKV0pLCBhcmd1bWVudHMpIH0sIHQuc2NhbGVVdGMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBFaC5hcHBseShqdihwcCwgaHAsIEtkLCBXZCwgR2QsIFhkLCBfZCwgcGQsIHQudXRjRm9ybWF0KS5kb21haW4oW0RhdGUuVVRDKDJlMywgMCwgMSksIERhdGUuVVRDKDJlMywgMCwgMildKSwgYXJndW1lbnRzKSB9LCB0LnNjYW4gPSBmdW5jdGlvbiAodCwgZSkgeyBpZiAociA9IHQubGVuZ3RoKSB7IHZhciByLCBpLCBvID0gMCwgYSA9IDAsIHUgPSB0W2FdOyBmb3IgKG51bGwgPT0gZSAmJiAoZSA9IG4pOyArK28gPCByOykoZShpID0gdFtvXSwgdSkgPCAwIHx8IDAgIT09IGUodSwgdSkpICYmICh1ID0gaSwgYSA9IG8pOyByZXR1cm4gMCA9PT0gZSh1LCB1KSA/IGEgOiB2b2lkIDAgfSB9LCB0LnNjaGVtZUFjY2VudCA9IEt2LCB0LnNjaGVtZUJsdWVzID0gWmcsIHQuc2NoZW1lQnJCRyA9IGNnLCB0LnNjaGVtZUJ1R24gPSBBZywgdC5zY2hlbWVCdVB1ID0ga2csIHQuc2NoZW1lQ2F0ZWdvcnkxMCA9IFF2LCB0LnNjaGVtZURhcmsyID0gSnYsIHQuc2NoZW1lR25CdSA9IENnLCB0LnNjaGVtZUdyZWVucyA9IEtnLCB0LnNjaGVtZUdyZXlzID0gdHksIHQuc2NoZW1lT3JSZCA9IHpnLCB0LnNjaGVtZU9yYW5nZXMgPSBheSwgdC5zY2hlbWVQUkduID0gc2csIHQuc2NoZW1lUGFpcmVkID0gdGcsIHQuc2NoZW1lUGFzdGVsMSA9IG5nLCB0LnNjaGVtZVBhc3RlbDIgPSBlZywgdC5zY2hlbWVQaVlHID0gaGcsIHQuc2NoZW1lUHVCdSA9IExnLCB0LnNjaGVtZVB1QnVHbiA9IERnLCB0LnNjaGVtZVB1T3IgPSBwZywgdC5zY2hlbWVQdVJkID0gT2csIHQuc2NoZW1lUHVycGxlcyA9IGV5LCB0LnNjaGVtZVJkQnUgPSBnZywgdC5zY2hlbWVSZEd5ID0gX2csIHQuc2NoZW1lUmRQdSA9IEZnLCB0LnNjaGVtZVJkWWxCdSA9IG1nLCB0LnNjaGVtZVJkWWxHbiA9IHdnLCB0LnNjaGVtZVJlZHMgPSBpeSwgdC5zY2hlbWVTZXQxID0gcmcsIHQuc2NoZW1lU2V0MiA9IGlnLCB0LnNjaGVtZVNldDMgPSBvZywgdC5zY2hlbWVTcGVjdHJhbCA9IE5nLCB0LnNjaGVtZVRhYmxlYXUxMCA9IGFnLCB0LnNjaGVtZVlsR24gPSBqZywgdC5zY2hlbWVZbEduQnUgPSBJZywgdC5zY2hlbWVZbE9yQnIgPSBWZywgdC5zY2hlbWVZbE9yUmQgPSAkZywgdC5zZWxlY3QgPSBSdCwgdC5zZWxlY3RBbGwgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gInN0cmluZyIgPT0gdHlwZW9mIHQgPyBuZXcgUHQoW2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodCldLCBbZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50XSkgOiBuZXcgUHQoW251bGwgPT0gdCA/IFtdIDogdF0sIEN0KSB9LCB0LnNlbGVjdGlvbiA9IHp0LCB0LnNlbGVjdG9yID0gSywgdC5zZWxlY3RvckFsbCA9IHR0LCB0LnNldCA9IGdvLCB0LnNodWZmbGUgPSBmdW5jdGlvbiAodCwgbiwgZSkgeyBmb3IgKHZhciByLCBpLCBvID0gKG51bGwgPT0gZSA/IHQubGVuZ3RoIDogZSkgLSAobiA9IG51bGwgPT0gbiA/IDAgOiArbik7IG87KWkgPSBNYXRoLnJhbmRvbSgpICogby0tIHwgMCwgciA9IHRbbyArIG5dLCB0W28gKyBuXSA9IHRbaSArIG5dLCB0W2kgKyBuXSA9IHI7IHJldHVybiB0IH0sIHQuc3RhY2sgPSBmdW5jdGlvbiAoKSB7IHZhciB0ID0gbXkoW10pLCBuID0gcmIsIGUgPSBlYiwgciA9IGliOyBmdW5jdGlvbiBpKGkpIHsgdmFyIG8sIGEsIHUgPSB0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksIGMgPSBpLmxlbmd0aCwgZiA9IHUubGVuZ3RoLCBzID0gbmV3IEFycmF5KGYpOyBmb3IgKG8gPSAwOyBvIDwgZjsgKytvKSB7IGZvciAodmFyIGwsIGggPSB1W29dLCBkID0gc1tvXSA9IG5ldyBBcnJheShjKSwgcCA9IDA7IHAgPCBjOyArK3ApZFtwXSA9IGwgPSBbMCwgK3IoaVtwXSwgaCwgcCwgaSldLCBsLmRhdGEgPSBpW3BdOyBkLmtleSA9IGggfSBmb3IgKG8gPSAwLCBhID0gbihzKTsgbyA8IGY7ICsrbylzW2Fbb11dLmluZGV4ID0gbzsgcmV0dXJuIGUocywgYSksIHMgfSByZXR1cm4gaS5rZXlzID0gZnVuY3Rpb24gKG4pIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodCA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIG4gPyBuIDogbXkodF8uY2FsbChuKSksIGkpIDogdCB9LCBpLnZhbHVlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAociA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogbXkoK3QpLCBpKSA6IHIgfSwgaS5vcmRlciA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG4gPSBudWxsID09IHQgPyByYiA6ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogbXkodF8uY2FsbCh0KSksIGkpIDogbiB9LCBpLm9mZnNldCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGUgPSBudWxsID09IHQgPyBlYiA6IHQsIGkpIDogZSB9LCBpIH0sIHQuc3RhY2tPZmZzZXREaXZlcmdpbmcgPSBmdW5jdGlvbiAodCwgbikgeyBpZiAoKHUgPSB0Lmxlbmd0aCkgPiAwKSBmb3IgKHZhciBlLCByLCBpLCBvLCBhLCB1LCBjID0gMCwgZiA9IHRbblswXV0ubGVuZ3RoOyBjIDwgZjsgKytjKWZvciAobyA9IGEgPSAwLCBlID0gMDsgZSA8IHU7ICsrZSkoaSA9IChyID0gdFtuW2VdXVtjXSlbMV0gLSByWzBdKSA+IDAgPyAoclswXSA9IG8sIHJbMV0gPSBvICs9IGkpIDogaSA8IDAgPyAoclsxXSA9IGEsIHJbMF0gPSBhICs9IGkpIDogKHJbMF0gPSAwLCByWzFdID0gaSkgfSwgdC5zdGFja09mZnNldEV4cGFuZCA9IGZ1bmN0aW9uICh0LCBuKSB7IGlmICgociA9IHQubGVuZ3RoKSA+IDApIHsgZm9yICh2YXIgZSwgciwgaSwgbyA9IDAsIGEgPSB0WzBdLmxlbmd0aDsgbyA8IGE7ICsrbykgeyBmb3IgKGkgPSBlID0gMDsgZSA8IHI7ICsrZSlpICs9IHRbZV1bb11bMV0gfHwgMDsgaWYgKGkpIGZvciAoZSA9IDA7IGUgPCByOyArK2UpdFtlXVtvXVsxXSAvPSBpIH0gZWIodCwgbikgfSB9LCB0LnN0YWNrT2Zmc2V0Tm9uZSA9IGViLCB0LnN0YWNrT2Zmc2V0U2lsaG91ZXR0ZSA9IGZ1bmN0aW9uICh0LCBuKSB7IGlmICgoZSA9IHQubGVuZ3RoKSA+IDApIHsgZm9yICh2YXIgZSwgciA9IDAsIGkgPSB0W25bMF1dLCBvID0gaS5sZW5ndGg7IHIgPCBvOyArK3IpIHsgZm9yICh2YXIgYSA9IDAsIHUgPSAwOyBhIDwgZTsgKythKXUgKz0gdFthXVtyXVsxXSB8fCAwOyBpW3JdWzFdICs9IGlbcl1bMF0gPSAtdSAvIDIgfSBlYih0LCBuKSB9IH0sIHQuc3RhY2tPZmZzZXRXaWdnbGUgPSBmdW5jdGlvbiAodCwgbikgeyBpZiAoKGkgPSB0Lmxlbmd0aCkgPiAwICYmIChyID0gKGUgPSB0W25bMF1dKS5sZW5ndGgpID4gMCkgeyBmb3IgKHZhciBlLCByLCBpLCBvID0gMCwgYSA9IDE7IGEgPCByOyArK2EpIHsgZm9yICh2YXIgdSA9IDAsIGMgPSAwLCBmID0gMDsgdSA8IGk7ICsrdSkgeyBmb3IgKHZhciBzID0gdFtuW3VdXSwgbCA9IHNbYV1bMV0gfHwgMCwgaCA9IChsIC0gKHNbYSAtIDFdWzFdIHx8IDApKSAvIDIsIGQgPSAwOyBkIDwgdTsgKytkKSB7IHZhciBwID0gdFtuW2RdXTsgaCArPSAocFthXVsxXSB8fCAwKSAtIChwW2EgLSAxXVsxXSB8fCAwKSB9IGMgKz0gbCwgZiArPSBoICogbCB9IGVbYSAtIDFdWzFdICs9IGVbYSAtIDFdWzBdID0gbywgYyAmJiAobyAtPSBmIC8gYykgfSBlW2EgLSAxXVsxXSArPSBlW2EgLSAxXVswXSA9IG8sIGViKHQsIG4pIH0gfSwgdC5zdGFja09yZGVyQXBwZWFyYW5jZSA9IG9iLCB0LnN0YWNrT3JkZXJBc2NlbmRpbmcgPSB1YiwgdC5zdGFja09yZGVyRGVzY2VuZGluZyA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiB1Yih0KS5yZXZlcnNlKCkgfSwgdC5zdGFja09yZGVySW5zaWRlT3V0ID0gZnVuY3Rpb24gKHQpIHsgdmFyIG4sIGUsIHIgPSB0Lmxlbmd0aCwgaSA9IHQubWFwKGNiKSwgbyA9IG9iKHQpLCBhID0gMCwgdSA9IDAsIGMgPSBbXSwgZiA9IFtdOyBmb3IgKG4gPSAwOyBuIDwgcjsgKytuKWUgPSBvW25dLCBhIDwgdSA/IChhICs9IGlbZV0sIGMucHVzaChlKSkgOiAodSArPSBpW2VdLCBmLnB1c2goZSkpOyByZXR1cm4gZi5yZXZlcnNlKCkuY29uY2F0KGMpIH0sIHQuc3RhY2tPcmRlck5vbmUgPSByYiwgdC5zdGFja09yZGVyUmV2ZXJzZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiByYih0KS5yZXZlcnNlKCkgfSwgdC5zdHJhdGlmeSA9IGZ1bmN0aW9uICgpIHsgdmFyIHQgPSBhaCwgbiA9IHVoOyBmdW5jdGlvbiBlKGUpIHsgdmFyIHIsIGksIG8sIGEsIHUsIGMsIGYsIHMgPSBlLmxlbmd0aCwgbCA9IG5ldyBBcnJheShzKSwgaCA9IHt9OyBmb3IgKGkgPSAwOyBpIDwgczsgKytpKXIgPSBlW2ldLCB1ID0gbFtpXSA9IG5ldyB6bChyKSwgbnVsbCAhPSAoYyA9IHQociwgaSwgZSkpICYmIChjICs9ICIiKSAmJiAoaFtmID0gcmggKyAodS5pZCA9IGMpXSA9IGYgaW4gaCA/IG9oIDogdSk7IGZvciAoaSA9IDA7IGkgPCBzOyArK2kpaWYgKHUgPSBsW2ldLCBudWxsICE9IChjID0gbihlW2ldLCBpLCBlKSkgJiYgKGMgKz0gIiIpKSB7IGlmICghKGEgPSBoW3JoICsgY10pKSB0aHJvdyBuZXcgRXJyb3IoIm1pc3Npbmc6ICIgKyBjKTsgaWYgKGEgPT09IG9oKSB0aHJvdyBuZXcgRXJyb3IoImFtYmlndW91czogIiArIGMpOyBhLmNoaWxkcmVuID8gYS5jaGlsZHJlbi5wdXNoKHUpIDogYS5jaGlsZHJlbiA9IFt1XSwgdS5wYXJlbnQgPSBhIH0gZWxzZSB7IGlmIChvKSB0aHJvdyBuZXcgRXJyb3IoIm11bHRpcGxlIHJvb3RzIik7IG8gPSB1IH0gaWYgKCFvKSB0aHJvdyBuZXcgRXJyb3IoIm5vIHJvb3QiKTsgaWYgKG8ucGFyZW50ID0gaWgsIG8uZWFjaEJlZm9yZShmdW5jdGlvbiAodCkgeyB0LmRlcHRoID0gdC5wYXJlbnQuZGVwdGggKyAxLCAtLXMgfSkuZWFjaEJlZm9yZShQbCksIG8ucGFyZW50ID0gbnVsbCwgcyA+IDApIHRocm93IG5ldyBFcnJvcigiY3ljbGUiKTsgcmV0dXJuIG8gfSByZXR1cm4gZS5pZCA9IGZ1bmN0aW9uIChuKSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHQgPSAkbChuKSwgZSkgOiB0IH0sIGUucGFyZW50SWQgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChuID0gJGwodCksIGUpIDogbiB9LCBlIH0sIHQuc3R5bGUgPSBmdCwgdC5zdW0gPSBmdW5jdGlvbiAodCwgbikgeyB2YXIgZSwgciA9IHQubGVuZ3RoLCBpID0gLTEsIG8gPSAwOyBpZiAobnVsbCA9PSBuKSBmb3IgKDsgKytpIDwgcjspKGUgPSArdFtpXSkgJiYgKG8gKz0gZSk7IGVsc2UgZm9yICg7ICsraSA8IHI7KShlID0gK24odFtpXSwgaSwgdCkpICYmIChvICs9IGUpOyByZXR1cm4gbyB9LCB0LnN2ZyA9IHZhLCB0LnN5bWJvbCA9IGZ1bmN0aW9uICgpIHsgdmFyIHQgPSBteSh1XyksIG4gPSBteSg2NCksIGUgPSBudWxsOyBmdW5jdGlvbiByKCkgeyB2YXIgcjsgaWYgKGUgfHwgKGUgPSByID0gbm8oKSksIHQuYXBwbHkodGhpcywgYXJndW1lbnRzKS5kcmF3KGUsICtuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpLCByKSByZXR1cm4gZSA9IG51bGwsIHIgKyAiIiB8fCBudWxsIH0gcmV0dXJuIHIudHlwZSA9IGZ1bmN0aW9uIChuKSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHQgPSAiZnVuY3Rpb24iID09IHR5cGVvZiBuID8gbiA6IG15KG4pLCByKSA6IHQgfSwgci5zaXplID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobiA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogbXkoK3QpLCByKSA6IG4gfSwgci5jb250ZXh0ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZSA9IG51bGwgPT0gdCA/IG51bGwgOiB0LCByKSA6IGUgfSwgciB9LCB0LnN5bWJvbENpcmNsZSA9IHVfLCB0LnN5bWJvbENyb3NzID0gY18sIHQuc3ltYm9sRGlhbW9uZCA9IGxfLCB0LnN5bWJvbFNxdWFyZSA9IGdfLCB0LnN5bWJvbFN0YXIgPSB2XywgdC5zeW1ib2xUcmlhbmdsZSA9IF9fLCB0LnN5bWJvbFd5ZSA9IHdfLCB0LnN5bWJvbHMgPSBNXywgdC50ZXh0ID0gdWEsIHQudGhyZXNob2xkRnJlZWRtYW5EaWFjb25pcyA9IGZ1bmN0aW9uICh0LCBlLCByKSB7IHJldHVybiB0ID0gZC5jYWxsKHQsIHUpLnNvcnQobiksIE1hdGguY2VpbCgociAtIGUpIC8gKDIgKiAoTih0LCAuNzUpIC0gTih0LCAuMjUpKSAqIE1hdGgucG93KHQubGVuZ3RoLCAtMSAvIDMpKSkgfSwgdC50aHJlc2hvbGRTY290dCA9IGZ1bmN0aW9uICh0LCBuLCBlKSB7IHJldHVybiBNYXRoLmNlaWwoKGUgLSBuKSAvICgzLjUgKiBmKHQpICogTWF0aC5wb3codC5sZW5ndGgsIC0xIC8gMykpKSB9LCB0LnRocmVzaG9sZFN0dXJnZXMgPSBNLCB0LnRpY2tGb3JtYXQgPSBHaCwgdC50aWNrSW5jcmVtZW50ID0geCwgdC50aWNrU3RlcCA9IHcsIHQudGlja3MgPSBtLCB0LnRpbWVEYXkgPSBOZCwgdC50aW1lRGF5cyA9IFRkLCB0LnRpbWVGb3JtYXREZWZhdWx0TG9jYWxlID0genYsIHQudGltZUZvcm1hdExvY2FsZSA9IGJwLCB0LnRpbWVGcmlkYXkgPSB6ZCwgdC50aW1lRnJpZGF5cyA9IEJkLCB0LnRpbWVIb3VyID0gd2QsIHQudGltZUhvdXJzID0gTWQsIHQudGltZUludGVydmFsID0gZGQsIHQudGltZU1pbGxpc2Vjb25kID0gcGQsIHQudGltZU1pbGxpc2Vjb25kcyA9IHZkLCB0LnRpbWVNaW51dGUgPSBtZCwgdC50aW1lTWludXRlcyA9IHhkLCB0LnRpbWVNb25kYXkgPSBrZCwgdC50aW1lTW9uZGF5cyA9IHFkLCB0LnRpbWVNb250aCA9IFlkLCB0LnRpbWVNb250aHMgPSBJZCwgdC50aW1lU2F0dXJkYXkgPSBSZCwgdC50aW1lU2F0dXJkYXlzID0gRmQsIHQudGltZVNlY29uZCA9IF9kLCB0LnRpbWVTZWNvbmRzID0gYmQsIHQudGltZVN1bmRheSA9IFNkLCB0LnRpbWVTdW5kYXlzID0gRGQsIHQudGltZVRodXJzZGF5ID0gUGQsIHQudGltZVRodXJzZGF5cyA9IE9kLCB0LnRpbWVUdWVzZGF5ID0gRWQsIHQudGltZVR1ZXNkYXlzID0gTGQsIHQudGltZVdlZG5lc2RheSA9IENkLCB0LnRpbWVXZWRuZXNkYXlzID0gVWQsIHQudGltZVdlZWsgPSBTZCwgdC50aW1lV2Vla3MgPSBEZCwgdC50aW1lWWVhciA9IEhkLCB0LnRpbWVZZWFycyA9IGpkLCB0LnRpbWVvdXQgPSB5ciwgdC50aW1lciA9IGhyLCB0LnRpbWVyRmx1c2ggPSBkciwgdC50b3VjaCA9IEZ0LCB0LnRvdWNoZXMgPSBmdW5jdGlvbiAodCwgbikgeyBudWxsID09IG4gJiYgKG4gPSBVdCgpLnRvdWNoZXMpOyBmb3IgKHZhciBlID0gMCwgciA9IG4gPyBuLmxlbmd0aCA6IDAsIGkgPSBuZXcgQXJyYXkocik7IGUgPCByOyArK2UpaVtlXSA9IE90KHQsIG5bZV0pOyByZXR1cm4gaSB9LCB0LnRyYW5zaXRpb24gPSBPciwgdC50cmFuc3Bvc2UgPSBrLCB0LnRyZWUgPSBmdW5jdGlvbiAoKSB7IHZhciB0ID0gY2gsIG4gPSAxLCBlID0gMSwgciA9IG51bGw7IGZ1bmN0aW9uIGkoaSkgeyB2YXIgYyA9IGZ1bmN0aW9uICh0KSB7IGZvciAodmFyIG4sIGUsIHIsIGksIG8sIGEgPSBuZXcgZGgodCwgMCksIHUgPSBbYV07IG4gPSB1LnBvcCgpOylpZiAociA9IG4uXy5jaGlsZHJlbikgZm9yIChuLmNoaWxkcmVuID0gbmV3IEFycmF5KG8gPSByLmxlbmd0aCksIGkgPSBvIC0gMTsgaSA+PSAwOyAtLWkpdS5wdXNoKGUgPSBuLmNoaWxkcmVuW2ldID0gbmV3IGRoKHJbaV0sIGkpKSwgZS5wYXJlbnQgPSBuOyByZXR1cm4gKGEucGFyZW50ID0gbmV3IGRoKG51bGwsIDApKS5jaGlsZHJlbiA9IFthXSwgYSB9KGkpOyBpZiAoYy5lYWNoQWZ0ZXIobyksIGMucGFyZW50Lm0gPSAtYy56LCBjLmVhY2hCZWZvcmUoYSksIHIpIGkuZWFjaEJlZm9yZSh1KTsgZWxzZSB7IHZhciBmID0gaSwgcyA9IGksIGwgPSBpOyBpLmVhY2hCZWZvcmUoZnVuY3Rpb24gKHQpIHsgdC54IDwgZi54ICYmIChmID0gdCksIHQueCA+IHMueCAmJiAocyA9IHQpLCB0LmRlcHRoID4gbC5kZXB0aCAmJiAobCA9IHQpIH0pOyB2YXIgaCA9IGYgPT09IHMgPyAxIDogdChmLCBzKSAvIDIsIGQgPSBoIC0gZi54LCBwID0gbiAvIChzLnggKyBoICsgZCksIHYgPSBlIC8gKGwuZGVwdGggfHwgMSk7IGkuZWFjaEJlZm9yZShmdW5jdGlvbiAodCkgeyB0LnggPSAodC54ICsgZCkgKiBwLCB0LnkgPSB0LmRlcHRoICogdiB9KSB9IHJldHVybiBpIH0gZnVuY3Rpb24gbyhuKSB7IHZhciBlID0gbi5jaGlsZHJlbiwgciA9IG4ucGFyZW50LmNoaWxkcmVuLCBpID0gbi5pID8gcltuLmkgLSAxXSA6IG51bGw7IGlmIChlKSB7ICFmdW5jdGlvbiAodCkgeyBmb3IgKHZhciBuLCBlID0gMCwgciA9IDAsIGkgPSB0LmNoaWxkcmVuLCBvID0gaS5sZW5ndGg7IC0tbyA+PSAwOykobiA9IGlbb10pLnogKz0gZSwgbi5tICs9IGUsIGUgKz0gbi5zICsgKHIgKz0gbi5jKSB9KG4pOyB2YXIgbyA9IChlWzBdLnogKyBlW2UubGVuZ3RoIC0gMV0ueikgLyAyOyBpID8gKG4ueiA9IGkueiArIHQobi5fLCBpLl8pLCBuLm0gPSBuLnogLSBvKSA6IG4ueiA9IG8gfSBlbHNlIGkgJiYgKG4ueiA9IGkueiArIHQobi5fLCBpLl8pKTsgbi5wYXJlbnQuQSA9IGZ1bmN0aW9uIChuLCBlLCByKSB7IGlmIChlKSB7IGZvciAodmFyIGksIG8gPSBuLCBhID0gbiwgdSA9IGUsIGMgPSBvLnBhcmVudC5jaGlsZHJlblswXSwgZiA9IG8ubSwgcyA9IGEubSwgbCA9IHUubSwgaCA9IGMubTsgdSA9IHNoKHUpLCBvID0gZmgobyksIHUgJiYgbzspYyA9IGZoKGMpLCAoYSA9IHNoKGEpKS5hID0gbiwgKGkgPSB1LnogKyBsIC0gby56IC0gZiArIHQodS5fLCBvLl8pKSA+IDAgJiYgKGxoKGhoKHUsIG4sIHIpLCBuLCBpKSwgZiArPSBpLCBzICs9IGkpLCBsICs9IHUubSwgZiArPSBvLm0sIGggKz0gYy5tLCBzICs9IGEubTsgdSAmJiAhc2goYSkgJiYgKGEudCA9IHUsIGEubSArPSBsIC0gcyksIG8gJiYgIWZoKGMpICYmIChjLnQgPSBvLCBjLm0gKz0gZiAtIGgsIHIgPSBuKSB9IHJldHVybiByIH0obiwgaSwgbi5wYXJlbnQuQSB8fCByWzBdKSB9IGZ1bmN0aW9uIGEodCkgeyB0Ll8ueCA9IHQueiArIHQucGFyZW50Lm0sIHQubSArPSB0LnBhcmVudC5tIH0gZnVuY3Rpb24gdSh0KSB7IHQueCAqPSBuLCB0LnkgPSB0LmRlcHRoICogZSB9IHJldHVybiBpLnNlcGFyYXRpb24gPSBmdW5jdGlvbiAobikgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh0ID0gbiwgaSkgOiB0IH0sIGkuc2l6ZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHIgPSAhMSwgbiA9ICt0WzBdLCBlID0gK3RbMV0sIGkpIDogciA/IG51bGwgOiBbbiwgZV0gfSwgaS5ub2RlU2l6ZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHIgPSAhMCwgbiA9ICt0WzBdLCBlID0gK3RbMV0sIGkpIDogciA/IFtuLCBlXSA6IG51bGwgfSwgaSB9LCB0LnRyZWVtYXAgPSBmdW5jdGlvbiAoKSB7IHZhciB0ID0geWgsIG4gPSAhMSwgZSA9IDEsIHIgPSAxLCBpID0gWzBdLCBvID0gV2wsIGEgPSBXbCwgdSA9IFdsLCBjID0gV2wsIGYgPSBXbDsgZnVuY3Rpb24gcyh0KSB7IHJldHVybiB0LngwID0gdC55MCA9IDAsIHQueDEgPSBlLCB0LnkxID0gciwgdC5lYWNoQmVmb3JlKGwpLCBpID0gWzBdLCBuICYmIHQuZWFjaEJlZm9yZShuaCksIHQgfSBmdW5jdGlvbiBsKG4pIHsgdmFyIGUgPSBpW24uZGVwdGhdLCByID0gbi54MCArIGUsIHMgPSBuLnkwICsgZSwgbCA9IG4ueDEgLSBlLCBoID0gbi55MSAtIGU7IGwgPCByICYmIChyID0gbCA9IChyICsgbCkgLyAyKSwgaCA8IHMgJiYgKHMgPSBoID0gKHMgKyBoKSAvIDIpLCBuLngwID0gciwgbi55MCA9IHMsIG4ueDEgPSBsLCBuLnkxID0gaCwgbi5jaGlsZHJlbiAmJiAoZSA9IGlbbi5kZXB0aCArIDFdID0gbyhuKSAvIDIsIHIgKz0gZihuKSAtIGUsIHMgKz0gYShuKSAtIGUsIChsIC09IHUobikgLSBlKSA8IHIgJiYgKHIgPSBsID0gKHIgKyBsKSAvIDIpLCAoaCAtPSBjKG4pIC0gZSkgPCBzICYmIChzID0gaCA9IChzICsgaCkgLyAyKSwgdChuLCByLCBzLCBsLCBoKSkgfSByZXR1cm4gcy5yb3VuZCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKG4gPSAhIXQsIHMpIDogbiB9LCBzLnNpemUgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChlID0gK3RbMF0sIHIgPSArdFsxXSwgcykgOiBbZSwgcl0gfSwgcy50aWxlID0gZnVuY3Rpb24gKG4pIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodCA9ICRsKG4pLCBzKSA6IHQgfSwgcy5wYWRkaW5nID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyBzLnBhZGRpbmdJbm5lcih0KS5wYWRkaW5nT3V0ZXIodCkgOiBzLnBhZGRpbmdJbm5lcigpIH0sIHMucGFkZGluZ0lubmVyID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobyA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogWmwoK3QpLCBzKSA6IG8gfSwgcy5wYWRkaW5nT3V0ZXIgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IHMucGFkZGluZ1RvcCh0KS5wYWRkaW5nUmlnaHQodCkucGFkZGluZ0JvdHRvbSh0KS5wYWRkaW5nTGVmdCh0KSA6IHMucGFkZGluZ1RvcCgpIH0sIHMucGFkZGluZ1RvcCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGEgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IFpsKCt0KSwgcykgOiBhIH0sIHMucGFkZGluZ1JpZ2h0ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodSA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogWmwoK3QpLCBzKSA6IHUgfSwgcy5wYWRkaW5nQm90dG9tID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoYyA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogWmwoK3QpLCBzKSA6IGMgfSwgcy5wYWRkaW5nTGVmdCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGYgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IFpsKCt0KSwgcykgOiBmIH0sIHMgfSwgdC50cmVlbWFwQmluYXJ5ID0gZnVuY3Rpb24gKHQsIG4sIGUsIHIsIGkpIHsgdmFyIG8sIGEsIHUgPSB0LmNoaWxkcmVuLCBjID0gdS5sZW5ndGgsIGYgPSBuZXcgQXJyYXkoYyArIDEpOyBmb3IgKGZbMF0gPSBhID0gbyA9IDA7IG8gPCBjOyArK28pZltvICsgMV0gPSBhICs9IHVbb10udmFsdWU7ICFmdW5jdGlvbiB0KG4sIGUsIHIsIGksIG8sIGEsIGMpIHsgaWYgKG4gPj0gZSAtIDEpIHsgdmFyIHMgPSB1W25dOyByZXR1cm4gcy54MCA9IGksIHMueTAgPSBvLCBzLngxID0gYSwgdm9pZCAocy55MSA9IGMpIH0gZm9yICh2YXIgbCA9IGZbbl0sIGggPSByIC8gMiArIGwsIGQgPSBuICsgMSwgcCA9IGUgLSAxOyBkIDwgcDspIHsgdmFyIHYgPSBkICsgcCA+Pj4gMTsgZlt2XSA8IGggPyBkID0gdiArIDEgOiBwID0gdiB9IGggLSBmW2QgLSAxXSA8IGZbZF0gLSBoICYmIG4gKyAxIDwgZCAmJiAtLWQ7IHZhciBnID0gZltkXSAtIGwsIHkgPSByIC0gZzsgaWYgKGEgLSBpID4gYyAtIG8pIHsgdmFyIF8gPSAoaSAqIHkgKyBhICogZykgLyByOyB0KG4sIGQsIGcsIGksIG8sIF8sIGMpLCB0KGQsIGUsIHksIF8sIG8sIGEsIGMpIH0gZWxzZSB7IHZhciBiID0gKG8gKiB5ICsgYyAqIGcpIC8gcjsgdChuLCBkLCBnLCBpLCBvLCBhLCBiKSwgdChkLCBlLCB5LCBpLCBiLCBhLCBjKSB9IH0oMCwgYywgdC52YWx1ZSwgbiwgZSwgciwgaSkgfSwgdC50cmVlbWFwRGljZSA9IGVoLCB0LnRyZWVtYXBSZXNxdWFyaWZ5ID0gX2gsIHQudHJlZW1hcFNsaWNlID0gcGgsIHQudHJlZW1hcFNsaWNlRGljZSA9IGZ1bmN0aW9uICh0LCBuLCBlLCByLCBpKSB7ICgxICYgdC5kZXB0aCA/IHBoIDogZWgpKHQsIG4sIGUsIHIsIGkpIH0sIHQudHJlZW1hcFNxdWFyaWZ5ID0geWgsIHQudHN2ID0gc2EsIHQudHN2Rm9ybWF0ID0gS28sIHQudHN2Rm9ybWF0Qm9keSA9IEpvLCB0LnRzdkZvcm1hdFJvdyA9IG5hLCB0LnRzdkZvcm1hdFJvd3MgPSB0YSwgdC50c3ZGb3JtYXRWYWx1ZSA9IGVhLCB0LnRzdlBhcnNlID0gWm8sIHQudHN2UGFyc2VSb3dzID0gUW8sIHQudXRjRGF5ID0gV2QsIHQudXRjRGF5cyA9IFpkLCB0LnV0Y0ZyaWRheSA9IHJwLCB0LnV0Y0ZyaWRheXMgPSBzcCwgdC51dGNIb3VyID0gR2QsIHQudXRjSG91cnMgPSAkZCwgdC51dGNNaWxsaXNlY29uZCA9IHBkLCB0LnV0Y01pbGxpc2Vjb25kcyA9IHZkLCB0LnV0Y01pbnV0ZSA9IFhkLCB0LnV0Y01pbnV0ZXMgPSBWZCwgdC51dGNNb25kYXkgPSBKZCwgdC51dGNNb25kYXlzID0gYXAsIHQudXRjTW9udGggPSBocCwgdC51dGNNb250aHMgPSBkcCwgdC51dGNTYXR1cmRheSA9IGlwLCB0LnV0Y1NhdHVyZGF5cyA9IGxwLCB0LnV0Y1NlY29uZCA9IF9kLCB0LnV0Y1NlY29uZHMgPSBiZCwgdC51dGNTdW5kYXkgPSBLZCwgdC51dGNTdW5kYXlzID0gb3AsIHQudXRjVGh1cnNkYXkgPSBlcCwgdC51dGNUaHVyc2RheXMgPSBmcCwgdC51dGNUdWVzZGF5ID0gdHAsIHQudXRjVHVlc2RheXMgPSB1cCwgdC51dGNXZWRuZXNkYXkgPSBucCwgdC51dGNXZWRuZXNkYXlzID0gY3AsIHQudXRjV2VlayA9IEtkLCB0LnV0Y1dlZWtzID0gb3AsIHQudXRjWWVhciA9IHBwLCB0LnV0Y1llYXJzID0gdnAsIHQudmFsdWVzID0gZnVuY3Rpb24gKHQpIHsgdmFyIG4gPSBbXTsgZm9yICh2YXIgZSBpbiB0KSBuLnB1c2godFtlXSk7IHJldHVybiBuIH0sIHQudmFyaWFuY2UgPSBjLCB0LnZlcnNpb24gPSAiNS4xNi4wIiwgdC52b3Jvbm9pID0gZnVuY3Rpb24gKCkgeyB2YXIgdCA9IHNiLCBuID0gbGIsIGUgPSBudWxsOyBmdW5jdGlvbiByKHIpIHsgcmV0dXJuIG5ldyBWYihyLm1hcChmdW5jdGlvbiAoZSwgaSkgeyB2YXIgbyA9IFtNYXRoLnJvdW5kKHQoZSwgaSwgcikgLyBJYikgKiBJYiwgTWF0aC5yb3VuZChuKGUsIGksIHIpIC8gSWIpICogSWJdOyByZXR1cm4gby5pbmRleCA9IGksIG8uZGF0YSA9IGUsIG8gfSksIGUpIH0gcmV0dXJuIHIucG9seWdvbnMgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gcih0KS5wb2x5Z29ucygpIH0sIHIubGlua3MgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gcih0KS5saW5rcygpIH0sIHIudHJpYW5nbGVzID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHIodCkudHJpYW5nbGVzKCkgfSwgci54ID0gZnVuY3Rpb24gKG4pIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodCA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIG4gPyBuIDogZmIoK24pLCByKSA6IHQgfSwgci55ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobiA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogZmIoK3QpLCByKSA6IG4gfSwgci5leHRlbnQgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChlID0gbnVsbCA9PSB0ID8gbnVsbCA6IFtbK3RbMF1bMF0sICt0WzBdWzFdXSwgWyt0WzFdWzBdLCArdFsxXVsxXV1dLCByKSA6IGUgJiYgW1tlWzBdWzBdLCBlWzBdWzFdXSwgW2VbMV1bMF0sIGVbMV1bMV1dXSB9LCByLnNpemUgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IChlID0gbnVsbCA9PSB0ID8gbnVsbCA6IFtbMCwgMF0sIFsrdFswXSwgK3RbMV1dXSwgcikgOiBlICYmIFtlWzFdWzBdIC0gZVswXVswXSwgZVsxXVsxXSAtIGVbMF1bMV1dIH0sIHIgfSwgdC53aW5kb3cgPSBjdCwgdC54bWwgPSBkYSwgdC56aXAgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBrKGFyZ3VtZW50cykgfSwgdC56b29tID0gZnVuY3Rpb24gKCkgeyB2YXIgbiwgZSwgciA9IHRtLCBpID0gbm0sIG8gPSBvbSwgYSA9IHJtLCB1ID0gaW0sIGMgPSBbMCwgMSAvIDBdLCBmID0gW1stMSAvIDAsIC0xIC8gMF0sIFsxIC8gMCwgMSAvIDBdXSwgcyA9IDI1MCwgbCA9IEllLCBoID0gSSgic3RhcnQiLCAiem9vbSIsICJlbmQiKSwgZCA9IDUwMCwgcCA9IDE1MCwgdiA9IDA7IGZ1bmN0aW9uIGcodCkgeyB0LnByb3BlcnR5KCJfX3pvb20iLCBlbSkub24oIndoZWVsLnpvb20iLCBNKS5vbigibW91c2Vkb3duLnpvb20iLCBOKS5vbigiZGJsY2xpY2suem9vbSIsIFQpLmZpbHRlcih1KS5vbigidG91Y2hzdGFydC56b29tIiwgQSkub24oInRvdWNobW92ZS56b29tIiwgUykub24oInRvdWNoZW5kLnpvb20gdG91Y2hjYW5jZWwuem9vbSIsIGspLnN0eWxlKCJ0b3VjaC1hY3Rpb24iLCAibm9uZSIpLnN0eWxlKCItd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3IiLCAicmdiYSgwLDAsMCwwKSIpIH0gZnVuY3Rpb24geSh0LCBuKSB7IHJldHVybiAobiA9IE1hdGgubWF4KGNbMF0sIE1hdGgubWluKGNbMV0sIG4pKSkgPT09IHQuayA/IHQgOiBuZXcgV2IobiwgdC54LCB0LnkpIH0gZnVuY3Rpb24gXyh0LCBuLCBlKSB7IHZhciByID0gblswXSAtIGVbMF0gKiB0LmssIGkgPSBuWzFdIC0gZVsxXSAqIHQuazsgcmV0dXJuIHIgPT09IHQueCAmJiBpID09PSB0LnkgPyB0IDogbmV3IFdiKHQuaywgciwgaSkgfSBmdW5jdGlvbiBiKHQpIHsgcmV0dXJuIFsoK3RbMF1bMF0gKyArdFsxXVswXSkgLyAyLCAoK3RbMF1bMV0gKyArdFsxXVsxXSkgLyAyXSB9IGZ1bmN0aW9uIG0odCwgbiwgZSkgeyB0Lm9uKCJzdGFydC56b29tIiwgZnVuY3Rpb24gKCkgeyB4KHRoaXMsIGFyZ3VtZW50cykuc3RhcnQoKSB9KS5vbigiaW50ZXJydXB0Lnpvb20gZW5kLnpvb20iLCBmdW5jdGlvbiAoKSB7IHgodGhpcywgYXJndW1lbnRzKS5lbmQoKSB9KS50d2Vlbigiem9vbSIsIGZ1bmN0aW9uICgpIHsgdmFyIHQgPSB0aGlzLCByID0gYXJndW1lbnRzLCBvID0geCh0LCByKSwgYSA9IGkuYXBwbHkodCwgciksIHUgPSBudWxsID09IGUgPyBiKGEpIDogImZ1bmN0aW9uIiA9PSB0eXBlb2YgZSA/IGUuYXBwbHkodCwgcikgOiBlLCBjID0gTWF0aC5tYXgoYVsxXVswXSAtIGFbMF1bMF0sIGFbMV1bMV0gLSBhWzBdWzFdKSwgZiA9IHQuX196b29tLCBzID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgbiA/IG4uYXBwbHkodCwgcikgOiBuLCBoID0gbChmLmludmVydCh1KS5jb25jYXQoYyAvIGYuayksIHMuaW52ZXJ0KHUpLmNvbmNhdChjIC8gcy5rKSk7IHJldHVybiBmdW5jdGlvbiAodCkgeyBpZiAoMSA9PT0gdCkgdCA9IHM7IGVsc2UgeyB2YXIgbiA9IGgodCksIGUgPSBjIC8gblsyXTsgdCA9IG5ldyBXYihlLCB1WzBdIC0gblswXSAqIGUsIHVbMV0gLSBuWzFdICogZSkgfSBvLnpvb20obnVsbCwgdCkgfSB9KSB9IGZ1bmN0aW9uIHgodCwgbiwgZSkgeyByZXR1cm4gIWUgJiYgdC5fX3pvb21pbmcgfHwgbmV3IHcodCwgbikgfSBmdW5jdGlvbiB3KHQsIG4pIHsgdGhpcy50aGF0ID0gdCwgdGhpcy5hcmdzID0gbiwgdGhpcy5hY3RpdmUgPSAwLCB0aGlzLmV4dGVudCA9IGkuYXBwbHkodCwgbiksIHRoaXMudGFwcyA9IDAgfSBmdW5jdGlvbiBNKCkgeyBpZiAoci5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSB7IHZhciB0ID0geCh0aGlzLCBhcmd1bWVudHMpLCBuID0gdGhpcy5fX3pvb20sIGUgPSBNYXRoLm1heChjWzBdLCBNYXRoLm1pbihjWzFdLCBuLmsgKiBNYXRoLnBvdygyLCBhLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpKSksIGkgPSBCdCh0aGlzKTsgaWYgKHQud2hlZWwpIHQubW91c2VbMF1bMF0gPT09IGlbMF0gJiYgdC5tb3VzZVswXVsxXSA9PT0gaVsxXSB8fCAodC5tb3VzZVsxXSA9IG4uaW52ZXJ0KHQubW91c2VbMF0gPSBpKSksIGNsZWFyVGltZW91dCh0LndoZWVsKTsgZWxzZSB7IGlmIChuLmsgPT09IGUpIHJldHVybjsgdC5tb3VzZSA9IFtpLCBuLmludmVydChpKV0sIFByKHRoaXMpLCB0LnN0YXJ0KCkgfSBKYigpLCB0LndoZWVsID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7IHQud2hlZWwgPSBudWxsLCB0LmVuZCgpIH0sIHApLCB0Lnpvb20oIm1vdXNlIiwgbyhfKHkobiwgZSksIHQubW91c2VbMF0sIHQubW91c2VbMV0pLCB0LmV4dGVudCwgZikpIH0gfSBmdW5jdGlvbiBOKCkgeyBpZiAoIWUgJiYgci5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSB7IHZhciBuID0geCh0aGlzLCBhcmd1bWVudHMsICEwKSwgaSA9IFJ0KHQuZXZlbnQudmlldykub24oIm1vdXNlbW92ZS56b29tIiwgZnVuY3Rpb24gKCkgeyBpZiAoSmIoKSwgIW4ubW92ZWQpIHsgdmFyIGUgPSB0LmV2ZW50LmNsaWVudFggLSB1LCByID0gdC5ldmVudC5jbGllbnRZIC0gYzsgbi5tb3ZlZCA9IGUgKiBlICsgciAqIHIgPiB2IH0gbi56b29tKCJtb3VzZSIsIG8oXyhuLnRoYXQuX196b29tLCBuLm1vdXNlWzBdID0gQnQobi50aGF0KSwgbi5tb3VzZVsxXSksIG4uZXh0ZW50LCBmKSkgfSwgITApLm9uKCJtb3VzZXVwLnpvb20iLCBmdW5jdGlvbiAoKSB7IGkub24oIm1vdXNlbW92ZS56b29tIG1vdXNldXAuem9vbSIsIG51bGwpLCBqdCh0LmV2ZW50LnZpZXcsIG4ubW92ZWQpLCBKYigpLCBuLmVuZCgpIH0sICEwKSwgYSA9IEJ0KHRoaXMpLCB1ID0gdC5ldmVudC5jbGllbnRYLCBjID0gdC5ldmVudC5jbGllbnRZOyBIdCh0LmV2ZW50LnZpZXcpLCBLYigpLCBuLm1vdXNlID0gW2EsIHRoaXMuX196b29tLmludmVydChhKV0sIFByKHRoaXMpLCBuLnN0YXJ0KCkgfSB9IGZ1bmN0aW9uIFQoKSB7IGlmIChyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpIHsgdmFyIG4gPSB0aGlzLl9fem9vbSwgZSA9IEJ0KHRoaXMpLCBhID0gbi5pbnZlcnQoZSksIHUgPSBuLmsgKiAodC5ldmVudC5zaGlmdEtleSA/IC41IDogMiksIGMgPSBvKF8oeShuLCB1KSwgZSwgYSksIGkuYXBwbHkodGhpcywgYXJndW1lbnRzKSwgZik7IEpiKCksIHMgPiAwID8gUnQodGhpcykudHJhbnNpdGlvbigpLmR1cmF0aW9uKHMpLmNhbGwobSwgYywgZSkgOiBSdCh0aGlzKS5jYWxsKGcudHJhbnNmb3JtLCBjKSB9IH0gZnVuY3Rpb24gQSgpIHsgaWYgKHIuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgeyB2YXIgZSwgaSwgbywgYSwgdSA9IHQuZXZlbnQudG91Y2hlcywgYyA9IHUubGVuZ3RoLCBmID0geCh0aGlzLCBhcmd1bWVudHMsIHQuZXZlbnQuY2hhbmdlZFRvdWNoZXMubGVuZ3RoID09PSBjKTsgZm9yIChLYigpLCBpID0gMDsgaSA8IGM7ICsraSlhID0gW2EgPSBGdCh0aGlzLCB1LCAobyA9IHVbaV0pLmlkZW50aWZpZXIpLCB0aGlzLl9fem9vbS5pbnZlcnQoYSksIG8uaWRlbnRpZmllcl0sIGYudG91Y2gwID8gZi50b3VjaDEgfHwgZi50b3VjaDBbMl0gPT09IGFbMl0gfHwgKGYudG91Y2gxID0gYSwgZi50YXBzID0gMCkgOiAoZi50b3VjaDAgPSBhLCBlID0gITAsIGYudGFwcyA9IDEgKyAhIW4pOyBuICYmIChuID0gY2xlYXJUaW1lb3V0KG4pKSwgZSAmJiAoZi50YXBzIDwgMiAmJiAobiA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgeyBuID0gbnVsbCB9LCBkKSksIFByKHRoaXMpLCBmLnN0YXJ0KCkpIH0gfSBmdW5jdGlvbiBTKCkgeyBpZiAodGhpcy5fX3pvb21pbmcpIHsgdmFyIGUsIHIsIGksIGEsIHUgPSB4KHRoaXMsIGFyZ3VtZW50cyksIGMgPSB0LmV2ZW50LmNoYW5nZWRUb3VjaGVzLCBzID0gYy5sZW5ndGg7IGZvciAoSmIoKSwgbiAmJiAobiA9IGNsZWFyVGltZW91dChuKSksIHUudGFwcyA9IDAsIGUgPSAwOyBlIDwgczsgKytlKWkgPSBGdCh0aGlzLCBjLCAociA9IGNbZV0pLmlkZW50aWZpZXIpLCB1LnRvdWNoMCAmJiB1LnRvdWNoMFsyXSA9PT0gci5pZGVudGlmaWVyID8gdS50b3VjaDBbMF0gPSBpIDogdS50b3VjaDEgJiYgdS50b3VjaDFbMl0gPT09IHIuaWRlbnRpZmllciAmJiAodS50b3VjaDFbMF0gPSBpKTsgaWYgKHIgPSB1LnRoYXQuX196b29tLCB1LnRvdWNoMSkgeyB2YXIgbCA9IHUudG91Y2gwWzBdLCBoID0gdS50b3VjaDBbMV0sIGQgPSB1LnRvdWNoMVswXSwgcCA9IHUudG91Y2gxWzFdLCB2ID0gKHYgPSBkWzBdIC0gbFswXSkgKiB2ICsgKHYgPSBkWzFdIC0gbFsxXSkgKiB2LCBnID0gKGcgPSBwWzBdIC0gaFswXSkgKiBnICsgKGcgPSBwWzFdIC0gaFsxXSkgKiBnOyByID0geShyLCBNYXRoLnNxcnQodiAvIGcpKSwgaSA9IFsobFswXSArIGRbMF0pIC8gMiwgKGxbMV0gKyBkWzFdKSAvIDJdLCBhID0gWyhoWzBdICsgcFswXSkgLyAyLCAoaFsxXSArIHBbMV0pIC8gMl0gfSBlbHNlIHsgaWYgKCF1LnRvdWNoMCkgcmV0dXJuOyBpID0gdS50b3VjaDBbMF0sIGEgPSB1LnRvdWNoMFsxXSB9IHUuem9vbSgidG91Y2giLCBvKF8ociwgaSwgYSksIHUuZXh0ZW50LCBmKSkgfSB9IGZ1bmN0aW9uIGsoKSB7IGlmICh0aGlzLl9fem9vbWluZykgeyB2YXIgbiwgciwgaSA9IHgodGhpcywgYXJndW1lbnRzKSwgbyA9IHQuZXZlbnQuY2hhbmdlZFRvdWNoZXMsIGEgPSBvLmxlbmd0aDsgZm9yIChLYigpLCBlICYmIGNsZWFyVGltZW91dChlKSwgZSA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgeyBlID0gbnVsbCB9LCBkKSwgbiA9IDA7IG4gPCBhOyArK24pciA9IG9bbl0sIGkudG91Y2gwICYmIGkudG91Y2gwWzJdID09PSByLmlkZW50aWZpZXIgPyBkZWxldGUgaS50b3VjaDAgOiBpLnRvdWNoMSAmJiBpLnRvdWNoMVsyXSA9PT0gci5pZGVudGlmaWVyICYmIGRlbGV0ZSBpLnRvdWNoMTsgaWYgKGkudG91Y2gxICYmICFpLnRvdWNoMCAmJiAoaS50b3VjaDAgPSBpLnRvdWNoMSwgZGVsZXRlIGkudG91Y2gxKSwgaS50b3VjaDApIGkudG91Y2gwWzFdID0gdGhpcy5fX3pvb20uaW52ZXJ0KGkudG91Y2gwWzBdKTsgZWxzZSBpZiAoaS5lbmQoKSwgMiA9PT0gaS50YXBzKSB7IHZhciB1ID0gUnQodGhpcykub24oImRibGNsaWNrLnpvb20iKTsgdSAmJiB1LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfSB9IH0gcmV0dXJuIGcudHJhbnNmb3JtID0gZnVuY3Rpb24gKHQsIG4sIGUpIHsgdmFyIHIgPSB0LnNlbGVjdGlvbiA/IHQuc2VsZWN0aW9uKCkgOiB0OyByLnByb3BlcnR5KCJfX3pvb20iLCBlbSksIHQgIT09IHIgPyBtKHQsIG4sIGUpIDogci5pbnRlcnJ1cHQoKS5lYWNoKGZ1bmN0aW9uICgpIHsgeCh0aGlzLCBhcmd1bWVudHMpLnN0YXJ0KCkuem9vbShudWxsLCAiZnVuY3Rpb24iID09IHR5cGVvZiBuID8gbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpIDogbikuZW5kKCkgfSkgfSwgZy5zY2FsZUJ5ID0gZnVuY3Rpb24gKHQsIG4sIGUpIHsgZy5zY2FsZVRvKHQsIGZ1bmN0aW9uICgpIHsgdmFyIHQgPSB0aGlzLl9fem9vbS5rLCBlID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgbiA/IG4uYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IG47IHJldHVybiB0ICogZSB9LCBlKSB9LCBnLnNjYWxlVG8gPSBmdW5jdGlvbiAodCwgbiwgZSkgeyBnLnRyYW5zZm9ybSh0LCBmdW5jdGlvbiAoKSB7IHZhciB0ID0gaS5hcHBseSh0aGlzLCBhcmd1bWVudHMpLCByID0gdGhpcy5fX3pvb20sIGEgPSBudWxsID09IGUgPyBiKHQpIDogImZ1bmN0aW9uIiA9PSB0eXBlb2YgZSA/IGUuYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IGUsIHUgPSByLmludmVydChhKSwgYyA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIG4gPyBuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgOiBuOyByZXR1cm4gbyhfKHkociwgYyksIGEsIHUpLCB0LCBmKSB9LCBlKSB9LCBnLnRyYW5zbGF0ZUJ5ID0gZnVuY3Rpb24gKHQsIG4sIGUpIHsgZy50cmFuc2Zvcm0odCwgZnVuY3Rpb24gKCkgeyByZXR1cm4gbyh0aGlzLl9fem9vbS50cmFuc2xhdGUoImZ1bmN0aW9uIiA9PSB0eXBlb2YgbiA/IG4uYXBwbHkodGhpcywgYXJndW1lbnRzKSA6IG4sICJmdW5jdGlvbiIgPT0gdHlwZW9mIGUgPyBlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgOiBlKSwgaS5hcHBseSh0aGlzLCBhcmd1bWVudHMpLCBmKSB9KSB9LCBnLnRyYW5zbGF0ZVRvID0gZnVuY3Rpb24gKHQsIG4sIGUsIHIpIHsgZy50cmFuc2Zvcm0odCwgZnVuY3Rpb24gKCkgeyB2YXIgdCA9IGkuYXBwbHkodGhpcywgYXJndW1lbnRzKSwgYSA9IHRoaXMuX196b29tLCB1ID0gbnVsbCA9PSByID8gYih0KSA6ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHIgPyByLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgOiByOyByZXR1cm4gbyhaYi50cmFuc2xhdGUodVswXSwgdVsxXSkuc2NhbGUoYS5rKS50cmFuc2xhdGUoImZ1bmN0aW9uIiA9PSB0eXBlb2YgbiA/IC1uLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgOiAtbiwgImZ1bmN0aW9uIiA9PSB0eXBlb2YgZSA/IC1lLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgOiAtZSksIHQsIGYpIH0sIHIpIH0sIHcucHJvdG90eXBlID0geyBzdGFydDogZnVuY3Rpb24gKCkgeyByZXR1cm4gMSA9PSArK3RoaXMuYWN0aXZlICYmICh0aGlzLnRoYXQuX196b29taW5nID0gdGhpcywgdGhpcy5lbWl0KCJzdGFydCIpKSwgdGhpcyB9LCB6b29tOiBmdW5jdGlvbiAodCwgbikgeyByZXR1cm4gdGhpcy5tb3VzZSAmJiAibW91c2UiICE9PSB0ICYmICh0aGlzLm1vdXNlWzFdID0gbi5pbnZlcnQodGhpcy5tb3VzZVswXSkpLCB0aGlzLnRvdWNoMCAmJiAidG91Y2giICE9PSB0ICYmICh0aGlzLnRvdWNoMFsxXSA9IG4uaW52ZXJ0KHRoaXMudG91Y2gwWzBdKSksIHRoaXMudG91Y2gxICYmICJ0b3VjaCIgIT09IHQgJiYgKHRoaXMudG91Y2gxWzFdID0gbi5pbnZlcnQodGhpcy50b3VjaDFbMF0pKSwgdGhpcy50aGF0Ll9fem9vbSA9IG4sIHRoaXMuZW1pdCgiem9vbSIpLCB0aGlzIH0sIGVuZDogZnVuY3Rpb24gKCkgeyByZXR1cm4gMCA9PSAtLXRoaXMuYWN0aXZlICYmIChkZWxldGUgdGhpcy50aGF0Ll9fem9vbWluZywgdGhpcy5lbWl0KCJlbmQiKSksIHRoaXMgfSwgZW1pdDogZnVuY3Rpb24gKHQpIHsga3QobmV3ICRiKGcsIHQsIHRoaXMudGhhdC5fX3pvb20pLCBoLmFwcGx5LCBoLCBbdCwgdGhpcy50aGF0LCB0aGlzLmFyZ3NdKSB9IH0sIGcud2hlZWxEZWx0YSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGEgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ID8gdCA6IEdiKCt0KSwgZykgOiBhIH0sIGcuZmlsdGVyID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAociA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogR2IoISF0KSwgZykgOiByIH0sIGcudG91Y2hhYmxlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodSA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogR2IoISF0KSwgZykgOiB1IH0sIGcuZXh0ZW50ID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoaSA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgPyB0IDogR2IoW1srdFswXVswXSwgK3RbMF1bMV1dLCBbK3RbMV1bMF0sICt0WzFdWzFdXV0pLCBnKSA6IGkgfSwgZy5zY2FsZUV4dGVudCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGNbMF0gPSArdFswXSwgY1sxXSA9ICt0WzFdLCBnKSA6IFtjWzBdLCBjWzFdXSB9LCBnLnRyYW5zbGF0ZUV4dGVudCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGZbMF1bMF0gPSArdFswXVswXSwgZlsxXVswXSA9ICt0WzFdWzBdLCBmWzBdWzFdID0gK3RbMF1bMV0sIGZbMV1bMV0gPSArdFsxXVsxXSwgZykgOiBbW2ZbMF1bMF0sIGZbMF1bMV1dLCBbZlsxXVswXSwgZlsxXVsxXV1dIH0sIGcuY29uc3RyYWluID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAobyA9IHQsIGcpIDogbyB9LCBnLmR1cmF0aW9uID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAocyA9ICt0LCBnKSA6IHMgfSwgZy5pbnRlcnBvbGF0ZSA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKGwgPSB0LCBnKSA6IGwgfSwgZy5vbiA9IGZ1bmN0aW9uICgpIHsgdmFyIHQgPSBoLm9uLmFwcGx5KGgsIGFyZ3VtZW50cyk7IHJldHVybiB0ID09PSBoID8gZyA6IHQgfSwgZy5jbGlja0Rpc3RhbmNlID0gZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAodiA9ICh0ID0gK3QpICogdCwgZykgOiBNYXRoLnNxcnQodikgfSwgZyB9LCB0Lnpvb21JZGVudGl0eSA9IFpiLCB0Lnpvb21UcmFuc2Zvcm0gPSBRYiwgT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsICJfX2VzTW9kdWxlIiwgeyB2YWx1ZTogITAgfSkgfSk7",
    "assets/d3-filetree.js": "data:application/javascript;base64,ZnVuY3Rpb24gRmlsZVRyZWUoZGF0YSkgewogIGxldCBtYXJnaW4gPSB7IHRvcDogMTAsIHJpZ2h0OiAyMCwgYm90dG9tOiAzMCwgbGVmdDogMjAgfSwKICAgIHdpZHRoID0gOTYwLAogICAgaGVpZ2h0ID0gMTAwMCwKICAgIGJhckhlaWdodCA9IDIwOwoKICBsZXQgaSA9IDAsCiAgICBkdXJhdGlvbiA9IDUwMCwKICAgIHJvb3Q7CgogIGxldCBub2RlRW50ZXJUcmFuc2l0aW9uID0gZDMudHJhbnNpdGlvbigpCiAgICAuZHVyYXRpb24oNzUwKQogICAgLmVhc2UoZDMuZWFzZUxpbmVhcik7CgoKICBsZXQgc3ZnID0gZDMuc2VsZWN0KCIuc3RhcnQiKS5hcHBlbmQoInN2ZyIpCiAgICAuYXR0cigid2lkdGgiLCB3aWR0aCkgLy8gKyBtYXJnaW4ubGVmdCArIG1hcmdpbi5yaWdodCkKICAgIC5hdHRyKCJoZWlnaHQiLCBoZWlnaHQpCiAgICAuYXBwZW5kKCJnIikKICAgIC5hdHRyKCJ0cmFuc2Zvcm0iLCAidHJhbnNsYXRlKCIgKyBtYXJnaW4ubGVmdCArICIsIiArIG1hcmdpbi50b3AgKyAiKSIpOwoKCiAgcm9vdCA9IGQzLmhpZXJhcmNoeShkYXRhKTsKICByb290LngwID0gMDsKICByb290LnkwID0gMDsKICB1cGRhdGUocm9vdCk7CgoKCiAgZnVuY3Rpb24gdXBkYXRlKHNvdXJjZSkgewogICAgY29uc29sZS5sb2coJ2dvdCBoZXJlIDEnKQoKICAgIC8vIENvbXB1dGUgdGhlIGZsYXR0ZW5lZCBub2RlIGxpc3QuCiAgICB2YXIgbm9kZXMgPSByb290LmRlc2NlbmRhbnRzKCk7CgogICAgdmFyIGhlaWdodCA9IE1hdGgubWF4KDUwMCwgbm9kZXMubGVuZ3RoICogYmFySGVpZ2h0ICsgbWFyZ2luLnRvcCArIG1hcmdpbi5ib3R0b20pOwoKICAgIGQzLnNlbGVjdCgic3ZnIikudHJhbnNpdGlvbigpCiAgICAgIC5hdHRyKCJoZWlnaHQiLCBoZWlnaHQpOwoKICAgIGNvbnNvbGUubG9nKCJnb3QgaGVyZSAyIikKCiAgICB2YXIgaW5kZXggPSAtMTsKICAgIHJvb3QuZWFjaEJlZm9yZSgobikgPT4gewogICAgICBuLnggPSArK2luZGV4ICogYmFySGVpZ2h0OwogICAgICBuLnkgPSBuLmRlcHRoICogMjA7CiAgICB9KTsKCiAgICAvLyBVcGRhdGUgdGhlIG5vZGVz4oCmCiAgICB2YXIgbm9kZSA9IHN2Zy5zZWxlY3RBbGwoIi5ub2RlIikKICAgICAgLmRhdGEobm9kZXMsIChkKSA9PiBkLmlkIHx8IChkLmlkID0gKytpKSk7CgogICAgdmFyIG5vZGVFbnRlciA9IG5vZGUuZW50ZXIoKS5hcHBlbmQoImciKQogICAgICAuYXR0cigiY2xhc3MiLCAibm9kZSIpCiAgICAgIC5hdHRyKCJ0cmFuc2Zvcm0iLCAoKSA9PiAidHJhbnNsYXRlKCIgKyBzb3VyY2UueTAgKyAiLCIgKyBzb3VyY2UueDAgKyAiKSIpCiAgICAgIC5vbigiY2xpY2siLCBjbGljaykKICAgICAgOwoKICAgIC8vIGFkZGluZyBhcnJvd3MKICAgIG5vZGVFbnRlci5hcHBlbmQoJ3RleHQnKQogICAgICAuYXR0cigneCcsIC0yMCkKICAgICAgLmF0dHIoJ3knLCAyKQogICAgICAuYXR0cignZmlsbCcsICdncmV5JykKICAgICAgLmF0dHIoJ2NsYXNzJywgJ2Fycm93JykKICAgICAgLmF0dHIoJ2NsYXNzJywgJ2ZhcycpCiAgICAgIC5hdHRyKCdmb250LXNpemUnLCAnMTJweCcpCiAgICAgIC50ZXh0KChkKSA9PiBkLmNoaWxkcmVuID8gJ1x1ZjEwNycgOiBkLl9jaGlsZHJlbiA/ICdcdWYxMDUnIDogIiIpOwoKICAgIC8vIGFkZGluZyBmaWxlIG9yIGZvbGRlcgogICAgbm9kZUVudGVyLmFwcGVuZCgndGV4dCcpCiAgICAgIC5hdHRyKCd4JywgLTEwKQogICAgICAuYXR0cigneScsIDIpCiAgICAgIC5hdHRyKCdmaWxsJywgKGQpID0+IGQuY2hpbGRyZW4gfHwgZC5fY2hpbGRyZW4gPyAnI2U2MDAwMCcgOiAnI2ZmNGQ0ZCcpCiAgICAgIC5hdHRyKCdjbGFzcycsICdmYXMnKQogICAgICAuYXR0cignZm9udC1zaXplJywgJzEycHgnKQogICAgICAudGV4dCgoZCkgPT4gZC5jaGlsZHJlbiB8fCBkLl9jaGlsZHJlbiA/ICdcdWYwN2InIDogJ1x1ZjE1YicpOwoKICAgIC8vIGFkZGluZyBmaWxlIG9yIGZvbGRlciBuYW1lcwogICAgbm9kZUVudGVyLmFwcGVuZCgidGV4dCIpCiAgICAgIC5hdHRyKCJkeSIsIDMuNSkKICAgICAgLmF0dHIoImR4IiwgNS41KQogICAgICAudGV4dCgoZCkgPT4gZC5kYXRhLm5hbWUpCiAgICAgIC5vbigibW91c2VvdmVyIiwgZnVuY3Rpb24gKGQpIHsKICAgICAgICBkMy5zZWxlY3QodGhpcykuY2xhc3NlZCgic2VsZWN0ZWQiLCB0cnVlKTsKICAgICAgfSkKICAgICAgLm9uKCJtb3VzZW91dCIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgZDMuc2VsZWN0QWxsKCIuc2VsZWN0ZWQiKS5jbGFzc2VkKCJzZWxlY3RlZCIsIGZhbHNlKTsKICAgICAgfSk7CgoKICAgIC8vIFRyYW5zaXRpb24gbm9kZXMgdG8gdGhlaXIgbmV3IHBvc2l0aW9uLgogICAgbm9kZUVudGVyLnRyYW5zaXRpb24obm9kZUVudGVyVHJhbnNpdGlvbikKICAgICAgLmF0dHIoInRyYW5zZm9ybSIsIChkKSA9PiAidHJhbnNsYXRlKCIgKyBkLnkgKyAiLCIgKyBkLnggKyAiKSIpCiAgICAgIC5zdHlsZSgib3BhY2l0eSIsIDEpOwoKICAgIG5vZGUudHJhbnNpdGlvbigpCiAgICAgIC5kdXJhdGlvbihkdXJhdGlvbikKICAgICAgLmF0dHIoInRyYW5zZm9ybSIsIChkKSA9PiAidHJhbnNsYXRlKCIgKyBkLnkgKyAiLCIgKyBkLnggKyAiKSIpCiAgICAgIC5zdHlsZSgib3BhY2l0eSIsIDEpOwoKCiAgICAvLyBUcmFuc2l0aW9uIGV4aXRpbmcgbm9kZXMgdG8gdGhlIHBhcmVudCdzIG5ldyBwb3NpdGlvbi4KICAgIG5vZGUuZXhpdCgpLnRyYW5zaXRpb24oKQogICAgICAuZHVyYXRpb24oZHVyYXRpb24pCiAgICAgIC5hdHRyKCJ0cmFuc2Zvcm0iLCAoKSA9PiAidHJhbnNsYXRlKCIgKyBzb3VyY2UueSArICIsIiArIHNvdXJjZS54ICsgIikiKQogICAgICAuc3R5bGUoIm9wYWNpdHkiLCAwKQogICAgICAucmVtb3ZlKCk7CgoKICAgIC8vIFN0YXNoIHRoZSBvbGQgcG9zaXRpb25zIGZvciB0cmFuc2l0aW9uLgogICAgcm9vdC5lYWNoKChkKSA9PiB7CiAgICAgIGQueDAgPSBkLng7CiAgICAgIGQueTAgPSBkLnk7CiAgICB9KTsKICB9CgogIC8vIFRvZ2dsZSBjaGlsZHJlbiBvbiBjbGljay4KICBmdW5jdGlvbiBjbGljayhkKSB7CiAgICBpZiAoZC5jaGlsZHJlbikgewogICAgICBkLl9jaGlsZHJlbiA9IGQuY2hpbGRyZW47CiAgICAgIGQuY2hpbGRyZW4gPSBudWxsOwogICAgfSBlbHNlIHsKICAgICAgZC5jaGlsZHJlbiA9IGQuX2NoaWxkcmVuOwogICAgICBkLl9jaGlsZHJlbiA9IG51bGw7CiAgICB9CiAgICBkMy5zZWxlY3QodGhpcykucmVtb3ZlKCkKICAgIHVwZGF0ZShkKTsKICB9Cn0="
  },
  "functions": {
    "toggleTreeView": {
      "command": {
        "name": "Toggle File Tree",
        "key": "ctrl-shift-e",
        "mac": "Cmd-shift-e"
      },
      "code": "(() => { var mod=(()=>{var x=Object.defineProperty;var A=Object.getOwnPropertyDescriptor;var F=Object.getOwnPropertyNames;var M=Object.prototype.hasOwnProperty;var c=(e,t)=>{for(var n in t)x(e,n,{get:t[n],enumerable:!0})},T=(e,t,n,o)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let i of F(t))!M.call(e,i)&&i!==n&&x(e,i,{get:()=>t[i],enumerable:!(o=A(t,i))||o.enumerable});return e};var S=e=>T(x({},\"__esModule\",{value:!0}),e);var Me={};c(Me,{default:()=>Fe});var m={};c(m,{del:()=>V,get:()=>k,set:()=>C});typeof self>\"u\"&&(self={syscall:()=>{throw new Error(\"Not implemented here\")}});var r=self.syscall;function C(e,t){return r(\"clientStore.set\",e,t)}function k(e){return r(\"clientStore.get\",e)}function V(e){return r(\"clientStore.delete\",e)}var a={};c(a,{dispatch:()=>W,enableReadOnlyMode:()=>Y,filterBox:()=>$,flashNotification:()=>N,getCurrentPage:()=>D,getCursor:()=>q,getSelection:()=>O,getText:()=>L,hidePanel:()=>Q,insertAtCursor:()=>G,insertAtPos:()=>J,matchBefore:()=>H,moveCursor:()=>z,navigate:()=>B,openUrl:()=>K,prompt:()=>X,reloadPage:()=>I,replaceRange:()=>_,save:()=>j,setPage:()=>E,setSelection:()=>U,showPanel:()=>R});function D(){return r(\"editor.getCurrentPage\")}function E(e){return r(\"editor.setPage\",e)}function L(){return r(\"editor.getText\")}function q(){return r(\"editor.getCursor\")}function O(){return r(\"editor.getSelection\")}function U(e,t){return r(\"editor.setSelection\",e,t)}function j(){return r(\"editor.save\")}function B(e,t,n=!1){return r(\"editor.navigate\",e,t,n)}function I(){return r(\"editor.reloadPage\")}function K(e){return r(\"editor.openUrl\",e)}function N(e,t=\"info\"){return r(\"editor.flashNotification\",e,t)}function $(e,t,n=\"\",o=\"\"){return r(\"editor.filterBox\",e,t,n,o)}function R(e,t,n,o=\"\"){return r(\"editor.showPanel\",e,t,n,o)}function Q(e){return r(\"editor.hidePanel\",e)}function J(e,t){return r(\"editor.insertAtPos\",e,t)}function _(e,t,n){return r(\"editor.replaceRange\",e,t,n)}function z(e){return r(\"editor.moveCursor\",e)}function G(e){return r(\"editor.insertAtCursor\",e)}function H(e){return r(\"editor.matchBefore\",e)}function W(e){return r(\"editor.dispatch\",e)}function X(e,t=\"\"){return r(\"editor.prompt\",e,t)}function Y(e){return r(\"editor.enableReadOnlyMode\",e)}var p={};c(p,{deleteAttachment:()=>fe,deletePage:()=>se,getAttachmentMeta:()=>ue,getPageMeta:()=>ne,listAttachments:()=>le,listPages:()=>re,listPlugs:()=>ae,readAttachment:()=>ce,readPage:()=>oe,writeAttachment:()=>me,writePage:()=>ie});function re(e=!1){return r(\"space.listPages\",e)}function ne(e){return r(\"space.getPageMeta\",e)}function oe(e){return r(\"space.readPage\",e)}function ie(e,t){return r(\"space.writePage\",e,t)}function se(e){return r(\"space.deletePage\",e)}function ae(){return r(\"space.listPlugs\")}function le(){return r(\"space.listAttachments\")}function ue(e){return r(\"space.getAttachmentMeta\",e)}function ce(e){return r(\"space.readAttachment\",e)}function me(e,t,n){return r(\"space.writeAttachment\",e,t,n)}function fe(e){return r(\"space.deleteAttachment\",e)}var f={};c(f,{readAsset:()=>de});function P(e){let t=atob(e),n=t.length,o=new Uint8Array(n);for(let i=0;i<n;i++)o[i]=t.charCodeAt(i);return o}var s=self.syscall;async function de(e,t=\"utf8\"){let n=await s(\"asset.readAsset\",e);switch(t){case\"utf8\":return new TextDecoder().decode(P(n.split(\",\")[1]));case\"dataurl\":return n}}var y=\"showTreeView\";async function h(){let e=await v();if(await m.set(y,!e),e)await a.hidePanel(\"lhs\");else{let t=await a.getCurrentPage();await we(t)}}async function v(){return!!await m.get(y)}async function be(e){let t=await f.readAsset(\"assets/d3.js\",\"utf8\"),n=await f.readAsset(\"assets/d3-filetree.js\",\"utf8\");return`\n    ${t}\n    ${n}\n    \n    const tree = ${e};\n    console.log(tree);\n    const chart = FileTree(tree);\n  `}async function we(e){let t=await Ae(e),n=JSON.stringify(t);await v()&&await a.showPanel(\"lhs\",1,`<html>\n        <head>\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.9.0/css/all.css\" media=\"all\" rel=\"stylesheet\">\n        <style>\n\n        .node text {\n          cursor: pointer;\n        }\n\n        .selected {\n          fill: #ff751a;\n          font-weight: bold;\n        }\n\n        .start {\n          overflow:scroll;\n          height:1000px\n        }\n\n      </style>\n        </head>\n        <body>\n          <div class=\"start\">\n          </div>\n        </body>\n      </html>`,await be(n))}async function Ae(e){let n=(await p.listPages()).map(({name:g})=>g),o=[],i={result:o};return await n.forEach(g=>{g.split(\"/\").reduce((l,u,b,w)=>{if(!l[u]){l[u]={result:[]};let d={name:u,children:l[u].result};b===w.length-1?(d.path=`/${g}`,d.type=\"file\"):d.type=\"directory\",l.result.push(d)}return l[u]},i)}),{name:\"Files\",children:o}}var Fe=h;return S(Me);})();\n return mod;})()"
    }
  }
}